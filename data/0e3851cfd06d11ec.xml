<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Stephen Wolfram Writings</title>
	<atom:link href="https://writings.stephenwolfram.com/feed/" rel="self" type="application/rss+xml" />
	<link>https://writings.stephenwolfram.com</link>
	<description>Just another wordpress.wolfram.com site</description>
	<lastBuildDate>Tue, 01 Nov 2022 19:30:52 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.7.2</generator>
	<item>
		<title>Launching Version 13.1 of Wolfram Language &#038; Mathematica 🙀🤠🥳</title>
		<link>https://writings.stephenwolfram.com/2022/06/launching-version-13-1-of-wolfram-language-mathematica/</link>
		<comments>https://writings.stephenwolfram.com/2022/06/launching-version-13-1-of-wolfram-language-mathematica/#comments</comments>
		<pubDate>Thu, 30 Jun 2022 02:46:26 +0000</pubDate>
		<dc:creator><![CDATA[Stephen Wolfram]]></dc:creator>
				<category><![CDATA[Mathematica]]></category>
		<category><![CDATA[New Technology]]></category>
		<category><![CDATA[Wolfram Language]]></category>
		<category><![CDATA[Recent Release]]></category>
		<category><![CDATA[Version Release]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=38521</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/06/version-13.1-icon.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>::[ ] Threaded MapApply FeatureImpactPlot IntegrateChangeVariables ReconstructionMesh VideoCapture RootTree ImplicitD &#8220;ExprStruct&#8221; ChemicalConvert UniqueElements ReplaceAt TypeEvaluate TreeLeafCount QuestionSelector IncludeSingularSolutions KernelConfiguration PhongShading PatternReaction FractionalD OrdinalScale DropShadowing UnlabeledTree FeatureValueDependencyPlot CaputoD BlockDiagonalMatrix ModelPredictiveController GeodesicPolyhedron InertEvaluate Until TernaryListPlot FromRawPointer VideoScreenCapture PermutationMatrix FeatureValueImpactPlot ApplyReaction GraphJoin TorusGraph DSolveChangeVariables CumulativeFeatureImpactPlot TreeElementShape LibraryFunctionDeclaration SymmetricDifference FlatShading CircularArcThrough GouraudShading DiscreteInputOutputModel EstimatedPointNormals GraphProduct NominalScale QuestionGenerator GraphSum BuckyballGraph [&#8230;]]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/06/version-13.1-icon.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><p><a href="https://livestreams.stephenwolfram.com/" target="_blank"><img class="" title="Exploring Wolfram Language 13.1 with Stephen Wolfram"  src="https://content.wolfram.com/uploads/sites/43/2022/06/13.1-live-coding.png" alt="Exploring Wolfram Language 13.1 with Stephen Wolfram" width="620" height=" " /></a></p>
<style type="text/css">
@keyframes fadein {from {opacity: 0;} to {opacity: 1;}}
.initial_hidden {opacity: 0;}
.fade_this_in {animation: fadein 1s;opacity:1;}
div#wordcloud-13-1 {transform-origin: top left;transform: scale(.875);height: 270px !important;}
@media (max-width: 1150px) {div#wordcloud-13-1{transform: scale(.8);height: 244px !important;}}
@media (max-width: 850px) {div#wordcloud-13-1{transform: scale(.77);height: 234px !important;}}
@media (max-width: 800px) {div#wordcloud-13-1{transform: scale(.73);height: 225px !important;}}
@media (max-width: 750px) {div#wordcloud-13-1{transform: scale(.69);height: 208px !important;}}
@media (max-width: 700px) {div#wordcloud-13-1{transform: scale(.65);height: 187px !important;}}
@media (max-width: 650px) {div#wordcloud-13-1{transform: scale(.62);height: 177px !important;}}
@media (max-width: 600px) {div#wordcloud-13-1{transform: scale(.58);height: 166px !important;}}
@media (max-width: 550px) {div#wordcloud-13-1{transform: scale(.55);height: 156px !important;}}
@media (max-width: 500px) {div#wordcloud-13-1{transform: scale(.48);height: 137px !important;}}
@media (max-width: 450px) {div#wordcloud-13-1{transform: scale(.45);height: 128px !important;}}
@media (max-width: 400px) {div#wordcloud-13-1{transform: scale(.42);height: 115px !important;}}
@media (max-width: 361px) {div#wordcloud-13-1{transform: scale(.38);height: 115px !important;}}
#wordcloud-13-1 a{text-decoration:none;
	-webkit-transition-duration: 1s;-moz-transition-duration: 1s;-o-transition-duration: 1s;transition-duration: 1s;
	-webkit-transition-property: color;-moz-transition-property: color;-o-transition-property: color;transition-property: color;
}
#wordcloud-13-1 a:hover {
	-webkit-transition-duration: 0s;-moz-transition-duration: 0s;-o-transition-duration: 0s;transition-duration: 0s;
	-webkit-transition-property: color;-moz-transition-property: color;-o-transition-property: color;transition-property: color;}
#TypeSpecifier {z-index:4544; transform: translate(-50%, -50%); position:absolute; left:122.173px; top:212.156px;font-size:4.57185em;} #TypeSpecifier a, #TypeSpecifier a:link, #TypeSpecifier a:active, #TypeSpecifier a:visited {color:#CA3300;}  #TypeSpecifier a:hover {opacity:.7;}
#Threaded {z-index:4693; transform: translate(-50%, -50%); position:absolute; left:230.492px; top:66.7975px;font-size:4.44708em;} #Threaded a, #Threaded a:link, #Threaded a:active, #Threaded a:visited {color:#63B300;}  #Threaded a:hover {opacity:.7;}
#MapApply {z-index:4867; transform: translate(-50%, -50%); position:absolute; left:418.58px; top:184.428px;font-size:4.30128em;} #MapApply a, #MapApply a:link, #MapApply a:active, #MapApply a:visited {color:#5787CE;}  #MapApply a:hover {opacity:.7;}
#FeatureImpactPlot {z-index:5157; transform: translate(-50%, -50%); position:absolute; left:420.26px; top:120.572px;font-size:4.0586em;} #FeatureImpactPlot a, #FeatureImpactPlot a:link, #FeatureImpactPlot a:active, #FeatureImpactPlot a:visited {color:#5787CE;}  #FeatureImpactPlot a:hover {opacity:.7;}
#emoji {z-index:5276; transform: translate(-50%, -50%); position:absolute; left: 745.292px; top:107.128px;font-size:3.95844em;} #emoji a, #emoji a:link, #emoji a:active, #emoji a:visited {color:#20A1A3;}  #emoji a:hover {opacity:.7;}
#IntegrateChangeVariables {z-index:5678; transform: translate(-50%, -50%); position:absolute; left:419.0px; top:152.5px;font-size:3.62164em;} #IntegrateChangeVariables a, #IntegrateChangeVariables a:link, #IntegrateChangeVariables a:active, #IntegrateChangeVariables a:visited {color:#63B300;}  #IntegrateChangeVariables a:hover {opacity:.7;}
#ReconstructionMesh {z-index:5731; transform: translate(-50%, -50%); position:absolute; left:444.61px; top:218.037px;font-size:3.57748em;} #ReconstructionMesh a, #ReconstructionMesh a:link, #ReconstructionMesh a:active, #ReconstructionMesh a:visited {color:#CA3300;}  #ReconstructionMesh a:hover {opacity:.7;}
#VideoCapture {z-index:5750; transform: translate(-50%, -50%); position:absolute; left:421.939px; top:67.6377px;font-size:3.5611em;} #VideoCapture a, #VideoCapture a:link, #VideoCapture a:active, #VideoCapture a:visited {color:#A16BBA;}  #VideoCapture a:hover {opacity:.7;}
#RootTree {z-index:5779; transform: translate(-50%, -50%); position:absolute; left:150.722px; top:154.18px;font-size:3.53683em;} #RootTree a, #RootTree a:link, #RootTree a:active, #RootTree a:visited {color:#FF9B00;}  #RootTree a:hover {opacity:.7;}
#ImplicitD {z-index:5833; transform: translate(-50%, -50%); position:absolute; left:227.133px; top:209.635px;font-size:3.49228em;} #ImplicitD a, #ImplicitD a:link, #ImplicitD a:active, #ImplicitD a:visited {color:#A16BBA;}  #ImplicitD a:hover {opacity:.7;}
#ExprStruct {z-index:5908; transform: translate(-50%, -50%); position:absolute; left:598.272px; top:180.227px;font-size:3.42912em;} #ExprStruct a, #ExprStruct a:link, #ExprStruct a:active, #ExprStruct a:visited {color:#5787CE;}  #ExprStruct a:hover {opacity:.7;}
#ChemicalConvert {z-index:6020; transform: translate(-50%, -50%); position:absolute; left:586.516px; top:45.792px;font-size:3.33483em;} #ChemicalConvert a, #ChemicalConvert a:link, #ChemicalConvert a:active, #ChemicalConvert a:visited {color:#A16BBA;}  #ChemicalConvert a:hover {opacity:.7;}
#UniqueElements {z-index:6430; transform: translate(-50%, -50%); position:absolute; left:226.294px; top:181.908px;font-size:2.99164em;} #UniqueElements a, #UniqueElements a:link, #UniqueElements a:active, #UniqueElements a:visited {color:#A16BBA;}  #UniqueElements a:hover {opacity:.7;}
#ReplaceAt {z-index:6607; transform: translate(-50%, -50%); position:absolute; left:201.103px; top:128.134px;font-size:2.84295em;} #ReplaceAt a, #ReplaceAt a:link, #ReplaceAt a:active, #ReplaceAt a:visited {color:#FF9B00;}  #ReplaceAt a:hover {opacity:.7;}
#TypeEvaluate {z-index:6798; transform: translate(-50%, -50%); position:absolute; left:646.973px; top:102.087px;font-size:2.68335em;} #TypeEvaluate a, #TypeEvaluate a:link, #TypeEvaluate a:active, #TypeEvaluate a:visited {color:#CA3300;}  #TypeEvaluate a:hover {opacity:.7;}
#TreeLeafCount {z-index:6878; transform: translate(-50%, -50%); position:absolute; left:674.682px; top:205.434px;font-size:2.61635em;} #TreeLeafCount a, #TreeLeafCount a:link, #TreeLeafCount a:active, #TreeLeafCount a:visited {color:#FF6D22;}  #TreeLeafCount a:hover {opacity:.7;}
#QuestionSelector {z-index:6881; transform: translate(-50%, -50%); position:absolute; left:620.103px; top:244.084px;font-size:2.61394em;} #QuestionSelector a, #QuestionSelector a:link, #QuestionSelector a:active, #QuestionSelector a:visited {color:#5787CE;}  #QuestionSelector a:hover {opacity:.7;}
#IncludeSingularSolutions {z-index:6894; transform: translate(-50%, -50%); position:absolute; left:421.939px; top:93.6846px;font-size:2.60253em;} #IncludeSingularSolutions a, #IncludeSingularSolutions a:link, #IncludeSingularSolutions a:active, #IncludeSingularSolutions a:visited {color:#FF9B00;}  #IncludeSingularSolutions a:hover {opacity:.7;}
#KernelConfiguration {z-index:6921; transform: translate(-50%, -50%); position:absolute; left:415.221px; top:244.084px;font-size:2.58025em;} #KernelConfiguration a, #KernelConfiguration a:link, #KernelConfiguration a:active, #KernelConfiguration a:visited {color:#5787CE;}  #KernelConfiguration a:hover {opacity:.7;}
#PhongShading {z-index:6940; transform: translate(-50%, -50%); position:absolute; left:225.454px; top:238.202px;font-size:2.5643em;} #PhongShading a, #PhongShading a:link, #PhongShading a:active, #PhongShading a:visited {color:#A16BBA;}  #PhongShading a:hover {opacity:.7;}
#PatternReaction {z-index:6995; transform: translate(-50%, -50%); position:absolute; left:683.079px; top:23.9463px;font-size:2.51787em;} #PatternReaction a, #PatternReaction a:link, #PatternReaction a:active, #PatternReaction a:visited {color:#63B300;}  #PatternReaction a:hover {opacity:.7;}
#FractionalD {z-index:7042; transform: translate(-50%, -50%); position:absolute; left:702.392px; top:283.574px;font-size:2.47845em;} #FractionalD a, #FractionalD a:link, #FractionalD a:active, #FractionalD a:visited {color:#20A1A3;}  #FractionalD a:hover {opacity:.7;}
#OrdinalScale {z-index:7084; transform: translate(-50%, -50%); position:absolute; left:289.27px; top:284.415px;font-size:2.44399em;} #OrdinalScale a, #OrdinalScale a:link, #OrdinalScale a:active, #OrdinalScale a:visited {color:#CA3300;}  #OrdinalScale a:hover {opacity:.7;}
#DropShadowing {z-index:7084; transform: translate(-50%, -50%); position:absolute; left:605.829px; top:76.8802px;font-size:2.44384em;} #DropShadowing a, #DropShadowing a:link, #DropShadowing a:active, #DropShadowing a:visited {color:#FF9B00;}  #DropShadowing a:hover {opacity:.7;}
#UnlabeledTree {z-index:7092; transform: translate(-50%, -50%); position:absolute; left:405.985px; top:21.4256px;font-size:2.43658em;} #UnlabeledTree a, #UnlabeledTree a:link, #UnlabeledTree a:active, #UnlabeledTree a:visited {color:#FF6D22;}  #UnlabeledTree a:hover {opacity:.7;}
#FeatureValueDependencyPlot {z-index:7688; transform: translate(-50%, -50%); position:absolute; left:343.849px; top:40.7507px;font-size:1.93776em;} #FeatureValueDependencyPlot a, #FeatureValueDependencyPlot a:link, #FeatureValueDependencyPlot a:active, #FeatureValueDependencyPlot a:visited {color:#5787CE;}  #FeatureValueDependencyPlot a:hover {opacity:.7;}
#CaputoD {z-index:7689; transform: translate(-50%, -50%); position:absolute; left:111.258px; top:247.445px;font-size:1.93633em;} #CaputoD a, #CaputoD a:link, #CaputoD a:active, #CaputoD a:visited {color:#20A1A3;}  #CaputoD a:hover {opacity:.7;}
#BlockDiagonalMatrix {z-index:7709; transform: translate(-50%, -50%); position:absolute; left:220.416px; top:264.249px;font-size:1.91974em;} #BlockDiagonalMatrix a, #BlockDiagonalMatrix a:link, #BlockDiagonalMatrix a:active, #BlockDiagonalMatrix a:visited {color:#FF6D22;}  #BlockDiagonalMatrix a:hover {opacity:.7;}
#ModelPredictiveController {z-index:7718; transform: translate(-50%, -50%); position:absolute; left:201.103px; top:24.7865px;font-size:1.91257em;} #ModelPredictiveController a, #ModelPredictiveController a:link, #ModelPredictiveController a:active, #ModelPredictiveController a:visited {color:#20A1A3;}  #ModelPredictiveController a:hover {opacity:.7;}
#GeodesicPolyhedron {z-index:7720; transform: translate(-50%, -50%); position:absolute; left:664.606px; top:131.494px;font-size:1.91031em;} #GeodesicPolyhedron a, #GeodesicPolyhedron a:link, #GeodesicPolyhedron a:active, #GeodesicPolyhedron a:visited {color:#FF6D22;}  #GeodesicPolyhedron a:hover {opacity:.7;}
#InertEvaluate {z-index:7721; transform: translate(-50%, -50%); position:absolute; left:93.6242px; top:81.9215px;font-size:1.90965em;} #InertEvaluate a, #InertEvaluate a:link, #InertEvaluate a:active, #InertEvaluate a:visited {color:#FF9B00;}  #InertEvaluate a:hover {opacity:.7;}
#Until {z-index:7729; transform: translate(-50%, -50%); position:absolute; left:52.48px; top:186.109px;font-size:1.90305em;} #Until a, #Until a:link, #Until a:active, #Until a:visited {color:#63B300;}  #Until a:hover {opacity:.7;}
#TernaryListPlot {z-index:7759; transform: translate(-50%, -50%); position:absolute; left:419.42px; top:282.734px;font-size:1.8778em;} #TernaryListPlot a, #TernaryListPlot a:link, #TernaryListPlot a:active, #TernaryListPlot a:visited {color:#63B300;}  #TernaryListPlot a:hover {opacity:.7;}
#FromRawPointer {z-index:7760; transform: translate(-50%, -50%); position:absolute; left:755.292px; top:171.825px;font-size:1.87732em;} #FromRawPointer a, #FromRawPointer a:link, #FromRawPointer a:active, #FromRawPointer a:visited {color:#A16BBA;}  #FromRawPointer a:hover {opacity:.7;}
#VideoScreenCapture {z-index:7777; transform: translate(-50%, -50%); position:absolute; left:696.514px; top:151.66px;font-size:1.86287em;} #VideoScreenCapture a, #VideoScreenCapture a:link, #VideoScreenCapture a:active, #VideoScreenCapture a:visited {color:#20A1A3;}  #VideoScreenCapture a:hover {opacity:.7;}
#PermutationMatrix {z-index:7785; transform: translate(-50%, -50%); position:absolute; left:554.608px; top:296.178px;font-size:1.85587em;} #PermutationMatrix a, #PermutationMatrix a:link, #PermutationMatrix a:active, #PermutationMatrix a:visited {color:#FF6D22;}  #PermutationMatrix a:hover {opacity:.7;}
#FeatureValueImpactPlot {z-index:7798; transform: translate(-50%, -50%); position:absolute; left:190.187px; top:97.8857px;font-size:1.84538em;} #FeatureValueImpactPlot a, #FeatureValueImpactPlot a:link, #FeatureValueImpactPlot a:active, #FeatureValueImpactPlot a:visited {color:#A16BBA;}  #FeatureValueImpactPlot a:hover {opacity:.7;}
#ApplyReaction {z-index:7799; transform: translate(-50%, -50%); position:absolute; left:166.676px; top:282.734px;font-size:1.84483em;} #ApplyReaction a, #ApplyReaction a:link, #ApplyReaction a:active, #ApplyReaction a:visited {color:#5787CE;}  #ApplyReaction a:hover {opacity:.7;}
#GraphJoin {z-index:7825; transform: translate(-50%, -50%); position:absolute; left:101.181px; top:129.814px;font-size:1.82287em;} #GraphJoin a, #GraphJoin a:link, #GraphJoin a:active, #GraphJoin a:visited {color:#FF6D22;}  #GraphJoin a:hover {opacity:.7;}
#TorusGraph {z-index:7839; transform: translate(-50%, -50%); position:absolute; left:731.781px; top:74.3595px;font-size:1.81061em;} #TorusGraph a, #TorusGraph a:link, #TorusGraph a:active, #TorusGraph a:visited {color:#20A1A3;}  #TorusGraph a:hover {opacity:.7;}
#DSolveChangeVariables {z-index:7877; transform: translate(-50%, -50%); position:absolute; left:631.859px; top:264.249px;font-size:1.77931em;} #DSolveChangeVariables a, #DSolveChangeVariables a:link, #DSolveChangeVariables a:active, #DSolveChangeVariables a:visited {color:#63B300;}  #DSolveChangeVariables a:hover {opacity:.7;}
#CumulativeFeatureImpactPlot {z-index:7878; transform: translate(-50%, -50%); position:absolute; left:418.58px; top:265.93px;font-size:1.77839em;} #CumulativeFeatureImpactPlot a, #CumulativeFeatureImpactPlot a:link, #CumulativeFeatureImpactPlot a:active, #CumulativeFeatureImpactPlot a:visited {color:#FF6D22;}  #CumulativeFeatureImpactPlot a:hover {opacity:.7;}
#TreeElementShape {z-index:7879; transform: translate(-50%, -50%); position:absolute; left:725.903px; top:225.599px;font-size:1.77723em;} #TreeElementShape a, #TreeElementShape a:link, #TreeElementShape a:active, #TreeElementShape a:visited {color:#20A1A3;}  #TreeElementShape a:hover {opacity:.7;}
#LibraryFunctionDeclaration {z-index:8391; transform: translate(-50%, -50%); position:absolute; left:558.807px; top:281.054px;font-size:1.34854em;} #LibraryFunctionDeclaration a, #LibraryFunctionDeclaration a:link, #LibraryFunctionDeclaration a:active, #LibraryFunctionDeclaration a:visited {color:#CA3300;}  #LibraryFunctionDeclaration a:hover {opacity:.7;}
#SymmetricDifference {z-index:8404; transform: translate(-50%, -50%); position:absolute; left:535.296px; top:9.66253px;font-size:1.33786em;} #SymmetricDifference a, #SymmetricDifference a:link, #SymmetricDifference a:active, #SymmetricDifference a:visited {color:#20A1A3;}  #SymmetricDifference a:hover {opacity:.7;}
#FlatShading {z-index:8406; transform: translate(-50%, -50%); position:absolute; left:60.8768px; top:100.406px;font-size:1.33567em;} #FlatShading a, #FlatShading a:link, #FlatShading a:active, #FlatShading a:visited {color:#CA3300;}  #FlatShading a:hover {opacity:.7;}
#CircularArcThrough {z-index:8420; transform: translate(-50%, -50%); position:absolute; left:275.835px; top:9.66253px;font-size:1.32384em;} #CircularArcThrough a, #CircularArcThrough a:link, #CircularArcThrough a:active, #CircularArcThrough a:visited {color:#CA3300;}  #CircularArcThrough a:hover {opacity:.7;}
#GouraudShading {z-index:8420; transform: translate(-50%, -50%); position:absolute; left:533.616px; top:25.6267px;font-size:1.32379em;} #GouraudShading a, #GouraudShading a:link, #GouraudShading a:active, #GouraudShading a:visited {color:#CA3300;}  #GouraudShading a:hover {opacity:.7;}
#DiscreteInputOutputModel {z-index:8428; transform: translate(-50%, -50%); position:absolute; left:141.486px; top:42.4311px;font-size:1.31774em;} #DiscreteInputOutputModel a, #DiscreteInputOutputModel a:link, #DiscreteInputOutputModel a:active, #DiscreteInputOutputModel a:visited {color:#A16BBA;}  #DiscreteInputOutputModel a:hover {opacity:.7;}
#EstimatedPointNormals {z-index:8431; transform: translate(-50%, -50%); position:absolute; left:662.087px; top:7.14187px;font-size:1.31506em;} #EstimatedPointNormals a, #EstimatedPointNormals a:link, #EstimatedPointNormals a:active, #EstimatedPointNormals a:visited {color:#FF6D22;}  #EstimatedPointNormals a:hover {opacity:.7;}
#GraphProduct {z-index:8442; transform: translate(-50%, -50%); position:absolute; left:96.983px; top:265.93px;font-size:1.30588em;} #GraphProduct a, #GraphProduct a:link, #GraphProduct a:active, #GraphProduct a:visited {color:#63B300;}  #GraphProduct a:hover {opacity:.7;}
#NominalScale {z-index:8448; transform: translate(-50%, -50%); position:absolute; left:44.9228px; top:152.5px;font-size:1.30051em;} #NominalScale a, #NominalScale a:link, #NominalScale a:active, #NominalScale a:visited {color:#20A1A3;}  #NominalScale a:hover {opacity:.7;}
#QuestionGenerator {z-index:8498; transform: translate(-50%, -50%); position:absolute; left:91.9449px; top:115.53px;font-size:1.25895em;} #QuestionGenerator a, #QuestionGenerator a:link, #QuestionGenerator a:active, #QuestionGenerator a:visited {color:#20A1A3;}  #QuestionGenerator a:hover {opacity:.7;}
#GraphSum {z-index:8499; transform: translate(-50%, -50%); position:absolute; left:785.52px; top:197.872px;font-size:1.25817em;} #GraphSum a, #GraphSum a:link, #GraphSum a:active, #GraphSum a:visited {color:#FF6D22;}  #GraphSum a:hover {opacity:.7;}
#BuckyballGraph {z-index:8505; transform: translate(-50%, -50%); position:absolute; left:750.254px; top:59.2355px;font-size:1.25321em;} #BuckyballGraph a, #BuckyballGraph a:link, #BuckyballGraph a:active, #BuckyballGraph a:visited {color:#63B300;}  #BuckyballGraph a:hover {opacity:.7;}
#ChemicalInstance {z-index:8508; transform: translate(-50%, -50%); position:absolute; left:754.452px; top:46.6322px;font-size:1.25065em;} #ChemicalInstance a, #ChemicalInstance a:link, #ChemicalInstance a:active, #ChemicalInstance a:visited {color:#20A1A3;}  #ChemicalInstance a:hover {opacity:.7;}
#InertExpression {z-index:8896; transform: translate(-50%, -50%); position:absolute; left:198.584px; top:297.858px;font-size:0.925079em;} #InertExpression a, #InertExpression a:link, #InertExpression a:active, #InertExpression a:visited {color:#FF9B00;}  #InertExpression a:hover {opacity:.7;}
#UpperTriangularMatrix {z-index:8896; transform: translate(-50%, -50%); position:absolute; left:75.1513px; top:296.178px;font-size:0.924902em;} #UpperTriangularMatrix a, #UpperTriangularMatrix a:link, #UpperTriangularMatrix a:active, #UpperTriangularMatrix a:visited {color:#A16BBA;}  #UpperTriangularMatrix a:hover {opacity:.7;}
#CreateTypeInstance {z-index:8900; transform: translate(-50%, -50%); position:absolute; left:57.518px; top:223.079px;font-size:0.922035em;} #CreateTypeInstance a, #CreateTypeInstance a:link, #CreateTypeInstance a:active, #CreateTypeInstance a:visited {color:#63B300;}  #CreateTypeInstance a:hover {opacity:.7;}
#PlaybackSettings {z-index:8900; transform: translate(-50%, -50%); position:absolute; left:60.8768px; top:30.668px;font-size:0.921759em;} #PlaybackSettings a, #PlaybackSettings a:link, #PlaybackSettings a:active, #PlaybackSettings a:visited {color:#CA3300;}  #PlaybackSettings a:hover {opacity:.7;}
#DeleteElements {z-index:8904; transform: translate(-50%, -50%); position:absolute; left:47.4419px; top:200.393px;font-size:0.918223em;} #DeleteElements a, #DeleteElements a:link, #DeleteElements a:active, #DeleteElements a:visited {color:#A16BBA;}  #DeleteElements a:hover {opacity:.7;}
#BlockUpperTriangularMatrix {z-index:8906; transform: translate(-50%, -50%); position:absolute; left:731.781px; top:185.269px;font-size:0.916855em;} #BlockUpperTriangularMatrix a, #BlockUpperTriangularMatrix a:link, #BlockUpperTriangularMatrix a:active, #BlockUpperTriangularMatrix a:visited {color:#20A1A3;}  #BlockUpperTriangularMatrix a:hover {opacity:.7;}
#CompilerCallback {z-index:8907; transform: translate(-50%, -50%); position:absolute; left:792.237px; top:210.475px;font-size:0.916305em;} #CompilerCallback a, #CompilerCallback a:link, #CompilerCallback a:active, #CompilerCallback a:visited {color:#63B300;}  #CompilerCallback a:hover {opacity:.7;}
#BlockLowerTriangularMatrix {z-index:8911; transform: translate(-50%, -50%); position:absolute; left:92.7846px; top:66.7975px;font-size:0.912703em;} #BlockLowerTriangularMatrix a, #BlockLowerTriangularMatrix a:link, #BlockLowerTriangularMatrix a:active, #BlockLowerTriangularMatrix a:visited {color:#63B300;}  #BlockLowerTriangularMatrix a:hover {opacity:.7;}
#ToRawPointer {z-index:8911; transform: translate(-50%, -50%); position:absolute; left:625.981px; top:226.439px;font-size:0.912639em;} #ToRawPointer a, #ToRawPointer a:link, #ToRawPointer a:active, #ToRawPointer a:visited {color:#FF9B00;}  #ToRawPointer a:hover {opacity:.7;}
#LocalEvaluate {z-index:8915; transform: translate(-50%, -50%); position:absolute; left:786.36px; top:260.888px;font-size:0.908829em;} #LocalEvaluate a, #LocalEvaluate a:link, #LocalEvaluate a:active, #LocalEvaluate a:visited {color:#CA3300;}  #LocalEvaluate a:hover {opacity:.7;}
#LowerTriangularMatrix {z-index:8916; transform: translate(-50%, -50%); position:absolute; left:52.48px; top:212.156px;font-size:0.908575em;} #LowerTriangularMatrix a, #LowerTriangularMatrix a:link, #LowerTriangularMatrix a:active, #LowerTriangularMatrix a:visited {color:#FF9B00;}  #LowerTriangularMatrix a:hover {opacity:.7;}
#UnmanageObject {z-index:8916; transform: translate(-50%, -50%); position:absolute; left:763.688px; top:7.98209px;font-size:0.908059em;} #UnmanageObject a, #UnmanageObject a:link, #UnmanageObject a:active, #UnmanageObject a:visited {color:#20A1A3;}  #UnmanageObject a:hover {opacity:.7;}
#TypeOf {z-index:8922; transform: translate(-50%, -50%); position:absolute; left:224.614px; top:115.53px;font-size:0.903746em;} #TypeOf a, #TypeOf a:link, #TypeOf a:active, #TypeOf a:visited {color:#FF9B00;}  #TypeOf a:hover {opacity:.7;}
#DeleteAdjacentDuplicates {z-index:8923; transform: translate(-50%, -50%); position:absolute; left:81.8687px; top:56.7149px;font-size:0.902848em;} #DeleteAdjacentDuplicates a, #DeleteAdjacentDuplicates a:link, #DeleteAdjacentDuplicates a:active, #DeleteAdjacentDuplicates a:visited {color:#20A1A3;}  #DeleteAdjacentDuplicates a:hover {opacity:.7;}
#InfiniteLineThrough {z-index:8929; transform: translate(-50%, -50%); position:absolute; left:70.9529px; top:280.213px;font-size:0.897348em;} #InfiniteLineThrough a, #InfiniteLineThrough a:link, #InfiniteLineThrough a:active, #InfiniteLineThrough a:visited {color:#A16BBA;}  #InfiniteLineThrough a:hover {opacity:.7;}
#_DefaultLocalKernels {z-index:8933; transform: translate(-50%, -50%); position:absolute; left:42.4038px; top:165.103px;font-size:0.894456em;} #_DefaultLocalKernels a, #_DefaultLocalKernels a:link, #_DefaultLocalKernels a:active, #_DefaultLocalKernels a:visited {color:#FF6D22;}  #_DefaultLocalKernels a:hover {opacity:.7;}
#TernaryPlotCorners {z-index:8935; transform: translate(-50%, -50%); position:absolute; left:785.52px; top:139.897px;font-size:0.892344em;} #TernaryPlotCorners a, #TernaryPlotCorners a:link, #TernaryPlotCorners a:active, #TernaryPlotCorners a:visited {color:#FF6D22;}  #TernaryPlotCorners a:hover {opacity:.7;}
#ForAllType {z-index:8936; transform: translate(-50%, -50%); position:absolute; left:636.897px; top:165.103px;font-size:0.891492em;} #ForAllType a, #ForAllType a:link, #ForAllType a:active, #ForAllType a:visited {color:#CA3300;}  #ForAllType a:hover {opacity:.7;}
#SameAs {z-index:8942; transform: translate(-50%, -50%); position:absolute; left:462.243px; top:297.018px;font-size:0.887013em;} #SameAs a, #SameAs a:link, #SameAs a:active, #SameAs a:visited {color:#5787CE;}  #SameAs a:hover {opacity:.7;}
#ResidueSum {z-index:8944; transform: translate(-50%, -50%); position:absolute; left:528.578px; top:198.712px;font-size:0.885298em;} #ResidueSum a, #ResidueSum a:link, #ResidueSum a:active, #ResidueSum a:visited {color:#A16BBA;}  #ResidueSum a:hover {opacity:.7;}
#CompiledExpressionDeclaration {z-index:8945; transform: translate(-50%, -50%); position:absolute; left:160.799px; top:9.66253px;font-size:0.884247em;} #CompiledExpressionDeclaration a, #CompiledExpressionDeclaration a:link, #CompiledExpressionDeclaration a:active, #CompiledExpressionDeclaration a:visited {color:#5787CE;}  #CompiledExpressionDeclaration a:hover {opacity:.7;}
#Cast {z-index:8948; transform: translate(-50%, -50%); position:absolute; left:437.893px; top:55.8747px;font-size:0.881728em;} #Cast a, #Cast a:link, #Cast a:active, #Cast a:visited {color:#5787CE;}  #Cast a:hover {opacity:.7;}
#ParentEdgeStyle {z-index:9199; transform: translate(-50%, -50%); position:absolute; left:49.9609px; top:242.404px;font-size:0.671224em;} #ParentEdgeStyle a, #ParentEdgeStyle a:link, #ParentEdgeStyle a:active, #ParentEdgeStyle a:visited {color:#A16BBA;}  #ParentEdgeStyle a:hover {opacity:.7;}
#TreeElementLabelFunction {z-index:9201; transform: translate(-50%, -50%); position:absolute; left:65.9148px; top:234.001px;font-size:0.669824em;} #TreeElementLabelFunction a, #TreeElementLabelFunction a:link, #TreeElementLabelFunction a:active, #TreeElementLabelFunction a:visited {color:#5787CE;}  #TreeElementLabelFunction a:hover {opacity:.7;}
#TreeElementSizeFunction {z-index:9201; transform: translate(-50%, -50%); position:absolute; left:62.5561px; top:4.62121px;font-size:0.669336em;} #TreeElementSizeFunction a, #TreeElementSizeFunction a:link, #TreeElementSizeFunction a:active, #TreeElementSizeFunction a:visited {color:#A16BBA;}  #TreeElementSizeFunction a:hover {opacity:.7;}
#ParentEdgeLabelStyle {z-index:9202; transform: translate(-50%, -50%); position:absolute; left:790.558px; top:241.563px;font-size:0.668604em;} #ParentEdgeLabelStyle a, #ParentEdgeLabelStyle a:link, #ParentEdgeLabelStyle a:active, #ParentEdgeLabelStyle a:visited {color:#FF6D22;}  #ParentEdgeLabelStyle a:hover {opacity:.7;}
#ParentEdgeLabel {z-index:9203; transform: translate(-50%, -50%); position:absolute; left:798.115px; top:131.494px;font-size:0.667773em;} #ParentEdgeLabel a, #ParentEdgeLabel a:link, #ParentEdgeLabel a:active, #ParentEdgeLabel a:visited {color:#A16BBA;}  #ParentEdgeLabel a:hover {opacity:.7;}
#TreeElementSize {z-index:9204; transform: translate(-50%, -50%); position:absolute; left:345.528px; top:205.434px;font-size:0.666747em;} #TreeElementSize a, #TreeElementSize a:link, #TreeElementSize a:active, #TreeElementSize a:visited {color:#FF9B00;}  #TreeElementSize a:hover {opacity:.7;}
#TreeElementLabelStyle {z-index:9205; transform: translate(-50%, -50%); position:absolute; left:65.9148px; top:13.0234px;font-size:0.665843em;} #TreeElementLabelStyle a, #TreeElementLabelStyle a:link, #TreeElementLabelStyle a:active, #TreeElementLabelStyle a:visited {color:#FF9B00;}  #TreeElementLabelStyle a:hover {opacity:.7;}
#TreeElementCoordinates {z-index:9206; transform: translate(-50%, -50%); position:absolute; left:793.917px; top:250.806px;font-size:0.665186em;} #TreeElementCoordinates a, #TreeElementCoordinates a:link, #TreeElementCoordinates a:active, #TreeElementCoordinates a:visited {color:#A16BBA;}  #TreeElementCoordinates a:hover {opacity:.7;}
#VideoTransparency {z-index:9206; transform: translate(-50%, -50%); position:absolute; left:264.919px; top:299.539px;font-size:0.665147em;} #VideoTransparency a, #VideoTransparency a:link, #VideoTransparency a:active, #VideoTransparency a:visited {color:#A16BBA;}  #VideoTransparency a:hover {opacity:.7;}
#TreeElementShapeFunction {z-index:9207; transform: translate(-50%, -50%); position:absolute; left:418.58px; top:6.30165px;font-size:0.664693em;} #TreeElementShapeFunction a, #TreeElementShapeFunction a:link, #TreeElementShapeFunction a:active, #TreeElementShapeFunction a:visited {color:#CA3300;}  #TreeElementShapeFunction a:hover {opacity:.7;}
#ParentEdgeShapeFunction {z-index:9208; transform: translate(-50%, -50%); position:absolute; left:407.664px; top:298.698px;font-size:0.663335em;} #ParentEdgeShapeFunction a, #ParentEdgeShapeFunction a:link, #ParentEdgeShapeFunction a:active, #ParentEdgeShapeFunction a:visited {color:#FF6D22;}  #ParentEdgeShapeFunction a:hover {opacity:.7;}
#ParentEdgeLabelFunction {z-index:9209; transform: translate(-50%, -50%); position:absolute; left:667.125px; top:298.698px;font-size:0.662664em;} #ParentEdgeLabelFunction a, #ParentEdgeLabelFunction a:link, #ParentEdgeLabelFunction a:active, #ParentEdgeLabelFunction a:visited {color:#FF6D22;}  #ParentEdgeLabelFunction a:hover {opacity:.7;}
#TreeElementStyleFunction {z-index:9211; transform: translate(-50%, -50%); position:absolute; left:331.254px; top:299.539px;font-size:0.661262em;} #TreeElementStyleFunction a, #TreeElementStyleFunction a:link, #TreeElementStyleFunction a:active, #TreeElementStyleFunction a:visited {color:#FF6D22;}  #TreeElementStyleFunction a:hover {opacity:.7;}
#ParentEdgeStyleFunction {z-index:9211; transform: translate(-50%, -50%); position:absolute; left:741.017px; top:298.698px;font-size:0.661247em;} #ParentEdgeStyleFunction a, #ParentEdgeStyleFunction a:link, #ParentEdgeStyleFunction a:active, #ParentEdgeStyleFunction a:visited {color:#FF9B00;}  #ParentEdgeStyleFunction a:hover {opacity:.7;}
div#cloudpublish {
    width: 5.3%;
    z-index: 7084;
    transform: translate(-50%, -50%);
    position: absolute;
    left: 93.82899999999995px;
    top: 186.8802px;
    font-size: 2.44384em;
}
div#evaluate {
    width: 4.4%;
    z-index: 7084;
    transform: translate(-50%, -50%);
    position: absolute;
    left: 738.829px;
    top: 252.8802px;
    font-size: 2.44384em;
}
</style>
<div id="wordcloud-13-1" class="initial_hidden fade_this_in" style="font-family:&#39;Source Sans Pro&#39;;font-size: 10px;position:relative; margin:auto; text-align:center; width:838px; height: 305px;">
<div class="initial_hidden fade_this_in" id="TypeSpecifier"><a href="https://reference.wolfram.com/language/ref/TypeSpecifier.html">::[ ]</a></div>
<div class="initial_hidden fade_this_in" id="Threaded"><a href="https://reference.wolfram.com/language/ref/Threaded.html">Threaded</a></div>
<div class="initial_hidden fade_this_in" id="MapApply"><a href="https://reference.wolfram.com/language/ref/MapApply.html">MapApply</a></div>
<div class="initial_hidden fade_this_in" id="FeatureImpactPlot"><a href="https://reference.wolfram.com/language/ref/FeatureImpactPlot.html">FeatureImpactPlot</a></div>
<div class="initial_hidden fade_this_in" id="IntegrateChangeVariables"><a href="https://reference.wolfram.com/language/ref/IntegrateChangeVariables.html">IntegrateChangeVariables</a></div>
<div class="initial_hidden fade_this_in" id="ReconstructionMesh"><a href="https://reference.wolfram.com/language/ref/ReconstructionMesh.html">ReconstructionMesh</a></div>
<div class="initial_hidden fade_this_in" id="VideoCapture"><a href="https://reference.wolfram.com/language/ref/VideoCapture.html">VideoCapture</a></div>
<div class="initial_hidden fade_this_in" id="RootTree"><a href="https://reference.wolfram.com/language/ref/RootTree.html">RootTree</a></div>
<div class="initial_hidden fade_this_in" id="ImplicitD"><a href="https://reference.wolfram.com/language/ref/ImplicitD.html">ImplicitD</a></div>
<div class="initial_hidden fade_this_in" id="ExprStruct"><a href="https://reference.wolfram.com/language/ref/datastructure/ExprStruct.html">&#8220;ExprStruct&#8221;</a></div>
<div class="initial_hidden fade_this_in" id="ChemicalConvert"><a href="https://reference.wolfram.com/language/ref/ChemicalConvert.html">ChemicalConvert</a></div>
<div class="initial_hidden fade_this_in" id="UniqueElements"><a href="https://reference.wolfram.com/language/ref/UniqueElements.html">UniqueElements</a></div>
<div class="initial_hidden fade_this_in" id="ReplaceAt"><a href="https://reference.wolfram.com/language/ref/ReplaceAt.html">ReplaceAt</a></div>
<div class="initial_hidden fade_this_in" id="TypeEvaluate"><a href="https://reference.wolfram.com/language/ref/TypeEvaluate.html">TypeEvaluate</a></div>
<div class="initial_hidden fade_this_in" id="TreeLeafCount"><a href="https://reference.wolfram.com/language/ref/TreeLeafCount.html">TreeLeafCount</a></div>
<div class="initial_hidden fade_this_in" id="QuestionSelector"><a href="https://reference.wolfram.com/language/ref/QuestionSelector.html">QuestionSelector</a></div>
<div class="initial_hidden fade_this_in" id="IncludeSingularSolutions"><a href="https://reference.wolfram.com/language/ref/IncludeSingularSolutions.html">IncludeSingularSolutions</a></div>
<div class="initial_hidden fade_this_in" id="KernelConfiguration"><a href="https://reference.wolfram.com/language/ref/KernelConfiguration.html">KernelConfiguration</a></div>
<div class="initial_hidden fade_this_in" id="PhongShading"><a href="https://reference.wolfram.com/language/ref/PhongShading.html">PhongShading</a></div>
<div class="initial_hidden fade_this_in" id="PatternReaction"><a href="https://reference.wolfram.com/language/ref/PatternReaction.html">PatternReaction</a></div>
<div class="initial_hidden fade_this_in" id="FractionalD"><a href="https://reference.wolfram.com/language/ref/FractionalD.html">FractionalD</a></div>
<div class="initial_hidden fade_this_in" id="OrdinalScale"><a href="https://reference.wolfram.com/language/ref/OrdinalScale.html">OrdinalScale</a></div>
<div class="initial_hidden fade_this_in" id="DropShadowing"><a href="https://reference.wolfram.com/language/ref/DropShadowing.html">DropShadowing</a></div>
<div class="initial_hidden fade_this_in" id="UnlabeledTree"><a href="https://reference.wolfram.com/language/ref/UnlabeledTree.html">UnlabeledTree</a></div>
<div class="initial_hidden fade_this_in" id="FeatureValueDependencyPlot"><a href="https://reference.wolfram.com/language/ref/FeatureValueDependencyPlot.html">FeatureValueDependencyPlot</a></div>
<div class="initial_hidden fade_this_in" id="CaputoD"><a href="https://reference.wolfram.com/language/ref/CaputoD.html">CaputoD</a></div>
<div class="initial_hidden fade_this_in" id="BlockDiagonalMatrix"><a href="https://reference.wolfram.com/language/ref/BlockDiagonalMatrix.html">BlockDiagonalMatrix</a></div>
<div class="initial_hidden fade_this_in" id="ModelPredictiveController"><a href="https://reference.wolfram.com/language/ref/ModelPredictiveController.html">ModelPredictiveController</a></div>
<div class="initial_hidden fade_this_in" id="GeodesicPolyhedron"><a href="https://reference.wolfram.com/language/ref/GeodesicPolyhedron.html">GeodesicPolyhedron</a></div>
<div class="initial_hidden fade_this_in" id="InertEvaluate"><a href="https://reference.wolfram.com/language/ref/InertEvaluate.html">InertEvaluate</a></div>
<div class="initial_hidden fade_this_in" id="Until"><a href="https://reference.wolfram.com/language/ref/Until.html">Until</a></div>
<div class="initial_hidden fade_this_in" id="TernaryListPlot"><a href="https://reference.wolfram.com/language/ref/TernaryListPlot.html">TernaryListPlot</a></div>
<div class="initial_hidden fade_this_in" id="FromRawPointer"><a href="https://reference.wolfram.com/language/ref/FromRawPointer.html">FromRawPointer</a></div>
<div class="initial_hidden fade_this_in" id="VideoScreenCapture"><a href="https://reference.wolfram.com/language/ref/VideoScreenCapture.html">VideoScreenCapture</a></div>
<div class="initial_hidden fade_this_in" id="PermutationMatrix"><a href="https://reference.wolfram.com/language/ref/PermutationMatrix.html">PermutationMatrix</a></div>
<div class="initial_hidden fade_this_in" id="FeatureValueImpactPlot"><a href="https://reference.wolfram.com/language/ref/FeatureValueImpactPlot.html">FeatureValueImpactPlot</a></div>
<div class="initial_hidden fade_this_in" id="ApplyReaction"><a href="https://reference.wolfram.com/language/ref/ApplyReaction.html">ApplyReaction</a></div>
<div class="initial_hidden fade_this_in" id="GraphJoin"><a href="https://reference.wolfram.com/language/ref/GraphJoin.html">GraphJoin</a></div>
<div class="initial_hidden fade_this_in" id="TorusGraph"><a href="https://reference.wolfram.com/language/ref/TorusGraph.html">TorusGraph</a></div>
<div class="initial_hidden fade_this_in" id="DSolveChangeVariables"><a href="https://reference.wolfram.com/language/ref/DSolveChangeVariables.html">DSolveChangeVariables</a></div>
<div class="initial_hidden fade_this_in" id="CumulativeFeatureImpactPlot"><a href="https://reference.wolfram.com/language/ref/CumulativeFeatureImpactPlot.html">CumulativeFeatureImpactPlot</a></div>
<div class="initial_hidden fade_this_in" id="TreeElementShape"><a href="https://reference.wolfram.com/language/ref/TreeElementShape.html">TreeElementShape</a></div>
<div class="initial_hidden fade_this_in" id="LibraryFunctionDeclaration"><a href="https://reference.wolfram.com/language/ref/LibraryFunctionDeclaration.html">LibraryFunctionDeclaration</a></div>
<div class="initial_hidden fade_this_in" id="SymmetricDifference"><a href="https://reference.wolfram.com/language/ref/SymmetricDifference.html">SymmetricDifference</a></div>
<div class="initial_hidden fade_this_in" id="FlatShading"><a href="https://reference.wolfram.com/language/ref/FlatShading.html">FlatShading</a></div>
<div class="initial_hidden fade_this_in" id="CircularArcThrough"><a href="https://reference.wolfram.com/language/ref/CircularArcThrough.html">CircularArcThrough</a></div>
<div class="initial_hidden fade_this_in" id="GouraudShading"><a href="https://reference.wolfram.com/language/ref/GouraudShading.html">GouraudShading</a></div>
<div class="initial_hidden fade_this_in" id="DiscreteInputOutputModel"><a href="https://reference.wolfram.com/language/ref/DiscreteInputOutputModel.html">DiscreteInputOutputModel</a></div>
<div class="initial_hidden fade_this_in" id="EstimatedPointNormals"><a href="https://reference.wolfram.com/language/ref/EstimatedPointNormals.html">EstimatedPointNormals</a></div>
<div class="initial_hidden fade_this_in" id="GraphProduct"><a href="https://reference.wolfram.com/language/ref/GraphProduct.html">GraphProduct</a></div>
<div class="initial_hidden fade_this_in" id="NominalScale"><a href="https://reference.wolfram.com/language/ref/NominalScale.html">NominalScale</a></div>
<div class="initial_hidden fade_this_in" id="QuestionGenerator"><a href="https://reference.wolfram.com/language/ref/QuestionGenerator.html">QuestionGenerator</a></div>
<div class="initial_hidden fade_this_in" id="GraphSum"><a href="https://reference.wolfram.com/language/ref/GraphSum.html">GraphSum</a></div>
<div class="initial_hidden fade_this_in" id="BuckyballGraph"><a href="https://reference.wolfram.com/language/ref/BuckyballGraph.html">BuckyballGraph</a></div>
<div class="initial_hidden fade_this_in" id="ChemicalInstance"><a href="https://reference.wolfram.com/language/ref/ChemicalInstance.html">ChemicalInstance</a></div>
<div class="initial_hidden fade_this_in" id="InertExpression"><a href="https://reference.wolfram.com/language/ref/InertExpression.html">InertExpression</a></div>
<div class="initial_hidden fade_this_in" id="UpperTriangularMatrix"><a href="https://reference.wolfram.com/language/ref/UpperTriangularMatrix.html">UpperTriangularMatrix</a></div>
<div class="initial_hidden fade_this_in" id="CreateTypeInstance"><a href="https://reference.wolfram.com/language/ref/CreateTypeInstance.html">CreateTypeInstance</a></div>
<div class="initial_hidden fade_this_in" id="PlaybackSettings"><a href="https://reference.wolfram.com/language/ref/PlaybackSettings.html">PlaybackSettings</a></div>
<div class="initial_hidden fade_this_in" id="DeleteElements"><a href="https://reference.wolfram.com/language/ref/DeleteElements.html">DeleteElements</a></div>
<div class="initial_hidden fade_this_in" id="BlockUpperTriangularMatrix"><a href="https://reference.wolfram.com/language/ref/BlockUpperTriangularMatrix.html">BlockUpperTriangularMatrix</a></div>
<div class="initial_hidden fade_this_in" id="CompilerCallback"><a href="https://reference.wolfram.com/language/ref/CompilerCallback.html">CompilerCallback</a></div>
<div class="initial_hidden fade_this_in" id="BlockLowerTriangularMatrix"><a href="https://reference.wolfram.com/language/ref/BlockLowerTriangularMatrix.html">BlockLowerTriangularMatrix</a></div>
<div class="initial_hidden fade_this_in" id="ToRawPointer"><a href="https://reference.wolfram.com/language/ref/ToRawPointer.html">ToRawPointer</a></div>
<div class="initial_hidden fade_this_in" id="LocalEvaluate"><a href="https://reference.wolfram.com/language/ref/LocalEvaluate.html">LocalEvaluate</a></div>
<div class="initial_hidden fade_this_in" id="LowerTriangularMatrix"><a href="https://reference.wolfram.com/language/ref/LowerTriangularMatrix.html">LowerTriangularMatrix</a></div>
<div class="initial_hidden fade_this_in" id="UnmanageObject"><a href="https://reference.wolfram.com/language/ref/UnmanageObject.html">UnmanageObject</a></div>
<div class="initial_hidden fade_this_in" id="TypeOf"><a href="https://reference.wolfram.com/language/ref/TypeOf.html">TypeOf</a></div>
<div class="initial_hidden fade_this_in" id="DeleteAdjacentDuplicates"><a href="https://reference.wolfram.com/language/ref/DeleteAdjacentDuplicates.html">DeleteAdjacentDuplicates</a></div>
<div class="initial_hidden fade_this_in" id="InfiniteLineThrough"><a href="https://reference.wolfram.com/language/ref/InfiniteLineThrough.html">InfiniteLineThrough</a></div>
<div class="initial_hidden fade_this_in" id="_DefaultLocalKernels"><a href="#">$DefaultLocalKernels</a></div>
<div class="initial_hidden fade_this_in" id="TernaryPlotCorners"><a href="https://reference.wolfram.com/language/ref/TernaryPlotCorners.html">TernaryPlotCorners</a></div>
<div class="initial_hidden fade_this_in" id="ForAllType"><a href="https://reference.wolfram.com/language/ref/ForAllType.html">ForAllType</a></div>
<div class="initial_hidden fade_this_in" id="SameAs"><a href="https://reference.wolfram.com/language/ref/SameAs.html">SameAs</a></div>
<div class="initial_hidden fade_this_in" id="ResidueSum"><a href="https://reference.wolfram.com/language/ref/ResidueSum.html">ResidueSum</a></div>
<div class="initial_hidden fade_this_in" id="CompiledExpressionDeclaration"><a href="https://reference.wolfram.com/language/ref/CompiledExpressionDeclaration.html">CompiledExpressionDeclaration</a></div>
<div class="initial_hidden fade_this_in" id="Cast"><a href="https://reference.wolfram.com/language/ref/Cast.html">Cast</a></div>
<div class="initial_hidden fade_this_in" id="ParentEdgeStyle"><a href="https://reference.wolfram.com/language/ref/ParentEdgeStyle.html">ParentEdgeStyle</a></div>
<div class="initial_hidden fade_this_in" id="TreeElementLabelFunction"><a href="https://reference.wolfram.com/language/ref/TreeElementLabelFunction.html">TreeElementLabelFunction</a></div>
<div class="initial_hidden fade_this_in" id="TreeElementSizeFunction"><a href="https://reference.wolfram.com/language/ref/TreeElementSizeFunction.html">TreeElementSizeFunction</a></div>
<div class="initial_hidden fade_this_in" id="ParentEdgeLabelStyle"><a href="https://reference.wolfram.com/language/ref/ParentEdgeLabelStyle.html">ParentEdgeLabelStyle</a></div>
<div class="initial_hidden fade_this_in" id="ParentEdgeLabel"><a href="https://reference.wolfram.com/language/ref/ParentEdgeLabel.html">ParentEdgeLabel</a></div>
<div class="initial_hidden fade_this_in" id="TreeElementSize"><a href="https://reference.wolfram.com/language/ref/TreeElementSize.html">TreeElementSize</a></div>
<div class="initial_hidden fade_this_in" id="TreeElementLabelStyle"><a href="https://reference.wolfram.com/language/ref/TreeElementLabelStyle.html">TreeElementLabelStyle</a></div>
<div class="initial_hidden fade_this_in" id="TreeElementCoordinates"><a href="https://reference.wolfram.com/language/ref/TreeElementCoordinates.html">TreeElementCoordinates</a></div>
<div class="initial_hidden fade_this_in" id="VideoTransparency"><a href="https://reference.wolfram.com/language/ref/VideoTransparency.html">VideoTransparency</a></div>
<div class="initial_hidden fade_this_in" id="TreeElementShapeFunction"><a href="https://reference.wolfram.com/language/ref/TreeElementShapeFunction.html">TreeElementShapeFunction</a></div>
<div class="initial_hidden fade_this_in" id="ParentEdgeShapeFunction"><a href="https://reference.wolfram.com/language/ref/ParentEdgeShapeFunction.html">ParentEdgeShapeFunction</a></div>
<div class="initial_hidden fade_this_in" id="ParentEdgeLabelFunction"><a href="https://reference.wolfram.com/language/ref/ParentEdgeLabelFunction.html">ParentEdgeLabelFunction</a></div>
<div class="initial_hidden fade_this_in" id="TreeElementStyleFunction"><a href="https://reference.wolfram.com/language/ref/TreeElementStyleFunction.html">TreeElementStyleFunction</a></div>
<div class="initial_hidden fade_this_in" id="ParentEdgeStyleFunction"><a href="https://reference.wolfram.com/language/ref/ParentEdgeStyleFunction.html">ParentEdgeStyleFunction</a></div>
<div class="initial_hidden fade_this_in" id="emoji"><a href="#emojis-and-more-multilingual-support">&#128576;</a></div>
<div class="initial_hidden fade_this_in" id="evaluate"><a href="#a-toolbar-for-every-notebook"><img src="https://content.wolfram.com/uploads/sites/43/2022/06/icon-toolbar-evalutate.png" style="width:100%;height:auto;"></a></div>
<div class="initial_hidden fade_this_in" id="cloudpublish"><a href="#a-toolbar-for-every-notebook"><img src="https://content.wolfram.com/uploads/sites/43/2022/06/icon-toolbar-cloudpublish.png" style="width:100%;height:auto;"></a></div>
</div>
<p><script type="text/javascript">
$('.initial_hidden').each(function(i){
	var $fader = $(this);
	    setTimeout(function() {
	      $fader.addClass('fade_this_in');
	    }, i*25+150);
		});
</script></p>
<h2 id='the-epic-continues'>The Epic Continues&#8230;</h2>
<p>Last week it was <a href='https://writings.stephenwolfram.com/2021/10/celebrating-a-third-of-a-century-of-mathematica-and-looking-forward/'>34 years since the original launch of Mathematica</a> and what’s now the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>. And through all those years we’ve energetically continued building further and further, adding ever more capabilities, and steadily extending the domain of the computational paradigm.</p>
<p>In recent years we’ve established something of a rhythm, delivering the fruits of our development efforts roughly twice a year. We released <a href='https://www.wolfram.com/mathematica/new-in-13/'>Version 13.0</a> on December 13, 2021. And now, roughly six months later, we’re releasing Version 13.1. As usual, even though it’s a “.1” release, it’s got a lot of new (and updated) functionality, some of which we’ve worked on for many years but finally now brought to fruition.<span id="more-38521"></span></p>
<p>For me it’s always exciting to see what we manage to deliver in each new version. And in Version 13.1 we have 90 completely new functions—as well as 203 existing functions with substantial updates. And beyond what appears in specific functions, there’s also major new functionality in Version 13.1 in areas like user interfaces and the compiler.</p>
<p>The Wolfram Language as it exists today encompasses a vast range of functionality. But its great power comes not just from what it contains, but also from how coherently everything in it fits together. And for nearly 36 years I’ve taken it as a personal responsibility to ensure that that coherence is maintained. It’s taken both great focus and lots of deep intellectual work. But as I experience them every day in my use of the Wolfram Language, I’m proud of the results.</p>
<p>And for the past four years I’ve been sharing the “behind the scenes” of how it’s achieved—by <a href='https://livestreams.stephenwolfram.com/category/live-ceoing/'>livestreaming our Wolfram Language design review meetings</a>. It’s an unprecedented level of openness—and engagement with the community. In designing Version 13.1 we’ve done 90 livestreams—lasting more than 96 hours. And in opening up our process we’re providing visibility not only into what was built for Version 13.1, but also of why it was built, and how decisions about it were made. </p>
<p>But, OK, so what finally is in Version 13.1? Let’s talk about some highlights&#8230;.</p>
<h2 id='beyond-listability:-introducing-threaded'>Beyond Listability: Introducing Threaded</h2>
<p>From the very beginning of Mathematica and the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> we’ve had the concept of listability: if you add two lists, for example, their corresponding elements will be added:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg1.png" alt='{a, b, c} + {x, y, z}' title='{a, b, c} + {x, y, z}' width='156' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg1A_copy.txt">
					<span class='close' id='bl1_out'>&amp;#10005</span></p>
<pre class='text' id='bl1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s a very convenient mechanism, that typically does exactly what you’d want. And for 35 years we haven’t really considered extending it. But if we look at code that gets written, it often happens that there are parts that basically implement something very much like listability, but slightly more general. And in <a href='https://reference.wolfram.com/language/guide/SummaryOfNewFeaturesIn131.html'>Version 13.1</a> we have a new symbolic construct, <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt>, that effectively allows you to easily generalize listability.</p>
<p>Consider:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg2.png" alt='{{1, 2}, {3, 4}} + {x, y}' title='{{1, 2}, {3, 4}} + {x, y}' width='208' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg2A_copy.txt">
					<span class='close' id='bl2_out'>&amp;#10005</span></p>
<pre class='text' id='bl2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This uses ordinary listability, effectively computing:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg3.png" alt='{{1, 2} + x, {3, 4} + y}' title='{{1, 2} + x, {3, 4} + y}' width='208' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg3A_copy.txt">
					<span class='close' id='bl3_out'>&amp;#10005</span></p>
<pre class='text' id='bl3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But what if you want instead to “go down a level” and thread <tt>{x,y}</tt> into the lowest parts of the first list? Well, now you can use <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> to do that:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg4.png" alt='{{1, 2}, {3, 4}} + Threaded' title='{{1, 2}, {3, 4}} + Threaded' width='254' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg4_copy.txt">
					<span class='close' id='bl4_out'>&amp;#10005</span></p>
<pre class='text' id='bl4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>On its own, <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> is just a symbolic wrapper:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg5.png" alt='Threaded' title='Threaded' width='151' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg5_copy.txt">
					<span class='close' id='bl5_out'>&amp;#10005</span></p>
<pre class='text' id='bl5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But as soon as it appears in a function—like <tt><a href='https://reference.wolfram.com/language/ref/Plus.html'>Plus</a></tt>—that has attribute <tt><a href='https://reference.wolfram.com/language/ref/Listable.html'>Listable</a></tt>, it specifies that the listability should be applied after what’s specified inside <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> is “threaded” at the lowest level.</p>
<p>Here’s another example. Create a list:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg6.png" alt='Table' title='Table' width='487' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg6_copy.txt">
					<span class='close' id='bl6_out'>&amp;#10005</span></p>
<pre class='text' id='bl6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>How should we then multiply each element by <tt>{1,–1}</tt>? We could do this with:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg7.png" alt='(#1*{1, -1} &#038; ) /@ Table' title='(#1*{1, -1} &#038; ) /@ Table' width='581' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg7_copy.txt">
					<span class='close' id='bl7_out'>&amp;#10005</span></p>
<pre class='text' id='bl7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But now we’ve got <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt>, and so instead we can just say:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg8.png" alt='Table' title='Table' width='581' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg8_copy.txt">
					<span class='close' id='bl8_out'>&amp;#10005</span></p>
<pre class='text' id='bl8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can give <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> as an argument to any listable function, not just <tt><a href='https://reference.wolfram.com/language/ref/Plus.html'>Plus</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Times.html'>Times</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg9.png" alt='Mod' title='Mod' width='291' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg9_copy.txt">
					<span class='close' id='bl9_out'>&amp;#10005</span></p>
<pre class='text' id='bl9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can use <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> and ordinary listability together:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg10.png" alt='{{1, 2}, {3, 4}} + Threaded' title='{{1, 2}, {3, 4}} + Threaded' width='301' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg10_copy.txt">
					<span class='close' id='bl10_out'>&amp;#10005</span></p>
<pre class='text' id='bl10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can have several <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt>s together as well:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg11.png" alt='{{1, 2}, {3, 4}} + Threaded' title='{{1, 2}, {3, 4}} + Threaded' width='376' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg11_copy.txt">
					<span class='close' id='bl11_out'>&amp;#10005</span></p>
<pre class='text' id='bl11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt>, by the way, gets its name from the function <tt><a href='https://reference.wolfram.com/language/ref/Thread.html'>Thread</a></tt>, which explicitly does “threading”, as in:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg12.png" alt='Thread' title='Thread' width='237' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg12_copy.txt">
					<span class='close' id='bl12_out'>&amp;#10005</span></p>
<pre class='text' id='bl12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By default, <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> will always thread into the lowest level of a list:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg13.png" alt='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' title='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' width='391' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg13_copy.txt">
					<span class='close' id='bl13_out'>&amp;#10005</span></p>
<pre class='text' id='bl13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg14.png" alt='{{{{4, 5}, {5, 6}}, {{5, 6}, {6, 7}}}, {{{5, 6}, {6, 7}}, {{6, 7}, {7, 8}}}} + Threaded' title='{{{{4, 5}, {5, 6}}, {{5, 6}, {6, 7}}}, {{{5, 6}, {6, 7}}, {{6, 7}, {7, 8}}}} + Threaded' width='579' height='77' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg14A_copy.txt">
					<span class='close' id='bl14_out'>&amp;#10005</span></p>
<pre class='text' id='bl14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a “real-life” example of using <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> like this. The data in a 3D color image consists of a rank-3 array of triples of RGB values:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAtearB.png" alt='ImageData' title='ImageData' width='433' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg15_copy.txt">
					<span class='close' id='bl15_out'>&amp;#10005</span></p>
<pre class='text' id='bl15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This multiplies every RGB triple by <tt>{0,1,2}</tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg17.png" alt='Image3D' title='Image3D' width='396' height='157' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg17B_copy.txt">
					<span class='close' id='Bbl17_out'>&amp;#10005</span></p>
<pre class='text' id='Bbl17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Most of the time you either want to use ordinary listability that operates at the top level of a list, or you want to use the default form of <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt>, that operates at the lowest level of a list. But <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> has a more general form, in which you can explicitly say what level you want it to operate at.</p>
<p>Here’s the default case:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg18.png" alt='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' title='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' width='441' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg18_copy.txt">
					<span class='close' id='bl18_out'>&amp;#10005</span></p>
<pre class='text' id='bl18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s level 1, which is just like ordinary listability:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg19.png" alt='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' title='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' width='441' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg19_copy.txt">
					<span class='close' id='bl19_out'>&amp;#10005</span></p>
<pre class='text' id='bl19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s threading into level 2:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg20.png" alt='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' title='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' width='441' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg20_copy.txt">
					<span class='close' id='bl20_out'>&amp;#10005</span></p>
<pre class='text' id='bl20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> provides a very convenient way to do all sorts of array-combining operations. There’s additional complexity when the object being “threaded in” itself has multiple levels. The default in this case is to align the lowest level in the thing being threaded in with the lowest level of the thing into which it’s being threaded:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg21.png" alt='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' title='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' width='441' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg21_copy.txt">
					<span class='close' id='bl21_out'>&amp;#10005</span></p>
<pre class='text' id='bl21_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here now is “ordinary listability” behavior:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg22.png" alt='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' title='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' width='456' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg22_copy.txt">
					<span class='close' id='bl22_out'>&amp;#10005</span></p>
<pre class='text' id='bl22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For the arrays we’re looking at here, the default behavior is equivalent to:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg23.png" alt='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' title='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' width='456' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg23_copy.txt">
					<span class='close' id='bl23_out'>&amp;#10005</span></p>
<pre class='text' id='bl23_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Sometimes it’s clearer to write this out in a form like</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityAimg24.png" alt='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' title='{{{3, 4}, {4, 5}}, {{4, 5}, {5, 6}}} + Threaded' width='483' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822beyondlistabilityimg24_copy.txt">
					<span class='close' id='bl24_out'>&amp;#10005</span></p>
<pre class='text' id='bl24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which says that the first level of the array inside the <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> is to be aligned with the second level of the outside array. In general, the default case is equivalent to –1 → –1, specifying that the bottom level of the array inside the <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt> should be aligned with the bottom level of the array outside.</p>
<h2 id='yet-more-language-convenience-functions'>Yet More Language Convenience Functions</h2>
<p>In every version of the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> we try to add new functions that will make general programs easier to write and easier to read. In <a href='https://reference.wolfram.com/language/guide/SummaryOfNewFeaturesIn131.html'>Version 13.1</a> the most important such function is <tt><a href='https://reference.wolfram.com/language/ref/Threaded.html'>Threaded</a></tt>. But there are quite a few others as well.</p>
<p>First in our collection for Version 13.1 is <tt><a href='https://reference.wolfram.com/language/ref/DeleteElements.html'>DeleteElements</a></tt>, which deletes specified elements from a list. It’s like <tt><a href='https://reference.wolfram.com/language/ref/Complement.html'>Complement</a></tt>, except that it doesn’t reorder the list (analogous to the way <tt><a href='https://reference.wolfram.com/language/ref/DeleteDuplicates.html'>DeleteDuplicates</a></tt> removes duplicate elements, without reordering in the way that <tt><a href='https://reference.wolfram.com/language/ref/Union.html'>Union</a></tt> does):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg1.png" alt='DeleteElements' title='DeleteElements' width='612' height='193' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg1_copy.txt">
					<span class='close' id='yml1_out'>&amp;#10005</span></p>
<pre class='text' id='yml1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/DeleteElements.html'>DeleteElements</a></tt> also allows more detailed control of how many copies of an element can be deleted. Here it is up to 2 <tt>b</tt>’s and 3 <tt>c</tt>’s:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg2.png" alt='DeleteElements' title='DeleteElements' width='389' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg2_copy.txt">
					<span class='close' id='yml2_out'>&amp;#10005</span></p>
<pre class='text' id='yml2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Talking of <tt><a href='https://reference.wolfram.com/language/ref/DeleteDuplicates.html'>DeleteDuplicates</a></tt>, another new function in Version 13.1 is <tt><a href='https://reference.wolfram.com/language/ref/DeleteAdjacentDuplicates.html'>DeleteAdjacentDuplicates</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg3.png" alt='DeleteAdjacentDuplicates' title='DeleteAdjacentDuplicates' width='563' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg3A_copy.txt">
					<span class='close' id='yml3_out'>&amp;#10005</span></p>
<pre class='text' id='yml3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We’ve had <tt><a href='https://reference.wolfram.com/language/ref/Union.html'>Union</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/Intersection.html'>Intersection</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Complement.html'>Complement</a></tt> since <a href='https://reference.wolfram.com/legacy/v1/'>Version 1.0</a>. In Version 13.1 we’re adding <tt><a href='https://reference.wolfram.com/language/ref/SymmetricDifference.html'>SymmetricDifference</a></tt>: find elements that (in the 2-argument case) are in one list or the other, but not both. For example, what countries are in the G20 or the EU, but not both?</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg4.png" alt='SymmetricDifference' title='SymmetricDifference' width='600' height='173' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg4_copy.txt">
					<span class='close' id='yml4_out'>&amp;#10005</span></p>
<pre class='text' id='yml4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Let’s say you have several lists, and you want to know what elements are unique to just one of these lists, and don’t occur in multiple lists. The new <tt><a href='https://reference.wolfram.com/language/ref/UniqueElements.html'>UniqueElements</a></tt> tells one. </p>
<p>As an example, this tells us which letters uniquely occur in various alphabets:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg5.png" alt='UniqueElements' title='UniqueElements' width='556' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg5A_copy.txt">
					<span class='close' id='yml5_out'>&amp;#10005</span></p>
<pre class='text' id='yml5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We’ve had <tt><a href='https://reference.wolfram.com/language/ref/Map.html'>Map</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Apply.html'>Apply</a></tt>, with short forms <tt><a href='https://reference.wolfram.com/language/ref/Map.html'>/@</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Apply.html'>@@</a></tt>, ever since <a href='https://reference.wolfram.com/legacy/v1/'>Version 1.0</a>. In <a href='https://reference.wolfram.com/legacy/v4/'>Version 4.0</a> we added <tt><a href="https://reference.wolfram.com/language/ref/MapApply.html">@@@</a></tt> to represent <tt><a href='https://reference.wolfram.com/language/ref/Apply.html'>Apply</a></tt><tt>[f,expr,1]</tt>. But we never added a separate function to correspond to <tt><a href='https://reference.wolfram.com/language/ref/MapApply.html'>@@@</a></tt>. And over the years, there’ve been quite a few occasions where I’ve basically wanted, for example, to do something like “<tt><a href='https://reference.wolfram.com/language/ref/Fold.html'>Fold</a></tt><tt>[<a href='https://reference.wolfram.com/language/ref/MapApply.html'>@@@</a>, ...]</tt>”. Obviously <tt><a href='https://reference.wolfram.com/language/ref/Fold.html'>Fold</a></tt><tt>[</tt><tt><a href='https://reference.wolfram.com/language/ref/Apply.html'>Apply</a></tt><tt>[#1,#2,1]&,...] </tt>would work. But it feels as if there’s a “missing” named function. Well, in Version 13.1, we added it: <tt><a href='https://reference.wolfram.com/language/ref/MapApply.html'>MapApply</a></tt> is equivalent to <tt><a href="https://reference.wolfram.com/language/ref/MapApply.html">@@@</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg6.png" alt='f @@@ {{a, b}, {c, d}}' title='f @@@ {{a, b}, {c, d}}' width='222' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg6B_copy.txt">
					<span class='close' id='Byml6_out'>&amp;#10005</span></p>
<pre class='text' id='Byml6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another small convenience added in Version 13.1 is <tt><a href='https://reference.wolfram.com/language/ref/SameAs.html'>SameAs</a></tt>—essentially an operator form of <tt><a href='https://reference.wolfram.com/language/ref/SameQ.html'>SameQ</a></tt>. Why is such a construct needed? Well, there are always tradeoffs in language design. And back in Version 1.0 we decided to make <tt><a href='https://reference.wolfram.com/language/ref/SameQ.html'>SameQ</a></tt> work with any number of arguments (so you can test whether a whole sequence of things are the same). But this means that for consistency <tt><a href='https://reference.wolfram.com/language/ref/SameQ.html'>SameQ</a></tt><tt>[expr]</tt> must always return <tt><a href='https://reference.wolfram.com/language/ref/True.html'>True</a></tt>—so it’s not available as an operator of <tt><a href='https://reference.wolfram.com/language/ref/SameQ.html'>SameQ</a></tt>. And that’s why now in Version 13.1 we’re adding <tt><a href='https://reference.wolfram.com/language/ref/SameAs.html'>SameAs</a></tt>, that joins the family of operator-form functions like <tt><a href='https://reference.wolfram.com/language/ref/EqualTo.html'>EqualTo</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/GreaterThan.html'>GreaterThan</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg7.png" alt='SameAs' title='SameAs' width='332' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg7_copy.txt">
					<span class='close' id='yml7_out'>&amp;#10005</span></p>
<pre class='text' id='yml7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Procedural programming—often with “variables hanging out”—isn’t the preferred style for most Wolfram Language code. But sometimes it’s the most convenient way to do things. And in Version 13.1 we’ve add a small piece of streamlining by introducing the function <tt><a href='https://reference.wolfram.com/language/ref/Until.html'>Until</a></tt>. Ever since Version 1.0 we’ve had <tt><a href='https://reference.wolfram.com/language/ref/While.html'>While</a></tt><tt>[test,body]</tt> which repeatedly evaluates <tt>body</tt> while <tt>test</tt> is <tt><a href='https://reference.wolfram.com/language/ref/True.html'>True</a></tt>. But if <tt>test</tt> isn’t <tt><a href='https://reference.wolfram.com/language/ref/True.html'>True</a></tt> even at first, <tt><a href='https://reference.wolfram.com/language/ref/While.html'>While</a></tt> won’t ever evaluate <tt>body</tt>. <tt><a href='https://reference.wolfram.com/language/ref/Until.html'>Until</a></tt><tt>[test,body]</tt> does things the other way around: it evaluates <tt>body</tt> until <tt>test</tt> becomes <tt><a href='https://reference.wolfram.com/language/ref/True.html'>True</a></tt>. So if <tt>test</tt> isn’t <tt><a href='https://reference.wolfram.com/language/ref/True.html'>True</a></tt> at first, <tt><a href='https://reference.wolfram.com/language/ref/Until.html'>Until</a></tt> will still evaluate <tt>body</tt> once, in effect only looking at the test after it’s evaluated the body. </p>
<p>Last but not least in the list of new core language functions in Version 13.1 is <tt><a href='https://reference.wolfram.com/language/ref/ReplaceAt.html'>ReplaceAt</a></tt>. <tt><a href='https://reference.wolfram.com/language/ref/Replace.html'>Replace</a></tt> attempts to apply a replacement rule to a complete expression—or a whole level in an expression. <tt><a href='https://reference.wolfram.com/language/ref/ReplaceAll.html'>ReplaceAll</a></tt> (<tt><a href='https://reference.wolfram.com/language/ref/ReplaceAll.html'>/.</a></tt><tt>)</tt> does the same thing for all subparts of an expression. But quite often one wants more control over where replacements are done. And that’s what <tt><a href='https://reference.wolfram.com/language/ref/ReplaceAt.html'>ReplaceAt</a></tt> provides:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg8.png" alt='ReplaceAt' title='ReplaceAt' width='309' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg8_copy.txt">
					<span class='close' id='yml8_out'>&amp;#10005</span></p>
<pre class='text' id='yml8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>An important feature is that it also has an operator form:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmoreAimg9.png" alt='ReplaceAt' title='ReplaceAt' width='311' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822yetmorelamguageimg9_copy.txt">
					<span class='close' id='yml9_out'>&amp;#10005</span></p>
<pre class='text' id='yml9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Why is this important? The answer is that it gives a symbolic way to specify not just what replacement is made, but also where it is made. And for example this is what’s needed in specifying steps in proofs, say as generated by <tt><a href='https://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt>.</p>
<h2 id='emojis-and-more-multilingual-support'>Emojis! And More Multilingual Support</h2>
<p>What is a character? <a href='https://www.wolfram.com/mathematica/scrapbook/'>Back when Version 1.0 was released</a>, characters were represented as 8-bit objects: usually ASCII, but you could pick another “character encoding” (hence the <tt><a href='https://reference.wolfram.com/language/ref/CharacterEncoding.html'>ChararacterEncoding</a></tt> option) if you wanted. Then in the early 1990s came Unicode—which we were one of the very first companies to support. Now “characters” could be 16-bit constructs, with nearly 65,536 possible “glyphs” allocated across different languages and uses (including some mathematical symbols that we introduced). Back in the early 1990s Unicode was a newfangled thing, that operating systems didn’t yet have built-in support for. But we were betting on Unicode, and so we built our own infrastructure for handling it.</p>
<p>Thirty years later Unicode is indeed the universal standard for representing character-like things. But somewhere along the way, it turned out the world needed more than 16 bits’ worth of character-like things. At first it was about supporting variants and historical writing systems (think: cuneiform or Linear B). But then came emoji. And it became clear that—yes, arguably in a return to the Egyptian hieroglyph style of communication—there was an almost infinite number of possible pictorial emoji that could be made, each of them being encoded as their own Unicode code point. </p>
<p>It’s been a slow expansion. Original 16-bit Unicode is “plane 0”. Now there are up to 16 additional planes. Not quite 32-bit characters, but given the way computers work, the approach now is to allow characters to be represented by 32-bit objects. It’s far from trivial to do that uniformly and efficiently. And for us it’s been a long process to upgrade everything in our system—from string manipulation to notebook rendering—to handle full 32-bit characters. And that’s finally been achieved in Version 13.1.</p>
<p>But that’s far from all. In English we’re pretty much used to being able to treat text as a sequence of letters and other characters, with each character being separate. Things get a bit more complicated when you start to worry about diphthongs like æ. But if there are fairly few of these, it works to just introduce them as individual “Unicode characters” with their own code point. But there are plenty of languages—like Hindi or Khmer—where what appears in text like an individual character is really a composite of letter-like constructs, diacritical marks and other things. Such composite characters are normally represented as “grapheme clusters”: runs of Unicode code points. The rules for handling these things can be quite complicated. But after many years of development, major operating systems now successfully do it in most cases. And in Version 13.1 we’re able to make use of this to support such constructs in notebooks.</p>
<p>OK, so what does 32-bit Unicode look like? Using <tt><a href='https://reference.wolfram.com/language/ref/CharacterRange.html'>CharacterRange</a></tt> (or <tt><a href='https://reference.wolfram.com/language/ref/FromCharacterCode.html'>FromCharacterCode</a></tt>) we can dive in and just see what’s out there in “character space”. Here’s part of ordinary 16-bit Unicode space:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg1.png" alt='CharacterRange' title='CharacterRange' width='488' height='78' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg1_copy.txt">
					<span class='close' id='1emojis_out'>&amp;#10005</span></p>
<pre class='text' id='1emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s some of what happens in “plane-1” above character code 65535, in this case catering to “<a href='https://www.history-of-mathematics.org/artifacts/babylonian-reciprocals-tablet' target=_blank rel=noopener>legacy computations</a>”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg2.png" alt='CharacterRange' title='CharacterRange' width='601' height='119' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg2_copy.txt">
					<span class='close' id='2emojis_out'>&amp;#10005</span></p>
<pre class='text' id='2emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Plane-0 (below 65535) is pretty much all full. Above that, things are sparser. But around 128000, for example, there are lots of emoji:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg3.png" alt='CharacterRange' title='CharacterRange' width='533' height='147' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg3_copy.txt">
					<span class='close' id='3emojis_out'>&amp;#10005</span></p>
<pre class='text' id='3emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can use these in the Wolfram Language, and in notebooks, just like any other characters. So, for example, you can have wolf and ram variables:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg4.png" alt='Expand' title='Expand' width='634' height='66' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg4_copy.txt">
					<span class='close' id='4emojis_out'>&amp;#10005</span></p>
<pre class='text' id='4emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The <img src="https://s.w.org/images/core/emoji/2.2.1/72x72/1f40f.png" alt="🐏" class="wp-smiley" style="height: 1em; max-height: 1em;" /> sorts before the <img src="https://s.w.org/images/core/emoji/2.2.1/72x72/1f43a.png" alt="🐺" class="wp-smiley" style="height: 1em; max-height: 1em;" /> because it happens to have a numerically smaller character code:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg5.png" alt='ToCharacterCode' title='ToCharacterCode' width='228' height='55' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg5_copy.txt">
					<span class='close' id='5emojis_out'>&amp;#10005</span></p>
<pre class='text' id='5emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In a notebook, you can enter emoji (and other Unicode characters) using standard operating system tools—like <span class="kbd"><kbd>ctrl</kbd><kbd>cmd</kbd><kbd>space</kbd></span> on macOS:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg6.png" alt='Emojis in notebook' title='Emojis in notebook' width='447' height='138' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg6_copy.txt">
					<span class='close' id='6emojis_out'>&amp;#10005</span></p>
<pre class='text' id='6emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The world of emoji is rapidly evolving—and that can sometimes lead to problems. Here’s an emoji range that includes some very familiar emoji, but on at least one of my computer systems also includes emoji that display only as <img style="margin-bottom: -1px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822questionmark.png" width='17' height='17' />:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/07/sw072122emojisimg12.png" alt='CharacterRange' title='CharacterRange' width='579' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/07/sw072122emojisimg1_copy.txt">
					<span class='close' id='7emojis_out'>&amp;#10005</span></p>
<pre class='text' id='7emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The reason that happens is that my default fonts don’t contain glyphs for those emoji. But all is not lost. In Version 13.1 we’re including a font from Twitter that aims to contain glyphs for pretty much all emoji:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/07/sw071922emojisimg4.png" alt='Style' title='Style' width='541' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/07/sw072122emojisimg2_copy.txt">
					<span class='close' id='8emojis_out'>&amp;#10005</span></p>
<pre class='text' id='8emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Beyond dealing with individual Unicode characters, there’s also the matter of composites, and grapheme clusters. In Hindi, for example, two characters can combine into something that’s rendered (and treated) as one:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg9.png" alt='FromCharacterCode' title='FromCharacterCode' width='273' height='57' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg9_copy.txt">
					<span class='close' id='9emojis_out'>&amp;#10005</span></p>
<pre class='text' id='9emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The first character here can stand on its own:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg10.png" alt='FromCharacterCode' title='FromCharacterCode' width='222' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg10_copy.txt">
					<span class='close' id='10emojis_out'>&amp;#10005</span></p>
<pre class='text' id='10emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But the second one is basically a modifier that extends the first character (in this particular case adding a vowel sound):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg11.png" alt='FromCharacterCode' title='FromCharacterCode' width='222' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg11_copy.txt">
					<span class='close' id='11emojis_out'>&amp;#10005</span></p>
<pre class='text' id='11emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But once the composite हि has been formed it acts “textually” just like a single character, in the sense that, for example, the cursor moves through it in one step. When it appears “computationally” in a string, however, it can still be broken into its constituent Unicode elements:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg12.png" alt='Characters' title='Characters' width='154' height='62' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg12_copy.txt">
					<span class='close' id='12emojis_out'>&amp;#10005</span></p>
<pre class='text' id='12emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This kind of setup can be used not only for a language like Hindi but also for European languages that have diacritical marks like umlauts:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg13.png" alt='FromCharacterCode' title='FromCharacterCode' width='257' height='53' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg13_copy.txt">
					<span class='close' id='13emojis_out'>&amp;#10005</span></p>
<pre class='text' id='13emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Even though this looks like one character—and in Version 13.1 it’s treated like that for “textual” purposes, for example in notebooks—it is ultimately made up of two distinct “Unicode characters”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg14.png" alt='Characters' title='Characters' width='150' height='55' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg14_copy.txt">
					<span class='close' id='14emojis_out'>&amp;#10005</span></p>
<pre class='text' id='14emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In this particular case, though, this can be “normalized” to a single character:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg15.png" alt='CharacterNormalize' title='CharacterNormalize' width='262' height='55' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg15_copy.txt">
					<span class='close' id='15emojis_out'>&amp;#10005</span></p>
<pre class='text' id='15emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It looks the same, but now it really is just one character:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg16.png" alt='ToCharacterCode' title='ToCharacterCode' width='184' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg16_copy.txt">
					<span class='close' id='16emojis_out'>&amp;#10005</span></p>
<pre class='text' id='16emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a “combined character” that you can form</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg17.png" alt='FromCharacterCode' title='FromCharacterCode' width='257' height='53' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg17_copy.txt">
					<span class='close' id='17emojis_out'>&amp;#10005</span></p>
<pre class='text' id='17emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>but for which there’s no single character to which it normalizes: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg18.png" alt='ToCharacterCode' title='ToCharacterCode' width='380' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg18_copy.txt">
					<span class='close' id='18emojis_out'>&amp;#10005</span></p>
<pre class='text' id='18emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The concept of composite characters applies not only to ordinary text, but also to emojis. For example, take the emoji for a woman</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg19.png" alt='ToCharacterCode' title='ToCharacterCode' width='211' height='53' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg19_copy.txt">
					<span class='close' id='19emojis_out'>&amp;#10005</span></p>
<pre class='text' id='19emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>together with the emoji for a microscope</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg20.png" alt='ToCharacterCode' title='ToCharacterCode' width='211' height='53' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg20_copy.txt">
					<span class='close' id='20emojis_out'>&amp;#10005</span></p>
<pre class='text' id='20emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and combine them with the “zero-width-joiner” character (which, needless to say, doesn’t display as anything)</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg21.png" alt='ToCharacterCode' title='ToCharacterCode' width='190' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg21_copy.txt">
					<span class='close' id='21emojis_out'>&amp;#10005</span></p>
<pre class='text' id='21emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and you get (yes, somewhat bizarrely) a woman scientist!</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg22.png" alt='FromCharacterCode' title='FromCharacterCode' width='350' height='83' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg22_copy.txt">
					<span class='close' id='22emojis_out'>&amp;#10005</span></p>
<pre class='text' id='22emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Needless to say, you can do this computationally—though the “calculus” of what’s been defined so far in Unicode is fairly bizarre: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg23.png" alt='Grid' title='Grid' width='625' height='154' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg23_copy.txt">
					<span class='close' id='23emojis_out'>&amp;#10005</span></p>
<pre class='text' id='23emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I’m sort of hoping that the future of semantics doesn’t end up being defined by the way emojis combine <img src="https://s.w.org/images/core/emoji/2.2.1/72x72/1f60e.png" alt="😎" class="wp-smiley" style="height: 1em; max-height: 1em;" />.</p>
<p>As one last—arguably hacky—example of combining characters, Unicode defines various “two-letter” combinations to be flags. Type <img style="margin-bottom: -3px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822U.png" width='17' height='17' /> then <img style="margin-bottom: -2px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822S.png" width='17' height='17' />, and you get <img src="https://s.w.org/images/core/emoji/2.2.1/72x72/1f1fa-1f1f8.png" alt="🇺🇸" class="wp-smiley" style="height: 1em; max-height: 1em;" />!</p>
<p>Once again, this can be made computational:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisAimg24.png" alt='Grid' title='Grid' width='621' height='216' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822emojisimg24_copy.txt">
					<span class='close' id='24emojis_out'>&amp;#10005</span></p>
<pre class='text' id='24emojis_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(And, yes, it’s an interesting question what renders here, and what doesn’t. In some operating systems, no flags are rendered, and we have to pull in a special font to do it.)</p>
<h2 id='a-toolbar-for-every-notebook'>A Toolbar for Every Notebook</h2>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg1.png" alt='Toolbar' title='Toolbar' width='575' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg1_copy.txt">
					<span class='close' id='tb1_out'>&amp;#10005</span></p>
<pre class='text' id='tb1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It used to be that the only “special key sequence” one absolutely should know in order to use <a href='https://www.wolfram.com/notebooks/'>Wolfram Notebooks</a> was <span class="kbd"><kbd>shift</kbd><kbd>enter</kbd></span>. But gradually there have started to be more and more high-profile operations that are conveniently done by “pressing a button”. And rather than expecting people to remember all those special key sequences (or think to look in menus for them) we’ve decided to introduce a toolbar that will be displayed by default in every standard notebook. Version 13.1 has the first iteration of this toolbar. Subsequent versions will support an increasing range of capabilities.</p>
<p>It’s not been easy to design the default toolbar (and we hope you’ll like what we came up with!) The main problem is that Wolfram Notebooks are very general, and there are a great many things you can do with them—which it’s challenging to organize into a manageable toolbar. (Some special types of notebooks have had their own specialized toolbars for a while, which were easier to design by virtue of their specialization.) </p>
<p>So what’s in the toolbar? On the left are a couple of evaluation controls:</p>
<p><span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarAimg2.png" alt='Evaluation menu options' title='Evaluation menu options' width= '231' height='230' align='absmiddle'></span></p>
<p><span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg3.png" alt='Menu options' width= '25' height='25' align='absmiddle'></span> means “Evaluate”, and is simply equivalent to pressing <span class="kbd"><kbd>shift</kbd><kbd>ret</kbd></span> (as its tooltip says). <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg4.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span>means “Abort”, and will stop a computation. To the right of <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg5.png" alt='Menu options' width= '25' height='25' align='absmiddle'></span> is the menu shown above. The first part of the menu allows you to choose what will be evaluated. (Don’t forget the extremely useful “Evaluate In Place” that lets you evaluate whatever code you have selected—say to turn <tt><a href='https://reference.wolfram.com/language/ref/RGBColor.html'>RGBColor</a></tt><tt>[1,0,0]</tt> in your input into <img style="margin-bottom: -2px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822redbox.png" width='15' height='15' />.) The bottom part of the menu gives a couple of more detailed (but highly useful) evaluation controls.</p>
<p>Moving along the toolbar, we next have:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg6.png" alt='Menu option' title='Menu option' width='159' height='28' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg6_copy.txt">
					<span class='close' id='tb6_out'>&amp;#10005</span></p>
<pre class='text' id='tb6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If your cursor isn’t already in a cell, the pulldown allows you to select what type of cell you want to insert (it’s similar to the <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg7.png" alt='Menu options' width= '64' height='27' align='absmiddle'></span> “tongue” that appears within the notebook). (If your cursor is already inside a cell, then like in a typical word processor, the pulldown will tell you the style that’s being used, and let you reset it.)</p>
<p><span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg8.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> gives you a little panel to control to appearance of cells, changing their background colors, frames, dingbats, etc.</p>
<p>Next come cell-related buttons: <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg9.png" alt='Menu options' width= '90' height='25' align='absmiddle'></span>. The first is for cell structure and grouping:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg10.png" alt='Cell options' title='Cell options' width='216' height='159' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg10_copy.txt">
					<span class='close' id='tb10_out'>&amp;#10005</span></p>
<pre class='text' id='tb10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg11.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> copies input from above (<span class="kbd"><kbd>cmd</kbd><kbd>L</kbd></span>). It’s an operation that I, for one, end up doing all the time. I’ll have an input that I evaluate. Then I’ll want to make a modified version of the input to evaluate again, while keeping the original. So I’ll copy the input from above, edit the copy, and evaluate it again.</p>
<p><span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg12.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> copies output from above. I don’t find this quite as useful as copy input from above, but it can be helpful if you want to edit output for subsequent input, while leaving the “actual output” unchanged.</p>
<p>The <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg13.png" alt='Menu options' width= '237' height='26' align='absmiddle'></span> block is all about content in cells. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg14.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> (which you’ll often press repeatedly) is for extending a selection—in effect going ever upwards in an expression tree. (You can get the same effect by pressing <span class="kbd"><kbd>ctrl</kbd><kbd>.</kbd></span> or by multiclicking, but it’s a lot more convenient to repeatedly press a single button than to have to precisely time your multiclicks.)</p>
<p><span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg15.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> is the single-button way to get <span class="kbd"><kbd>ctrl</kbd><kbd>=</kbd></span> for entering natural language input:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg16.png" alt='Natural language input' title='Natural language input' width='87' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg16_copy.txt">
					<span class='close' id='tb16_out'>&amp;#10005</span></p>
<pre class='text' id='tb16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg17.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> iconizes your selection:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg18.png" alt='Iconize selection' title='Iconize selection' width='484' height='132' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg18_copy.txt">
					<span class='close' id='tb18_out'>&amp;#10005</span></p>
<pre class='text' id='tb18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Iconization is something we introduced in Version 11.3, and it’s something that’s proved incredibly useful, particularly for making code easy to read (say by iconizing details of options). (You can also iconize a selection from the right-click menu, or with <span class="kbd"><kbd>ctrl</kbd><kbd>cmd</kbd><kbd>'</kbd></span>.)</p>
<p><span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg20.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> is most relevant for code, and toggles commenting (with <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg21.png" alt='Menu options' width= '31' height='16' align='absmiddle'></span>) a selection. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg22.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> brings up a palette for math typesetting. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg23.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> lets you enter <img style="margin-bottom: -6px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822tex.png" width='33' height='' /> that will be converted to Wolfram Language math typesetting. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg24.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> brings up a drawing canvas. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg25.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> inserts a hyperlink (<span class="kbd"><kbd>cmd</kbd><kbd>shift</kbd><kbd>H</kbd></span>).</p>
<p>If you’re in a text cell, the toolbar will look different, now sporting a text formatting control: <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822texttoolbar.png" alt='Text menu options' title='Text menu options'width= '130' height='' align='absmiddle'></span></p>
<p>Most of this is fairly standard. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg27.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> lets you insert “code voice” material. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg28.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span>and <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg29.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> are still in the toolbar for inserting math into a text cell.</p>
<p>On the right-hand end of the toolbar are three more buttons: <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg30.png" alt='Menu options' width= '84' height='26' align='absmiddle'></span>. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg31.png" alt='Menu options' width= '26' height='26' align='absmiddle'></span> gives you a dialog to publish your notebook to the cloud. <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg32.png" alt='Menu options' width= '24' height='26' align='absmiddle'></span> opens documentation, either specifically looking up whatever you have selected in the notebook, or opening the front page (“root guide page”) of the main Wolfram Language documentation. Finally, <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw052822toolbarimg33.png" alt='Menu options' width= '24' height='26' align='absmiddle'></span> lets you search in your current notebook.</p>
<p>As I mentioned above, what’s in Version 13.1 is just the first iteration of our default toolbar. Expect more features in later versions. One thing that’s notable about the toolbar in general is that it’s 100% implemented in Wolfram Language. And in addition to adding a great deal of flexibility, this also means that the toolbar immediately works on all platforms. (By the way, if you don’t want the toolbar in a particular notebook—or for all your notebooks—just right-click the background of the toolbar to pick that option.)</p>
<h2 id='polishing-the-user-interface'>Polishing the User Interface</h2>
<p>We first introduced Wolfram Notebooks with Version 1.0 of Mathematica, in 1988. And ever since then, we’ve been progressively polishing the notebook interface, doing more with every new version. </p>
<p>The <span class="kbd"><kbd>ctrl</kbd><kbd>=</kbd></span> mechanism for entering natural language (“<a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a>-style”) input debuted in <a href='https://writings.stephenwolfram.com/2014/07/launching-mathematica-10-with-700-new-functions-and-a-crazy-amount-of-rd/'>Version 10.0</a>—and in Version 13.1 it’s now accessible from the <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg1.png" alt='picture' width= '26' height='26' align='absmiddle'></span> button in the new default notebook toolbar. But what actually is <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg2A.png" alt='picture' width= '35' height='21' align='absmiddle'></span> when it’s in a notebook? In the past, it’s been a fairly complex symbolic structure mainly suitable for evaluation. But in Version 13.1 we’ve made it much simpler. And while that doesn’t have any direct effect if you’re just using <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg2A.png" alt='picture' width= '35' height='' align='absmiddle'></span> purely in a notebook, it does have an effect if you copy <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg2A.png" alt='picture' width= '35' height='' align='absmiddle'></span> into another application, like pure-text email. In the past this produced something that would work if pasted back into a notebook, but definitely wasn’t particularly readable. In Version 13.1, it’s now simply the Wolfram Language interpretation of your natural language input:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg5.png" alt='Natural language input' title='Natural language input' width='455' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg5_copy.txt">
					<span class='close' id='ui5_out'>&amp;#10005</span></p>
<pre class='text' id='ui5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What happens if the computation you do in a notebook generates a huge output? Ever since <a href='https://reference.wolfram.com/legacy/v6/guide/Mathematica.html'>Version 6.0</a> we’ve had some form of “output limiter”, but in Version 13.1 it’s become much sleeker and more useful. Here’s a typical example: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 6px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg6A.png" alt='Range' title='Range' width='120' height='' /><br />
<img style="margin-top: 10px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg6B.png" alt='Range' title='Range' width='595' height='' />
</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg6_copy.txt">
					<span class='close' id='ui6_out'>&amp;#10005</span></p>
<pre class='text' id='ui6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Talking of big outputs (as well as other things that keep the notebook interface busy), another change in Version 13.1 is the new asynchronous progress overlay on macOS. This doesn’t affect other platforms where this problem had already been solved, but on the Mac changes in the OS had led to a situation where the notebook front end could mysteriously pop to the front on your desktop—a situation that has now been resolved.</p>
<p>One of the slightly unusual user interface features that’s existed ever since Version 1.0 is the <span class="computer-voice">Why the Beep?</span> menu item—that lets you get an explanation of any “error beep” that occurs while you’re running the system. The function <tt><a href='https://reference.wolfram.com/language/ref/Beep.html'>Beep</a></tt> lets you generate your own beep. And now in Version 13.1 you can use <tt><a href='https://reference.wolfram.com/language/ref/Beep.html'>Beep</a></tt><tt>["string"]</tt> to set up an explanation of “your beep”, that users can retrieve through the <span class="computer-voice">Why the Beep?</span> menu item.</p>
<p>The basic notebook user interface works as much as possible with standard interface elements on all platforms, so that when these elements are updated, we always automatically get the “most modern” look. But there are parts of the notebook interface that are quite special to Wolfram Notebooks and are always custom designed. One that hadn’t been updated for a while is the <span class="computer-voice">Preferences</span> dialog—which now in Version 13.1 gets a full makeover:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg8.png" alt='Preferences' title='Preferences' width='575' height='426' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg8_copy.txt">
					<span class='close' id='ui8_out'>&amp;#10005</span></p>
<pre class='text' id='ui8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>When you tell the Wolfram Language to do something, it normally just goes off and does it, without asking you anything (well, unless it explicitly needs input, needs a password, etc.) But what if there’s something that it might be a good idea to do, though it’s not strictly necessary? What should the user interface for this be? It’s tricky, but I think we now have a good solution that we’ve started deploying in Version 13.1.</p>
<p>In particular, in Version 13.1, there’s an example related to the <a href='https://resources.wolframcloud.com/FunctionRepository'>Wolfram Function Repository</a>. Say you use a function for which an update is available. What now happens is that a blue box is generated that tells you about the update—though it still keeps going with the computation, ignoring the update:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg9B.png" alt='Update option' title='Update option' width='540' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822polishingimg9_copy.txt">
					<span class='close' id='ui9_out'>&amp;#10005</span></p>
<pre class='text' id='ui9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If you click the <span class="computer-voice">Update Now</span> button in the blue box you can do the update. And then the point is that you can run the computation again (for example, just by pressing <span class="kbd"><kbd>shift</kbd><kbd>enter</kbd></span>), and now it’ll use the update. In a sense the core idea is to have an interface where there are potentially multiple passes, and where a computation always runs to completion, but you have an easy way to change how it’s set up, and then run it again.</p>
<h2 id='large-scale-code-editing'>Large-Scale Code Editing</h2>
<p>One of the great things about the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> is that it works well for programs of any scale—from less than a line long to millions of lines long. And for the past several years we’ve been working on expanding our support for very large Wolfram Language programs. Using LSP (Language Server Protocol) we’ve provided the capability for most standard external IDEs to automatically do syntax coloring and other customizations for the Wolfram Language.</p>
<p>In Version 13.1 we’re also adding a couple of features that make large-scale code editing in notebooks more convenient. The first—and widely requested—is block indent and outdent of code. Select the lines you want to indent or outdent and simply press <span class="kbd"><kbd>tab</kbd></span> or <span class="kbd"><kbd>shift</kbd><kbd>tab</kbd></span> to indent or outdent them:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822codeeditingimg1.png" alt='Tab indent' title='Tab indent' width='380' height='298' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822codeeditingimg1_copy.txt">
					<span class='close' id='ce1_out'>&amp;#10005</span></p>
<pre class='text' id='ce1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Ever since <a href='https://reference.wolfram.com/legacy/v6/guide/Mathematica.html'>Version 6.0</a> we’ve had the ability to work with .wl package files (as well as .wls script files) using our notebook editing system. A new default feature in Version 13.1 is numbering of all code lines that appear in the underlying file (and, yes, we correctly align line numbers accounting for the presence of non-code cells):</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822codeeditingimg2.png" alt='Code line numbering' title='Code line numbering' width='522' height='331' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822codeeditingimg2_copy.txt">
					<span class='close' id='ce2_out'>&amp;#10005</span></p>
<pre class='text' id='ce2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So now, for example, if you get a syntax error from <tt><a href='https://reference.wolfram.com/language/ref/Get.html'>Get</a></tt> or a related function, you’ll immediately be able to use the line number it reports to find where it occurs in the underlying file. </p>
<h2 id='scribbling-on-notebooks'>Scribbling on Notebooks</h2>
<p>In <a href='https://writings.stephenwolfram.com/2020/12/launching-version-12-2-of-wolfram-language-mathematica-228-new-functions-and-much-more/'>Version 12.2</a> we introduced <tt><a href='https://reference.wolfram.com/language/ref/Canvas.html'>Canvas</a></tt> as a convenient interface for interactive drawing in notebooks. In Version 13.1 we’re introducing the notion of toggling a canvas on top of any cell. </p>
<p>Given a cell, just select it and press <span class='Picture'><img src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822scribblingimg1.png" alt='picture' width= '25' height='25' align='absmiddle'></span>, and you’ll get a canvas:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822scribblingimg2.png" alt='Canvas function' title='Canvas function' width='381' height='235' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822scribblingimg2_copy.txt">
					<span class='close' id='son2_out'>&amp;#10005</span></p>
<pre class='text' id='son2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now you can use the drawing tools in the canvas to create an annotation overlay:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822scribblingimg3.png" alt='Drawing' title='Drawing' width='381' height='235' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822scribblingimg3_copy.txt">
					<span class='close' id='son3_out'>&amp;#10005</span></p>
<pre class='text' id='son3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If you evaluate the cell, the overlay will stay. (You can get rid of the “canvas wrapper” by applying <tt><a href='https://reference.wolfram.com/language/ref/Normal.html'>Normal</a></tt>.) </p>
<h2 id='trees-continue-to-grow'>Trees Continue to Grow &#127793;&#127795;</h2>
<p>In <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/'>Version 12.3</a> we introduced <tt><a href='https://reference.wolfram.com/language/ref/Tree.html'>Tree</a></tt> as a new fundamental construct in the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>. In Version 13.0 we added a variety of styling options for trees, and in Version 13.1 we’re adding more styling as well as a variety of new fundamental features. </p>
<p>An important update to the fundamental <tt><a href='https://reference.wolfram.com/language/ref/Tree.html'>Tree</a></tt> construct in Version 13.1 is the ability to name branches at each node, by giving them in an association:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg1.png" alt='Tree' title='Tree' width='283' height='144' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg1_copy.txt">
					<span class='close' id='trees1_out'>&amp;#10005</span></p>
<pre class='text' id='trees1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>All tree functions now include support for associations:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg2.png" alt='NestTree' title='NestTree' width='418' height='210' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg2A_copy.txt">
					<span class='close' id='trees2A_out'>&amp;#10005</span></p>
<pre class='text' id='trees2A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In many uses of trees the labels of nodes are crucial. But particularly in more abstract applications one often wants to deal with unlabeled trees. In Version 13.1 the function <tt><a href='https://reference.wolfram.com/language/ref/UnlabeledTree.html'>UnlabeledTree</a></tt> (roughly analogously to <tt><a href='https://reference.wolfram.com/language/ref/UndirectedGraph.html'>UndirectedGraph</a></tt>) takes a labeled tree, and basically removes all visible labels. Here is a standard labeled tree</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg3.png" alt='RandomTree' title='RandomTree' width='418' height='248' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg3_copy.txt">
					<span class='close' id='trees3_out'>&amp;#10005</span></p>
<pre class='text' id='trees3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and here’s the unlabeled analog:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg4.png" alt='UnlabeledTree' title='UnlabeledTree' width='418' height='240' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg4_copy.txt">
					<span class='close' id='trees4_out'>&amp;#10005</span></p>
<pre class='text' id='trees4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Version 12.3 we introduced <tt><a href='https://reference.wolfram.com/language/ref/ExpressionTree.html'>ExpressionTree</a></tt> for deriving trees from general symbolic expressions. Our plan is to have a wide range of “special trees” appropriate for representing different specific kinds of symbolic expressions. We’re beginning this process in Version 13.1 by, for example, having the concept of “<tt><a href='https://reference.wolfram.com/language/ref/Dataset.html'>Dataset</a></tt> trees”. Here’s <tt><a href='https://reference.wolfram.com/language/ref/ExpressionTree.html'>ExpressionTree</a></tt> converting a dataset to a tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg5.png" alt='ExpressionTree' title='ExpressionTree' width='418' height='256' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg5_copy.txt">
					<span class='close' id='trees5_out'>&amp;#10005</span></p>
<pre class='text' id='trees5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now here’s <tt><a href='https://reference.wolfram.com/language/ref/TreeExpression.html'>TreeExpression</a></tt> “inverting” that, and producing a dataset:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg6.png" alt='TreeExpression' title='TreeExpression' width='244' height='194' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg6_copy.txt">
					<span class='close' id='trees6_out'>&amp;#10005</span></p>
<pre class='text' id='trees6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(Remember the convention that *<tt><a href='https://reference.wolfram.com/language/ref/Tree.html'>Tree</a></tt> functions return a tree; while <tt><a href='https://reference.wolfram.com/language/ref/Tree.html'>Tree</a></tt>* functions take a tree and return something else.)</p>
<p>Here’s a “graph rendering” of a more complicated dataset tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg7.png" alt='TreeGraph' title='TreeGraph' width='563' height='254' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg7_copy.txt">
					<span class='close' id='trees7_out'>&amp;#10005</span></p>
<pre class='text' id='trees7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The new function <tt><a href='https://reference.wolfram.com/language/ref/TreeLeafCount.html'>TreeLeafCount</a></tt> lets you count the total number of leaf nodes on a tree (basically the analog of <tt><a href='https://reference.wolfram.com/language/ref/LeafCount.html'>LeafCount</a></tt> for a general symbolic expression):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg8.png" alt='TreeLeafCount' title='TreeLeafCount' width='592' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg8_copy.txt">
					<span class='close' id='trees8_out'>&amp;#10005</span></p>
<pre class='text' id='trees8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another new function in Version 13.1 that’s often useful in getting a sense of the structure of a tree without inspecting every node is <tt><a href='https://reference.wolfram.com/language/ref/RootTree.html'>RootTree</a></tt>. Here’s a random tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg9.png" alt='tree = RandomTree' title='tree = RandomTree' width='418' height='248' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg9_copy.txt">
					<span class='close' id='trees9_out'>&amp;#10005</span></p>
<pre class='text' id='trees9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/RootTree.html'>RootTree</a></tt> can get a subtree that’s “close to the root”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg10.png" alt='RootTree' title='RootTree' width='418' height='235' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg10_copy.txt">
					<span class='close' id='trees10_out'>&amp;#10005</span></p>
<pre class='text' id='trees10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It can also get a subtree that’s “far from the leaves”, in this case going down to elements that are at level –2 in the tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg11.png" alt='RootTree' title='RootTree' width='418' height='411' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg11_copy.txt">
					<span class='close' id='trees11_out'>&amp;#10005</span></p>
<pre class='text' id='trees11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In some ways the styling of trees is like the styling of graphs—though there are some significant differences as a result of the hierarchical nature of trees. By default, options inserted into a particular tree element affect only that tree element:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg12.png" alt='Tree' title='Tree' width='418' height='248' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg12_copy.txt">
					<span class='close' id='trees12_out'>&amp;#10005</span></p>
<pre class='text' id='trees12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But you can give rules that specify how elements in the subtree below that element are affected:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg13.png" alt='Tree' title='Tree' width='475' height='248' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg13_copy.txt">
					<span class='close' id='trees13_out'>&amp;#10005</span></p>
<pre class='text' id='trees13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Version 13.1 there is now detailed control available for styling both nodes and edges in the tree. Here’s an example that gives styling for parent edges of nodes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg14.png" alt='Tree' title='Tree' width='467' height='248' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg14_copy.txt">
					<span class='close' id='trees14_out'>&amp;#10005</span></p>
<pre class='text' id='1trees4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Options like <tt><a href='https://reference.wolfram.com/language/ref/TreeElementStyle.html'>TreeElementStyle</a></tt> determine styling from the positions of elements. <tt><a href='https://reference.wolfram.com/language/ref/TreeElementStyleFunction.html'>TreeElementStyleFunction</a></tt>, on the other hand, determines styling by applying a function to the data at each node:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg15.png" alt='Tree' title='Tree' width='474' height='248' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg15_copy.txt">
					<span class='close' id='trees15_out'>&amp;#10005</span></p>
<pre class='text' id='trees15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This uses both data and position information for each node:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg16.png" alt='Tree' title='Tree' width='543' height='248' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg16_copy.txt">
					<span class='close' id='trees16_out'>&amp;#10005</span></p>
<pre class='text' id='trees16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In analogy with <tt><a href='https://reference.wolfram.com/language/ref/VertexShapeFunction.html'>VertexShapeFunction</a></tt> for graphs, <tt><a href='https://reference.wolfram.com/language/ref/TreeElementShapeFunction.html'>TreeElementShapeFunction</a></tt> provides a general mechanism to specify how nodes of a tree should be rendered. This named setting for <tt><a href='https://reference.wolfram.com/language/ref/TreeElementShapeFunction.html'>TreeElementShapeFunction</a></tt> makes every node be displayed as a circle:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg17.png" alt='Tree' title='Tree' width='426' height='257' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822treesAimg17_copy.txt">
					<span class='close' id='trees17_out'>&amp;#10005</span></p>
<pre class='text' id='1trees7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='yet-more-date-handling-details'>Yet More Date-Handling Details</h2>
<p>We first introduced dates into <a href='https://www.wolfram.com/language/'>Wolfram Language</a> in <a href='https://reference.wolfram.com/legacy/v2/'>Version 2.0</a>, and we introduced modern date objects in <a href='https://writings.stephenwolfram.com/2014/07/launching-mathematica-10-with-700-new-functions-and-a-crazy-amount-of-rd/'>Version 10.0</a>. But to really make dates fully computable, there are many detailed cases to consider. And in Version 13.1 we’re dealing with yet another of them. Let’s say you’ve got the date January 31, 2022. What date is one month later—given that there’s no February 31, 2022?</p>
<p>If we define a month “physically”, it corresponds to a certain fractional number of days:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg1.png" alt='UnitConvert' title='UnitConvert' width='342' height='76' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg1_copy.txt">
					<span class='close' id='dh1_out'>&amp;#10005</span></p>
<pre class='text' id='dh1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, we can use this to decide what is a month after January 31, 2022:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg2.png" alt='DatePlus' title='DatePlus' width='459' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg2_copy.txt">
					<span class='close' id='dh2_out'>&amp;#10005</span></p>
<pre class='text' id='dh2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Slightly confusing here is that we’re dealing with date objects of “day” granularity. We can see more if we go down to the level of minutes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg3.png" alt='DatePlus' title='DatePlus' width='551' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg3_copy.txt">
					<span class='close' id='dh3_out'>&amp;#10005</span></p>
<pre class='text' id='dh3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If one’s doing something like astronomy, this kind of “physical” date computation is probably what one wants. But if one’s doing everyday “human” activities, it’s almost certainly not what one wants; instead, one wants to land on some calendar date or another.</p>
<p>Here’s the default in the Wolfram Language: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg4.png" alt='DatePlus' title='DatePlus' width='289' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg4_copy.txt">
					<span class='close' id='dh4_out'>&amp;#10005</span></p>
<pre class='text' id='dh4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But now in Version 13.1 we can parametrize more precisely what we want. This default is what we call <tt>"RollBackward"</tt>: wherever we “land” by doing the raw date computation, we “roll backward” to the first valid date. An alternative is <tt>"RollForward"</tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg5.png" alt='DatePlus' title='DatePlus' width='465' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg5_copy.txt">
					<span class='close' id='dh5_out'>&amp;#10005</span></p>
<pre class='text' id='dh5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Whatever method one uses, there are going to be weird cases. Let’s say we start with several consecutive dates:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg6.png" alt='dates = DateRange' title='dates = DateRange' width='601' height='68' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg6_copy.txt">
					<span class='close' id='dh6_out'>&amp;#10005</span></p>
<pre class='text' id='dh6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With <tt>"RollBackward"</tt> we have the weirdness of repeating February 28:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg7.png" alt='DatePlus' title='DatePlus' width='612' height='68' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg7A_copy.txt">
					<span class='close' id='dh7A_out'>&amp;#10005</span></p>
<pre class='text' id='hd7A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With <tt>"RollForward"</tt> we have the weirdness of repeating March 1:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg8.png" alt='DatePlus' title='DatePlus' width='591' height='59' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg8A_copy.txt">
					<span class='close' id='dh8A_out'>&amp;#10005</span></p>
<pre class='text' id='dh8A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Is there any alternative? Yes, we can use <tt>"RollOver"</tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg9.png" alt='DatePlus' title='DatePlus' width='596' height='59' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822datehandlingimg9A_copy.txt">
					<span class='close' id='dh9A_out'>&amp;#10005</span></p>
<pre class='text' id='dh9A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This keeps advancing through days, but then has the weirdness that it goes backwards. And, yes, there’s no “right answer” here. But in Version 13.1 you can now specify exactly what you want the behavior to be.</p>
<p>The same issue arises not just for months, but also, for example, for years. And it affects not just <tt><a href='https://reference.wolfram.com/language/ref/DatePlus.html'>DatePlus</a></tt>, but also <tt><a href='https://reference.wolfram.com/language/ref/DateDifference.html'>DateDifference</a></tt>.</p>
<p>It’s worth mentioning that in Version 13.1, in addition to dealing with the detail we’ve just discussed, the whole framework for doing “date arithmetic” in Wolfram Language has been made vastly more efficient, sometimes by factors of hundreds.</p>
<h2 id='capturing-video-more'>Capturing Video &#038; More</h2>
<p>We’ve had <tt><a href='https://reference.wolfram.com/language/ref/ImageCapture.html'>ImageCapture</a></tt> since <a href='https://writings.stephenwolfram.com/2010/11/mathematica-8/'>Version 8.0</a> (in 2010) and <tt><a href='https://reference.wolfram.com/language/ref/AudioCapture.html'>AudioCapture</a></tt> since <a href='https://writings.stephenwolfram.com/2017/03/the-rd-pipeline-continues-launching-version-11-1/'>Version 11.1</a> (in 2017). Now in Version 13.1 we have <tt><a href='https://reference.wolfram.com/language/ref/VideoCapture.html'>VideoCapture</a></tt>. By default <tt><a href="https://reference.wolfram.com/language/ref/VideoCapture.html">VideoCapture</a>[]</tt> gives you a GUI that lets you record from your camera:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img1.png" alt='VideoCapture' title='VideoCapture' width='181' height='88' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img1_copy.txt">
					<span class='close' id='z1_out'>&amp;#10005</span></p>
<pre class='text' id='1z_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Clicking the down arrow opens up a preview window that shows your current video:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img2.png" alt='VideoCapture' title='VideoCapture' width='329' height='269' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img2_copy.txt">
					<span class='close' id='z2_out'>&amp;#10005</span></p>
<pre class='text' id='z2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>When you’ve finished recording, <tt><a href='https://reference.wolfram.com/language/ref/VideoCapture.html'>VideoCapture</a></tt> returns the <tt><a href='https://reference.wolfram.com/language/ref/Video.html'>Video</a></tt> object you created:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img3.png" alt='' title='' width='151' height='13' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img4_copy.txt">
					<span class='close' id='z4_out'>&amp;#10005</span></p>
<pre class='text' id='z4_out_text'>VideoCapture[]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><video width="320" height="180" controls><source src="https://content.wolfram.com/uploads/sites/43/2022/06/video4_out_SWVideo-01.mp4" type="video/mp4"></video></p>
<p>Now you can process or analyze this <tt><a href='https://reference.wolfram.com/language/ref/Video.html'>Video</a></tt> object just like you would any other:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img5.png" alt='' title='' width='330' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/10/sw063022img5X_copy.txt">
					<span class='close' id='z5_out'>&amp;#10005</span></p>
<pre class='text' id='z5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href="https://reference.wolfram.com/language/ref/VideoCapture.html">VideoCapture</a>[]</tt> is a blocking operation that waits until you’ve finished recording, then returns a result. But <tt><a href='https://reference.wolfram.com/language/ref/VideoCapture.html'>VideoCapture</a></tt> can also be used “indirectly” as a dynamic control. Thus, for example</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img6.png" alt='' title='' width='259' height='88' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img6_copy.txt">
					<span class='close' id='z6_out'>&amp;#10005</span></p>
<pre class='text' id='z6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>lets you asynchronously start and stop recording, even as you do other things in your <a href='https://www.wolfram.com/language/'>Wolfram Language</a> session. But every time you stop recording, the value of <tt>video</tt> is updated. </p>
<p><tt><a href='https://reference.wolfram.com/language/ref/VideoCapture.html'>VideoCapture</a></tt> records video from your camera (and you can use the <tt>ImageDevice</tt> option to specify which one if you have several). <tt><a href='https://reference.wolfram.com/language/ref/VideoScreenCapture.html'>VideoScreenCapture</a></tt>, on the other hand, records from your computer screen—in effect providing a video analog of <tt><a href='https://reference.wolfram.com/language/ref/CurrentScreenImage.html'>CurrentScreenImage</a></tt>.</p>
<p><tt><a href="https://reference.wolfram.com/language/ref/VideoScreenCapture.html">VideoScreenCapture</a>[]</tt>, like <tt><a href='https://reference.wolfram.com/language/ref/VideoCapture.html'>VideoCapture</a>[]</tt>, is a blocking operation as far as the Wolfram Language is concerned. But if you want to watch something happening in another application (say, a web browser), it’ll do just fine. And in addition, you can give a screen rectangle to capture a particular region on your screen:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img7.png" alt='' title='' width='326' height='21' /></p>
<p>					<video loading='lazy' height="auto" width="360" style="margin-left:0px" muted="" alt="" title="" src="https://content.wolfram.com/uploads/sites/43/2022/06/video5_out_VideoCapture-Demonstrations-480p.mp4" autoplay="" loop="" playsinline><br /></video>
				</div>
<div class='IFL'
					<span class='close' id='07-1_out'>&amp;#10005</span></p>
<pre class='text' id='07-1_out_text'>VideoScreenCapture[{{0, 50}, {640, 498}}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then for example you can analyze the time series of RGB color levels in the video that’s produced:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img9.png" alt='' title='' width='420' height='256' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img9A_copy.txt">
					<span class='close' id='z9_out'>&amp;#10005</span></p>
<pre class='text' id='z9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What if you want to screen record from a notebook? Well, then you can use the asynchronous dynamic recording mechanism that exists in <tt><a href='https://reference.wolfram.com/language/ref/VideoScreenCapture.html'>VideoScreenCapture</a></tt> just as it does in <tt><a href='https://reference.wolfram.com/language/ref/VideoCapture.html'>VideoCapture</a></tt>. </p>
<p>By the way, both <tt><a href='https://reference.wolfram.com/language/ref/VideoCapture.html'>VideoCapture</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/VideoScreenCapture.html'>VideoScreenCapture</a></tt> by default capture audio. You can switch off audio recording either from the GUI, or with the option <tt><a href="https://reference.wolfram.com/language/ref/AudioInputDevice.html">AudioInputDevice</a>→<a href="https://reference.wolfram.com/language/ref/None.html">None</a></tt>.</p>
<p>If you want to get fancy, you can screen record a notebook in which you are capturing video from your camera (which in turn shows you capturing a video, etc.):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img10.png" alt='' title='' width='340' height='21' /></p>
<p>					<video loading='lazy' height="auto" width="360" style="margin-left:0px" muted="" alt="" title="" src="https://content.wolfram.com/uploads/sites/43/2022/06/video3_out_spikeyvideo.mp4" autoplay="" loop="" playsinline><br /></video>
				</div>
<div class='IFL'
					<span class='close' id='bl07-1_out'>&amp;#10005</span></p>
<pre class='text' id='bl07-1_out_text'>VideoScreenCapture[EvaluationNotebook[]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In addition to capturing video from real-time goings-on, you can also generate video directly from functions like <tt><a href='https://reference.wolfram.com/language/ref/AnimationVideo.html'>AnimationVideo</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/SlideShowVideo.html'>SlideShowVideo</a></tt>—as well as by “touring” an image using <tt><a href='https://reference.wolfram.com/language/ref/TourVideo.html'>TourVideo</a></tt>. In Version 13.1 there are some significant enhancements to <tt><a href='https://reference.wolfram.com/language/ref/TourVideo.html'>TourVideo</a></tt>.</p>
<p>Take an animal scene and extract bounding boxes for elephants and zebras:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img12B.png" alt='' title='' width='607' height='204' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img12D_copy.txt">
					<span class='close' id='z12_out'>&amp;#10005</span></p>
<pre class='text' id='z12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now you can make a tour video that visits each animal:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img13A.png" alt='' title='' width='304' height='251' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img13A_copy.txt">
					<span class='close' id='z13_out'>&amp;#10005</span></p>
<pre class='text' id='z13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<video loading='lazy' height="auto" width="215" style="margin-left:0px" muted="" alt="" title="" src="https://content.wolfram.com/uploads/sites/43/2022/06/video9_out_elephant.mov" autoplay="" loop="" playsinline><br /></video>
				</div>
<div class='IFL'
					<span class='close' id='z13_out_text'></span></p>
<pre class='text' id='z13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Define a path function of a variable <em>t</em>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img14.png" alt='' title='' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img14A_copy.txt">
					<span class='close' id='z14_out'>&amp;#10005</span></p>
<pre class='text' id='z14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img15.png" alt='' title='' width='389' height='162' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img14A_copy.txt">
					<span class='close' id='z15_out'>&amp;#10005</span></p>
<pre class='text' id='z15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can use the path function to make a “spiralling” tour video:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/39/2022/07/sw063022img16D.png" alt='' title='' width='366' height='59' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw063022img16A_copy.txt">
					<span class='close' id='16A_out_text'></span></p>
<pre class='text' id='16A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<video loading='lazy' height="auto" width="215" style="margin-left:0px" muted="" alt="" title="" src="https://content.wolfram.com/uploads/sites/43/2022/06/video8_out_wolves.mov" autoplay="" loop="" playsinline><br /></video>
				</div>
<div class='IFL'
					<span class='close' id='16A_out_text'></span></p>
<pre class='text' id='16A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='college-calculus'>College Calculus</h2>
<p>Transforming college calculus was one of the early achievements of Mathematica. But even now we’re continuing to add functionality to make college calculus ever easier and smoother to do—and more immediately connectable to applications. We’ve always had the function <tt><a href='https://reference.wolfram.com/language/ref/D.html'>D</a></tt> for taking derivatives at a point. Now in Version 13.1 we’re adding <tt><a href='https://reference.wolfram.com/language/ref/ImplicitD.html'>ImplicitD</a></tt> for finding implicit derivatives. </p>
<p>So, for example, it can find the derivative of <em>x<sup>y</sup></em> with respect to <em>x</em>, with <em>y</em> determined implicit by the constraint <em>x</em><sup>2</sup> + <em>y</em><sup>2</sup> = 1:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg4.png" alt='ImplicitD' title='ImplicitD' width='273' height='77' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg4_copy.txt">
					<span class='close' id='cc4_out'>&amp;#10005</span></p>
<pre class='text' id='cc4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Leave out the first argument and you’ll get the standard college calculus “find the slope of the tangent line to a curve”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg5.png" alt='ImplicitD' title='ImplicitD' width='280' height='77' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg5_copy.txt">
					<span class='close' id='cc5_out'>&amp;#10005</span></p>
<pre class='text' id='cc5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So far all of this is a fairly straightforward repackaging of our longstanding calculus functionality. And indeed these kinds of implicit derivatives have been available for a long time in Wolfram|Alpha. But for Mathematica and the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> we want everything to be as general as possible—and to support the kinds of things that show up in differential geometry, and in things like asymptotics and validation of implicit solutions to differential equations. So in addition to ordinary college-level calculus, <tt><a href='https://reference.wolfram.com/language/ref/ImplicitD.html'>ImplicitD</a></tt> can do things like finding a second implicit derivative on a curve defined by the intersection of two surfaces:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg6.png" alt='ImplicitD' title='ImplicitD' width='629' height='133' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg6_copy.txt">
					<span class='close' id='cc6_out'>&amp;#10005</span></p>
<pre class='text' id='cc6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Mathematica and the Wolfram Language <tt><a href='https://reference.wolfram.com/language/ref/Integrate.html'>Integrate</a></tt> is a function that just gets you answers. (In Wolfram|Alpha you can ask for a step-by-step solution too.) But particularly for educational purposes—and sometimes also when pushing boundaries of what’s possible—it can be useful to do integrals in steps. And so in Version 13.1 we’ve added the function <tt><a href='https://reference.wolfram.com/language/ref/IntegrateChangeVariables.html'>IntegrateChangeVariables</a></tt> for changing variables in integrals. </p>
<p>An immediate issue is that when you specify an integral with <tt><a href='https://reference.wolfram.com/language/ref/Integrate.html'>Integrate</a></tt><tt>[...]</tt>, <tt><a href='https://reference.wolfram.com/language/ref/Integrate.html'>Integrate</a></tt> will just go ahead and do the integral:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg7.png" alt='Integrate' title='Integrate' width='326' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg7_copy.txt">
					<span class='close' id='cc7_out'>&amp;#10005</span></p>
<pre class='text' id='cc7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But for <tt><a href='https://reference.wolfram.com/language/ref/IntegrateChangeVariables.html'>IntegrateChangeVariables</a></tt> you need an “undone” integral. And you can get this using <tt><a href='https://reference.wolfram.com/language/ref/Inactive.html'>Inactive</a></tt>, as in:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg8.png" alt='Inactive' title='Inactive' width='391' height='75' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg8_copy.txt">
					<span class='close' id='cc8_out'>&amp;#10005</span></p>
<pre class='text' id='cc8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And given this inactive form, we can use <tt><a href='https://reference.wolfram.com/language/ref/IntegrateChangeVariables.html'>IntegrateChangeVariables</a></tt> to do a “trig substitution”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg9.png" alt='IntegrateChangeVariables' title='IntegrateChangeVariables' width='438' height='103' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg9_copy.txt">
					<span class='close' id='cc9_out'>&amp;#10005</span></p>
<pre class='text' id='cc9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The result is again an inactive form, now stating the integral differently. <tt><a href='https://reference.wolfram.com/language/ref/Activate.html'>Activate</a></tt> goes ahead and actually does the integral:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg10.png" alt='Activate' title='Activate' width='205' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg10_copy.txt">
					<span class='close' id='cc10_out'>&amp;#10005</span></p>
<pre class='text' id='cc10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/IntegrateChangeVariables.html'>IntegrateChangeVariables</a></tt> can deal with multiple integrals as well—and with named coordinate systems. Here it’s transforming a double integral to polar coordinates:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg11.png" alt='IntegrateChangeVariables' title='IntegrateChangeVariables' width='608' height='105' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg11_copy.txt">
					<span class='close' id='cc11_out'>&amp;#10005</span></p>
<pre class='text' id='cc11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Although the basic “structural” transformation of variables in integrals is quite straightforward, the whole story of <tt><a href='https://reference.wolfram.com/language/ref/IntegrateChangeVariables.html'>IntegrateChangeVariables</a></tt> is considerably more complicated. “College-level” changes of variables are usually carefully arranged to come out easily. But in the more general case, <tt><a href='https://reference.wolfram.com/language/ref/IntegrateChangeVariables.html'>IntegrateChangeVariables</a></tt> ends up having to do nontrivial transformations of geometric regions, difficult simplifications of integrands subject to certain constraints, and so on.</p>
<p>In addition to changing variables in integrals, Version 13.1 also introduces <tt><a href='https://reference.wolfram.com/language/ref/DSolveChangeVariables.html'>DSolveChangeVariables</a></tt> for changing variables in differential equations. Here it’s transforming the Laplace equation to polar coordinates:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg12.png" alt='DSolveChangeVariables' title='DSolveChangeVariables' width='481' height='101' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg12_copy.txt">
					<span class='close' id='cc12_out'>&amp;#10005</span></p>
<pre class='text' id='cc12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Sometimes a change of variables can just be a convenience. But sometimes (think General Relativity) it can lead one to a whole different view of a system. Here, for example, an exponential transformation converts the usual Cauchy–Euler equation to a form with constant coefficients: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg13.png" alt='DSolveChangeVariables' title='DSolveChangeVariables' width='617' height='59' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822calculusimg13_copy.txt">
					<span class='close' id='cc13_out'>&amp;#10005</span></p>
<pre class='text' id='cc13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='fractional-calculus'>Fractional Calculus</h2>
<p>The first derivative of <em>x</em><sup>2</sup> is 2<em>x</em>; the second derivative is 2. But what is the <img style="margin-bottom: -3px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822onehalfth.png" width='21' height='' /> derivative? It’s a question that was asked (for example by Leibniz) even in the first years of calculus. And by the 1800s Riemann and Liouville had given an answer—which in Version 13.1 can now be computed by the new <tt><a href='https://reference.wolfram.com/language/ref/FractionalD.html'>FractionalD</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg3.png" alt='FractionalD' title='FractionalD' width='217' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg3_copy.txt">
					<span class='close' id='3fractional_out'>&amp;#10005</span></p>
<pre class='text' id='3fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, do another <img class='' style="margin-bottom: -4px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822onehalfth.png" width='21' height='' /> derivative and you get back the 1<sup>st</sup> derivative:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg6.png" alt='FractionalD' title='FractionalD' width='204' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg6_copy.txt">
					<span class='close' id='6fractional_out'>&amp;#10005</span></p>
<pre class='text' id='6fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In the more general case we have:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg7.png" alt='FractionalD' title='FractionalD' width='203' height='75' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg7_copy.txt">
					<span class='close' id='7fractional_out'>&amp;#10005</span></p>
<pre class='text' id='7fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And this works even for negative derivatives, so that, for example, the (–1)<sup>st</sup> derivative is an ordinary integral:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg9.png" alt='FractionalD' title='FractionalD' width='210' height='74' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg9_copy.txt">
					<span class='close' id='9fractional_out'>&amp;#10005</span></p>
<pre class='text' id='9fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It can be at least as difficult to compute a fractional derivative as an integral. But <tt><a href='https://reference.wolfram.com/language/ref/FractionalD.html'>FractionalD</a></tt> can still often do it</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg10.png" alt='FractionalD' title='FractionalD' width='330' height='94' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg10_copy.txt">
					<span class='close' id='10fractional_out'>&amp;#10005</span></p>
<pre class='text' id='10fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>though the result can quickly become quite complicated:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg11.png" alt='FractionalD' title='FractionalD' width='470' height='153' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg11_copy.txt">
					<span class='close' id='11fractional_out'>&amp;#10005</span></p>
<pre class='text' id='11fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Why is <tt><a href='https://reference.wolfram.com/language/ref/FractionalD.html'>FractionalD</a></tt> a separate function, rather than just being part of a generalization of <tt><a href='https://reference.wolfram.com/language/ref/D.html'>D</a></tt>? We discussed this for quite a while. And the reason we introduced the explicit <tt><a href='https://reference.wolfram.com/language/ref/FractionalD.html'>FractionalD</a></tt> is that there isn’t a unique definition of fractional derivatives. In fact, in Version 13.1 we also support the Caputo fractional derivative (or differintegral) <tt><a href='https://reference.wolfram.com/language/ref/CaputoD.html'>CaputoD</a></tt>.</p>
<p>For the <img class='' style="margin-bottom: -3px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822onehalfparen.png" width='34' height='' /> derivative of <em>x</em><sup>2</sup>, the answer is still the same:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg14.png" alt='CaputoD' title='CaputoD' width='197' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg14_copy.txt">
					<span class='close' id='14fractional_out'>&amp;#10005</span></p>
<pre class='text' id='14fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But as soon as a function isn’t zero at <em>x</em> = 0 the answer can be different:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg15.png" alt='CaputoD' title='CaputoD' width='409' height='94' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg15_copy.txt">
					<span class='close' id='15fractional_out'>&amp;#10005</span></p>
<pre class='text' id='15fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/CaputoD.html'>CaputoD</a></tt> is a particularly convenient definition of fractional differentiation when one’s dealing with Laplace transforms and differential equations. And in Version 13.1 we can now only compute <tt><a href='https://reference.wolfram.com/language/ref/CaputoD.html'>CaputoD</a></tt> but also do integral transforms and solve equations that involve it. </p>
<p>Here’s a <img class='' style="margin-bottom: -3px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822onehalfparen.png" width='34' height='' />-order differential equation</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg17.png" alt='DSolve' title='DSolve' width='348' height='59' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg17_copy.txt">
					<span class='close' id='17fractional_out'>&amp;#10005</span></p>
<pre class='text' id='17fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and a <img style="margin-bottom: -4px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822thetwoth.png" width='34' height='' />-order one</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg19.png" alt='DSolve' title='DSolve' width='606' height='152' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg19_copy.txt">
					<span class='close' id='19fractional_out'>&amp;#10005</span></p>
<pre class='text' id='19fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>as well as a &#960;<sup>th</sup>-order one:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg21.png" alt='DSolve' title='DSolve' width='487' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fractionalimg21_copy.txt">
					<span class='close' id='21fractional_out'>&amp;#10005</span></p>
<pre class='text' id='21fractional_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Note the appearance of <tt><a href='https://reference.wolfram.com/language/ref/MittagLefflerE.html'>MittagLefflerE</a></tt>. This function (which we introduced in <a href='https://writings.stephenwolfram.com/2012/11/mathematica-9-is-released-today/'>Version 9.0</a>) plays the same kind of role for fractional derivatives that <tt><a href='https://reference.wolfram.com/language/ref/Exp.html'>Exp</a></tt> plays for ordinary derivatives. </p>
<h2 id='more-math-some-long-awaited'>More Math&mdash;Some Long Awaited</h2>
<p>In February 1990 an internal bug report was filed against the still-in-development <a href='https://reference.wolfram.com/legacy/v2/'>Version 2.0</a> of Mathematica:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg1.png" alt='Bug report' title='Bug report' width='565' height='108' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg1_copy.txt">
					<span class='close' id='1moremath_out'>&amp;#10005</span></p>
<pre class='text' id='1moremath_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s taken a long time (and similar issues have been reported many times), but in Version 13.1 we can finally close this bug! </p>
<p>Consider the differential equation (the Clairaut equation):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg2.png" alt='DSolve' title='DSolve' width='369' height='54' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg2_copy.txt">
					<span class='close' id='2moremath_out'>&amp;#10005</span></p>
<pre class='text' id='2moremath_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What <tt><a href='https://reference.wolfram.com/language/ref/DSolve.html'>DSolve</a></tt> does by default is to give the generic solution to this equation, in terms of the parameter <em>&#120148;</em><sub>1</sub>. But the subtle point (which in optics is associated with caustics) is that the family of solutions for different values of <em>&#120148;</em><sub>1</sub> has an envelope which isn’t itself part of the family of solutions, but is also a solution:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg5.png" alt='Plot' title='Plot' width='616' height='280' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg5_copy.txt">
					<span class='close' id='5moremath_out'>&amp;#10005</span></p>
<pre class='text' id='5moremath_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Version 13.1 you can request that solution with the option <tt><a href='https://reference.wolfram.com/language/ref/IncludeSingularSolutions.html'>IncludeSingularSolutions</a></tt>→<tt><a href='https://reference.wolfram.com/language/ref/True.html'>True</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg6.png" alt='DSolve' title='DSolve' width='597' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg6_copy.txt">
					<span class='close' id='6moremath_out'>&amp;#10005</span></p>
<pre class='text' id='6moremath_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s a plot of it:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg7.png" alt='Plot' title='Plot' width='358' height='249' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg7_copy.txt">
					<span class='close' id='7moremath_out'>&amp;#10005</span></p>
<pre class='text' id='7moremath_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/DSolve.html'>DSolve</a></tt> was a new function (back in 1991) in Version 2.0. Another new function in Version 2.0 was <tt><a href='https://reference.wolfram.com/language/ref/Residue.html'>Residue</a></tt>. And in Version 13.1 we’re also adding an extension to <tt><a href='https://reference.wolfram.com/language/ref/Residue.html'>Residue</a></tt>: the function <tt><a href='https://reference.wolfram.com/language/ref/ResidueSum.html'>ResidueSum</a></tt>. And while <tt><a href='https://reference.wolfram.com/language/ref/Residue.html'>Residue</a></tt> finds the residue of a complex function at a specific point, <tt><a href='https://reference.wolfram.com/language/ref/ResidueSum.html'>ResidueSum</a></tt> finds a sum of residues.</p>
<p>This computes the sum of all residues for a function, across the whole complex plane:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg8.png" alt='ResidueSum' title='ResidueSum' width='261' height='73' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg8_copy.txt">
					<span class='close' id='8moremath_out'>&amp;#10005</span></p>
<pre class='text' id='8moremath_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This computes the sum of residues within a particular region, in this case the unit disk:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg9.png" alt='ResidueSum' title='ResidueSum' width='317' height='78' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822moremathimg9_copy.txt">
					<span class='close' id='9moremath_out'>&amp;#10005</span></p>
<pre class='text' id='9moremath_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='create-your-own-guide-to-functions-pages'>Create Your Own &ldquo;Guide to Functions&rdquo; Pages</h2>
<p>An important part of the built-in documentation for the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> are what we call “guide pages”—pages like the following that organize functions (and other constructs) to give an overall “cognitive map” and summary of some area:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822guidepagesimg1.png" alt='Sample guide page' title='Sample guide page' width='575' height='339' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822guidepagesimg1_copy.txt">
					<span class='close' id='gp1_out'>&amp;#10005</span></p>
<pre class='text' id='gp1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Version 13.1 it’s now easy to create your own custom guide pages. You can list built-in functions or other constructs, as well as things from the <a href='https://resources.wolframcloud.com/FunctionRepository'>Wolfram Function Repository</a> and other repositories. </p>
<p>Go to the “root page” of the Documentation Center and press the icon:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822guidepagesimg2.png" alt='Documentation Center' title='Documentation Center' width='575' height='150' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822guidepagesimg2_copy.txt">
					<span class='close' id='gp2_out'>&amp;#10005</span></p>
<pre class='text' id='gp2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You’ll get a blank custom guide page:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822guidepagesimg3.png" alt='Sample guide page teamplate' title='Sample guide page template' width='546' height='380' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822guidepagesimg3_copy.txt">
					<span class='close' id='gp3_out'>&amp;#10005</span></p>
<pre class='text' id='gp3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Fill in the guide page however you want, then use <tt><a href='https://reference.wolfram.com/language/ref/Deploy.html'>Deploy</a></tt> to deploy the page either locally, or to your cloud account. Either way, the page will now show up in the menu from the top of the root guide page (and they’ll also show up in search):</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822guidepagesimg4.png" alt='Documentation Center' title='Documentation Center' width='575' height='149' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822guidepagesimg4_copy.txt">
					<span class='close' id='gp4_out'>&amp;#10005</span></p>
<pre class='text' id='gp4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You might end up creating just one custom guide page for your favorite functions. Or you might create several, say one for each task or topic you commonly deal with. Guide pages aren’t about putting in the effort to create full-scale documentation; they’re much more lightweight, and aimed more at providing quick (“what was that function called?”) reminders and “big-picture” maps—leveraging all the specific function and other documentation that already exists.</p>
<h2 id='visual-effects-beautification'>Visual Effects &#038; Beautification</h2>
<p>At first it seemed like a minor feature. But once we’d implemented it, we realized it was much more useful than we’d expected. Just as you can style a graphics object with its color (and, as of <a href='https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/'>Version 13.0</a>, its filling pattern), now in Version 13.1 you can style it with its drop shadowing:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg1.png" alt='' title='' width='504' height='99' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg1A_copy.txt">
					<span class='close' id='1A_out'>&amp;#10005</span></p>
<pre class='text' id='1A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Drop shadowing turns out to be a nice way to “bring graphics to life”</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg2.png" alt='' title='' width='429' height='206' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg2A_copy.txt">
					<span class='close' id='2A_out'>&amp;#10005</span></p>
<pre class='text' id='2A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or to emphasize one element over others:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg3.png" alt='' title='' width='576' height='199' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg3_copy.txt">
					<span class='close' id='3A_out'>&amp;#10005</span></p>
<pre class='text' id='3A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It works well in geo graphics as well:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg4.png" alt='' title='' width='480' height='259' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg4A_copy.txt">
					<span class='close' id='4A_out'></span></p>
<pre class='text' id='4A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/DropShadowing.html'>DropShadowing</a></tt> allows detailed control over the shadows: what direction they’re in, how blurred they are and what color they are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg5.png" alt='' title='' width='430' height='119' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg5A_copy.txt">
					<span class='close' id='5A_out'>&amp;#10005</span></p>
<pre class='text' id='5A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Drop shadowing is more complicated “under the hood” than one might imagine. And when possible it actually works using hardware GPU pixel shaders—the same technology that we’ve used since <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/'>Version 12.3</a> to implement material-based surface textures for 3D graphics. In Version 13.1 we’ve explicitly exposed some well-known underlying types of 3D shading. Here’s a geodesic polyhedron (yes, that’s another new function in Version 13.1), with its surface normals added (using the again new function <tt><a href='https://reference.wolfram.com/language/ref/EstimatedPointNormals.html'>EstimatedPointNormals</a></tt>):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg6.png" alt='' title='' width='444' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg6A_copy.txt">
					<span class='close' id='6A_out'>&amp;#10005</span></p>
<pre class='text' id='6A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the most basic form of shading: flat shading of each facet (and the specularity in this case doesn’t “catch” any facets):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg7.png" alt='' title='' width='433' height='223' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg7A_copy.txt">
					<span class='close' id='7A_out'>&amp;#10005</span></p>
<pre class='text' id='7A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here now is Gouraud shading, with a somewhat-faceted glint:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg8.png" alt='' title='' width='465' height='230' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg8A_copy.txt">
					<span class='close' id='8A_out'>&amp;#10005</span></p>
<pre class='text' id='8A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And then there’s Phong shading, looking somewhat more natural for a sphere:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg9.png" alt='' title='' width='450' height='223' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg9A_copy.txt">
					<span class='close' id='9A_out'>&amp;#10005</span></p>
<pre class='text' id='9A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Ever since <a href='https://reference.wolfram.com/legacy/v1/'>Version 1.0</a>, we’ve had an interactive way to rotate—and zoom into—3D graphics. (Yes, the mechanism was a bit primitive 34 years ago, but it rapidly got to more or less its modern form.) But in Version 13.1 we’re adding something new: the ability to “dolly” into a 3D graphic, imitating what would happen if you actually walked into a physical version of the graphic, as opposed to just zooming your camera:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg10.png" alt='' title='' width='601' height='409' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822VisFXimg10_copy.txt">
					<span class='close' id='10A_out'>&amp;#10005</span></p>
<pre class='text' id='10A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><video width="620" height="380" controls><source src="https://content.wolfram.com/uploads/sites/43/2022/06/video1_out_dolly-zoom-v4.mp4" type="video/mp4"></video>	</p>
<p>And, yes, things can get a bit surreal (or “treky”)—here dollying in and then zooming out:</p>
<p><video width="315" height="400" controls><source src="https://content.wolfram.com/uploads/sites/43/2022/06/video2_out_graphic3d-whacky2.mp4" type="video/mp4"></video></p>
<h2 id='3d-voronoi'>3D Voronoi!</h2>
<p>There are some capabilities that—over the course of years—have been requested over and over again. In the past these have included infinite undo, high dpi displays, multiple axis plots, and others. And I’m happy to say that most of these have now been taken care of. But there’s one—seemingly obscure—“straggler” that I’ve heard about for well over 25 years, and that I’ve actually also wanted myself quite a few times: 3D Voronoi diagrams. Well, in Version 13.1, they’re here.</p>
<p>Set up 25 random points in 3D:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg1.png" alt='pts = RandomReal' title='pts = RandomReal' width='239' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg1_copy.txt">
					<span class='close' id='1voronoi_out'>&amp;#10005</span></p>
<pre class='text' id='1voronoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg2.png" alt='Graphics3D' title='Graphics3D' width='329' height='209' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg2_copy.txt">
					<span class='close' id='2voronoi_out'>&amp;#10005</span></p>
<pre class='text' id='2voronoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now make a Voronoi mesh for these points:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg3.png" alt='VoronoiMesh' title='VoronoiMesh' width='292' height='299' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg3_copy.txt">
					<span class='close' id='3voronoi_out'>&amp;#10005</span></p>
<pre class='text' id='3voronoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>To “see inside” we can use opacity:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg4.png" alt='Graphics3D' title='Graphics3D' width='464' height='315' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg4_copy.txt">
					<span class='close' id='4voronoi_out'>&amp;#10005</span></p>
<pre class='text' id='4voronoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Why was this so hard? In a Voronoi there’s a cell that surrounds each original point, and includes everywhere that’s closer to that point than to any other. We’ve had 2D Voronoi meshes for a long time:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg5.png" alt='VoronoiMesh' title='VoronoiMesh' width='297' height='211' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg5_copy.txt">
					<span class='close' id='5voronoi_out'>&amp;#10005</span></p>
<pre class='text' id='5voronoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But there’s something easier about the 2D case. The issue is not so much the algorithm for generating the cells as it is how the cells can be represented in such a way that they’re useful for subsequent computations. In the 2D case each cell is just a polygon.</p>
<p>But in the 3D case the cells are polyhedra, and to make a Voronoi mesh we have to have a polyhedral mesh where all the polyhedra fit together. And it’s taken us many years to build the large tower of computational geometry necessary to support this. There’s a somewhat simpler case based purely on cells that are always either simplices or hexahedra—that we’ve used for finite-element solutions to PDEs for a while. But in a true 3D Voronoi that’s not enough: the cells can be any (convex) polyhedral shape.</p>
<p>Here are the “puzzle piece” cells for the 3D Voronoi mesh we made above:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg6.png" alt='Row' title='Row' width='619' height='431' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822voronoiimg6_copy.txt">
					<span class='close' id='6voronoi_out'>&amp;#10005</span></p>
<pre class='text' id='6voronoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='reconstructing-geometry-from-point-clouds'>Reconstructing Geometry from Point Clouds</h2>
<p>Pick 500 random points inside an annulus:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg1.png" alt='pts = RandomPoint' title='pts = RandomPoint' width='283' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg1_copy.txt">
					<span class='close' id='1geometry_out'>&amp;#10005</span></p>
<pre class='text' id='1geometry_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg2.png" alt='Graphics' title='Graphics' width='211' height='200' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg2_copy.txt">
					<span class='close' id='2geometry_out'>&amp;#10005</span></p>
<pre class='text' id='2geometry_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Version 13.1 now has a general function reconstructing geometry from a cloud of points:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg3.png" alt='ReconstructionMesh' title='ReconstructionMesh' width='212' height='198' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg3_copy.txt">
					<span class='close' id='3geometry_out'>&amp;#10005</span></p>
<pre class='text' id='3geometry_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(Of course, given only a finite number of points, the reconstruction can’t be expected to be perfect.)</p>
<p>The function also works in 3D:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg4.png" alt='ReconstructionMesh' title='ReconstructionMesh' width='384' height='210' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg4_copy.txt">
					<span class='close' id='4geometry_out'>&amp;#10005</span></p>
<pre class='text' id='4geometry_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg5.png" alt='ReconstructionMesh' title='ReconstructionMesh' width='441' height='141' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg5_copy.txt">
					<span class='close' id='5geometry_out'>&amp;#10005</span></p>
<pre class='text' id='5geometry_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/ReconstructionMesh.html'>ReconstructionMesh</a></tt> is a general superfunction that uses a variety of methods, including extended versions of the functions <tt><a href='https://reference.wolfram.com/language/ref/ConcaveHullMesh.html'>ConcaveHullMesh</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/GradientFittedMesh.html'>GradientFittedMesh</a></tt> that were introduced in Version 13.0. And in addition to reconstructing “solid objects”, it can also reconstruct lower-dimensional things like curves and surfaces:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg6.png" alt='ReconstructionMesh' title='ReconstructionMesh' width='367' height='199' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg6_copy.txt">
					<span class='close' id='6geometry_out'>&amp;#10005</span></p>
<pre class='text' id='6geometry_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A related function new in Version 13.1 is <tt><a href='https://reference.wolfram.com/language/ref/EstimatedPointNormals.html'>EstimatedPointNormals</a></tt>, which reconstructs not the geometry itself, but normal vectors to each element in the geometry:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg7.png" alt='ListVectorPlot' title='ListVectorPlot' width='605' height='274' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822geometryimg7_copy.txt">
					<span class='close' id='7geometry_out'>&amp;#10005</span></p>
<pre class='text' id='7geometry_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='new-in-visualization'>New in Visualization</h2>
<p>In every new version for the past 30 years we’ve steadily expanded our visualization capabilities, and Version 13.1 is no exception. One function we’ve added is <tt><a href='https://reference.wolfram.com/language/ref/TernaryListPlot.html'>TernaryListPlot</a></tt>—an analog of <tt><a href='https://reference.wolfram.com/language/ref/ListPlot.html'>ListPlot</a></tt> that conveniently plots triples of values where what one’s trying to emphasize is their ratios. For example let’s plot data from our knowledgebase on the sources of electricity for different countries: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/062822visualimg1.png" alt='TernaryListPlot' title='TernaryListPlot' width='619' height='394' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/062822visualimg1_copy.txt">
					<span class='close' id='1visual_out'>&amp;#10005</span></p>
<pre class='text' id='1visual_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The plot shows the “energy mixture” for different countries, with the ones on the bottom axis being those with zero nuclear. Inserting colors for each axis, along with grid lines, helps explain how to read the plot:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/062822visualimg2.png" alt='TernaryListPlot' title='TernaryListPlot' width='614' height='394' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/062822visualimg2_copy.txt">
					<span class='close' id='2visual_out'>&amp;#10005</span></p>
<pre class='text' id='2visual_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Most of the time plots are plotting numbers, or at least quantities. In <a href='https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/'>Version 13.0</a>, we extended functions like <tt><a href='https://reference.wolfram.com/language/ref/ListPlot.html'>ListPlot</a></tt> to also accept dates. In Version 13.1 we’re going much further, and introducing the possibility of plotting what amount to purely symbolic values.</p>
<p>Let’s say our data consists of letters A through C:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/062822visualimg3.png" alt='data = RandomChoice' title='data = RandomChoice' width='322' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/062822visualimg3_copy.txt">
					<span class='close' id='3visual_out'>&amp;#10005</span></p>
<pre class='text' id='3visual_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>How do we plot these? In Version 13.1 we just specify an ordinal scale:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/062822visualimg4.png" alt='ListPlot' title='ListPlot' width='593' height='234' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/062822visualimg4_copy.txt">
					<span class='close' id='4visual_out'>&amp;#10005</span></p>
<pre class='text' id='4visual_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/OrdinalScale.html'>OrdinalScale</a></tt> lets you specify that certain symbolic values are to be treated as if they are in a specified order. There’s also the concept of a nominal scale—represented by <tt><a href='https://reference.wolfram.com/language/ref/NominalScale.html'>NominalScale</a></tt>—in which different symbolic values correspond to different “categories”, but in no particular order. </p>
<h2 id='representing-amounts-of-chemicals'>Representing Amounts of Chemicals</h2>
<p><tt><a href='https://reference.wolfram.com/language/ref/Molecule.html'>Molecule</a></tt> lets one symbolically represent a molecule. <tt><a href='http://reference.wolfram.com/language/ref/Quantity.html'>Quantity</a></tt> lets one symbolically represent a quantity with units. In Version 13.1 we now have the new construct <tt><a href='http://reference.wolfram.com/language/ref/ChemicalInstance.html'>ChemicalInstance</a></tt> that’s in effect a merger of these, allowing one to represent a certain quantity of a certain chemical.</p>
<p>This gives a symbolic representation of 1 liter of acetone (by default at standard temperature and pressure):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg1.png" alt='ChemicalInstance' title='ChemicalInstance' width='336' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg1_copy.txt">
					<span class='close' id='1five_out'>&amp;#10005</span></p>
<pre class='text' id='1five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can ask what the mass of this instance of this chemical is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg2.png" alt='ChemicalInstance' title='ChemicalInstance' width='394' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg2_copy.txt">
					<span class='close' id='2five_out'>&amp;#10005</span></p>
<pre class='text' id='2five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='http://reference.wolfram.com/language/ref/ChemicalConvert.html'>ChemicalConvert</a></tt> lets us do a conversion returning particular units:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg3.png" alt='ChemicalConvert' title='ChemicalConvert' width='529' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg3_copy.txt">
					<span class='close' id='3five_out'>&amp;#10005</span></p>
<pre class='text' id='3five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s instead a conversion to moles:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg4.png" alt='ChemicalConvert' title='ChemicalConvert' width='525' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg4_copy.txt">
					<span class='close' id='4five_out'>&amp;#10005</span></p>
<pre class='text' id='4five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This directly gives the amount of substance that 1 liter of acetone corresponds to:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg5.png" alt='ChemicalInstance' title='ChemicalInstance' width='414' height='60' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg5_copy.txt">
					<span class='close' id='5five_out'>&amp;#10005</span></p>
<pre class='text' id='5five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This generates a sequence of straight-chain hydrocarbons:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style="margin-left: -5px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg7.png" alt='GraphicsBox' title='GraphicsBox' width='579' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg6_copy.txt">
					<span class='close' id='6five_out'>&amp;#10005</span></p>
<pre class='text' id='6five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the amount of substance corresponding to 1 g of each of these chemicals:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg8.png" alt='Table' title='Table' width='590' height='86' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg8_copy.txt">
					<span class='close' id='8five_out'>&amp;#10005</span></p>
<pre class='text' id='8five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='http://reference.wolfram.com/language/ref/ChemicalInstance.html'>ChemicalInstance</a></tt> lets you specify not just the amount of a substance, but also its state, in particular temperature and pressure. Here we’re converting 1 kg of water at 4° C to be represented in terms of volume:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg9.png" alt='ChemicalConvert' title='ChemicalConvert' width='562' height='138' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg9_copy.txt">
					<span class='close' id='9five_out'>&amp;#10005</span></p>
<pre class='text' id='9five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='chemistry-as-rule-application:-symbolic-pattern-reactions'>Chemistry as Rule Application: Symbolic Pattern Reactions</h2>
<p>At the core of the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> is the abstract idea of applying transformations to symbolic expressions. And at some level one can view chemistry and chemical reactions as a physical instantiation of this idea, where one’s not dealing with abstract symbolic constructs, but instead with actual molecules and atoms.</p>
<p>In Version 13.1 we’re introducing <a href="http://reference.wolfram.com/language/ref/PatternReaction.html"><tt>PatternReaction</tt></a> as a symbolic representation for classes of chemical reactions—in effect providing an analog for chemistry of <tt><a href='http://reference.wolfram.com/language/ref/Rule.html'>Rule</a></tt> for general symbolic expressions. </p>
<p>Here’s an example of a “pattern reaction”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg10.png" alt='PatternReaction' title='PatternReaction' width='594' height='238' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg10_copy.txt">
					<span class='close' id='10five_out'>&amp;#10005</span></p>
<pre class='text' id='10five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The first argument specifies a pair of “reactant” molecule patterns to be transformed into “product” molecule patterns. The second argument specifies which atoms in which reactant molecules map to which atoms in which product molecules. If you mouse over the resulting pattern reaction, you’ll see corresponding atoms “light up”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg11.png" alt='PatternReaction output' title='PatternReaction output' width='447' height='121' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg11_copy.txt">
					<span class='close' id='11five_out'>&amp;#10005</span></p>
<pre class='text' id='11five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Given a pattern reaction, we can use <tt>ApplyReaction</tt> to apply the reaction to concrete molecules:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg12.png" alt='ApplyReaction' title='ApplyReaction' width='544' height='187' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg12_copy.txt">
					<span class='close' id='12five_out'>&amp;#10005</span></p>
<pre class='text' id='12five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here are plots of the resulting product molecules:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg13.png" alt='MoleculePlot' title='MoleculePlot' width='406' height='122' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg13_copy.txt">
					<span class='close' id='13five_out'>&amp;#10005</span></p>
<pre class='text' id='13five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The molecule patterns in the pattern reaction are matched against subparts of the concrete molecules, then the transformation is done, leaving the other parts of the molecules unchanged. In a sense it’s the direct analog of something like</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg14.png" alt='{{a, b}, {c, d}} /. b -&gt; {u, v}' title='{{a, b}, {c, d}} /. b -&gt; {u, v}' width='208' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg14_copy.txt">
					<span class='close' id='14five_out'>&amp;#10005</span></p>
<pre class='text' id='14five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where the <tt>b</tt> in the symbolic expression is replaced, and the result is “knitted back” to fill in where the <tt>b</tt> used to be.</p>
<p>You can do what amounts to various kinds of “chemical functional programming” with <tt><a href='http://reference.wolfram.com/language/ref/ApplyReaction.html'>ApplyReaction</a></tt> and <tt><a href='http://reference.wolfram.com/language/ref/PatternReaction.html'>PatternReaction</a></tt>. Here’s an example where we’re essentially building up a polymer by successive nesting of a reaction: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg15.png" alt='NestList' title='NestList' width='604' height='229' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg15_copy.txt">
					<span class='close' id='15five_out'>&amp;#10005</span></p>
<pre class='text' id='15five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg16A.png" alt='MoleculePlot' title='MoleculePlot' width='607' height='361' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg16_copy.txt">
					<span class='close' id='16five_out'>&amp;#10005</span></p>
<pre class='text' id='16five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s often convenient to build pattern reactions symbolically using Wolfram Language “chemical primitives”. But <tt><a href='http://reference.wolfram.com/language/ref/PatternReaction.html'>PatternReaction</a></tt> also lets you specify reactions as SMARTS strings:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg17.png" alt='PatternReaction' title='PatternReaction' width='628' height='147' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg17_copy.txt">
					<span class='close' id='17five_out'>&amp;#10005</span></p>
<pre class='text' id='17five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='pdes-for-rods,-rubber-and-more'>PDEs for Rods, Rubber and More</h2>
<p>It’s been a 25-year journey, steadily increasing our built-in PDE capabilities. And in Version 13.1 we’ve added several (admittedly somewhat technical) features that have been much requested, and are important for solving particular kinds of real-world PDE problems. The first feature is being able to set up a PDE as axisymmetric. Normally a 2D diffusion term would be assumed Cartesian:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg18.png" alt='DiffusionPDETerm' title='DiffusionPDETerm' width='296' height='55' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg18_copy.txt">
					<span class='close' id='18five_out'>&amp;#10005</span></p>
<pre class='text' id='18five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But now you can say you’re dealing with an axisymmetric system, with your coordinates being interpreted as radius and height, and everything assumed to be symmetrical in the azimuthal direction:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg19.png" alt='DiffusionPDETerm' title='DiffusionPDETerm' width='596' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg19_copy.txt">
					<span class='close' id='19five_out'>&amp;#10005</span></p>
<pre class='text' id='19five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What’s important about this is not just that it makes it easy to set up certain kinds of equations, but also that in solving equations axial symmetry can be assumed, allowing much more efficient methods to be used:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/07/sw062822fivesectionsimg20B.png" alt='RegionPlot3D' title='RegionPlot3D' width='732' height='430' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg20_copy.txt">
					<span class='close' id='20five_out'>&amp;#10005</span></p>
<pre class='text' id='20five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Also in Version 13.1 is an extension to the solid mechanics modeling framework introduced in <a href='https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/'>Version 13.0</a>. Just as there’s viscosity that damps out motion in fluids, so there’s a similar phenomenon that damps out motion in solids. It’s more of an engineering story, and it’s usually described in terms of two parameters: mass damping and stiffness damping. And now in Version 13.1 we support this kind of so-called Rayleigh damping in our modeling framework. </p>
<p>Another phenomenon included in Version 13.1 is hyperelasticity. If you bend something like metal beyond a certain point (but not so far that it breaks), it’ll stay bent. But materials like rubber and foam (and some biological tissues) can “bounce back” from basically any deformation. </p>
<p>Let’s imagine that we have a square of rubber-like material. We anchor it on the left, and then we pull it on the right with a certain force. What does it do?</p>
<p>This defines the properties of our material:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg21.png" alt='pars' title='pars' width='609' height='46' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg21_copy.txt">
					<span class='close' id='21five_out'>&amp;#10005</span></p>
<pre class='text' id='21five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We define variables for the problem, representing <em>x</em> and <em>y</em> displacements by <em>u</em> and <em>v</em>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg22.png" alt='vars' title='vars' width='243' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg22_copy.txt">
					<span class='close' id='22five_out'>&amp;#10005</span></p>
<pre class='text' id='22five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can set up our whole problem, and solve the PDEs for it for each value of the force:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg24.png" alt='GraphicsBox' title='GraphicsBox' width='490' height='248' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg23_copy.txt">
					<span class='close' id='23five_out'>&amp;#10005</span></p>
<pre class='text' id='23five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div></div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg24_copy.txt">
					<span class='close' id='24five_out'>&amp;#10005</span></p>
<pre class='text' id='24five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then one can plot the results, and see the rubber being nonlinearly stretched:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg25A.png" alt='VectorDisplacementPlot' title='VectorDisplacementPlot' width='565' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg25_copy.txt">
					<span class='close' id='25five_out'>&amp;#10005</span></p>
<pre class='text' id='25five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There’s in the end considerable depth in our handling of PDE-based modeling, and our increasing ability to do “multiphysics” computations that span multiple types of physics (mechanical, thermal, electromagnetic, acoustic, &#8230;). And by now we’ve got nearly 1000 pages of documentation purely about PDE-based modeling. And for example in Version 13.1 we’ve added a monograph specifically about <a href="https://reference.wolfram.com/language/PDEModels/tutorial/StructuralMechanics/Hyperelasticity.html#509267359">hyperelasticity</a>, as well as expanded our collection of documented PDE models:</p>
<p>	<tabl></p>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg26.png" alt='PDE models overview' title='PDE models overview' width='434' height='340' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg26_copy.txt">
					<span class='close' id='26five_out'>&amp;#10005</span></p>
<pre class='text' id='26five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='interpretable-machine-learning'>Interpretable Machine Learning</h2>
<p>Let’s say you have trained a machine learning model and you apply it to a particular input. It gives you some result. But why? What were the important features in the input that led it to that result? In Version 13.1 we’re introducing several functions that try to answer such questions.</p>
<p>Here’s some simple “training data”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg28.png" alt='data = Flatten' title='data = Flannet' width='570' height='111' /></p>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg27_copy.txt">
					<span class='close' id='27five_out'>&amp;#10005</span></p>
<pre class='text' id='27five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can use machine learning to make a predictor for this data:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg29.png" alt='pf = Predict' title='pf = Predict' width='444' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg29_copy.txt">
					<span class='close' id='29five_out'>&amp;#10005</span></p>
<pre class='text' id='29five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Applying the predictor to a particular input gives us a prediction:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg30.png" alt='pf' title='pf' width='211' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg30_copy.txt">
					<span class='close' id='30five_out'>&amp;#10005</span></p>
<pre class='text' id='30five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What was important in making this prediction? The <tt>"SHAPValues"</tt> property introduced in Version 12.3 tells us what contribution each feature made to the result; in this case <tt>v</tt> was more important than <tt>u</tt> in determining the value of the prediction:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg31.png" alt='pf' title='pf' width='314' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg31_copy.txt">
					<span class='close' id='31five_out'>&amp;#10005</span></p>
<pre class='text' id='31five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But what about in general, for all inputs? The new function <tt><a href='http://reference.wolfram.com/language/ref/FeatureImpactPlot.html'>FeatureImpactPlot</a></tt> gives a visual representation of the contribution or “impact” of each feature in each input on the output of the predictor:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg32.png" alt='FeatureImpactPlot' title='FeatureImpactPlot' width='384' height='251' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg32_copy.txt">
					<span class='close' id='32five_out'>&amp;#10005</span></p>
<pre class='text' id='32five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What does this plot mean? It’s basically showing how often there are what contributions from values of the two input features. And with this particular predictor we see that there’s a wide range of contributions from both features.</p>
<p>If we use a different method to create the predictor, the results can be quite different. Here we’re using linear regression, and it turns out that with this method <tt>v</tt> never has much impact on predictions:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg33.png" alt='FeatureImpactPlot' title='FeatureImpactPlot' width='480' height='226' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg33_copy.txt">
					<span class='close' id='33five_out'>&amp;#10005</span></p>
<pre class='text' id='33five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we make a predictor using a decision tree, the feature impact plot shows the splitting of impact corresponding to different branches of the tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg34.png" alt='FeatureImpactPlot' title='FeatureImpactPlot' width='451' height='231' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg34_copy.txt">
					<span class='close' id='34five_out'>&amp;#10005</span></p>
<pre class='text' id='34five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='http://reference.wolfram.com/language/ref/FeatureImpactPlot.html'>FeatureImpactPlot</a></tt> gives a kind of bird’s-eye view of the impact of different features. <tt><a href='http://reference.wolfram.com/language/ref/FeatureValueImpactPlot.html'>FeatureValueImpactPlot</a></tt> gives more detail, showing as a function of the actual values of input features the impact points with those values would have on the final prediction (and, yes, the actual points plotted here are based on data simulated on the basis of the distribution inferred by the predictor; the actual data is usually too big to want to carry around, at least by default):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg35.png" alt='FeatureValueImpactPlot' title='FeatureValueImpactPlot' width='615' height='250' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg35_copy.txt">
					<span class='close' id='35five_out'>&amp;#10005</span></p>
<pre class='text' id='35five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='http://reference.wolfram.com/language/ref/CumulativeFeatureImpactPlot.html'>CumulativeFeatureImpactPlot</a></tt> gives a visual representation of how “successive” features affect the final value for each (simulated) data point: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg36.png" alt='CumulativeFeatureImpactPlot' title='CumulativeFeatureImpactPlot' width='528' height='239' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg36_copy.txt">
					<span class='close' id='36five_out'>&amp;#10005</span></p>
<pre class='text' id='36five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For predictors, feature impact plots show impact on predicted values. For classifiers, they show impact on (log) probabilities for particular outcomes. </p>
<h2 id='model-predictive-control'>Model Predictive Control</h2>
<p>One area that leverages many algorithmic capabilities of the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> is control systems. We first started developing control systems functionality more than 25 years ago, and by <a href='https://writings.stephenwolfram.com/2010/11/mathematica-8/'>Version 8.0</a> ten years ago we started to have built-in functions like <tt><a href='https://reference.wolfram.com/language/ref/StateSpaceModel.html'>StateSpaceModel</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/BodePlot.html'>BodePlot</a></tt> specifically for working with control systems.</p>
<p>Over the past decade we’ve progressively been adding more built-in control systems capabilities, and in Version 13.1 we’re now introducing model predictive controllers (MPCs). Many simple control systems (like PID controllers) take an ad hoc approach in which they effectively just “watch what a system does” without trying to have a specific model for what’s going on inside the system. Model predictive control is about having a specific model for a system, and then deriving an optimal controller based on that model.</p>
<p>For example, we could have a state-space model for a system:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg37.png" alt='ssm = StateSpaceModel' title='ssm = StateSpaceModel' width='592' height='76' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg37_copy.txt">
					<span class='close' id='37five_out'>&amp;#10005</span></p>
<pre class='text' id='37five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then in Version 13.1 we can derive (using our <a href='https://reference.wolfram.com/language/ref/Minimize.html'>parametric optimization capabilities</a>) an optimal controller that minimizes a certain set of costs while satisfying particular constraints:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg38.png" alt='clr = ModelPredictiveController' title='clr = ModelPredictiveController' width='606' height='110' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg38_copy.txt">
					<span class='close' id='38five_out'>&amp;#10005</span></p>
<pre class='text' id='38five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The <tt><a href='https://reference.wolfram.com/language/ref/SystemsModelControllerData.html'>SystemsModelControllerData</a></tt> that we get here contains a variety of elements that allow us to automate the control design and analysis workflow. As an example, we can get a model that represents the controller running in a closed loop with the system it is controlling:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg39.png" alt='clr' title='clr' width='364' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg39_copy.txt">
					<span class='close' id='39five_out'>&amp;#10005</span></p>
<pre class='text' id='39five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now let’s imagine that we drive this whole system with the input:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg40.png" alt='ListStepPlot' title='ListStepPlot' width='439' height='147' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg40_copy.txt">
					<span class='close' id='40five_out'>&amp;#10005</span></p>
<pre class='text' id='40five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can compute the output response for the system, and we see that both output variables are driven to zero through the operation of the controller:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg41.png" alt='ListStepPlot' title='ListStepPlot' width='425' height='293' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg41_copy.txt">
					<span class='close' id='41five_out'>&amp;#10005</span></p>
<pre class='text' id='41five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Within the <tt><a href='https://reference.wolfram.com/language/ref/SystemsModelControllerData.html'>SystemsModelControllerData</a></tt> object generated by <tt><a href='https://reference.wolfram.com/language/ref/ModelPredictiveController.html'>ModelPredictiveController</a></tt> is the actual controller computed in this case—using the new construct <tt><a href='https://reference.wolfram.com/language/ref/DiscreteInputOutputModel.html'>DiscreteInputOutputModel</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg42.png" alt='clr' title='clr' width='381' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg42_copy.txt">
					<span class='close' id='42five_out'>&amp;#10005</span></p>
<pre class='text' id='42five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What actually is this controller? Ultimately it’s a collection of piecewise functions that depends on the values of states <em>x</em><sub>1</sub>[<em>t</em>] and <em>x</em><sub>2</sub>[<em>t</em>]:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg45.png" alt='clr' title='clr' width='501' height='206' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg45_copy.txt">
					<span class='close' id='45five_out'>&amp;#10005</span></p>
<pre class='text' id='45five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And this shows the different state-space regions in which the controller has: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg46.png" alt='Region' title='Region' width='607' height='219' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822fivesectionsimg46_copy.txt">
					<span class='close' id='46five_out'>&amp;#10005</span></p>
<pre class='text' id='46five_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='algorithmic-and-randomized-quizzes'>Algorithmic and Randomized Quizzes</h2>
<p>In <a href='https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/'>Version 13.0</a> we introduced our question and assessment framework that allows you to author things like quizzes in notebooks, together with assessment functions, then deploy these for use. In Version 13.1 we’re adding capabilities to let you algorithmically or randomly generate questions.</p>
<p>The two new functions <tt><a href='http://reference.wolfram.com/language/ref/QuestionGenerator.html'>QuestionGenerator</a></tt> and <tt><a href='http://reference.wolfram.com/language/ref/QuestionSelector.html'>QuestionSelector</a></tt> let you specify questions to be generated according to a template, or randomly selected from a pool. You can either use these functions directly in pure <a href='https://www.wolfram.com/language/'>Wolfram Language</a> code, or you can use them through the Question Notebook authoring GUI.</p>
<p>When you select <span class="computer-voice">Insert Question</span> in the GUI, you now get a choice between <span class="computer-voice">Fixed Question</span>, <span class="computer-voice">Randomized Question</span> and <span class="computer-voice">Generated Question</span>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg1.png" alt='Question GUI' title='Question GUI' width='281' height='80' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg1_copy.txt">
					<span class='close' id='1threesections_out'>&amp;#10005</span></p>
<pre class='text' id='1threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Pick <span class="computer-voice">Randomized Question</span> and you’ll get</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg3B.png" alt='Question selector' title='Question selector' width='489' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg2_copy.txt">
					<span class='close' id='2threesections_out'>&amp;#10005</span></p>
<pre class='text' id='2threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which then allows you to enter questions, and eventually produce a <tt><a href='http://reference.wolfram.com/language/ref/QuestionSelector.html'>QuestionSelector</a></tt>—which will select newly randomized questions for every copy of the quiz that’s produced:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg3.png" alt='Question selector' title='Question selector' width='489' height='116' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg3_copy.txt">
					<span class='close' id='3threesections_out'>&amp;#10005</span></p>
<pre class='text' id='3threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Version 13.1 also introduces some enhancements for authoring questions. An example is a pure-GUI “no-code” way to specify multiple-choice questions:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg4B.png" alt='Question GUI' title='Question GUI' width='475' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg4_copy.txt">
					<span class='close' id='4threesections_out'>&amp;#10005</span></p>
<pre class='text' id='4threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='the-exprstruct-data-structure'>The ExprStruct Data Structure</h2>
<p>In the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> expressions normally have two aspects: they have a structure, and they have a meaning. Thus, for example, <tt><a href='http://reference.wolfram.com/language/ref/Plus.html'>Plus</a></tt><tt>[1,1]</tt> has both a definite tree structure</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg5.png" alt='TreeExtract' title='TreeExtract' width='369' height='126' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg5_copy.txt">
					<span class='close' id='5threesections_out'>&amp;#10005</span></p>
<pre class='text' id='5threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and has a value:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg6.png" alt='1 + 1' title='1 + 1' width='108' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg6A_copy.txt">
					<span class='close' id='6threesections_out'>&amp;#10005</span></p>
<pre class='text' id='6threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In the normal operation of the Wolfram Language, the evaluator is automatically applied to all expressions, and essentially the only way to avoid evaluation by the evaluator is to insert “wrappers” like <tt><a href='http://reference.wolfram.com/language/ref/Hold.html'>Hold</a></tt> and <tt><a href='http://reference.wolfram.com/language/ref/Inactive.html'>Inactive</a></tt> that necessarily change the structure of expressions. </p>
<p>In Version 13.1, however, there’s a new way to handle “unevaluated” expressions: the <tt><a href='https://reference.wolfram.com/language/ref/datastructure/ExprStruct.html'>"ExprStruct"</a></tt> data structure. <tt>ExprStructs</tt> represent expressions as raw data structures that are never directly seen by the evaluator, but can nevertheless be structurally manipulated.</p>
<p>This creates an <tt>ExprStruct</tt> corresponding to the expression <tt>{1,2,3,4}</tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg7.png" alt='ds = CreateDataStructure' title='ds = CreateDataStructure' width='387' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg7_copy.txt">
					<span class='close' id='7threesections_out'>&amp;#10005</span></p>
<pre class='text' id='7threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This structurally wraps <tt><a href='http://reference.wolfram.com/language/ref/Total.html'>Total</a></tt> around the list, but does no evaluation:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg8.png" alt='ds2 = ds' title='ds2 = ds' width='289' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg8_copy.txt">
					<span class='close' id='8threesections_out'>&amp;#10005</span></p>
<pre class='text' id='8threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One can also see this by “visualizing” the data structure:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg9.png" alt='ds2' title='ds2' width='201' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg9_copy.txt">
					<span class='close' id='9threesections_out'>&amp;#10005</span></p>
<pre class='text' id='9threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='http://reference.wolfram.com/language/ref/Normal.html'>Normal</a></tt> takes an <tt>ExprStruct</tt> object and converts it to a normal expression, to which the evaluator is automatically applied:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg10.png" alt='Normal' title='Normal' width='128' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg10_copy.txt">
					<span class='close' id='10threesections_out'>&amp;#10005</span></p>
<pre class='text' id='10threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One can do a variety of essentially structural operations directly on an <tt>ExprStruct</tt>. This applies <tt><a href='http://reference.wolfram.com/language/ref/Plus.html'>Plus</a></tt>, then maps <tt><a href='http://reference.wolfram.com/language/ref/Factorial.html'>Factorial</a></tt> over the resulting ExprStruct:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg11.png" alt='dsf = ds' title='dsf = ds' width='316' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg11_copy.txt">
					<span class='close' id='11threesections_out'>&amp;#10005</span></p>
<pre class='text' id='11threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The result is an <tt>ExprStruct</tt> representing an unevaluated expression:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg12.png" alt='dsf' title='dsf' width='176' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg12_copy.txt">
					<span class='close' id='12threesections_out'>&amp;#10005</span></p>
<pre class='text' id='12threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With <tt>"MapImmediateEvaluate"</tt> there is an evaluation done each time the mapping operation generates an expression:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg13.png" alt='ds' title='ds' width='525' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg13_copy.txt">
					<span class='close' id='13threesections_out'>&amp;#10005</span></p>
<pre class='text' id='13threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One powerful use of <tt>ExprStruct</tt> is in doing code transformations. And in a typical case one might want to import expressions from, say, a .wl file, then manipulate them in <tt>ExprStruct</tt> form. In Version 13.1 <tt><a href='http://reference.wolfram.com/language/ref/Import.html'>Import</a></tt> now supports an <tt>ExprStructs</tt> import element:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg15.png" alt='Import' title='Import' width='569' height='158' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg14_copy.txt">
					<span class='close' id='14threesections_out'>&amp;#10005</span></p>
<pre class='text' id='14threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This selects expressions that correspond to definitions, in the sense that they have <tt><a href='http://reference.wolfram.com/language/ref/SetDelayed.html'>SetDelayed</a></tt> as their head:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg16.png" alt='Select' title='Select' width='565' height='141' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg16_copy.txt">
					<span class='close' id='16threesections_out'>&amp;#10005</span></p>
<pre class='text' id='16threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a visualization of the first one:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg17.png" alt='First' title='First' width='208' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg17_copy.txt">
					<span class='close' id='17threesections_out'>&amp;#10005</span></p>
<pre class='text' id='17threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='super-efficient-compiler-based-external-code-interaction'>Super-Efficient Compiler-Based External Code Interaction</h2>
<p>Let’s say you’ve got external code that’s in a compiled C-compatible dynamic library. An important new capability in Version 13.1 is a super-efficient and very streamlined way to call any function in a dynamic library directly from within the <a href='https://www.wolfram.com/language/'>Wolfram Language.</a></p>
<p>It’s one of the accelerating stream of developments that are being made possible by the large-scale infrastructure build-out that we’ve been doing in connection with the new Wolfram Language compiler—and in particular it often leverages our sophisticated new type-handling capabilities. </p>
<p>As a first example, let’s consider the <a href='https://www.openssl.org/docs/manmaster/man3/RAND_bytes.html' target=_blank rel=noopener>RAND_bytes (&#8220;cryptographically secure pseudorandom number generator&#8221;) function in OpenSSL</a>. The C declaration for this function is:</p>
<p><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060822coderinteraction.png" alt='C declaration' title='C declaration' width='319' height='' /></p>
<p>In Version 13.1 we now have a symbolic way to represent such a declaration directly in the Wolfram Language:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg18.png" alt='dec = LibraryFunctionDeclaration' title='dec = LibraryFunctionDeclaration' width='613' height='59' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg18_copy.txt">
					<span class='close' id='18threesections_out'>&amp;#10005</span></p>
<pre class='text' id='18threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(In general we’d also have to specify the library that this function is coming from. OpenSSL happens to be a library that’s loaded by default with the Wolfram Language so you don’t need to mention it.)</p>
<p>There are quite a few new things going on in the declaration. First, as part of our collection of compiled types, we’re adding ones like <tt>"CInt"</tt> and <tt>"CChar"</tt> that refer to raw C language types (here <span style="font-weight:Regular;font-family:Automatic">int</span> and <span style="font-weight:Regular;font-family:Automatic">char</span>). There’s also <tt><a href='https://reference.wolfram.com/language/SymbolicC/ref/CArray.html'>CArray</a></tt> which is for declaring C arrays. Notice the new <tt>::[ ... ]</tt> syntax for <tt><a href='https://reference.wolfram.com/language/ref/TypeSpecifier.html'>TypeSpecifier</a></tt> that allows compact specifications for parametrized types, like the <span style="font-weight:Regular;font-family:Automatic">char</span>* here, that is described in Wolfram Language as <tt><a href="https://reference.wolfram.com/language/ref/compiledtype/CArray.html">"CArray"</a>::["CChar"]</tt>. </p>
<p>Having set up the declaration, we now need to create an actual function that can take an argument from Wolfram Language, convert it to something suitable for the library function, then call the library function, and convert the result back to Wolfram Language form. Here’s a way to do that in this case:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/07/sw073022threesectionsimg19.png" alt='cf = FunctionCompile' title='cf = FunctionCompile' width='571' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/07/sw073022threesectionsimg19A_copy.txt">
					<span class='close' id='19threesections_out'>&amp;#10005</span></p>
<pre class='text' id='19threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What we get back is a compiled code function that we can directly use, and that works by very efficiently calling the library function:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/07/sw073022threesectionsimg20.png" alt='cf' title='cf' width='597' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/07/sw073022threesectionsimg20A_copy.txt">
					<span class='close' id='20threesections_out'>&amp;#10005</span></p>
<pre class='text' id='20threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The <tt><a href='https://reference.wolfram.com/language/ref/FunctionCompile.html'>FunctionCompile</a></tt> above uses several constructs that are new in Version 13.1. What it fundamentally does is to take a Wolfram Language integer (which it assumes to be a machine integer), cast it into a C integer, then pass this to the library function, along with a specification of a C <span style="font-weight:Regular;font-family:Automatic">char</span> * into which the library function will put its result, and from which the final Wolfram Language result will be retrieved.</p>
<p>It’s worth emphasizing that most of the complexity here has to do with handling data types and conversions between them—something that the Wolfram Language goes to a lot of trouble to avoid usually exposing the user to. But when we’re connecting to external languages that make fundamental use of types, there’s no choice but to deal with them, and the complexity they involve. </p>
<p>In the <tt><a href='https://reference.wolfram.com/language/ref/FunctionCompile.html'>FunctionCompile</a></tt> above the first new construct we encounter is</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg21.png" alt='CreateTypeInstance' title='CreateTypeInstance' width='403' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg21_copy.txt">
					<span class='close' id='21threesections_out'>&amp;#10005</span></p>
<pre class='text' id='21threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The basic purpose of this is to create the buffer into which the external function will write its results. The buffer is an array of bytes, declared in C as <span style="font-weight:Regular;font-family:Automatic">char</span> <tt>*</tt>, or here as <tt><a href="https://reference.wolfram.com/language/ref/compiledtype/CArray.html">"CArray"</a>::["CChar"]</tt>. There’s an actual wrinkle though: who’s going to manage the memory associated with this array? The <tt>"Managed"::</tt> type specifier says that the Wolfram Language wrapper will do memory management for this object.</p>
<p>The next new construct we see in the <tt><a href='https://reference.wolfram.com/language/ref/FunctionCompile.html'>FunctionCompile</a></tt> is</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg22.png" alt='Cast' title='Cast' width='113' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg22_copy.txt">
					<span class='close' id='22threesections_out'>&amp;#10005</span></p>
<pre class='text' id='22threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/Cast.html'>Cast</a></tt> is one of a family of new functions that can appear in compilable code, but have no significance outside the compiler. <tt><a href='https://reference.wolfram.com/language/ref/Cast.html'>Cast</a></tt> is used to specify that data should be converted to a form consistent with a specified type (here a C <span style="font-weight:Regular;font-family:Automatic">int</span> type).</p>
<p>The core of the <tt><a href='https://reference.wolfram.com/language/ref/FunctionCompile.html'>FunctionCompile</a></tt> is the use of <tt><a href='https://reference.wolfram.com/language/ref/LibraryFunction.html'>LibraryFunction</a></tt>, which is what actually calls the external library function that we declared with the library function declaration. </p>
<p>The last step in the function compiled by <tt><a href='https://reference.wolfram.com/language/ref/FunctionCompile.html'>FunctionCompile</a></tt> is to extract data from the C array and return it as a Wolfram Language list. To do this requires the new function <tt><a href='https://reference.wolfram.com/language/ref/FromRawPointer.html'>FromRawPointer</a></tt>, which actually retrieves data from a specified location in memory. (And, yes, this is a raw dereferencing operation that will cause a crash if it isn’t done correctly.)</p>
<p>All of this may at first seem rather complicated, but for what it’s doing, it’s remarkably simple—and greatly leverages the whole symbolic structure of the Wolfram Language. It’s also worth realizing that in this particular example, we’re just dipping into compiled code and then returning results. In larger-scale cases we’d be doing many more operations—typically specified directly by top-level Wolfram Language code—within compiled code, and so type declaration and conversion operations would be a smaller fraction of the code we have to write.</p>
<p>One feature of the example we’ve just looked at is that it only uses built-in types. But in Version 13.1 it’s now possible to define custom types, such as the analog of C structs. As an example, consider the function <span style="font-weight:Regular;font-family:Automatic">ldiv</span> from the C standard library. This function returns an object of type <span style="font-weight:Regular;font-family:Automatic">ldiv_t</span>, defined by the following <span style="font-weight:Regular;font-family:Automatic">typedef</span>:</p>
<p><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060822typedef.png" alt='typedef' title='typedef' width='284' height='' /></p>
<p>Here’s the Wolfram Language version of this declaration, based on setting up a <tt>"Product"</tt> type named <tt>"CLDivT"</tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg23.png" alt='divtdec = TypeDeclaration' title='divtdec = TypeDeclaration' width='621' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg23_copy.txt">
					<span class='close' id='23threesections_out'>&amp;#10005</span></p>
<pre class='text' id='23threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(The <tt>"ReferenceSemantics"</tt><img src="https://s.w.org/images/core/emoji/2.2.1/72x72/2192.png" alt="→" class="wp-smiley" style="height: 1em; max-height: 1em;" /><tt><a href='https://reference.wolfram.com/language/ref/False.html'>False</a></tt> option specifies that this type will actually be passed around as a value, rather than just a pointer to a value.) </p>
<p>Now the declaration for the <tt>ldiv</tt> function can use this new custom type:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg24.png" alt='divdec = LibraryFunctionDeclaration' title='divdec = LibraryFunctionDeclaration' width='614' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg24_copy.txt">
					<span class='close' id='24threesections_out'>&amp;#10005</span></p>
<pre class='text' id='24threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The final definition of the call to the external <tt>ldiv</tt> function is then:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg25.png" alt='divQR = FunctionCompile' title='divQR = FunctionCompile' width='543' height='203' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg25_copy.txt">
					<span class='close' id='25threesections_out'>&amp;#10005</span></p>
<pre class='text' id='25threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now we can use the function (and, yes, it will be as efficient as if we’d directly written everything in C):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg26.png" alt='divQR' title='divQR' width='142' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg26_copy.txt">
					<span class='close' id='26threesections_out'>&amp;#10005</span></p>
<pre class='text' id='26threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The examples we’ve given here are very small ones. But the whole structure for external function calls that’s now in Version 13.1 is set up to handle large and complex situations—and indeed we’ve been using it internally with great success to set up important new built-in pieces of the Wolfram Language. </p>
<p>One of the elements that’s often needed in more complex situations is more sophisticated memory management, and our new <tt>"Managed"</tt> type provides a convenient and streamlined way to do this. </p>
<p>This makes a compiled function that creates an array of 10,000 machine integers:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg27.png" alt='cf = FunctionCompile' title='cf = FunctionCompile' width='493' height='107' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg27_copy.txt">
					<span class='close' id='27threesections_out'>&amp;#10005</span></p>
<pre class='text' id='27threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Running the function effectively “leaks” memory:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg28.png" alt='With' title='With' width='508' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg28_copy.txt">
					<span class='close' id='28threesections_out'>&amp;#10005</span></p>
<pre class='text' id='28threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But now define a version of the function in which the array is “managed”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg29.png" alt='cf = FunctionCompile' title='cf = FunctionCompile' width='583' height='107' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg29_copy.txt">
					<span class='close' id='29threesections_out'>&amp;#10005</span></p>
<pre class='text' id='29threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now the memory associated with the array is automatically freed when it is no longer referenced:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg30.png" alt='With' title='With' width='508' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822threesectionsimg30_copy.txt">
					<span class='close' id='30threesections_out'>&amp;#10005</span></p>
<pre class='text' id='30threesections_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='directly-compiling-function-definitions-'>Directly Compiling Function Definitions </h2>
<p>If you have an explicit pure function (<tt><a href='https://reference.wolfram.com/language/ref/Function.html'>Function</a></tt><tt>[...]</tt>) you can use <tt><a href='https://reference.wolfram.com/language/ref/FunctionCompile.html'>FunctionCompile</a></tt> to produce a compiled version of it. But what if you have a function that’s defined using downvalues, as in:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg1.png" alt='fac' title='fac' width='250' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg1_copy.txt">
					<span class='close' id='1compfunction_out'>&amp;#10005</span></p>
<pre class='text' id='1compfunction_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Version 13.1 you can directly compile function definitions like this. But—as is the nature of compilation—you have declare what types are involved. Here is a declaration for the function <tt>fac</tt> that says it takes a single machine integer, and returns a machine integer:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg2.png" alt='dec = FunctionDeclaration' title='dec = FunctionDeclaration' width='608' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg2_copy.txt">
					<span class='close' id='2compfunction_out'>&amp;#10005</span></p>
<pre class='text' id='2compfunction_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can create a compiled function that computes <tt>fac[n]</tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg3.png" alt='cfac = FunctionCompile' title='cfac = FunctionCompile' width='548' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg3_copy.txt">
					<span class='close' id='3compfunction_out'>&amp;#10005</span></p>
<pre class='text' id='3compfunction_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The compiled function runs significantly faster than the ordinary symbolic definition:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg4.png" alt='RepeatedTiming' title='RepeatedTiming' width='311' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg4_copy.txt">
					<span class='close' id='4compfunction_out'>&amp;#10005</span></p>
<pre class='text' id='4compfunction_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg5.png" alt='RepeatedTiming' title='RepeatedTiming' width='311' height='54' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compfunctionimg5_copy.txt">
					<span class='close' id='5compfunction_out'>&amp;#10005</span></p>
<pre class='text' id='5compfunction_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The ability to declare and use downvalue definitions in compilation has the important feature that it allows you to write a definition just once, and then use it both directly, and in compiled code.</p>
<h2 id='manipulating-expressions-in-compiled-code'>Manipulating Expressions in Compiled Code</h2>
<p>An early focus of the Wolfram Language compiler is handling low-level “machine” types, such as integers or reals of certain lengths. But one of the advances in the Version 13.1 compiler is direct support for an <tt><a href='https://reference.wolfram.com/language/ref/compiledtype/InertExpression.html'>"InertExpression"</a></tt> type for representing any Wolfram Language expression within compiled code. </p>
<p>When you use something like <tt><a href='https://reference.wolfram.com/language/ref/FunctionCompile.html'>FunctionCompile</a></tt>, it will explicitly try to compile whatever Wolfram Language expressions it’s given. But if you wrap the expressions with <tt><a href='https://reference.wolfram.com/language/ref/InertExpression.html'>InertExpression</a></tt> the compiler will then just treat the expressions as inert structural objects of type <tt><a href='https://reference.wolfram.com/language/ref/compiledtype/InertExpression.html'>"InertExpression"</a></tt>. This sets up a compiled function that constructs an expression (implicitly of type <tt><a href='https://reference.wolfram.com/language/ref/compiledtype/InertExpression.html'>"InertExpression"</a></tt>):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compiledcodeimg1.png" alt='cf = FunctionCompile' title='cf = FunctionCompile' width='603' height='157' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compiledcodeimg1_copy.txt">
					<span class='close' id='1cc_out'>&amp;#10005</span></p>
<pre class='text' id='1cc_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Evaluating the function constructs and then returns the expression:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compiledcodeimg2.png" alt='cf' title='cf' width='110' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compiledcodeimg2_copy.txt">
					<span class='close' id='2cc_out'>&amp;#10005</span></p>
<pre class='text' id='2cc_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Normally, within the compiler, an <tt><a href='https://reference.wolfram.com/language/ref/compiledtype/InertExpression.html'>"InertExpression"</a></tt> object will be treated in a purely structural way, without any evaluation (and, yes, it’s closely related to the <tt><a href='https://reference.wolfram.com/language/ref/datastructure/ExprStruct.html'>"ExprStruct"</a></tt><tt> </tt>data structure). But sometimes it’s useful to perform evaluation on it, and you can do this with <tt><a href='https://reference.wolfram.com/language/ref/InertEvaluate.html'>InertEvaluate</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compiledcodeimg3.png" alt='cf = FunctionCompile' title='cf = FunctionCompile' width='615' height='143' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compiledcodeimg3_copy.txt">
					<span class='close' id='3cc_out'>&amp;#10005</span></p>
<pre class='text' id='3cc_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now the <tt><a href='https://reference.wolfram.com/language/ref/InertEvaluate.html'>InertEvaluate</a></tt> does the evaluation before wrapping <tt><a href='https://reference.wolfram.com/language/ref/Hold.html'>Hold</a></tt> around the inert expression:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compiledcodeimg4.png" alt='cf' title='cf' width='90' height='51' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822compiledcodeimg4_copy.txt">
					<span class='close' id='4cc_out'>&amp;#10005</span></p>
<pre class='text' id='4cc_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The ability to handle expressions directly in the compiler might seem like some kind of detail. But it’s actually hugely important in opening up possibilities for future development with the Wolfram Language. For the past 35 years, we’ve internally been able to write low-level expression manipulation code as part of the C language core of the Wolfram Language kernel. But the ability of the Wolfram Language compiler to handle expressions now opens this up—and lets anyone write maximally efficient code for manipulating expressions that interoperate with everything else in the Wolfram Language. </p>
<h2 id='and-still-more'>And Still More&#8230;</h2>
<p>Even beyond all the things I’ve discussed so far, there are all sorts of further additions and enhancements in Version 13.1, dotted throughout the system.</p>
<p><tt><a href='https://reference.wolfram.com/language/ref/InfiniteLineThrough.html'>InfiniteLineThrough</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/CircularArcThrough.html'>CircularArcThrough</a></tt> have been added for geometric computation, and geometric scene specification. Geometric scenes can now be styled for custom presentation:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg1.png" alt='RandomInstance' title='RandomInstance' width='610' height='347' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg1_copy.txt">
					<span class='close' id='1sm_out'>&amp;#10005</span></p>
<pre class='text' id='1sm_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are new graph functions: <tt><a href='https://reference.wolfram.com/language/ref/GraphProduct.html'>GraphProduct</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/GraphSum.html'>GraphSum</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/GraphJoin.html'>GraphJoin</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg2.png" alt='GraphProduct' title='GraphProduct' width='262' height='197' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg2_copy.txt">
					<span class='close' id='2sm_out'>&amp;#10005</span></p>
<pre class='text' id='2sm_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And there are new built-in families of graphs: <tt><a href='https://reference.wolfram.com/language/ref/TorusGraph.html'>TorusGraph</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/BuckyballGraph.html'>BuckyballGraph</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg3.png" alt='BuckyballGraph' title='BuckyballGraph' width='213' height='199' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg3_copy.txt">
					<span class='close' id='3sm_out'>&amp;#10005</span></p>
<pre class='text' id='3sm_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can mix images directly into <tt><a href='https://reference.wolfram.com/language/ref/Graphics.html'>Graphics</a></tt> (and <tt><a href='https://reference.wolfram.com/language/ref/Graphics3D.html'>Graphics3D</a></tt>):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg4.png" alt='Graphics' title='Graphics' width='346' height='131' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg4A_copy.txt">
					<span class='close' id='A4sm_out'>&amp;#10005</span></p>
<pre class='text' id='A4sm_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/AbsoluteOptions.html'>AbsoluteOptions</a></tt> now resolves many more options in <tt><a href='https://reference.wolfram.com/language/ref/Graphics.html'>Graphics</a></tt>, telling you what explicit value was used when you gave an option just as <tt><a href='https://reference.wolfram.com/language/ref/Automatic.html'>Automatic</a></tt>.</p>
<p>The function <tt><a href='https://reference.wolfram.com/language/ref/LeafCount.html'>LeafCount</a></tt> now has a <tt><a href='https://reference.wolfram.com/language/ref/Heads.html'>Heads</a></tt> option, to count expression branches inside heads. <tt><a href='https://reference.wolfram.com/language/ref/Splice.html'>Splice</a></tt> works with any head, not just <tt><a href="https://reference.wolfram.com/language/ref/List.html">List</a></tt>. Functions like <tt><a href='https://reference.wolfram.com/language/ref/IntersectingQ.html'>IntersectingQ</a></tt> now have <tt><a href='https://reference.wolfram.com/language/ref/SameTest.html'>SameTest</a></tt> options. You can specify <tt><a href='https://reference.wolfram.com/language/ref/TimeZone.html'>TimeZone</a></tt> options using geographic entities (like cities).</p>
<p><tt><a href='https://reference.wolfram.com/language/ref/FindClusters.html'>FindClusters</a></tt> now lets you specify exactly how many clusters you want to partition your data into, as well as supporting <tt><a href='https://reference.wolfram.com/language/ref/UpTo.html'>UpTo</a></tt><tt>[n]</tt>.</p>
<p>In neural nets, <tt><a href='https://reference.wolfram.com/language/ref/ElementwiseLayer.html'>ElementwiseLayer</a></tt> now supports “modern” nonconvex nonmonotonic activation functions like Mish and GELU, <tt><a href='https://reference.wolfram.com/language/ref/AttentionLayer.html'>AttentionLayer</a></tt> supports dropout and local masking, <tt><a href='https://reference.wolfram.com/language/ref/ReplicateLayer.html'>ReplicateLayer</a></tt> now supports integer arrays, and <tt><a href='https://reference.wolfram.com/language/ref/RandomArrayLayer.html'>RandomArrayLayer</a></tt> supports further statistical distributions. <tt><a href='https://reference.wolfram.com/language/ref/NetTrain.html'>NetTrain</a></tt> now handles multioutput and nonscalar losses. <tt><a href='https://reference.wolfram.com/language/ref/Image.html'>Image</a></tt> encoders and decoders support resampling and padding, and there’s now support for nuclear sampling. Our support for the ONNX transfer format continues to grow, with net operators added in Version 13.1.</p>
<p><tt><a href='https://reference.wolfram.com/language/ref/CenteredInterval.html'>CenteredInterval</a></tt>—introduced in <a href='https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/'>Version 13.0</a>—now supports 36 further special functions (and, yes, each one needs theorems proved to make this work).</p>
<p>There’ll be more coming on this in subsequent versions, but in Version 13.1 we’re beginning the introduction of structured matrices that are stored and computed with in special, optimized ways. Examples include <tt><a href='https://reference.wolfram.com/language/ref/PermutationMatrix.html'>PermutationMatrix</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/LowerTriangularMatrix.html'>LowerTriangularMatrix</a></tt>.</p>
<p>We’ve had extensive support for computational microscopy for a while. But in Version 13.1 the <tt>"BioImageFormat"</tt> <tt><a href='https://reference.wolfram.com/language/ref/Import.html'>Import</a></tt> format now adds importing of the more than 160 raw image formats used by different kinds of microscopes.</p>
<p>Version 13.0 dramatically expanded our ability to import PDF. We’ve further enhanced this in Version 13.1, for example allowing positioned text to be imported into graphics as <tt><a href='https://reference.wolfram.com/language/ref/Text.html'>Text</a></tt> primitives.</p>
<p>We’ve supported standard text styles like bold and italic forever, but now we have a standard way to handle struckthrough text as well:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg5.png" alt='Style' title='Style' width='260' height='60' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw062822stilmoreimg5_copy.txt">
					<span class='close' id='5sm_out'>&amp;#10005</span></p>
<pre class='text' id='5sm_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In addition to all these “inside-the-system” enhancements, we’ve also finished making it possible to download desktop versions of Wolfram Language on all platforms (including Linux) while leaving documentation on the web. Documentation installation can also now be configured globally on a per-machine basis, rather than just on a per-user basis.</p>
<p>So—as of today, documentation or not—you can get Version 13.1 on your computer. Oh, and the <a href='https://www.wolfram.com/cloud/'>Wolfram Cloud</a> has also now been updated to use Version 13.1. I hope you enjoy the new features, and this next step on the epic journey of Mathematica and the Wolfram Language.</p>
<p style="font-style: italic; color: #555;">
<style type="text/css">
div.bottomstripe { 
    max-width:620px; 
    margin-bottom:10px;
    background-color: #fff39a;
    border: solid 2px #ffd400;
    padding: 7px 10px 7px 10px;
        line-height: 1.2;}
#blog .post_content .bottomstripe a,
    #blog .post_content .bottomstripe a:link,
    #blog .post_content .bottomstripe a:visited {
     font-family:"Source Sans Pro",Arial,Sans Serif; 
     font-size:11pt; 
     color:#aa0d00;}
</style>
<div class="bottomstripe">
<a href="https://wolfram.com/get-upgrade/"><strong>Download your 13.1 now! »&nbsp;</strong> (It’s already live in the Wolfram Cloud!)</a>
</div>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2022/06/launching-version-13-1-of-wolfram-language-mathematica/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
<enclosure url="https://content.wolfram.com/uploads/sites/43/2022/06/video4_out_SWVideo-01.mp4" length="4306758" type="video/mp4" />
<enclosure url="https://content.wolfram.com/uploads/sites/43/2022/06/video5_out_VideoCapture-Demonstrations-480p.mp4" length="268435" type="video/mp4" />
<enclosure url="https://content.wolfram.com/uploads/sites/43/2022/06/video3_out_spikeyvideo.mp4" length="770262" type="video/mp4" />
<enclosure url="https://content.wolfram.com/uploads/sites/43/2022/06/video9_out_elephant.mov" length="673930" type="video/quicktime" />
<enclosure url="https://content.wolfram.com/uploads/sites/43/2022/06/video8_out_wolves.mov" length="678546" type="video/quicktime" />
<enclosure url="https://content.wolfram.com/uploads/sites/43/2022/06/video1_out_dolly-zoom-v4.mp4" length="893423" type="video/mp4" />
<enclosure url="https://content.wolfram.com/uploads/sites/43/2022/06/video2_out_graphic3d-whacky2.mp4" length="1379645" type="video/mp4" />
		</item>
		<item>
		<title>Alien Intelligence and the Concept of Technology</title>
		<link>https://writings.stephenwolfram.com/2022/06/alien-intelligence-and-the-concept-of-technology/</link>
		<comments>https://writings.stephenwolfram.com/2022/06/alien-intelligence-and-the-concept-of-technology/#comments</comments>
		<pubDate>Thu, 16 Jun 2022 21:58:28 +0000</pubDate>
		<dc:creator><![CDATA[Bailey Long]]></dc:creator>
				<category><![CDATA[Future Perspectives]]></category>
		<category><![CDATA[Language and Communication]]></category>
		<category><![CDATA[Philosophy]]></category>
		<category><![CDATA[Ruliology]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=38447</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/06/alien-intell-tile.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>The Nature of Alien Intelligence “We’re going to launch lots of tiny spacecraft into interstellar space, have them discover alien intelligence, then bring back its technology to advance human technology by a million years”. I’ve heard some pretty wacky startup pitches over the years, but this might possibly be the all-time winner. But as I [&#8230;]]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/06/alien-intell-tile.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><h2 id='the-nature-of-alien-intelligence'>The Nature of Alien Intelligence</h2>
<p>“We’re going to launch lots of tiny spacecraft into interstellar space, have them discover alien intelligence, then bring back its technology to advance human technology by a million years”. I’ve heard some pretty <a href='https://writings.stephenwolfram.com/2018/04/buzzword-convergence-making-sense-of-quantum-neural-blockchain-ai/'>wacky startup pitches</a> over the years, but this might possibly be the all-time winner. </p>
<p>But as I thought about it, I realized that beyond the “absurdly extreme moonshot” character of this pitch, there’s some science that I’ve done that makes it clear that it’s also fundamentally philosophically confused. The nature of the confusion is interesting, however, and untangling it will give us an opportunity to illuminate some deep features of both intelligence and technology—and in the end suggest a way to think about the long-term trajectory of the very concept of technology and its relation to our universe.</p>
<p>Let’s start with a scenario. Let’s say one of the little spacecraft comes across a planet where it sees complicated swirling patterns:</p>
<table>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw061622img1a.png" alt='The Jupiter Great Red Spot' title='The Jupiter Great Red Spot' width='564' height='368' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw061622img1a_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><span id="more-38447"></span></p>
<p><spacer></p>
<p>The spacecraft sends out a probe to “make contact”. The swirling pattern “responds” by changing slightly. The spacecraft analyzes the change, and sends out another probe. And pretty soon there’s a whole “conversation” going on between the spacecraft and the planet. But, you might say, that’s nothing like an “intelligence” there; there’s just a “pure physical system” that operates through physical laws. </p>
<p>OK, but now let’s imagine the spacecraft has returned to Earth and is checking it out. It detects complicated <a href='https://www.wolframscience.com/nks/notes-12-10--artificial-radio-signals/'>patterns of radio signals</a>. It sends out a radio signal of its own. Something on Earth responds. A “conversation” ensues. Maybe the spacecraft is “talking to” a cellphone tower, doing automated handshakes with it. Maybe it reached a ham radio operator, and is exchanging Morse code with them. Or maybe—in an ultimate version of code injection—there’s a computer that’s interpreting the spacecraft’s signals as a program, and is sending back the results of running the program.</p>
<p>It all seems quite sophisticated—and at some level worthy of the technological civilization we’ve built up here on Earth. But let’s zoom out a bit. There’s something coming from the spacecraft, that’s causing something to happen on Earth, that’s causing something to be returned to the spacecraft.</p>
<p>And ultimately whatever is happening on Earth must be a physical process of some kind—operating according to the laws of physics. So what’s the difference between this and those swirling “just physics” patterns that the spacecraft found on the other planet? Everything is ultimately “just physics” after all. </p>
<p>OK, you might say, that’s surely true. But on Earth, even though we might have started from physics, we’ve somehow now “ascended” through chemistry and biology and technology to get to something that’s fundamentally more sophisticated. But here we run into an important—if at first surprising—piece of basic science: my <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a>. </p>
<p>Let’s say we represent all those “physical processes” as computations (and our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> implies that all of physics is indeed ultimately computational). Now we can compare the computations that correspond to the planet with the swirling patterns to the ones that correspond to our Earth with us humans in the loop.</p>
<p>And what the Principle of Computational Equivalence tells us is that they’re ultimately equivalent. The computations associated with the swirling patterns are ultimately just as sophisticated as the ones we achieve with our brains and our technology here on Earth. It’s far from obvious that this would be true. But it’s something one discovers when one <a href='https://www.wolframscience.com/nksonline/toc.html'>explores the computational universe of possible programs</a>.</p>
<p>One might think that simple programs would produce only simple behavior, and that somehow the behavior would get progressively more complex with more complicated programs. But that’s not what one finds. Instead, there’s <a href='https://writings.stephenwolfram.com/2017/05/a-new-kind-of-science-a-15-year-view/'>increasing evidence</a> that almost any program that doesn’t show obviously simple behavior can in fact show behavior that is as sophisticated as anything. </p>
<p>It’s been known for about a century that there exist computation universal systems capable of being “programmed” to do essentially any computation. But what the Principle of Computational Equivalence says is that sophisticated computation is not only possible—even for simple programs—but is something that happens generically and ubiquitously. </p>
<p>So what does this mean for our spacecraft? It means that what the spacecraft sees on Earth can be computationally no more sophisticated than what it sees on the planet with the swirling patterns. Yes, we consider there to be “intelligence” here on Earth. But what the Principle of Computational Equivalence tells us is that ultimately there’s <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-10--intelligence-in-the-universe'>nothing abstractly different going on</a> from what’s going on in the swirling patterns.</p>
<p>So if we characterize what’s going on here on Earth as an example of “intelligence” we really should say that those swirling patterns are also “examples of intelligence”. And, yes, it doesn’t seem much like human intelligence. But at an abstract computational level it’s really operating like intelligence—but to us humans it’s “alien intelligence”.</p>
<p>There’s a common saying: “The weather has a mind of its own”. And what the Principle of Computational Equivalence tells us is that, yes, fluid dynamics in the atmosphere—and all the swirling patterns associated with it—are examples of computation that are just as sophisticated as those associated with human minds.</p>
<p>But, OK, so there’s a sense in which the weather “has a mind of its own”. But it’s definitely not a “human-like mind”. Yes, the weather does sophisticated computations. But there’s no obvious way to attribute to those computations the purposes and intentions and other typical features of how we describe what goes on in a human mind. So if indeed we’re going to talk about the weather as being an intelligence, for us humans we have to consider it an “alien intelligence”.</p>
<p>We started off talking about spacecraft going out into the cosmos to discover alien intelligence. But what the Principle Computational Equivalence is telling us is that actually there’s what we can think of as alien intelligence all around us. Yes, we humans have managed to get to the point where we do all sorts of sophisticated computations. But computations of just the same sophistication are being done in all sorts of systems that don’t have that whole human tower of biology and technology.</p>
<p>For a long time it’s been a mystery why we’ve <a href='https://www.wolframscience.com/nks/p822--intelligence-in-the-universe/'>never detected alien intelligence</a> out there in the cosmos. But actually I think there’s no lack of “alien intelligence”; indeed it’s all around us. But the point is that it really is alien. At an abstract computational level it’s like our intelligence. But in its <a href='https://writings.stephenwolfram.com/2018/01/showing-off-to-the-universe-beacons-for-the-afterlife-of-our-civilization/'>details it&#8217;s not aligned with our intelligence</a>. Abstractly it’s intelligence, but it’s not human-like intelligence. It’s alien intelligence.</p>
<h2 id='the-role-of-science-and-technology'>The Role of Science and Technology</h2>
<p>OK, so we can think of lots of systems as being examples of “alien intelligence”. But how does that alien intelligence connect to our human intelligence? Sometimes it’s close enough that we humans can immediately “anthropomorphize” the system to “understand what it’s doing in human terms”. But often we need to put effort into “making a bridge”. And in fact we can view that as being what science and technology are ultimately trying to do. </p>
<p>Let&#8217;s say we&#8217;re looking at swirling patterns in a fluid. The fluid is doing what it does, in effect continually running a computation that generates its behavior. But how can we &#8220;align&#8221; that with what&#8217;s going on in our brains? That&#8217;s where science comes in. Because what science is trying to do is to extract some kind of &#8220;human-relatable narrative&#8221; from the actual behavior of a system out there in the world. Or in some sense it’s trying to provide a “channel” through which we can <a href='https://writings.stephenwolfram.com/2018/01/showing-off-to-the-universe-beacons-for-the-afterlife-of-our-civilization/'>&#8220;communicate&#8221; with the &#8220;alien intelligence&#8221;</a> that is embodied in what’s out there in the world.</p>
<p>So what about technology? Fundamentally <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-11--implications-for-technology'>technology is about trying to take what exists</a> out there in the world, and apply it to achieve human purposes. We have a fluid. Now we use it to create hydraulic technology that achieves some practical human purpose. We can see the history of technology as being a progressive effort to identify things out there in the world (metal ore, photoelectricity, liquid crystals, &#8230;) that can be sampled and fashioned in such a way as to achieve certain purposes we want.</p>
<p>And insofar as we think of what’s out there in the world as being like alien intelligence, what technology is doing is finding ways to corral that intelligence into achieving human purposes. The truth is that in most of our technology today, we’re not letting that intelligence really do <a href='https://www.wolframscience.com/nks/chap-2--the-crucial-experiment#sect-2-2--the-need-for-a-new-intuition'>anything close to what it&#8217;s capable of</a>. We’re keeping it tightly constrained to take only steps that we can readily understand and foresee. It’s a bit like having a horse with a harness that constrains it to just walk slowly in a straight line—even though without the harness the horse could gallop around and do all sorts of elaborate things, albeit things that we might not readily be able to understand or foresee.</p>
<p>So let’s come back to the spacecraft. It’s reached a planet. And it’s interacting with what’s there. Perhaps there’s some weird electrical storm going on. And, yes, we can think of that as an example of alien intelligence. But if the mission of the spacecraft is to discover technology then what it needs to do is to figure out whether there’s some way to interact with the electrical storm so as to achieve some human purpose.</p>
<p>The storm does what the storm does. But maybe by moving some piece of metal around in just the right way it’s possible to get the storm to charge a battery. Or, more elaborately, perhaps processes in the storm could be used like an analog computer, say to compute solutions to equations. And perhaps—having seen the storm on this planet—it’s even possible to “bottle it up” and replicate it, say in a piece of consumer electronics.</p>
<p>One way to describe what’s going on is just to say rather prosaically that we discovered a phenomenon on the planet, that we were able to use for technology. But more colorfully we could say that we encountered an alien intelligence, we found a way to communicate with it, and then we “brought back” technology from it.</p>
<p>The original startup pitch was about spacecraft getting technology by discovering alien intelligence out in the cosmos. But really the whole spacecraft thing is a distraction. Because actually—as we’ve discussed—there’s plenty we can describe as “alien intelligence” all around us, even right here on Earth. And the issue is in a sense just how to “<a href='https://writings.stephenwolfram.com/2018/01/showing-off-to-the-universe-beacons-for-the-afterlife-of-our-civilization/'>communicate with it</a>” and find ways to “harness it” for our technological purposes.</p>
<p>We’ve learned in the past century that we can use electrons in semiconductors as a way to build computers. But what about other physical processes? Maybe flowing fluids, for example. Can we use that “alien intelligence” to make a new kind of computer? In the end, the point is that any technology is about finding and harnessing “alien intelligence”. That’s basically just what technology is, and always has been.</p>
<p>The whole “alien intelligence” part of the story, though, is much more relevant when we’re thinking of technology that makes serious use of what we can identify as sophisticated computation. If we’re just using a system from nature for its physical mass, it doesn’t really feel as if we’re using its “intelligence”. But as soon as we try, for example, to base a general computer on it, it’s a quite different story. </p>
<p>In getting technology from the universe we’re basically picking out certain aspects of what exists and choosing to apply these for our purposes. In doing science it seems like we have “less choice” about what aspects of the universe we deal with. After all, we might imagine that science is trying to give us a way to understand anything that’s out there in the universe. But in reality it’s much more like technology. The “scientific narratives” that we understand—at least at a given time in history—are ones that we’re in a sense “primed for”. Yes, something like <a href='https://www.wolframscience.com/nks/chap-8--implications-for-everyday-systems#sect-8-4--fluid-flow'>fluid turbulence</a> might give us “in-your-face” exposure to something computationally sophisticated that’s far from what we normally talk about. But what science mostly concentrates on is <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>creating narratives that are aligned</a> with our existing scientific understanding and discussions—much as technology is set up to be about things that are aligned with our existing human purposes.</p>
<h2 id='extracting-technology-from-the-ruliad'>Extracting Technology from the Ruliad</h2>
<p>One might imagine that—wherever it ultimately comes from—technology must at least always in the end be based on the laws of physics. But what’s emerging from our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> is that actually the story is considerably more complicated than that. </p>
<p>It all begins with <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>: the object that represents the entangled limit of all possible computations. The ruliad is a unique, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>formally necessary object</a>, that in a sense embodies all conceivable existence. And inevitably we are embedded within the ruliad, sampling certain aspects of it to <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>form our perception of reality</a>.</p>
<p>In principle there are <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#alien-views-of-the-ruliad'>all sorts of kinds of observers of the ruliad</a>, with all sorts of kinds of perceptions of reality. But the key point that has emerged as a foundation of our Physics Project is that “<a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#observers-like-us'>observers like us</a>” have certain general characteristics—specifically that we assume that we are persistent through time, and also that we are computationally bounded—and from these characteristics alone, we can abstractly deduce from the structure of the ruliad that we must “experience” core standard laws of known physics.</p>
<p>The ruliad in a sense contains all possible physicses. But it’s our particular kind of sampling of the ruliad that leads us to the particular laws of physics that we currently know. An “alien intelligence” might sample the ruliad quite differently, and thus in effect “experience” quite different laws of physics.</p>
<p>Somewhere underneath everything we can think of there being a <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#what-is-space'>giant hypergraph of individual atoms of existence</a>—but with the means of perception observers like us have, we inevitably “coarse grain” to the point where, for example, we experience this as continuous space. Another kind of observer, with different characteristics, might, for example, not do that coarse graining, might never experience continuous space, and might have a completely different perception of how the universe works.</p>
<p>In some sense, therefore, physics is much more like technology than we might expect. There isn’t an “absolute physics”. There’s just the physics that we as observers extract from the ruliad. Much like there’s particular technology that we choose to build from the “raw material” that exists. Put another way, both physics and technology are ultimately things we “extract” from the ruliad, in effect by making certain choices.</p>
<p>How we “extract” physics seems, however, much more constrained. For example, we as humans have <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>only certain particular senses</a> through which we are biologically set up to experience the world. Yet we have the feeling that in technology we can in effect “construct whatever we want”—although inevitably “what we want” is also still at least influenced by how we are biologically set up.</p>
<p>We’re very used to the idea that over time technology progresses—as we invent more, and work out new ways to use our “raw material” to achieve human purposes. But physics as a science progresses too. And in a sense what’s happening there is that we’re expanding our character as observers to be able to perceive and experience more of “what’s going on”—ultimately in the ruliad. </p>
<p>Part of that expansion is actually a matter of technology. We’re building telescopes and microscopes and amplifiers that allow us to extend our raw human senses to be sensitive to more things. But there’s also another part of the expansion that is in effect intellectual: we’re developing new conceptual frameworks that allow us to “corral” things we see happening in the world into forms that “fit narratives” we’ve constructed.</p>
<p>And the important point here is that neither our technology nor our physics is fixed. They’re in a sense co-evolving—gradually allowing more and more of the ruliad to be pulled into our narratives and our purposes. Or, put another way, what we observe is gradually expanding to encompass more and more of the ruliad, and to be able to make use of more and more of it. </p>
<h2 id='reaching-out-across-rulial-space'>Reaching Out across Rulial Space</h2>
<p>How are “different intelligences” manifest in the ruliad? We can imagine organizing the ruliad to be <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/' target=_blank rel=noopener>laid out in some form of rulial space</a>. And from each point in rulial space one in effect gets a “different perspective” on the ruliad. And that&#8217;s at least the beginning of the story of how &#8220;different intelligences&#8221; exist and experience the ruliad.</p>
<p>It’s similar to what happens with physical space: from different places in physical space one gets a different perspective on the universe. In physical space we have a <a href='https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/'>concept of motion</a>: that observers like us can move from one place in space to another while in effect maintaining our coherence and integrity. </p>
<p>How does this work in rulial space? We can think of different points in rulial space as corresponding to different computations, with different rules. So <a href='https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/#motion-in-rulial-space'>rulial motion</a> in effect corresponds to making a translation between one computation and another. At the outset, it’s not obvious this would even in principle be possible. But the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a> implies that it ultimately will be. The computations at different points in rulial space will (almost always) be equivalent in their sophistication—and as is typical with <a href='https://www.wolframscience.com/nks/p642--the-phenomenon-of-universality/'>universal computation</a>—it’ll therefore in principle be possible to have an “interpretation process” that translates between them.</p>
<p>But the big question is whether this can be achieved in practice. Just how far can a particular observer translate in rulial space while <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#what-can-human-mathematics-be-like'>maintaining their coherence and integrity</a>? </p>
<p>The ruliad is a complex and (if sampled across slices in time) continually changing thing. But a critical feature is that there can be structures that have a certain persistence within it. In physical space these are things like particles (as well as black holes) that behave like “<a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#elementary-particles-old-and-new'>stable lumps of space</a>”—or like stable lumps in certain projections of the ruliad. In rulial space there can presumably also be structures with a certain persistence: <a href='https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/#motion-in-rulial-space'>&#8220;particles&#8221; of rulial space</a>. And these “particles” somehow correspond to features that “survive across different computational perspectives”—or in effect represent “robust concepts”.</p>
<p>When we talk about “different intelligences” a very familiar example is different human minds. And in a sense we can think of different human minds as being laid out in rulial space—with each mind being at a different rulial position, and thus having a different computational rule by which it operates, and a different “experience of the ruliad”. </p>
<p>So how can these minds “communicate”? Ultimately it is through “rulial motion”. But potentially the most robust form of rulial motion is through rulial particles—which we’ve identified above with the abstract idea of “robust concepts”. Put in a practical way: different (human) minds operate internally in different ways. But they can still “communicate” by exchanging something that in effect “survives translation” between one mind and another: rulial particles corresponding to robust concepts (say expressed in a language).</p>
<p>But, OK, we can imagine rulial space with lots of human minds laid out at different places, with ones that communicate more easily closer together. So what about “alien intelligences”? Well, each one is somewhere in rulial space. But they may be far away from where our human minds are.</p>
<p>We can imagine our rulial particles—or “robust concepts”—being able to reach a certain distance in rulial space. The human idea of “excitement” might for example be able to reach the place in rulial space where we’d find the minds of dogs. But what about the weather, for example? Well, as an alien intelligence, it’s presumably much further away in rulial space—and, anthropomorphize it as we might—it’s not clear what its notion of “excitement” would be.</p>
<p>It’s an often-asked question why—with our spacecraft and radio telescopes and everything else—we haven’t ever run across what we consider to be “naturally occurring” alien intelligences. In the past we might have imagined that the answer is that there just isn’t anything like “intelligence” (outside of us humans) to be found in any part of the universe that we can probe. But the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a> says that’s <a href='https://www.wolframscience.com/nks/p822--intelligence-in-the-universe/'>fundamentally not true</a>, and that in fact “abstract intelligence” is thoroughly ubiquitous among systems with all but the most obviously simple behavior. </p>
<p>So to “find” alien intelligence it’s not that we need a more powerful radio telescope (or a better spacecraft) that can reach further in physical space. Rather, the issue is to be able to reach far enough in rulial space. Or, put another way, even if we view the weather as “having a mind of its own”, the rulial distance between “its mind” and our human minds may be too great for us to be able to “understand” and “communicate with it”. </p>
<p>So what will it take for us to “bridge this rulial gap”? At some level it’s just about building the right science and technology. We can think of science as being about defining a way to “translate” from the computational rules by which some particular system operates to the computational way our human minds operate. Or, in terms of rulial space, finding a way to “move” from the rulial position of the system to the rulial position of our minds—and translating from the way a system works to a “human narrative” that represents it.</p>
<p>Centuries ago we might have just said “the planets do what they do”; maybe their motion in space is driven by an “alien intelligence” that we don’t understand. But then <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>along came mathematical science</a> and we were able to “translate” from the intrinsic computation done by the planets to a mathematical description that we internalized enough to consider it a human narrative that we understand.</p>
<p>In some sense at any given time in intellectual history our minds “reach out a certain distance in rulial space”. We’ve developed conceptual frameworks that allow us to maintain a coherent understanding of a certain range of things—with that range growing as we invent new frameworks. At one time our “domain of understanding”—or the region of rulial space that we could reach—didn’t encompass the behavior of electricity. But our “intellectual expansion” in rulial space eventually reached this, and the result is that we can now use electricity as “raw material” from which to construct technology.</p>
<p>One way we “expand our reach in rulial space” is in effect conceptual: by expanding what we understand. But another way is by being able to “sense” or “measure” more. When we invent radio—or, for that matter, gravitational wave detection—there are immediately new kinds of processes that we manage to “connect to human experience”. Or, put another way, there are more distant parts of the ruliad that we’re able to reach.</p>
<p>More prosaically, we can say that if we want to be able to use something for technology, we’d better be able to detect that it’s there, and we’d better be able to understand it well enough that we can see how it could align with our human purposes. We can think of the ruliad as being full of alien intelligences—with plenty of capabilities to “mine”. But to be able to actually mine something for our technological purposes we have to be able to reach it across rulial space; we have to be able to connect it to us.</p>
<p>So what does this mean for the original startup pitch? Yes, it’s a good idea to “mine alien intelligences” for technology. In fact, that’s basically where technology always comes from. But there’s no need to send out spacecraft, “discover” alien intelligence, and so on. There are “alien intelligences” all around us; the issue is just to reach them across rulial space, and be able to “communicate” with them. But what we’ve argued is that the process of progressively reaching out in rulial space is just the general process of progressively advancing science (and the technology on which it depends).</p>
<p>So, yes, by all means explore more of what’s out there in the world, with more, different kinds of sensors and measurements. Then try to “understand” what you see enough to be able to tell how to align it with human purposes, and make technology out of it. But there’s no pressing need for interstellar spacecraft in this picture. It’s just a matter of doing more science to expand our domain in the ruliad, and mine more of rulial space.</p>
<h2 id='the-evolution-of-purpose-and-the-colonization-of-rulial-space'>The Evolution of Purpose and the Colonization of Rulial Space</h2>
<p>We can think of technology as being about setting up things that exist in the world (or ultimately in the ruliad) to achieve human purposes. And we’ve talked about how the advance of science and technology allows us to progressively reach further in rulial space to get “raw material” for our technology. But we’ve said that technology is intended to “achieve human purposes”. So what might those purposes ultimately be?</p>
<p>Our purposes have certainly evolved over the course of human history. In today’s world, we might view it as purposeful to walk on a treadmill, or to trade cryptocurrencies. But it would be <a href='https://writings.stephenwolfram.com/2018/01/showing-off-to-the-universe-beacons-for-the-afterlife-of-our-civilization/#aliens-and-the-philosophy-of-purpose'>challenging to explain the purpose</a> of such things to someone from even a few hundred years ago.</p>
<p>In a sense, purposes evolve as we build new conceptual frameworks, and as we set up technology that allows us to do new things. More abstractly, we might say that purposes are also something defined by places in rulial space. So when we talk about the evolution of purposes, what we’re really asking is where in rulial space our history and development has led us, and will lead us in the future.</p>
<p>And certainly in the vastness of the whole ruliad, our existing human purposes occupy just an infinitesimally tiny part. Think, for example, of the natural world even as we are currently aware of it. The vast majority of things in it do not seem in any way aligned with our purposes—and we have not been able to mine them for technology. Historically, however, there’s been progressive expansion in the domain of our purposes. There was a time when we knew about magnetic rocks, but had no purpose for magnetism. But over the course of time, from compasses to actuators to memories, more and more human purposes have emerged that connect to the phenomenon of magnetism.</p>
<p>And in a sense we can view the whole core trajectory of human progress as being about the expansion of the region of rulial space—and the ruliad—that represents our purposes. So how will this evolve?</p>
<p>As I’ve <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>discussed extensively before</a>, there seem to be two central features that we as entities in the ruliad have. First, that we are computationally bounded. And second, that we believe we are persistent in time. Computational boundedness is essentially the statement that the region of rulial space that we occupy is limited. In some sense our minds can coherently span a certain region of rulial space, but it’s a bounded region. </p>
<p>What about persistence in time? It means that even though we are always being reconstructed out of different atoms of existence (and different atoms of space), we conflate things to the point where we experience a single continuous thread of existence.</p>
<p>Taken together, these features suggest a picture of us being a kind of “blob” that gradually <a href='https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/'>moves around</a> in rulial space. Does it matter that there isn’t just a single human mind? Well, yes. Without some kind of “observer” there’s no real way to even define what it means to have a “blob”. And in the end it’s a story of consistency of observers observing observers. But the result is that we can think of our whole collective “flotilla” of human purposes as being something localized that moves around in rulial space, expanding the region of the ruliad that it reaches.</p>
<p>But just how far can this go? Imagine that at some time in the distant future we have successfully explored—and “colonized”—much of rulial space. To do this we’d certainly have to have broken out of the particular constraints of our biological construction, and made use of “additional raw material” in the ruliad. </p>
<p>But what would it mean to be spread across a large swath of rulial space? Our very notion of existence seems to depend on localization in rulial space. The thing that we view as “us” is something particular and coherent. To be “bigger” in rulial space is to deny that particularity and coherence, and to become something generic that does not represent any kind of “specific entity that exists”.</p>
<p>In a sense, it’s a pyrrhic view of the ultimate limit of our technological and other evolution. As we progress, we gradually “mine” more and more of the ruliad, pulling it into the domain of technology and of our “human” (or post-human) purposes. But in doing so, we eventually transcend the very characteristics that we identify with existence. In other words, if we go too far with our expansion in the ruliad, we simply cease to exist, at least in the sense that we currently define existence. </p>
<p>Put another way, if we “absorb” more and more “alien intelligence” there’s eventually no longer any coherent “us”. Of course, the very notion of coherence is something we’re basically defining from our current human view of things. And no doubt there are other definitions that could be given. But they’re certainly far away from our current place in rulial space, and it’s not even clear they can be reached without some kind of “discontinuity of motion” that would in effect fundamentally break their connection to us as we are now.</p>
<h2 id='face-to-face-with-alien-intelligence,-out-in-rulial-space'>Face to Face with Alien Intelligence, Out in Rulial Space</h2>
<p>At a fundamental level, the ruliad is a purely computational object, that we can think of as being made of pure, abstract atoms of existence (or “emes”). When observers like us sample the ruliad we can attribute to it the characteristics that correspond to our perception of physical reality. And a notable feature of that sampling is that it supports the <a href='https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/'>idea of pure motion</a> in physical space. In other words, it allows for the possibility that structures can “maintain their perceived physical integrity” while being “re-formed” out of different atoms of space, which themselves are interpretations of the pure atoms of existence in the ruliad.</p>
<p>But as soon as we start thinking about any kind of serious motion in rulial (rather than physical) space it no longer makes sense to talk about anything like “maintaining physical integrity”, not least because in different places in rulial space the very notion of physics changes. But wherever we are in the ruliad we can still think about what’s going on as computation. We might have some way of observing or sampling the ruliad that gives us some perception of reality—like <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/'>physics</a>, or <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/'>mathematics</a>. But if we “atomize” things down to the lowest level, we’ll always find raw computation.</p>
<p>As “physical observers like us” we only have limited capabilities to probe or manipulate the raw ruliad and affect what we perceive as physical reality. We can move physical objects around, maintaining what we observe of their structure. In principle we could <a href='https://writings.stephenwolfram.com/2020/10/faster-than-light-in-our-model-of-physics-some-preliminary-thoughts/'>imagine deconstructing objects</a> into individual atoms of existence, then recreating them “transporter style” somewhere else in physical space. But as of now, we don’t know how to do this, and most likely it’s not possible for observers like us—because it would require “outcomputing” computationally irreducible features of the structure of space down at the level of individual atoms of space, which is far from what computationally bounded observers like us can expect to do.</p>
<p>But what about raw computation, of the kind that ultimately makes up the ruliad? There the story is different. Because we’re no longer constrained by our character as physical observers, so we’re free to in effect “make up any computation we want”. To explore the physical universe we need physical motion or something like it. And at least for observers like us the only way to achieve this seems to be to progressively move structures across physical space. But to find out what can happen in the computational universe we can effectively just write down any rule (i.e. any program) that appears “anywhere in the ruliad”, and run it.</p>
<p>Of course, when we run a rule on a practical computer, it’s just an emulation of what’s happening in the raw ruliad. But it’s just an abstract rule—so although it will run astronomically slower, its ultimate behavior in our emulation will inevitably be identical to what it is when implemented in terms of individual atoms of existence in the “raw ruliad”.</p>
<p>In principle we could take the same approach in emulating the elements that make up our physical reality. But observers like us are so big relative to the raw elements of the ruliad that we can’t expect our emulations to be at a scale where we can faithfully reproduce what we perceive. (Needless to say, in practice we can still get good approximations, and this is a <a href='https://writings.stephenwolfram.com/2021/04/the-wolfram-physics-project-a-one-year-update/#towards-experimental-implications'>particularly fertile application of our Physics Project</a>.) </p>
<p>But when we’re dealing with “raw computation” down at the lowest level of the raw ruliad, we can expect to faithfully emulate it. And so it is that we can just pick a <a href='https://www.wolframscience.com/nks/chap-2--the-crucial-experiment#sect-2-1--how-do-simple-programs-behave'>cellular automaton</a> or a <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-4--turing-machines'>Turing machine</a> or some other kind of <a href='https://www.wolframscience.com/nks/'>computational system</a>—that in effect comes from anywhere in the ruliad—and emulate it to find out what it does. There’s no “object we have to move” to be able to “look at that part of the ruliad”. We’re emulating things down at the level of individual atoms of existence, and seeing what happens.</p>
<p>We can think about our computational experiments as letting us “jump” to find out what it’s like anywhere in the ruliad. And as we “suddenly materialize” somewhere in the ruliad it’s as if we’re immediately “face to face” with whatever “alien intelligence” there is at that place in the ruliad.</p>
<p>But what can “observers like us” expect to make of that alien intelligence? Well, to be able “communicate” or even “relate” we somehow have to be able to “bridge the gap in rulial space”. And since we just “jumped to a place in rulial space” we don’t immediately have any “progressive path” that “incrementally” takes us from our familiar position in rulial space to wherever the alien intelligence is.</p>
<p>But what does that feel like in practice? The whole idea of <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#the-pure-basic-science-of-ruliology'>ruliology</a> is just to go anywhere we want in the computational universe or in the ruliad, and see what happens when we run the rules we find there. And it’s indeed routine to find that what they do seems quite “alien”. Still, they often have certain essential features that for example remind us of the natural world as we observe it. But our standard methods of science (and mathematics)—developed on the basis of being “observers like we are today”—don’t readily allow us to “understand” the behavior of these systems chosen in the course of doing ruliology. To us they usually just seem to be “showing <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-6--computational-irreducibility'>computational irreducibility</a>”, and behaving in ways that we can effectively get no handle on. </p>
<p>But still, we can in a sense view these programs “out there in the computational universe” (and in effect strewn around the ruliad) as showing us what’s possible. They’re like alien intelligences that we know exist, but that we don’t yet understand, and don’t yet know how to harness or relate to. We can see them as some kind of beacons of possible technology of the future—of things that “exist in the ruliad”, but that we haven’t yet been able to connect to human purposes.</p>
<p>But so how might we make this connection? Well, as it happens, I’ve devoted much of my life to what can be viewed as the <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>construction of a systematic bridge</a> between what’s “computationally possible” and what we humans think of as important. For that’s the story of what I call <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>computational language</a>—and indeed of the whole intellectual structure that is the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>.</p>
<p>There’s infinite potential content in the ruliad. But one can view the goal of the Wolfram Language as being to represent—in a way that’s optimized for us humans to understand—those parts that we humans consider important. The language lets us use the concepts of computation not only to crystallize our existing thinking, but also to expand what we can think about, in effect letting us reach out further in rulial space. Computational language is the general way that we “tame the ruliad”—extend the frontier of “human colonization” in the ruliad, and in the end “mine” more and more of the ruliad for “useful technology”.</p>
<p>Just in terms of its practical place in the world today I’ve often said that the Wolfram Language is like an “<a href='https://writings.stephenwolfram.com/2020/10/our-mission-and-the-opportunity-of-artifacts-from-the-future/'>artifact from the future</a>”. But now we see a deep sense in which this is true. The raw ruliad is just “out there”, with “infinite potential”, but as something whose fundamental character has nothing to do with us humans. But what computational language is about is delivering what one can think of as the ultimate “meta-artifact”: something that progressively turns the raw ruliad into “human-recognizable technology”. </p>
<p>Much of this progress involves the <a href='https://livestreams.stephenwolfram.com/category/live-ceoing/'>specific, systematic design</a> of the Wolfram Language. But there are also forays that in effect jump further out into rulial space. For example, we’ve often enumerated large collections of simple programs, identifying ones that satisfy a certain criterion. And sometimes that feels a lot like “leveraging alien intelligence” without “understanding” it. The <a href='https://www.wolframscience.com/nks/p27--how-do-simple-programs-behave/'>rule 30 cellular automaton</a>, for example, is a good pseudorandom generator, even though we <a href='https://www.rule30prize.org/' target=_blank rel=noopener>don&#8217;t really &#8220;understand&#8221;</a> even fairly basic things about it.</p>
<p>And, yes, computational language is what we need to concretely “state a criterion”, in effect expressing what we’re thinking about in computational terms—that we can use, for example, to let us explicitly search the ruliad for an “alien intelligence” that does what we want.</p>
<p>What does it look like out in the “raw ruliad”? It’s easy to start just looking at simple programs, say picked at random. And, yes, they have all sorts of elaborate behavior:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw061622img5b.png" alt='' title='' width='452' height='360' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw061622AIimg5_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But what is this behavior “achieving”? Yes, it’s following the particular underlying rules that have been given. But we don’t have any immediate way to connect it to “human purposes”. And in general we can expect that to make that connection what’s needed is for those purposes themselves to “expand”.</p>
<p>Maybe at some moment we <a href='https://writings.stephenwolfram.com/2011/06/music-mathematica-and-the-computational-universe/'>call what&#8217;s produced &#8220;art&#8221;</a>, and assign it some “aesthetic purpose”. Maybe at some point we see that it satisfies some engineering purpose that we’ve just realized we should care about. But in general, computational language is the way we can make the connection between “raw computational processes” out there in the ruliad, and our patterns of thinking about things. It’s the ultimate way for us to “communicate with alien intelligence”. </p>
<h2 id='the-launch-of-a-rulial-space-program'>The Launch of a Rulial Space Program</h2>
<p>We began with the far-out startup pitch of sending spacecraft to discover alien intelligence and bring its technology back to Earth. But what we’ve realized is that actually no spacecraft—of the ordinary kind—are needed. There’s “alien intelligence” to be found everywhere; you don’t have to travel to interstellar space to find it. But the challenge is to connect the “alien intelligence” to human purposes, and extract from it what we consider “useful technology”. Or, put another way, the issue is not about traversing physical space, but rather about traversing rulial space.</p>
<p>With our spacecraft we humans have so far reached about a <a href='https://www.wolframalpha.com/input?i=%28distance+to+furthest+manmade+object%29%2F%28radius+of+the+universe%29'>20-trillionth of the way across the physical universe</a>. But no doubt we’ve reached a far smaller fraction of the way across the ruliad. As our science, knowledge and technology increase, we gradually reach further into rulial space. But whether it’s our failure to communicate with cetaceans or our inability to make computers out of, say, fluids, it’s clear that by many measures the distance we’ve gone so far is not so large.</p>
<p>In a sense the startup idea of “harnessing alien intelligence” is the meta-idea of all technology—that in our terms we can state as being to connect what’s “computationally possible” in the ruliad with purposes we humans want to achieve. And I’ve argued that the ultimate meta-technology for doing this is not spacecraft but computational language. Because computational language is what we need to make a bridge between what we care about, and “raw computation” out in the ruliad.</p>
<p>It’s difficult to send physical spacecraft out into interstellar space. But it’s actually a lot easier to probe the much richer possibilities of the ruliad—because in a sense it’s straightforward to put a “rulial spacecraft” anywhere. We just have to pick a rule (or program), then see what the “world” it generates is. But the challenge is then in a sense one of interpretation. What is happening in that world? Can we relate it to things we care about?</p>
<p>At the outset, all we’re likely to see at some “random place” in the ruliad is rampant computational irreducibility. But it’s a fundamental fact that wherever there’s computational irreducibility, there must also be slices of computational reducibility to be found. In the ordinary physical universe that we experience, those are basically our perceived laws of physics. But even in a random sample of the ruliad we can expect there’ll be computational reducibility to be found. It’ll typically be “alien stuff”, though. It might have the character of science, but it won’t be like our existing science. And most likely it won’t align with anything we currently think we care about.</p>
<p>But that is the great challenge and promise of mounting a “rulial space program”. To be confronted not with what we might recognize as “new life and new civilizations”, but with things for which we have no description and no current way of thinking. Perhaps we might view it merely as humbling to encounter such things, and to realize how small a part of the ruliad we yet understand. But we can also view it as a beacon of where we could go. And we can view a whole “rulial space program” as a way of systematizing the ultimate project of exploring all formally possible processes. Or we could think about it not just as defining a single “startup opportunity”—but rather as defining the “meta-opportunity” of all possible technology startups&#8230;.</p>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2022/06/alien-intelligence-and-the-concept-of-technology/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>
		</item>
		<item>
		<title>Games and Puzzles as Multicomputational Systems</title>
		<link>https://writings.stephenwolfram.com/2022/06/games-and-puzzles-as-multicomputational-systems/</link>
		<comments>https://writings.stephenwolfram.com/2022/06/games-and-puzzles-as-multicomputational-systems/#comments</comments>
		<pubDate>Wed, 08 Jun 2022 20:17:38 +0000</pubDate>
		<dc:creator><![CDATA[Mark Long]]></dc:creator>
				<category><![CDATA[Computational Science]]></category>
		<category><![CDATA[Computational Thinking]]></category>
		<category><![CDATA[Mathematics]]></category>
		<category><![CDATA[New Kind of Science]]></category>
		<category><![CDATA[Physics]]></category>
		<category><![CDATA[Ruliology]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=37124</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/06/icon-games.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/06/icon-games.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><p><!--margin img--></p>
<style>
h2.bookpost{display:block;}
img.bookpost{padding-top:20px}
</style>
<p><img class="aligncenter" title="Games and Puzzles as Multicomputational Systems" src="https://content.wolfram.com/uploads/sites/43/2022/06/multiway-hero-final-2.png" alt="Games and Puzzles as Multicomputational Systems" width="650" height=390" /></p>
<h2 id='humanizing-multicomputational-processes'>Humanizing Multicomputational Processes</h2>
<p>Multicomputation is one of the core ideas of the <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Wolfram Physics Project</a>—and in particular is at the heart of our <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#the-inevitability-of-quantum-mechanics'>emerging understanding of quantum mechanics</a>. But how can one get an intuition for what is initially the rather abstract <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>idea of multicomputation</a>? A good approach, I believe, is to see it in action in familiar systems and situations. And I explore here what seems like a particularly good example: games and puzzles.<span id="more-37124"></span></p>
<p>One might not imagine that something as everyday as well-known games and puzzles would have any connection to the formalism for something like quantum mechanics. But the idea of multicomputation provides a link. And indeed one can view the very possibility of being able to have “interesting” games and puzzles as being related to a core phenomenon of multicomputation: <a href='https://www.wolframphysics.org/bulletins/2022/06/multicomputational-irreducibility/' target=_blank rel=noopener>multicomputational irreducibility</a>.</p>
<p>In an ordinary computational system each state of the system has a unique successor, and ultimately there is a single thread of time that defines a process of computation. But in a multicomputational system the key idea is that states can have multiple successors—and tracing their behavior defines a whole multiway graph of branching and merging threads of time. And the point is that this is directly related to how one can think about typical games and puzzles.</p>
<p>Given a particular state of a game or puzzle, a player must typically decide what to do next. And where the idea of multicomputation comes in is that there are usually several choices that they can make. In any particular instance of the game, they’ll make a particular choice. But the point of the multicomputational paradigm is to look globally at the consequences of all possible choices—and to produce a <a href='https://www.wolframscience.com/nks/p204--multiway-systems/'>multiway graph</a> that represents them.</p>
<p>The notion of making what we call a multiway graph has actually existed—usually under the name of “game graphs”—for games and puzzles for a <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#some-backstory'>bit more than a hundred years</a>. But with the multicomputational paradigm there are now some more general concepts that can be applied to these constructs. And in turn understanding the relation to games and puzzles has the potential to provide a new level of intuition and familiarity about multiway graphs.</p>
<p>My particular goal here is to investigate—fairly systematically—a sequence of well-known games and puzzles using the general methods we’ve been developing for studying multicomputational systems. As is typical in investigations that connect with everyday things, we’ll encounter all sorts of specific details. And while these may not immediately seem relevant to larger-scale discussions, they are important in our effort to provide a realistic and relatable picture of actual games and puzzles—and in allowing the connections we make with multicomputation to be on a solid foundation.</p>
<p>It’s worth mentioning that the possibility of relating games and puzzles to physics is basically something that wouldn’t make sense without our Physics Project. For games and puzzles are normally at some fundamental level discrete—especially in the way that they involve discrete branching of possibilities. And if one assumes physics is fundamentally continuous, there’s no reason to expect a connection. But a key idea of our Physics Project is that the physical world is at the lowest level discrete—like games and puzzles. And what’s more, our Physics Project posits that physics—like games and puzzles—has discrete possibilities to explore.</p>
<p>At the outset each of the games and puzzles I discuss here may seem rather different in their structure and operation. But what we’ll see is that when viewed in a multicomputational way, there is remarkable—and almost monotonous—uniformity across our different examples. I won’t comment too much on the significance of what we see until the end, when I’ll begin to discuss how various important multicomputational phenomena may play out in the context of games and puzzles. And how the very difficulty of conceptualizing multicomputation in straightforward human terms is what fundamentally leads to the engaging character of games and puzzles.</p>
<h2 id='tic-tac-toe'>Tic-Tac-Toe</h2>
<p>Consider a simplified version of tic-tac-toe (AKA “noughts and crosses”) played on a 2×2 board. Assume X plays first. Then one can represent the <a href='https://www.wolframscience.com/nks/notes-5-6--game-systems/'>possible moves by the graph</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg1.png" alt='' title='' width='315' height='102' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg1_copy.txt">
					<span class='close' id='1ttt_out'>&amp;#10005</span></p>
<pre class='text' id='1ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>On the next turn one gets:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg2.png" alt='' title='' width='555' height='162' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg2_copy.txt">
					<span class='close' id='2ttt_out'>&amp;#10005</span></p>
<pre class='text' id='2ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So far this graph is a simple tree. But if we play another turn we’ll see that different branches can merge, and “playing until the board is full” we get a multiway graph—or &#8220;game graph”—of the form: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg3.png" alt='' title='' width='551' height='290' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg3_copy.txt">
					<span class='close' id='3ttt_out'>&amp;#10005</span></p>
<pre class='text' id='3ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Every path through this graph represents a possible complete game:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg4.png" alt='' title='' width='409' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg4_copy.txt">
					<span class='close' id='4ttt_out'>&amp;#10005</span></p>
<pre class='text' id='4ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In our setup so far, the total number of board configurations that can ever be reached in any game (i.e. the total number of nodes in the graph) is 35, while the total number of possible complete games (i.e. the number of possible paths from the root of the graph) is 24.</p>
<p>If one renders the graph in 3D one can see that it has a very regular structure:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg5.png" alt='' title='' width='514' height='416' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg5_copy.txt">
					<span class='close' id='5ttt_out'>&amp;#10005</span></p>
<pre class='text' id='5ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now if we define “winning” 2×2 tic-tac-toe as having two identical elements in a horizontal row, then we can annotate the multiway graph to indicate wins—removing cases where the “game is already over”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg6.png" alt='' title='' width='565' height='297' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg6_copy.txt">
					<span class='close' id='6ttt_out'>&amp;#10005</span></p>
<pre class='text' id='6ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Much of the core structure of the multiway graph is actually already evident even in the seemingly trivial case of “one-player tic-tac-toe”, in which one is simply progressively filling in squares on the board:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg7.png" alt='' title='' width='369' height='270' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg7_copy.txt">
					<span class='close' id='7ttt_out'>&amp;#10005</span></p>
<pre class='text' id='7ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But what makes this not completely trivial is the existence of distinct paths that lead to equivalent states. Rendered differently the graph (which has 2<sup>4</sup> = 16 nodes and 4! = 24 “game paths”) has an obvious 4D hypercube form (where now we have dropped the explicit X’s in each cell):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg9.png" alt='' title='' width='319' height='270' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg9_copy.txt">
					<span class='close' id='9ttt_out'>&amp;#10005</span></p>
<pre class='text' id='9ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For a 3×3 board the graph is a 9D hypercube with 2<sup>9</sup> = 512 nodes and 9! = 362880 “game paths”, or in “move-layered” form:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg11.png" alt='' title='' width='476' height='233' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg11_copy.txt">
					<span class='close' id='11ttt_out'>&amp;#10005</span></p>
<pre class='text' id='11ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This basic structure is already visible in “1-player 1D tic-tac-toe” in which the multiway graph for a “length-<em>n</em>” board just corresponds to an <em>n</em>-dimensional hypercube:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg12.png" alt='' title='' width='568' height='188' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg12_copy.txt">
					<span class='close' id='12ttt_out'>&amp;#10005</span></p>
<pre class='text' id='12ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The total number of distinct board configurations in this case is just 2<sup><em>n</em></sup>, and the number of distinct “games” is <em>n</em>!. At move <em>t</em> the number of distinct board configurations (i.e. states) is <tt><a href='https://reference.wolfram.com/language/ref/Binomial.html'>Binomial</a></tt><tt>[n, t]</tt>.</p>
<p>With 2 players the graphs become slightly more complicated:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg14.png" alt='' title='' width='563' height='450' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg14_copy.txt">
					<span class='close' id='14ttt_out'>&amp;#10005</span></p>
<pre class='text' id='14ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The<a href='https://oeis.org/A005773' target=_blank rel=noopener> total number of states</a> in these graphs is </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg15.png" alt='' title='' width='388' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg15_copy.txt">
					<span class='close' id='15ttt_out'>&amp;#10005</span></p>
<pre class='text' id='15ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which is asymptotically <img style="margin-bottom: -10px" loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg16A.png" width= '31' height='' />. (Note that for <em>n </em>= 4 the result is the same as for the 2×2 board discussed above.) At move <em>t</em> the number of distinct states is given by</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg17.png" alt='' title='' width='404' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg17_copy.txt">
					<span class='close' id='17ttt_out'>&amp;#10005</span></p>
<pre class='text' id='17ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg18.png" alt='' title='' width='610' height='296' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg18_copy.txt">
					<span class='close' id='18ttt_out'>&amp;#10005</span></p>
<pre class='text' id='18ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>OK, so what about standard 2-player 3×3 tic-tac-toe? Its multiway graph begins:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg19.png" alt='' title='' width='425' height='124' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg19_copy.txt">
					<span class='close' id='19ttt_out'>&amp;#10005</span></p>
<pre class='text' id='19ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps (i.e. one move by X and one by O) the graph is still a tree (with the initial state now at the center):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg20.png" alt='' title='' width='396' height='197' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg20_copy.txt">
					<span class='close' id='20ttt_out'>&amp;#10005</span></p>
<pre class='text' id='20ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 3 steps there is starting to be merging:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg21.png" alt='' title='' width='396' height='203' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg21_copy.txt">
					<span class='close' id='21ttt_out'>&amp;#10005</span></p>
<pre class='text' id='21ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And continuing for all 9 moves the full layered graph—with 6046 states—is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg22.png" alt='' title='' width='488' height='253' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg22_copy.txt">
					<span class='close' id='22ttt_out'>&amp;#10005</span></p>
<pre class='text' id='22ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At the level of this graph, the results are exactly the same as for a 2-player 1D version with a total of 9 squares. But for actual 2D 3×3 tic-tac-toe there is an additional element to the story: the concept of winning a game, and thereby terminating it. With the usual rules, a game is considered won when a player gets a horizontal, vertical or diagonal line of three squares, as in for example:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg23.png" alt='' title='' width='515' height='96' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg23_copy.txt">
					<span class='close' id='23ttt_out'>&amp;#10005</span></p>
<pre class='text' id='23ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Whenever a “win state” such as these is reached, the game is considered over, so that subsequent states in the multiway graph are pruned, and what was previously a 6046-node graph becomes a 5478-node graph</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg24.png" alt='' title='' width='447' height='227' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg24_copy.txt">
					<span class='close' id='24ttt_out'>&amp;#10005</span></p>
<pre class='text' id='24ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>with examples of the 568 pruned states including (where the “win” that terminated the game is marked):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg25.png" alt='' title='' width='509' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg25_copy.txt">
					<span class='close' id='25ttt_out'>&amp;#10005</span></p>
<pre class='text' id='25ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Wins can occur at different steps: anywhere from 5 to 9. The total numbers of distinct wins are as follows</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg26.png" alt='' title='' width='425' height='75' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg26_copy.txt">
					<span class='close' id='26ttt_out'>&amp;#10005</span></p>
<pre class='text' id='26ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(yielding 626 wins at any step for X and 316 for O).</p>
<p>One can’t explicitly tell that a game has ended in a draw until every square has been filled in—and there are ultimately only 16 final “draw configurations” that can be reached:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg27.png" alt='' title='' width='465' height='96' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg27_copy.txt">
					<span class='close' id='27ttt_out'>&amp;#10005</span></p>
<pre class='text' id='27ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can annotate the full (“game-over-pruned”) multiway graph, indicating win and draw states:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg28.png" alt='' title='' width='542' height='281' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg28_copy.txt">
					<span class='close' id='28ttt_out'>&amp;#10005</span></p>
<pre class='text' id='28ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>To study this further, let’s start by looking at a subgraph that includes only “end games” starting with a board that already has 4 squares filled in:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg29.png" alt='' title='' width='570' height='296' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg29_copy.txt">
					<span class='close' id='29ttt_out'>&amp;#10005</span></p>
<pre class='text' id='29ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We see here that from our initial board</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg30.png" alt='' title='' width='329' height='41' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg30_copy.txt">
					<span class='close' id='30ttt_out'>&amp;#10005</span></p>
<pre class='text' id='30ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>it’s possible to get a final win for both X and O:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg31.png" alt='' title='' width='459' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg31_copy.txt">
					<span class='close' id='31ttt_out'>&amp;#10005</span></p>
<pre class='text' id='31ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But in many of these cases the outcome is already basically determined a step or more before the actual win occurs—in the sense that unless a given player “makes a mistake” they will always be able to force a win. </p>
<p>So, for example, if it is X&#8217;s turn and the state is</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg32.png" alt='' title='' width='329' height='41' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg32_copy.txt">
					<span class='close' id='32ttt_out'>&amp;#10005</span></p>
<pre class='text' id='32ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>then X is guaranteed to win if they play as follows:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg33.png" alt='' title='' width='329' height='41' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg33_copy.txt">
					<span class='close' id='33ttt_out'>&amp;#10005</span></p>
<pre class='text' id='33ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can represent the “pre-forcing” of wins by coloring subgraphs (or in effect “light cones”) in the multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg34.png" alt='' title='' width='572' height='300' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg34_copy.txt">
					<span class='close' id='34ttt_out'>&amp;#10005</span></p>
<pre class='text' id='34ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At the very beginning of the game, when X makes the first move, nothing is yet forced. But after just one move, it’s already possible to get to configurations where X can always force a win:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg35.png" alt='' title='' width='478' height='474' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg35_copy.txt">
					<span class='close' id='35ttt_out'>&amp;#10005</span></p>
<pre class='text' id='35ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Starting from a state obtained after 1 step, we can see that after 2 steps there are configurations where O can force a win:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg36.png" alt='' title='' width='568' height='470' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg36_copy.txt">
					<span class='close' id='36ttt_out'>&amp;#10005</span></p>
<pre class='text' id='36ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Going to more moves leads to more “forced-win” configurations:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg37.png" alt='' title='' width='575' height='282' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg37_copy.txt">
					<span class='close' id='37ttt_out'>&amp;#10005</span></p>
<pre class='text' id='37ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Annotating the whole multiway graph we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg38.png" alt='' title='' width='565' height='293' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg38_copy.txt">
					<span class='close' id='38ttt_out'>&amp;#10005</span></p>
<pre class='text' id='38ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can think of this graph as a representation of the “solution” to the game: given any state the coloring in the graph tells us which player can force a win from that state, and the graph defines what moves they can make to do so. </p>
<p>Here’s a summary of possible game states at each move:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg39A.png" alt='' title='' width='565' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg39_copy.txt">
					<span class='close' id='39ttt_out'>&amp;#10005</span></p>
<pre class='text' id='39ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg40.png" alt='' title='' width='607' height='236' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg40_copy.txt">
					<span class='close' id='40ttt_out'>&amp;#10005</span></p>
<pre class='text' id='40ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here we’re just counting the number of possible states of various kinds at each step. But is there a way to think about these states as somehow being laid out in “game state space”? <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-concept-of-branchial-graphs/' target=_blank rel=noopener>Branchial graphs</a> provide a potential way to do this. The basic branchial graph at a particular step is obtained by joining pairs of states that share a common ancestor on the step before. For the case of 2-player 2×2 tic-tac-toe the branchial graphs we get on successive steps are as follows:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg41.png" alt='' title='' width='570' height='168' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg41_copy.txt">
					<span class='close' id='41ttt_out'>&amp;#10005</span></p>
<pre class='text' id='41ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Things get more complicated for ordinary 3×3 tic-tac-toe. But since the multiway graph for the first two steps is a pure tree, the branchial graphs at these steps still have a rather trivial structure:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg42.png" alt='' title='' width='506' height='315' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg42_copy.txt">
					<span class='close' id='42ttt_out'>&amp;#10005</span></p>
<pre class='text' id='42ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In general the number of connected components on successive steps is as follows</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg43.png" alt='' title='' width='545' height='79' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg43_copy.txt">
					<span class='close' id='43ttt_out'>&amp;#10005</span></p>
<pre class='text' id='43ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and these are broken down across different graph structures as follows:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg44.png" alt='' title='' width='562' height='322' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg44_copy.txt">
					<span class='close' id='44ttt_out'>&amp;#10005</span></p>
<pre class='text' id='44ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here in more detail are the forms of some typical components of branchial graphs achieved at particular steps: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg45.png" alt='' title='' width='578' height='260' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg45_copy.txt">
					<span class='close' id='45ttt_out'>&amp;#10005</span></p>
<pre class='text' id='45ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Within the branchial graph at a particular step, there can be different numbers of wins in different components:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg46.png" alt='' title='' width='567' height='564' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg46_copy.txt">
					<span class='close' id='46ttt_out'>&amp;#10005</span></p>
<pre class='text' id='46ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s notable that the wins are quite broadly distributed across branchial graphs. And this is in a sense why tic-tac-toe is not (more) trivial. If just by knowing what component of the branchial graph one was in one could immediately know the outcome, there would be even less “suspense” in the game. But with broad distribution across branchial space, “knowing roughly where you are” doesn’t help much in determining whether you’re going to win. </p>
<p>So far we’ve always been talking about what states can be reached, but not “how often” they’re reached. Imagine that rather than playing a specific game, we instead at each step just make every possible move with equal probability. The setup for tic-tac-toe is symmetrical enough that for most of the game the probability of every possible configuration at a given step is equal. But as soon as there start to be “wins”, and there is a “cone” of “game-over-pruned” states, then the remaining states no longer have equal probabilities. </p>
<p>For standard 3×3 tic-tac-toe this happens after 7 moves, where there are two classes of states, that occur with slightly different probabilities:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg47.png" alt='' title='' width='566' height='119' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg47_copy.txt">
					<span class='close' id='47ttt_out'>&amp;#10005</span></p>
<pre class='text' id='47ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At the end of the game, there are several classes of final states with different probabilities:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg48.png" alt='' title='' width='566' height='299' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg48_copy.txt">
					<span class='close' id='48ttt_out'>&amp;#10005</span></p>
<pre class='text' id='48ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And what this means for the probabilities of different outcomes of the game is as follows:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg49.png" alt='' title='' width='483' height='135' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg49_copy.txt">
					<span class='close' id='49ttt_out'>&amp;#10005</span></p>
<pre class='text' id='49ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Not surprisingly, the player who plays first has an advantage in winning. Perhaps more surprising is that in this kind of “strategyless” play, ties are comparatively uncommon—even though if one player actively tries to block the other, they often force a tie.</p>
<p>We’ve looked at “classic tic-tac-toe” and a few specific variants. But there are ultimately all sorts of possible variants. And a convenient general way to represent the “board” for any tic-tac-toe-like game is just to give a “flattened” list of values—with 0 representing a blank position, and <em>i</em> representing a symbol added by player <em>i</em>.</p>
<p>In standard “2D representation” one might have a board like</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg50.png" alt='' title='' width='384' height='41' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg50_copy.txt">
					<span class='close' id='50ttt_out'>&amp;#10005</span></p>
<pre class='text' id='50ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which in flattened form would be:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg51.png" alt='' title='' width='144' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg51_copy.txt">
					<span class='close' id='51ttt_out'>&amp;#10005</span></p>
<pre class='text' id='51ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Typical winning patterns can then be represented</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg52.png" alt='' title='' width='506' height='177' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg52_copy.txt">
					<span class='close' id='52ttt_out'>&amp;#10005</span></p>
<pre class='text' id='52ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where in each case we have framed the relevant “winning symbols”, and then given their positions in the flattened list. In ordinary tic-tac-toe it’s clear that the positions of “winning symbols” must always form an arithmetic progression. And it seems as if a good way to generalize tic-tac-toe is always to define a win for <em>i</em> to be associated with the presence of <em>i</em> symbols at positions that form an arithmetic progression of a certain length <em>s</em>. For ordinary tic-tac-toe <em>s </em>= 3, but for generalizations it could have other values.</p>
<p>Consider now the case of a length-5 list (i.e. 5-position “1D board”). The complete multiway graph is as follows, with “winning states” that contain arithmetic progressions of length <em>s </em>= 3 highlighted:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg53.png" alt='' title='' width='578' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg53_copy.txt">
					<span class='close' id='53ttt_out'>&amp;#10005</span></p>
<pre class='text' id='53ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In a more symmetrical rendering this is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg54.png" alt='' title='' width='462' height='297' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg54_copy.txt">
					<span class='close' id='54ttt_out'>&amp;#10005</span></p>
<pre class='text' id='54ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the analogous result for a 7-position board, and 2 players:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg55.png" alt='' title='' width='568' height='296' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg55_copy.txt">
					<span class='close' id='55ttt_out'>&amp;#10005</span></p>
<pre class='text' id='55ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For each size of board <em>n</em>, we can compute the total number of winning states for any given player, as well as the total number of states altogether. The result when winning is based on arithmetic progressions of length 3 (i.e. <em>s</em> = 3) is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg56.png" alt='' title='' width='561' height='147' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg56_copy.txt">
					<span class='close' id='56ttt_out'>&amp;#10005</span></p>
<pre class='text' id='56ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The 2-player <em>n</em> = 9 (= 3×3) case here is similar to ordinary tic-tac-toe, but not the same. In particular, states like</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg57.png" alt='' title='' width='372' height='54' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg57_copy.txt">
					<span class='close' id='57ttt_out'>&amp;#10005</span></p>
<pre class='text' id='57ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>are considered wins for X in the flattened setup, but not in ordinary tic-tac-toe.</p>
<p>If we increase the length of progression needed in order to declare a win, say to <em>s</em> = 4, we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg58.png" alt='' title='' width='573' height='159' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg58_copy.txt">
					<span class='close' id='58ttt_out'>&amp;#10005</span></p>
<pre class='text' id='58ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The total number of game states is unchanged, but—as expected—there are “fewer ways to win”.</p>
<p>But let’s say we have boards that are completely filled in. For small board sizes there may well not be an arithmetic progression of positions for any player—so that the game has to be considered a tie—as we see in this <em>n </em>= 5 case:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg59.png" alt='' title='' width='443' height='219' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg59_copy.txt">
					<span class='close' id='59ttt_out'>&amp;#10005</span></p>
<pre class='text' id='59ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But it is a <a href='https://www.wolframscience.com/nks/notes-10-3--inevitable-regularities-and-ramsey-theory/'>result related to Ramsey theory that it turns out</a> that for <em>n</em> ≥ 9, it’s inevitable that there will be an “arithmetic progression win” for at least one of the players—so that there is never a tie—as these examples illustrate:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg60.png" alt='' title='' width='467' height='202' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722tttimg60_copy.txt">
					<span class='close' id='60ttt_out'>&amp;#10005</span></p>
<pre class='text' id='60ttt_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='walks-and-their-multiway-graphs'>Walks and Their Multiway Graphs</h2>
<p>A game like tic-tac-toe effectively involves at each step moving to one of several possible new board configurations—which we can think of as being at different “places” in “game state space”. But what if instead of board configurations we just consider our states to be positions on a lattice such as</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg1.png" alt='' title='' width='350' height='104' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg1_copy.txt">
					<span class='close' id='1walks_out'>&amp;#10005</span></p>
<pre class='text' id='1walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and then we look at possible walks, that at each step can, in this case, go one unit in any of 4 directions?</p>
<p>Starting at a particular point, the multiway graph after 1 step is just</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg2.png" alt='' title='' width='490' height='100' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg2_copy.txt">
					<span class='close' id='2walks_out'>&amp;#10005</span></p>
<pre class='text' id='2walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where we have laid out this graph so that the “states” are placed at their geometrical positions on the lattice. </p>
<p>After 2 steps we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg3.png" alt='' title='' width='490' height='165' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg3_copy.txt">
					<span class='close' id='3walks_out'>&amp;#10005</span></p>
<pre class='text' id='3walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And in general the structure of the multiway graph just “recapitulates” the structure of the lattice:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg4.png" alt='' title='' width='490' height='226' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg4_copy.txt">
					<span class='close' id='4walks_out'>&amp;#10005</span></p>
<pre class='text' id='4walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can think of the paths in the multiway graph as representing all possible random walks of a certain length in the lattice. We can lay the graph out in 3D, with the vertical position representing the first step at which a given point can be reached:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg5.png" alt='' title='' width='537' height='178' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg5_copy.txt">
					<span class='close' id='5walks_out'>&amp;#10005</span></p>
<pre class='text' id='5walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can also lay out the graph more like we laid out multiway graphs for tic-tac-toe:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg6.png" alt='' title='' width='476' height='137' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg6_copy.txt">
					<span class='close' id='6walks_out'>&amp;#10005</span></p>
<pre class='text' id='6walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One feature of these “random-walk” multiway graphs is that they contain loops, that record the possibility of “returning to places one’s already been”. And this is different from what happens for example in tic-tac-toe, in which at each step one is just adding an element to the board, and it’s never possible to go back.</p>
<p>But we can set up a similar “never-go-back rule” for walks, by considering “<a href='https://www.wolframscience.com/nks/notes-7-6--self-avoiding-random-walks/'>self-avoiding walks</a>” in which any point that’s been visited can never be visited again. Let’s consider first the very trivial lattice:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg7.png" alt='' title='' width='350' height='39' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg7_copy.txt">
					<span class='close' id='7walks_out'>&amp;#10005</span></p>
<pre class='text' id='7walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now indicate the “current place we’ve reached” by a blue dot, and the places we’ve visited before by red dots—and start from one corner: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg8.png" alt='' title='' width='241' height='210' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg8_copy.txt">
					<span class='close' id='8walks_out'>&amp;#10005</span></p>
<pre class='text' id='8walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are only two possible walks here, one going clockwise, the other counterclockwise. Allowing one to start in each possible position yields a slightly more complicated multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg9.png" alt='' title='' width='377' height='158' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg9_copy.txt">
					<span class='close' id='9walks_out'>&amp;#10005</span></p>
<pre class='text' id='9walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With a 2×3 grid we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg10A.png" alt='' title='' width='238' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg10_copy.txt">
					<span class='close' id='10walks_out'>&amp;#10005</span></p>
<pre class='text' id='10walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>while with a 3×3 grid we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg11.png" alt='' title='' width='570' height='279' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg11_copy.txt">
					<span class='close' id='11walks_out'>&amp;#10005</span></p>
<pre class='text' id='11walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Starting in the center, and with a different layout for the multiway graph, we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg12.png" alt='' title='' width='376' height='376' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg12_copy.txt">
					<span class='close' id='12walks_out'>&amp;#10005</span></p>
<pre class='text' id='12walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Note the presence of large “holes”, in which paths on each side basically “get to the same place” in “opposite ways”. Note that of the 2304 possible ways to have 1 blue dot and up to 8 red ones, this actual multiway graph reaches only 57. (Starting from the corner reaches 75 and from all possible initial positions 438.)</p>
<p>With a 4×4 lattice (starting the walker in the corner) the multiway graph has the form</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg13.png" alt='' title='' width='537' height='322' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg13_copy.txt">
					<span class='close' id='13walks_out'>&amp;#10005</span></p>
<pre class='text' id='13walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or in an alternative layout</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg14.png" alt='' title='' width='461' height='238' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg14_copy.txt">
					<span class='close' id='14walks_out'>&amp;#10005</span></p>
<pre class='text' id='14walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where now 1677 states out of 524,288 are eventually visited, and the number of new states visited at each step (i.e. the number of nodes in successive layers in the graph) is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg15.png" alt='' title='' width='563' height='98' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg15_copy.txt">
					<span class='close' id='15walks_out'>&amp;#10005</span></p>
<pre class='text' id='15walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For a 5×5 grid 89,961 states are reached, distributed across steps according to:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg16.png" alt='' title='' width='563' height='97' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg16_copy.txt">
					<span class='close' id='16walks_out'>&amp;#10005</span></p>
<pre class='text' id='16walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(For a grid with <em>n</em> vertices, there are a total of <em>n</em> 2<sup><em>n</em>–1</sup> possible states, but the number actually reached is always much smaller.)</p>
<p>In talking about walks, an obvious question to ask is about mazes. Consider the maze:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg18.png" alt='' title='' width='552' height='204' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg18_copy.txt">
					<span class='close' id='18walks_out'>&amp;#10005</span></p>
<pre class='text' id='18walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As far as traversing this maze is concerned, it is equivalent to “walking” on the graph</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg19.png" alt='' title='' width='204' height='203' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg19_copy.txt">
					<span class='close' id='19walks_out'>&amp;#10005</span></p>
<pre class='text' id='19walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which in another embedding is just</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg20.png" alt='' title='' width='514' height='450' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg20_copy.txt">
					<span class='close' id='20walks_out'>&amp;#10005</span></p>
<pre class='text' id='20walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But just as before, the multiway graph that represents all possible walks essentially just “recapitulates” this graph. And that means that “solving” the maze can in a sense equally be thought of as finding a path directly in the maze graph, or in the multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg21.png" alt='' title='' width='583' height='293' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722walksimg21_copy.txt">
					<span class='close' id='21walks_out'>&amp;#10005</span></p>
<pre class='text' id='21walks_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='the-icosian-game-&#038;-some-relatives'>The Icosian Game &#038; Some Relatives</h2>
<p>Our discussion of self-avoiding walks turns out to be immediately related to the “<a href='https://mathworld.wolfram.com/IcosianGame.html'>Icosian game</a>” of William Rowan Hamilton from 1857 (which is somewhat related to the early computer game <em><a href='https://en.wikipedia.org/wiki/Hunt_the_Wumpus' target=_blank rel=noopener>Hunt the Wumpus</a></em>):</p>
<p>	<a href="https://twitter.com/Library_RIA/status/956476613096591360/photo/1" target="_blank" rel="noopener"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianimg1.png" alt='The Icosian game' title='The Icosian game' width='524' height='263' /></A></p>
<p>The object of the “game” (or, more properly, puzzle) is to find a path (yes, a Hamiltonian path) around the icosahedron graph that visits every node (and returns back to where it started from). And once again we can construct a multiway graph that represents all possible sequences of “moves” in the game.</p>
<p>Let’s start with the simpler case of an underlying tetrahedron graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg2.png" alt='' title='' width='350' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>From this we get the multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg3.png" alt='' title='' width='251' height='247' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The “combined multiway graph” from all possible starting positions on the tetrahedron graph gives a <a href='https://www.wolframalpha.com/input?i=truncated+cuboctahedron'>truncated cuboctahedron</a> multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg4.png" alt='' title='' width='538' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And following this graph we see that from any initial state it’s always possible to reach a state where every node in the tetrahedron graph has been visited. In fact, because the tetrahedron graph is a complete graph it’s even guaranteed that the last node in the sequence will be “adjacent” to the starting node—so that one has formed a Hamiltonian cycle and solved the puzzle. </p>
<p>Things are less trivial for the cube graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg5.png" alt='' title='' width='476' height='74' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The multiway graph (starting from a particular state) in this case is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg6.png" alt='' title='' width='578' height='299' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now there are 13 configurations where no further moves are possible: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg7.png" alt='' title='' width='524' height='36' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In some of these, one’s effectively “boxed in” with no adjacent node to visit. In others, all the nodes have been filled in. But only 3 ultimately achieve a true Hamiltonian cycle that ends adjacent to the starting node:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg8.png" alt='' title='' width='461' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It turns out that one can reach each of these states through 4 distinct paths from the root of the multiway graph. An example of such a path is: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg9.png" alt='' title='' width='566' height='65' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can summarize this path as a Hamiltonian circuit of the original cube graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg10.png" alt='' title='' width='528' height='83' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In the multiway graph, the 12 “winning paths” are</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg11.png" alt='' title='' width='513' height='200' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In a different rendering this becomes</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg12.png" alt='' title='' width='521' height='339' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and keeping only “winning paths” the subgraph of the multiway graph has the symmetrical form:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg13.png" alt='' title='' width='562' height='164' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The actual Hamiltonian circuits through the underlying cube graph corresponding to these winning paths are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg14.png" alt='' title='' width='458' height='316' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For the dodecahedral graph (i.e. the original Icosian game), the multiway graph is larger and more complicated. It begins</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg15.png" alt='' title='' width='620' height='189' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg15_copy.txt">
					<span class='close' id='15_out'>&amp;#10005</span></p>
<pre class='text' id='15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and has its first merge after 11 steps (and 529 in all), and ends up with a total of 11,093 nodes—of which 2446 are “end states” where no further move is possible. This shows the number of end (below) and non-end (above) states at each successive step: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg16.png" alt='' title='' width='576' height='133' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg16_copy.txt">
					<span class='close' id='16_out'>&amp;#10005</span></p>
<pre class='text' id='16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The successive fractions of “on-track-to-succeed” states are as follows, indicating that the puzzle is in a sense harder at the beginning than at the end:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg17.png" alt='' title='' width='576' height='125' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg17_copy.txt">
					<span class='close' id='17_out'>&amp;#10005</span></p>
<pre class='text' id='17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are 13 “end states” which fill in every position of the underlying dodecahedral graph, with 3 of these corresponding to Hamiltonian cycles:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg18.png" alt='' title='' width='534' height='52' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg18_copy.txt">
					<span class='close' id='18_out'>&amp;#10005</span></p>
<pre class='text' id='18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The total number of paths from the root of the multiway graph leading to end states (in effect the total number of ways to try to solve the puzzle) is 3120. Of these, 60 lead to the 3 Hamiltonian cycle end states. An example of one of these “winning paths” is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg19.png" alt='' title='' width='568' height='71' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg19_copy.txt">
					<span class='close' id='19_out'>&amp;#10005</span></p>
<pre class='text' id='19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Examples of underlying Hamiltonian cycles corresponding to each of the 3 Hamiltonian cycle end states are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg20.png" alt='' title='' width='501' height='121' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg20_copy.txt">
					<span class='close' id='20_out'>&amp;#10005</span></p>
<pre class='text' id='20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And this now shows all 60 paths through the multiway graph that reach Hamiltonian cycle end states—and thus correspond to solutions to the puzzle:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg21.png" alt='' title='' width='610' height='522' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg21_copy.txt">
					<span class='close' id='21_out'>&amp;#10005</span></p>
<pre class='text' id='21_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In effect, solving the puzzle consists in successfully finding these paths out of all the possibilities in the multiway graph. In practice, though—much as in theorem-proving, for example—there are considerably more efficient ways to find “winning paths” than to look directly at all possibilities in the multiway graph (e.g. <a href='https://reference.wolfram.com/language/ref/FindHamiltonianCycle.html'><tt>FindHamiltonianCycle</tt></a> in <a href='https://www.wolfram.com/language/'>Wolfram Language</a>). But for our purpose of understanding games and puzzles in a multicomputational framework, it’s useful to see how solutions to this puzzle lay out in the multiway graph.</p>
<p>The Icosian game from Hamilton was what launched the idea of Hamiltonian cycles on graphs. But already in 1736 <a href='https://www.wolframalpha.com/input?i=Leonhard+Euler'>Leonhard Euler</a> had discussed what are now called Eulerian cycles in connection with the <a href='https://mathworld.wolfram.com/KoenigsbergBridgeProblem.html'>puzzle of the Bridges of Königsberg</a>. In modern terms, we can state the puzzle as the problem of finding a path that visits once and only once all the edges in the graph (in which the “double bridges” from the original puzzle have been disambiguated by extra nodes):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg22.png" alt='' title='' width='364' height='72' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg22A_copy.txt">
					<span class='close' id='22A_out'>&amp;#10005</span></p>
<pre class='text' id='22A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can create a multiway graph that represents all possible paths starting from a particular vertex:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg23.png" alt='' title='' width='578' height='300' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg23A_copy.txt">
					<span class='close' id='23A_out'>&amp;#10005</span></p>
<pre class='text' id='23A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But now we see that the end states here are</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg24.png" alt='' title='' width='497' height='127' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg24A_copy.txt">
					<span class='close' id='24A_out'>&amp;#10005</span></p>
<pre class='text' id='24A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and since none of them have visited every edge, there is no Eulerian circuit here. To completely resolve the puzzle we need to make a multiway graph in which we start from all possible underlying vertices. The result is a disconnected multiway graph whose end states again never visit every edge in the underlying graph (as one can tell from the fact that the number of “levels” in each subgraph is less than 10):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg25.png" alt='' title='' width='573' height='168' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722icosianrelativeimg25A_copy.txt">
					<span class='close' id='25A_out'>&amp;#10005</span></p>
<pre class='text' id='25A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='the-geography-game'>The Geography Game</h2>
<p>In the Geography Game one has a collection of words (say place names) and then one attempts to “string the words together”, with the last letter of one word being the same as the first letter of the next. The game typically ends when nobody can come up with a word that works and hasn’t been used before. </p>
<p>Usually in practice the game is played with multiple players. But one can perfectly well consider a version with just one player. And as an example let’s take our “words” to be the abbreviations for the states in the US. Then we can make a graph of what can follow what:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg1.png" alt='' title='' width='563' height='409' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg1_copy.txt">
					<span class='close' id='1geography_out'>&amp;#10005</span></p>
<pre class='text' id='1geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Let’s at first ignore the question of whether a state has “already been used”. Then, starting, say, from Massachusetts (MA), we can construct the beginning of a multiway graph that gives us all possible sequences:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg2.png" alt='' title='' width='541' height='293' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg2_copy.txt">
					<span class='close' id='2geography_out'>&amp;#10005</span></p>
<pre class='text' id='2geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 10 steps the graph is</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg3.png" alt='' title='' width='525' height='228' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg3_copy.txt">
					<span class='close' id='3geography_out'>&amp;#10005</span></p>
<pre class='text' id='3geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or in a different rendering:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg4.png" alt='' title='' width='531' height='254' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg4_copy.txt">
					<span class='close' id='4geography_out'>&amp;#10005</span></p>
<pre class='text' id='4geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This shows the total number of paths as a function of length through this graph, assuming one doesn’t allow any state to be repeated:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg5.png" alt='' title='' width='491' height='149' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg5_copy.txt">
					<span class='close' id='5geography_out'>&amp;#10005</span></p>
<pre class='text' id='5geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The maximum length of path is 23—and there are 256 such paths, 88 ending with TX and 168 ending with AZ. A few sample such paths are</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg6.png" alt='' title='' width='572' height='178' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg6_copy.txt">
					<span class='close' id='6geography_out'>&amp;#10005</span></p>
<pre class='text' id='6geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and all these paths can be represented by what amounts to a finite state machine:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg7.png" alt='' title='' width='519' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg7_copy.txt">
					<span class='close' id='7geography_out'>&amp;#10005</span></p>
<pre class='text' id='7geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By the way, the starting state that leads to the longest path is MN—which achieves length 24 in 2336 different ways, with possible endings being AZ, DE, KY and TX. A few samples are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg8.png" alt='' title='' width='563' height='163' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg8_copy.txt">
					<span class='close' id='8geography_out'>&amp;#10005</span></p>
<pre class='text' id='8geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Drawing these paths in the first few steps of the multiway graph starting from MN we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy'class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg9.png" alt='' title='' width='491' height='339' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722geographyimg9_copy.txt">
					<span class='close' id='9geography_out'>&amp;#10005</span></p>
<pre class='text' id='9geography_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='groups-and-(simplified)-rubik&rsquo;s-cubes'>Groups and (Simplified) Rubik&rsquo;s Cubes</h2>
<p>We’ve talked about puzzles that effectively involve walks on graphs. A particularly famous example of a puzzle that can be thought about in this way is the Rubik’s Cube. The graph in question is then the Cayley graph for the group formed by the transformations that can be applied to the cube. </p>
<p>As a very simple analog, we can consider the symmetry group of the square, <em>D</em><sub>4</sub>, based on the operations of reflection and 90° rotation. We generate the Cayley graph just like a multiway graph: by applying each operation at each step. And in this example the Cayley graph is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg2.png" alt='' title='' width='495' height='233' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg2_copy.txt">
					<span class='close' id='2rubik_out'>&amp;#10005</span></p>
<pre class='text' id='2rubik_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This graph is small enough that it is straightforward to see how to get from any configuration to any other. But while this Cayley graph has 8 nodes and maximum path length from any one node to any other of 3, the <a href='https://mathworld.wolfram.com/RubiksGroup.html'>Cayley graph for the Rubik&#8217;s Cube</a> has <img loading='lazy' style="margin-bottom: -5px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg3A.png" width= '435' height='' /> nodes and a <a href='https://mathworld.wolfram.com/GodsNumber.html'>maximum shortest path length of 20</a>. </p>
<p>To get some sense of the structure of an object like this, we can consider the very simplified case of a “2×2×2 cube”—colored only on its corners—in which each face can be rotated by 90°:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg4.png" alt='' title='' width='204' height='102' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg4_copy.txt">
					<span class='close' id='4rubik_out'>&amp;#10005</span></p>
<pre class='text' id='4rubik_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The first step in the multiway graph—starting from the configuration above—is then (note that the edges in the graph are not directed, since the underlying transformations are always reversible):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg5.png" alt='' title='' width='453' height='375' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg5_copy.txt">
					<span class='close' id='5rubik_out'>&amp;#10005</span></p>
<pre class='text' id='5rubik_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Going another step gives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg6.png" alt='' title='' width='453' height='350' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg6_copy.txt">
					<span class='close' id='6rubik_out'>&amp;#10005</span></p>
<pre class='text' id='6rubik_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The complete multiway graph (which is also the Cayley graph for the group—which turns out to be <em>S</em><sub>8</sub>—generated by the transformations) has 8! = 40,320 nodes (and 483,840 edges). Starting from a state (i.e. node in the Cayley graph) the number of new states reached at successive steps is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg8.png" alt='' title='' width='336' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg8_copy.txt">
					<span class='close' id='8rubik_out'>&amp;#10005</span></p>
<pre class='text' id='8rubik_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The maximum shortest paths in the graph consist of 8 steps; an example is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg9.png" alt='' title='' width='568' height='47' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg9_copy.txt">
					<span class='close' id='9rubik_out'>&amp;#10005</span></p>
<pre class='text' id='9rubik_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Between these particular two endpoints there are actually 3216 “geodesic” paths—which spread out quite far in the multiway graph </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg11.png" alt='' title='' width='631' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg11A_copy.txt">
					<span class='close' id='11rubik_out'>&amp;#10005</span></p>
<pre class='text' id='11rubik_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Picking out only geodesic paths we see there are many ways to get from one configuration of the cube to one of its “antipodes”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg10.png" alt='' title='' width='572' height='310' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722rubikimg10_copy.txt">
					<span class='close' id='10rubik_out'>&amp;#10005</span></p>
<pre class='text' id='10rubik_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='peg-solitaire'>Peg Solitaire</h2>
<p>Whereas something like tic-tac-toe involves progressively filling in a board, a large class of puzzles that have been used since at least the 1600s involve basically removing pegs from a board. The typical rules involve pegs being able to jump over a single intermediate peg into a hole, with the intermediate peg then being removed. The goal is to end up with just a single peg on the board. </p>
<p>Here’s a very simple example based on a T arrangement of pegs: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg1.png" alt='' title='' width='478' height='68' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg1_copy.txt">
					<span class='close' id='1peg_out'>&amp;#10005</span></p>
<pre class='text' id='1peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In this case, there’s only one way to “solve the puzzle”. But in general there’s a multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg2.png" alt='' title='' width='416' height='450' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg2_copy.txt">
					<span class='close' id='2peg_out'>&amp;#10005</span></p>
<pre class='text' id='2peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A more complicated example is the “Tricky Triangle” (AKA the “<a href='https://shop.crackerbarrel.com/toys-games/games/travel-games/peg-game/606154' target=_blank rel=noopener>Cracker Barrel puzzle</a>”). Its multiway graph begins:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg3.png" alt='' title='' width='568' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg3_copy.txt">
					<span class='close' id='3peg_out'>&amp;#10005</span></p>
<pre class='text' id='3peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After another couple of steps it becomes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg4.png" alt='' title='' width='574' height='298' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg4_copy.txt">
					<span class='close' id='4peg_out'>&amp;#10005</span></p>
<pre class='text' id='4peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are a total of 3016 states in the final multiway graph, of which 118 are “dead-end” configurations from which no further moves are possible. The “earliest” of these dead-end configurations are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg5.png" alt='' title='' width='511' height='191' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg5_copy.txt">
					<span class='close' id='5peg_out'>&amp;#10005</span></p>
<pre class='text' id='5peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are just 4 “winning states” that can be reached, and the “end games” that lead to them are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg6.png" alt='' title='' width='583' height='360' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg6_copy.txt">
					<span class='close' id='6peg_out'>&amp;#10005</span></p>
<pre class='text' id='6peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Starting from the initial configuration, the number of possible states reached at each step is given as follows, where the states that can lead to winning configurations is shown in yellow: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg7A.png" alt='' title='' width='303' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg7_copy.txt">
					<span class='close' id='7peg_out'>&amp;#10005</span></p>
<pre class='text' id='7peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This shows the complete multiway graph, with “winning paths” highlighted:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg8.png" alt='' title='' width='568' height='294' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg8_copy.txt">
					<span class='close' id='8peg_out'>&amp;#10005</span></p>
<pre class='text' id='8peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At successive steps, the fraction of states that can lead to a winning state is as follows:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg9.png" alt='' title='' width='449' height='97' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg9_copy.txt">
					<span class='close' id='9peg_out'>&amp;#10005</span></p>
<pre class='text' id='9peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The branchial graphs are highly connected, implying that in a sense the puzzle remains “well mixed” and “unpredictable” until the very end:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img  loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg10.png" alt='' title='' width='568' height='137' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722pegimg10_copy.txt">
					<span class='close' id='10peg_out'>&amp;#10005</span></p>
<pre class='text' id='10peg_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='checkers'>Checkers</h2>
<p>Peg solitaire is a one-player “game”. Checkers (AKA draughts) is a two-player game with a somewhat similar setup. “Black” and “red” pieces move diagonally in different directions on a board, “taking” each other by jumping over when they are adjacent.</p>
<p>Let’s consider the rather minimal example of a 4×4 board. The basic set of possible moves for “black” and “red” is defined by the graphs (note that a 4×4 board is too small to support “multiple jumps”):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg1.png" alt='' title='' width='529' height='158' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg1_copy.txt">
					<span class='close' id='1checker_out'>&amp;#10005</span></p>
<pre class='text' id='1checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With this setup we can immediately start to generate a multiway graph, based on alternating black and red moves:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg2.png" alt='' title='' width='578' height='179' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg2_copy.txt">
					<span class='close' id='2checker_out'>&amp;#10005</span></p>
<pre class='text' id='2checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With the rules as defined so far, the full 161-node multiway graph is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg3.png" alt='' title='' width='578' height='394' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg3_copy.txt">
					<span class='close' id='3checker_out'>&amp;#10005</span></p>
<pre class='text' id='3checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s not completely clear what it means to “win” in this simple 4×4 case. But one possibility is to say that it happens when the other player can’t do anything at their next move. This corresponds to “dead ends” in the multiway graph. There are 26 of these, of which only 3 occur when it is red’s move next, and the rest all occur when it is black’s move:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg4.png" alt='' title='' width='566' height='119' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg4_copy.txt">
					<span class='close' id='4checker_out'>&amp;#10005</span></p>
<pre class='text' id='4checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As before, any particular checkers game corresponds to a path in the multiway graph from the root to one of these end states. If we look at branchial graphs in this case, we find that they have many disconnected pieces, indicating that there are many largely independent “game paths” for this simple game&#8212;so there is not much “mixing” of outcomes: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg5.png" alt='' title='' width='495' height='150' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg5_copy.txt">
					<span class='close' id='5checker_out'>&amp;#10005</span></p>
<pre class='text' id='5checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg6.png" alt='' title='' width='486' height='200' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg6_copy.txt">
					<span class='close' id='6checker_out'>&amp;#10005</span></p>
<pre class='text' id='6checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The rules we’ve used so far don’t account for what amounts to the second level of rules for checkers: the fact that when a piece reaches the other side of the board it becomes a “king” that’s allowed to move backwards as well as forwards. Even with a single piece and single player this already generates a multiway graph—notably now with loops:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg7.png" alt='' title='' width='517' height='188' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg7_copy.txt">
					<span class='close' id='7checker_out'>&amp;#10005</span></p>
<pre class='text' id='7checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or in an alternative layout (with explicitly undirected edges):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg8.png" alt='' title='' width='287' height='218' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg8_copy.txt">
					<span class='close' id='8checker_out'>&amp;#10005</span></p>
<pre class='text' id='8checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With two pieces (and two players taking turns) the “kings” multiway graph begins:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg9A.png" alt='' title='' width='520' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg9_copy.txt">
					<span class='close' id='9checker_out'>&amp;#10005</span></p>
<pre class='text' id='9checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With this initial configuration, but without backward motion, the whole multiway graph is just:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg10.png" alt='' title='' width='425' height='303' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg10_copy.txt">
					<span class='close' id='10checker_out'>&amp;#10005</span></p>
<pre class='text' id='10checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The full “kings” multiway graph in this case also only has 62 nodes—but includes all sorts of loops (though with this few pieces and black playing first it’s inevitable that any win will be for black):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg11.png" alt='' title='' width='575' height='300' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg11_copy.txt">
					<span class='close' id='11checker_out'>&amp;#10005</span></p>
<pre class='text' id='11checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What about the ordinary + kings multiway graph from our original initial conditions? The combined graph has 161 nodes from the “pre-king” phase, and 4302 from the “post-king” phase—giving the final form:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg12.png" alt='' title='' width='541' height='387' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060723checkerimg12_copy.txt">
					<span class='close' id='12checker_out'>&amp;#10005</span></p>
<pre class='text' id='12checker_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='(very-simplified)-go'>(Very Simplified) Go</h2>
<p>The full game of Go is sophisticated and its multiway graph in any realistic case is far too big for us to generate at all explicitly (though one can certainly wonder if there are meaningful “continuum limit” results). However, to get some flavor of Go we can consider a vastly simplified version in which black and white “stones” are progressively placed on nodes of a graph, and the game is considered “won” if one player has successfully surrounded a connected collection of the other player’s stones. </p>
<p>Imagine that we start with a blank “board” consisting of a 2×2 square of positions, then on a sequence of “turns” add black and white stones in all possible ways. The resulting multiway graph is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg1.png" alt='' title='' width='575' height='225' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg1_copy.txt">
					<span class='close' id='1go_out'>&amp;#10005</span></p>
<pre class='text' id='1go_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Every state that has no successor here is a win for either black or white. The “black wins” (with the surrounded stone highlighted) are</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg2.png" alt='' title='' width='440' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg2_copy.txt">
					<span class='close' id='2go_out'>&amp;#10005</span></p>
<pre class='text' id='2go_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>while the “white wins” are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg3.png" alt='' title='' width='440' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg3_copy.txt">
					<span class='close' id='3go_out'>&amp;#10005</span></p>
<pre class='text' id='3go_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At this level what we have is basically equivalent to 2×2 tic-tac-toe, albeit with a “diagonal” win condition. With a 3×2 “board”, the first two steps in the multiway graph are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg4.png" alt='' title='' width='577' height='161' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg4_copy.txt">
					<span class='close' id='4go_out'>&amp;#10005</span></p>
<pre class='text' id='4go_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The final multiway graph is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg5.png" alt='' title='' width='542' height='196' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg5_copy.txt">
					<span class='close' id='5go_out'>&amp;#10005</span></p>
<pre class='text' id='5go_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The graph has 235 nodes, of which 24 are wins for white, and 34 for black:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg6.png" alt='' title='' width='593' height='137' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg6_copy.txt">
					<span class='close' id='6go_out'>&amp;#10005</span></p>
<pre class='text' id='6go_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The successive branchial graphs in this case are (with wins for black and white indicated):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg7.png" alt='' title='' width='515' height='330' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722goimg7_copy.txt">
					<span class='close' id='7go_out'>&amp;#10005</span></p>
<pre class='text' id='7go_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For a 3×3 “board” the multiway graph has 5172 states, with 604 being wins for white and 684 being wins for black.</p>
<h2 id='nim'>Nim</h2>
<p>As another example of a simple game, we’ll now consider Nim. In Nim, there are <em>k</em> piles of objects, and at each step <em>p</em> players alternate in removing as many objects as they want from whatever single pile they choose. The loser of the game is the player who is forced to have 0 objects in all the piles.</p>
<p>Starting off with 2 piles each containing 2 objects, one can construct a multiway graph for the game:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg1.png" alt='' title='' width='273' height='272' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg1_copy.txt">
					<span class='close' id='1nim_out'>&amp;#10005</span></p>
<pre class='text' id='1nim_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With 3 piles this becomes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg2.png" alt='' title='' width='577' height='316' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg2_copy.txt">
					<span class='close' id='2nim_out'>&amp;#10005</span></p>
<pre class='text' id='2nim_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>These graphs show all the different possible moves that relate different configurations of the piles. However, they do not indicate which player moves when. Adding this we get in the 22 case</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg3.png" alt='' title='' width='376' height='263' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg3_copy.txt">
					<span class='close' id='3nim_out'>&amp;#10005</span></p>
<pre class='text' id='3nim_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and in the 222 case:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg4.png" alt='' title='' width='578' height='308' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg4_copy.txt">
					<span class='close' id='4nim_out'>&amp;#10005</span></p>
<pre class='text' id='4nim_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Even though these graphs look somewhat complicated, it turns out there is a very straightforward criterion for when a particular state has the property that its “opponent” can force a lose: just take the list of numbers and see if <tt><a href="https://reference.wolfram.com/language/ref/Apply.html">Apply</a>[<a href="https://reference.wolfram.com/language/ref/BitXor.html">BitXor</a>, list]</tt> is 0. Highlighting when this occurs we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg5.png" alt='' title='' width='575' height='221' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg5_copy.txt">
					<span class='close' id='5nim_out'>&amp;#10005</span></p>
<pre class='text' id='5nim_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It turns that for Nim, the sequence of branchial graphs we get have a rather regular structure. In the 22 case, with the same highlighting as before, we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg6.png" alt='' title='' width='574' height='109' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg6_copy.txt">
					<span class='close' id='6nim_out'>&amp;#10005</span></p>
<pre class='text' id='6nim_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In the 222 case the sequence of branchial graphs becomes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg7.png" alt='' title='' width='568' height='81' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg7_copy.txt">
					<span class='close' id='7nim_out'>&amp;#10005</span></p>
<pre class='text' id='7nim_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here are results for some other cases:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg8.png" alt='' title='' width='584' height='186' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722nimimg8_copy.txt">
					<span class='close' id='8nim_out'>&amp;#10005</span></p>
<pre class='text' id='8nim_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='sliding-block-puzzles'>Sliding Block Puzzles</h2>
<p>They go under many names—with many different kinds of theming. But many puzzles are ultimately sliding block puzzles. A simple example might ask to go from</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg1.png" alt='' title='' width='394' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg1_copy.txt">
					<span class='close' id='1sliding_out'>&amp;#10005</span></p>
<pre class='text' id='1sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>by sliding blocks into the empty (darker) square. A solution to this is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg2.png" alt='' title='' width='455' height='41' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg2_copy.txt">
					<span class='close' id='2sliding_out'>&amp;#10005</span></p>
<pre class='text' id='2sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One can use a multiway graph to represent all possible transformations:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg3.png" alt='' title='' width='375' height='322' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg3_copy.txt">
					<span class='close' id='3sliding_out'>&amp;#10005</span></p>
<pre class='text' id='3sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(Note that only 12 of the 4! = 24 possible configurations of the blocks appear here; a configuration like <img loading='lazy' style="margin-bottom: -15px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw050722slidingblock1.png" alt='' title='' width='43' height='' /> cannot be reached.)</p>
<p>Since blocks can always be “slid both ways” every edge in a sliding-block-puzzle multiway graph has an inverse—so going forward we’ll just draw these multiway graphs as undirected.</p>
<p>Here are some simple cases:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg4.png" alt='' title='' width='569' height='193' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg4_copy.txt">
					<span class='close' id='4sliding_out'>&amp;#10005</span></p>
<pre class='text' id='4sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg5.png" alt='' title='' width='508' height='223' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg5_copy.txt">
					<span class='close' id='5sliding_out'>&amp;#10005</span></p>
<pre class='text' id='5sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With a 3×2 board, things quickly get more complicated: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg6.png" alt='' title='' width='481' height='199' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg6_copy.txt">
					<span class='close' id='6sliding_out'>&amp;#10005</span></p>
<pre class='text' id='6sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Rendered in 3D this becomes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg7.png" alt='' title='' width='356' height='141' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg7_copy.txt">
					<span class='close' id='7sliding_out'>&amp;#10005</span></p>
<pre class='text' id='7sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>When all the blocks are distinct, one tends to get multiway graphs with a kind of spherical structure:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg8.png" alt='' title='' width='497' height='529' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg8_copy.txt">
					<span class='close' id='8sliding_out'>&amp;#10005</span></p>
<pre class='text' id='8sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(Note that in the first three cases here, it’s possible to reach all 30, 120, 360 conceivable arrangements of the blocks, while in the last case one can only reach “even permutations” of the blocks, or 360 of the 720 conceivable arrangements.)</p>
<p>This shows how one gets from <img loading='lazy' style="margin-bottom: -15px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw050722slidingblock2.png" alt='' title='' width='52' height='' /> to <img loading='lazy' style="margin-bottom: -15px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw050722slidingblock3.png" alt='' title='' width='52' height='' />:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg9.png" alt='' title='' width='453' height='306' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg9_copy.txt">
					<span class='close' id='9sliding_out'>&amp;#10005</span></p>
<pre class='text' id='9sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With many identical blocks one tends to build up a simple lattice:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg10.png" alt='' title='' width='533' height='183' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg10_copy.txt">
					<span class='close' id='10sliding_out'>&amp;#10005</span></p>
<pre class='text' id='10sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Making one block different basically just “adds decoration”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg11A.png" alt='' title='' width='496' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg11A_copy.txt">
					<span class='close' id='11slidingA_out'>&amp;#10005</span></p>
<pre class='text' id='11slidingA_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As the number of “1” and “2” blocks becomes closer to equal, the structure fills in:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg12.png" alt='' title='' width='573' height='451' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg12_copy.txt">
					<span class='close' id='12sliding_out'>&amp;#10005</span></p>
<pre class='text' id='12sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Adding a third type of block rapidly leads to a very complicated structure:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg13.png" alt='' title='' width='568' height='215' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg13_copy.txt">
					<span class='close' id='13sliding_out'>&amp;#10005</span></p>
<pre class='text' id='13sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This summarizes a few of the graphs obtained:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg14.png" alt='' title='' width='462' height='131' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg14_copy.txt">
					<span class='close' id='14sliding_out'>&amp;#10005</span></p>
<pre class='text' id='14sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg15.png" alt='' title='' width='462' height='131' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722slidingimg15_copy.txt">
					<span class='close' id='15sliding_out'>&amp;#10005</span></p>
<pre class='text' id='15sliding_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='towers-of-hanoi,-etc.'>Towers of Hanoi, etc.</h2>
<p>Another well-known puzzle is the Towers of Hanoi. And once again we can construct a multiway graph for it. Starting with all disks on the left peg the first step in the multiway graph is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg1.png" alt='' title='' width='506' height='127' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg1_copy.txt">
					<span class='close' id='1hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='1hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Going two steps we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg2.png" alt='' title='' width='506' height='175' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg2_copy.txt">
					<span class='close' id='2hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='2hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The complete multiway graph is then (showing undirected edges in place of pairs of directed edges):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg3.png" alt='' title='' width='527' height='433' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg3_copy.txt">
					<span class='close' id='3hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='3hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It is rather easy to see how the recursive structure of this multiway graph builds up. Here’s the “base case” of 2 disks (and 3 pegs):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg4.png" alt='' title='' width='438' height='284' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg4_copy.txt">
					<span class='close' id='4hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='4hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And as each disk is added, the number of nodes in the multiway graph increases by a factor of 3—yielding for example with 4 disks (and still 3 pegs):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg5.png" alt='' title='' width='376' height='327' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg5_copy.txt">
					<span class='close' id='5hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='5hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With 4 pegs, things at first look more complicated, even with 2 disks:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg6.png" alt='' title='' width='484' height='265' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg6_copy.txt">
					<span class='close' id='6hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='6hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In a 3D rendering, more structure begins to emerge:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg7.png" alt='' title='' width='366' height='286' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg7_copy.txt">
					<span class='close' id='7hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='7hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here are the results for 3, 4 and 5 disks—with the “points of the ears” corresponding to states where all the disks are on a single peg:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg8.png" alt='' title='' width='565' height='215' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg8_copy.txt">
					<span class='close' id='8hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='8hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With 3 pegs, the shortest “solution to the puzzle”—of moving all disks from one peg to another—goes along the “side” of the multiway graph, and for <em>n</em> pegs is of length 2<sup><em>n</em></sup> – 1:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg10.png" alt='' title='' width='408' height='252' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg10_copy.txt">
					<span class='close' id='10hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='10hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With 4 pegs, there is no longer a unique “geodesic path”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg11.png" alt='' title='' width='565' height='215' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg11_copy.txt">
					<span class='close' id='11hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='11hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(And the sequence of path lengths for successive numbers of pegs is</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg12.png" alt='' title='' width='328' height='25' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg12_copy.txt">
					<span class='close' id='12hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='12hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or a little below <img loading='lazy' class='' style="margin-bottom: -1px" src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg18.png" alt='' title='' width='39' height='' /> for a large number of pegs <em>n</em>.)</p>
<p>What about branchial graphs? For the standard 3-disk 3-peg case we have</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg14.png" alt='' title='' width='565' height='426' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg14_copy.txt">
					<span class='close' id='14hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='14hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where successive “time slices” are assumed to be obtained by looking at successive vertical levels in the rendering of the multiway graph above. </p>
<p>For 4 disks one essentially gets “more of the same”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg15.png" alt='' title='' width='555' height='161' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg15_copy.txt">
					<span class='close' id='15hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='15hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With 4 pegs things become slightly more complicated:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg16.png" alt='' title='' width='447' height='263' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg16_copy.txt">
					<span class='close' id='16hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='16hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And the trend continues for 5 pegs:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg17.png" alt='' title='' width='589' height='199' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722hanoiimg17_copy.txt">
					<span class='close' id='17hanoi_out'>&amp;#10005</span></p>
<pre class='text' id='17hanoi_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 id='multicomputational-implications-&#038;-interpretation'>Multicomputational Implications &#038; Interpretation </h2>
<p>We’ve now gone through many examples of games and puzzles. And in each case we’ve explored the multiway graphs that encapsulate the whole spectrum of their possible behavior. So what do we conclude? The most obvious point is that when games and puzzles seem to us difficult—and potentially “interesting”—it’s some kind of reflection of apparent complexity in the multiway graph. Or, put another way, it’s when we find the multiway graph somehow “difficult to decode” that we get a rich and engaging game or puzzle.</p>
<p>In any particular instance of playing a game we’re basically following a specific path (that in analogy to physics we can call a “timelike path”) through the multiway graph (or “game graph”) for the game. And at some level we might just make the global statement that the game graph represents all such paths. But what the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a> suggests is that there are also more local statements that we can usefully make. In particular, at every step along a timelike path we can look “transversally” in the multiway graph, and see the “instantaneous branchial graph” that represents the “entanglement” of our path with “nearby paths”.</p>
<p>Figuring out “what move to make next” is then in a sense about deciding in “what direction” in branchial space to go. And what makes a game difficult is that we can’t readily predict what happens as we “<a href='https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/#motion-beyond-physical-space:-the-branchial-case'>travel through branchial space</a>”. There’s a certain analogy here to the concept of <a href='https://www.wolframscience.com/nks/p737--computational-irreducibility/'>computational irreducibility</a>. Going from one state to another along some timelike path, computational irreducibility implies that even though we may know the underlying rules, we can’t readily predict their consequences—because it can require an irreducible amount of computation to figure out what their consequences will be after many steps. </p>
<p>Predicting “across branchial space” is a related, but slightly different phenomenon, that one can describe as “<a href='https://www.wolframphysics.org/bulletins/2022/06/multicomputational-irreducibility/' target=_blank rel=noopener>multicomputational irreducibility</a>”. It’s not about the difficulty of working out a particular path of computation, but instead about the difficulty of seeing how many entangled paths interact.</p>
<p>When one plays a game, it’s common to talk about “how many moves ahead one can see”. And in our terms here, this is basically about asking how “far out in branchial space” we can readily get. As <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>computationally bounded entities</a>, we have a certain “reach” in branchial space. And the game is “difficult for us” if that reach isn’t sufficient to be able to get to something like a “winning position”. </p>
<p>There’s another point here, though. What counts as “winning” in a game is typically reaching some particular places or regions in the multiway graph. But the definition of these places or regions is typically something very computationally bounded (“just see if there’s a line of X’s”, etc.). It’s a certain “observation” of the system, that extracts just a particular (computationally bounded) sampling of the complete state. And then what’s key is that this sampling doesn’t manage to “decode the multicomputational irreducibility”. </p>
<p>There’s an analogy here to thermodynamics. The fact that in thermodynamics we perceive “heat” and “entropy increase” is a consequence of the fact that our (coarse-grained) measurements can’t <a href='https://www.wolframscience.com/nks/p441--irreversibility-and-the-second-law-of-thermodynamics/'>&#8220;decode&#8221; the computationally irreducible process</a> that leads to the particular states generated in the system. Similarly, the fact we perceive it to be “hard to figure out how to win a game” is a consequence of the fact that our criterion for winning isn’t able to “look inside the playing of the game” and “decode what’s going on” to the point where it’s in effect just selecting one particular, straightforward path. Instead it’s a question of going through the multicomputationally irreducible process of playing the game, and in effect “seeing where it lands” relative to the observation of winning. </p>
<p>There’s also an analogy here to quantum mechanics. Tracing through many possible paths of playing a game is like following many threads of history in quantum mechanics, and the criterion of winning is like a quantum measurement that selects certain threads. In our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> we imagine that we as observers are extended in branchial space, “knitting together” different threads of history through our belief in our own single thread of experience. In games, the analog of our belief in a single thread of experience is presumably in effect that “all that matters is who wins or loses; it doesn’t matter how the game is played inside”. </p>
<p>To make a closer analogy with quantum mechanics one can start thinking about combining different chunks of “multiway game play”, and trying to work out a calculus for how those chunks fit together.</p>
<p>The games we’ve discussed here are all in a sense pure “games of skill”. But in games where there’s also an element of chance we can think of this as causing what is otherwise a single path in the multiway graph to “fuzz out” into a bundle of paths, and what is otherwise a single point in branchial space to become a whole extended region.</p>
<p>In studying different specific games and puzzles, we’ve often had to look at rather simplified cases in order to get multiway graphs of manageable size. But if we look at very large multiway graphs, are there perhaps overall regularities that will emerge? Is there potentially some kind of “continuum limit” for game graphs?</p>
<p>It’ll almost inevitably be the case that if we look in “enough detail” we’ll see all sorts of multicomputational irreducibility in action. But in our Physics Project—and indeed in the multicomputational paradigm in general—a key issue is that relevant observers don’t see that level of detail. And much like the emergence of thermodynamics or the gas laws from underlying molecular dynamics, the very existence of underlying computational irreducibility inevitably leads to simple laws for what the observer can perceive.</p>
<p>So what is the analog of “the observer” for a game? For at least some purposes it can be thought of as basically the “win” criteria. So now the question arises: if we look only at these criteria, can we derive the analog of “laws of physics”, insensitive to all the multicomputationally irreducible details underneath?</p>
<p>There’s much more to figure out about this, but perhaps one place to start is to look at the large-scale structure of branchial space—and the multiway graph—in various games. And one basic impression in many different games is that—while the character of branchial graphs may change between “different stages” in the game—across a single branchial graph there tends to be a certain uniformity. If one looks at the details there may be plenty of multicomputational irreducibility. But at some kind of “perceptible level” different parts of the graph may seem similar. And this suggests that the “local impression of the game” will tend to be similar at a particular stage even when quite different moves have been made, that take one to quite different parts of the “game space” defined by the branchial graph.</p>
<p>But while there may be similarity between different parts of the branchial graph, what we’ve seen is that in some games and puzzles the branchial graph breaks up into multiple disconnected regions. And what this reflects is the presence of distinct “conserved sectors” in a game—regions of game space that players can get into, but are then stuck with (at least for a certain time), much as in spacetime <a href='https://www.wolframphysics.org/bulletins/2020/05/event-horizons-singularities-and-other-exotic-spacetime-phenomena/' target=_blank rel=noopener>event horizons can prevent transport</a> between different regions of physical space. </p>
<p>Another (related) effect that we notice in some games and puzzles but not others is large “holes” in the multiway graph: places where between two points in the graph there are multiple “distant” paths. When the multiway graph is densely connected, there’ll typically always be a way to “fix any mistake” by rerouting through nearby paths. But when there is a hole it is a sign that one can end up getting “committed” to one course of action rather than another, and it will be many steps before it’s possible to get to the same place as the other course of action would have reached. </p>
<p>If we assume that at some level all we ultimately “observe” in the multiway graph is the kind of coarse-graining that corresponds to assessing winning or losing then inevitably we’ll be dealing with a distribution of possible paths. Without “holes” these paths can be close together, and may seem obviously similar. But when there’s a hole there can be different paths that are far apart. And the fact there can be distant paths that are “part of the same distribution” can then potentially be thought of as something like a quantum superposition effect. </p>
<p>Are there analogs of general relativity and the path integral in games? To formulate this with clarity we’d have to define more carefully the character of “game space”. Presumably there’ll be the analog of a <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/typical-causal-graphs/' target=_blank rel=noopener>causal graph</a>. And presumably there’ll also be an <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#what-is-energy-what-is-mass'>analog of energy</a> in game space, associated with the “density of activity” at different places in game space. Then the analog of the phenomenon of gravity will be something like that the best game plays (i.e. the geodesic paths through the game graph) will tend to be deflected by the presence of high densities of activity. In other words, if there are lots of things to do when a game is in a certain state, good game plays will tend to be “pulled towards that state”. And at some level this isn’t surprising: when there’s high density of activity in the game graph, there will tend to be more options about what to do, so it’s more likely that one will be able to “do a good game play” if one goes through there.</p>
<p>So far we didn’t explicitly talk about <a href='https://www.wolframscience.com/nks/notes-10-12--games-between-programs/'>strategies for games</a>. But in our multicomputational framework a strategy has a fairly definite interpretation: it is a place in <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>rulial space</a>, where in effect one’s assuming a certain set of rules about how to construct the multiway graph. In other words, given a strategy one is choosing some edges in the multiway graph (or some possible events in the associated multiway causal graph), and dropping others. </p>
<p>In general it can be hard to talk about the “space of possible strategies”—because it’s like talking about the “space of possible programs”. But this is precisely what rulial space lets us talk about. What exact “geometry” the “space of strategies” has will depend on how we choose to coordinatize rulial space. But once again there will tend to be a certain level of coarse-graining achieved by looking only at the kinds of things one discusses in game theory—and at this level we can expect that all sorts of standard “structural” game-theoretic results will generically hold.</p>
<h2 id='personal-notes'>Personal Notes</h2>
<p>Even as a kid I was never particularly into playing games or doing puzzles. And maybe it’s a sign I was always a bit too much of a scientist. Because just picking specific moves always seemed to me too arbitrary. To get my interest I needed a bigger picture, more of a coherent intellectual story. But now, in a sense, that’s just what the multicomputational approach to games and puzzles that I discuss here is bringing to us. Yes, it’s very “humanizing” to be able think about making particular moves. But the multicomputational approach immediately gives one a coherent global view that, at least to me, is intellectually much more satisfying.</p>
<p>The explorations I’ve discussed here can be thought of as originating from a single note in<em> </em><em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em>. In <a href='https://www.wolframscience.com/nks/chap-5--two-dimensions-and-beyond/'>Chapter 5</a> of <em>A New Kind of Science</em> I had a <a href='https://www.wolframscience.com/nks/p204--multiway-systems/'>section where I first introduced multiway systems</a>. And as the very <a href='https://www.wolframscience.com/nks/notes-5-6--game-systems/'>last note for that section I discussed &#8220;Game systems&#8221;</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg1.png" alt='Game systems' title='Game systems' width='564' height='181' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I did the research for this in the 1990s—and indeed I now find a notebook from 1998 about tic-tac-toe with some of the same results derived here</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg2A.png" alt='Tic-tac-toe ListPlot' title='Tic-tac-toe ListPlot' width='377' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>together with a curious-looking graphical representation of the tic-tac-toe game graph:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg3A.png" alt='Tic-tac-toe game graph' title='Tic-tac-toe game graph' width='385' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But back at that time I didn’t conclude much from the game graphs I generated; they just seemed large and complicated. Twenty years passed and I didn’t think much more about this. But then in 2017 <a href='https://www.christopherwolfram.com/' target=_blank rel=noopener>my son Christopher</a> was playing with a puzzle called Rush Hour:</p>
<p>	<a href="https://en.wikipedia.org/wiki/Rush_Hour_(puzzle)#/media/File:Rush_Hour_sliding_block_puzzle.jpg" target="_blank" rel="noreferrer noopener"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg4.png" alt='Rush Hour game' title='Rush Hour game' width='301' height='161' /></a></p>
<p>And perhaps in a sign of familial tendency he decided <a href='https://christopherwolfram.com/projects/rush-hour/' target=_blank rel=noopener>to construct its game graph</a>—coming up with what to me seemed like a very surprising result:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg5.png" alt='Rush Hour game graph' title='Rush Hour game graph' width='272' height='238' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/sw060722finaltwoimg5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At the time I didn’t try to understand the structure one has here—but I still “filed this away” as evidence that game graphs can have “visible large-scale structure”. </p>
<p>A couple of years later—in late 2019—our <a href='https://writings.stephenwolfram.com/2020/04/how-we-got-here-the-backstory-of-the-wolfram-physics-project/'>Physics Project was underway</a> and we’d realized that there are deep relations between quantum mechanics and multiway graphs. Quantum mechanics had always seemed like something mysterious—the abstract result of pure mathematical formalism. But seeing the connection to multiway systems began to suggest that one might actually be able to “understand quantum mechanics” as something that could “mechanically arise” from some concrete underlying structure.</p>
<p>I started to think about finding ways to explain quantum mechanics at an intuitive level. And for that I needed a familiar analogy: something everyday that one could connect to multiway systems. I immediately thought about games. And in <a href='https://www.wolframphysics.org/archives/index?i=2020' target=_blank rel=noopener>September 2020 I decided to take a look</a> at games to explore this analogy in more detail. I quickly analyzed games like tic-tac-toe and Nim—as well as simple sliding block puzzles and the Towers of Hanoi. But I wanted to explore more games and puzzles. And I had <a href='https://writings.stephenwolfram.com/all-by-date/'>other projects to do</a>, so the multicomputational analysis of games and puzzles got set aside. The Towers of Hanoi reappeared earlier this year, when I <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-topology-of-proof-space'>used it as an example of generating a proof-like multiway graph</a>, in connection with my study of the <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/'>physicalization of metamathematics</a>. And finally, a few weeks ago I decided it was time to write down what I knew so far about games and puzzles—and produce what’s here.</p>
<h2 id='thanks' style='font-size:1.2rem'>Thanks</h2>
<p style='font-size:90%'>Thanks to Brad Klee and Ed Pegg for extensive help in the final stages of the analysis given here—as well as to Christopher Wolfram for inspiration in 2017, and help in 2020.</p>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2022/06/games-and-puzzles-as-multicomputational-systems/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Twenty Years Later: The Surprising Greater Implications of A New Kind of Science</title>
		<link>https://writings.stephenwolfram.com/2022/05/twenty-years-later-the-surprising-greater-implications-of-a-new-kind-of-science/</link>
		<comments>https://writings.stephenwolfram.com/2022/05/twenty-years-later-the-surprising-greater-implications-of-a-new-kind-of-science/#comments</comments>
		<pubDate>Mon, 16 May 2022 18:47:47 +0000</pubDate>
		<dc:creator><![CDATA[Stephen Wolfram]]></dc:creator>
				<category><![CDATA[Big Picture]]></category>
		<category><![CDATA[New Kind of Science]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=36963</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/05/icon-nks-20th.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>See also: “A New Kind of Science: A 15-Year View”. From the Foundations Laid by A New Kind of Science When A New Kind of Science was published twenty years ago I thought what it had to say was important. But what&#8217;s become increasingly clear—particularly in the last few years—is that it&#8217;s actually even much [&#8230;]]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/05/icon-nks-20th.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><p><!--margin img--></p>
<style>
h2.bookpost{display:block;}
img.bookpost{padding-top:20px}
</style>
<div class="purplestripe" style="background-color: #eee;max-width: 660px;">
See also: “<a href="https://writings.stephenwolfram.com/2017/05/a-new-kind-of-science-a-15-year-view/" style="color: #19749a;"><b><i>A New Kind of Science</i>: A 15-Year View</b></a>”.
</div>
<p><img class="aligncenter box-shadow" title="Twenty Years Later: The Surprising Greater Implications of A New Kind of Science" src="https://content.wolfram.com/uploads/sites/43/2022/05/nks20-hero2.png" alt="Twenty Years Later: The Surprising Greater Implications of A New Kind of Science" width="660" height="305" /></p>
<h2 id='from-the-foundations-laid-by-a-new-kind-of-science'>From the Foundations Laid by A New Kind of Science</h2>
<p>When <em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em> was published twenty years ago I thought what it had to say was important. But what&#8217;s become increasingly clear—particularly in the last few years—is that it&#8217;s actually even much more important than I ever imagined. My <a href='https://www.wolframscience.com/nks/p1--an-outline-of-basic-ideas/'>original goal</a> in <em>A New Kind of Science</em> was to take a step beyond the mathematical paradigm that had defined the state of the art in science for three centuries—and to introduce a new paradigm based on computation and on the exploration of the <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs/'>computational universe of possible programs</a>. And already in <em>A New Kind of Science</em> one can see that there&#8217;s immense richness to what can be done with this new paradigm. <span id="more-36963"></span></p>
<p>There’s a new abstract basic science—that I <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/'>now call ruliology</a>—that’s concerned with studying the detailed properties of systems with simple rules. There’s a vast new source of “raw material” to “mine” from the computational universe, both for making models of things and for developing technology. And there are new, computational ways to think about fundamental features of how systems in nature and elsewhere work.</p>
<p>But what’s now becoming clear is that there’s actually something still bigger, still more overarching that the paradigm of <em>A New Kind of Science</em> lays the foundations for. In a sense, <em>A New Kind of Science</em> defines how one can use computation to think about things. But what we’re now realizing is that actually computation is not just a way to think about things: it is at a very fundamental level what everything actually is. </p>
<p>One can see this as a kind of ultimate limit of <em>A New Kind of Science</em>. What we call <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a> is the entangled limit of all possible computations. And what we, for example, experience as physical reality is in effect just our particular sampling of the ruliad. And it’s the ideas of <em>A New Kind of Science—</em>and particularly things like the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a>—that lay the foundations for understanding how this works.</p>
<p>When I wrote <em>A New Kind of Science</em> I <a href='https://www.wolframscience.com/nks/chap-9--fundamental-physics/'>discussed the possibility</a> that there might be a way to find a fundamental model of physics based on simple programs. And from that seed has now come the <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Wolfram Physics Project</a>, which, with its broad connections to existing mathematical physics, now seems to show that, yes, it&#8217;s really true that our physical universe is “<a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/'>computational all the way down</a>”. </p>
<p>But there&#8217;s more. It&#8217;s not just that at the lowest level there&#8217;s some specific rule operating on a vast network of atoms of space. It&#8217;s that underneath everything is all possible computation, encapsulated in the single unique construct that is <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>. And what determines our experience—and the science we use to summarize it—is what characteristics we as observers have in sampling the ruliad. </p>
<p>There is a tower of ideas that relate to fundamental questions about the nature of existence, and the foundations not only of physics, but also of <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/'>mathematics</a>, <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/' target=_blank rel=noopener>computer science</a> and a host of other fields. And these ideas build crucially on the paradigm of <em>A New Kind of Science</em>. But they need something else as well: what I now call the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a>. There were hints of it in <em>A New Kind of Science</em> when I <a href='https://www.wolframscience.com/nks/chap-5--two-dimensions-and-beyond#sect-5-6--multiway-systems'>discussed multiway systems</a>. But it has only been within the past couple of years that this whole new paradigm has begun to come into focus. In <em>A New Kind of Science</em> I explored some of the remarkable things that individual computations out in the computational universe can do. What the multicomputational paradigm now does is to consider the aggregate of multiple computations—and in the end the entangled limit of all possible computations, the ruliad.</p>
<p>The Principle of Computational Equivalence is in many ways the intellectual culmination of <em>A New Kind of Science</em>—and it has many deep consequences. And one of them is the idea—and uniqueness—of the ruliad. The Principle of Computational Equivalence provides a very general statement about what all possible computational systems do. What the ruliad then does is to pull together the behaviors and relationships of all these systems into a single object that is, in effect, an ultimate representation of everything computational, and indeed in a certain sense simply of everything. </p>
<h2 id='the-intellectual-journey:-from-physics-to-physics,-and-beyond'>The Intellectual Journey: From Physics to Physics, and Beyond</h2>
<p>The <a href='https://writings.stephenwolfram.com/2022/05/the-making-of-a-new-kind-of-science/'>publication of <em>A New Kind of Science</em> 20 years ago</a> was for me already the culmination of an <a href='https://www.stephenwolfram.com/scrapbook/'>intellectual journey</a> that had begun more than 25 years earlier. I had started in theoretical physics as a teenager in the 1970s. And stimulated by my needs in physics, I had then <a href='https://writings.stephenwolfram.com/2013/06/there-was-a-time-before-mathematica/'>built my first computational language</a>. A couple of years later I returned to basic science, now interested in some very fundamental questions. And from my blend of experience in physics and computing I was led to start trying to formulate things in terms of computation, and computational experiments. And soon <a href='https://www.wolframscience.com/nks/chap-2--the-crucial-experiment/'>discovered the remarkable fact</a> that in the computational universe, even very simple programs can generate immensely complex behavior.</p>
<p>For several years I <a href='https://www.stephenwolfram.com/publications/academic/cellular-automata'>studied the basic science</a> of the particular class of simple programs known as <a href='https://www.wolframscience.com/nks/chap-2--the-crucial-experiment#sect-2-1--how-do-simple-programs-behave'>cellular automata</a>—and the things I saw led me to identify some important general phenomena, most notably <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-6--computational-irreducibility'>computational irreducibility</a>. Then in 1986—having “answered most of the obvious questions I could see”—I left basic science again, and for five years concentrated on <a href='https://www.wolfram.com/mathematica/scrapbook/'>creating Mathematica</a> and what’s now the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>. But in 1991 I took the tools I’d built, and <a href='https://writings.stephenwolfram.com/2022/05/the-making-of-a-new-kind-of-science/'>again immersed myself in basic science</a>. The decade that followed brought a long string of exciting and unexpected discoveries about the computational universe and its implications—leading finally in 2002 to the publication of <em>A New Kind of Science</em>.</p>
<p>In many ways, <em>A New Kind of Science</em> is a very complete book—that in <a href='https://www.wolframscience.com/nks/colophon/'>its 1280 pages</a> does well at “answering all the obvious questions”, save, notably, for some about the “application area” of fundamental physics. For a couple of years after the book was published, <a href='https://writings.stephenwolfram.com/2020/04/how-we-got-here-the-backstory-of-the-wolfram-physics-project/#please-dont-do-that-project'>I continued to explore some of these remaining questions</a>. But pretty soon I was swept up in the building of <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a> and then the Wolfram Language, and in all the complicated and often deep questions involved in for the first time creating a <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>full-scale computational language</a>. And so for nearly 17 years I did almost no basic science. </p>
<p>The ideas of <em>A New Kind of Science</em> nevertheless continued to exert a deep influence—and I came to see my decades of work on computational language as ultimately being about <a href='https://writings.stephenwolfram.com/2015/11/how-should-we-talk-to-ais/'>creating a bridge</a> between the vast capabilities of the computational universe revealed by <em>A New Kind of Science</em>, and the specific kinds of ways we humans are able to think about things. This point of view led me to all kinds of <a href='https://writings.stephenwolfram.com/2016/10/computational-law-symbolic-discourse-and-the-ai-constitution/'>important conclusions</a> about the role of computation and its implications for the future. But through all this I kept on thinking that one day I should look at physics again. And finally in 2019, stimulated by a small technical breakthrough, as well as enthusiasm from physicists of a new generation, <a href='https://writings.stephenwolfram.com/2020/04/how-we-got-here-the-backstory-of-the-wolfram-physics-project/'>I decided it was time to try diving into physics again</a>.</p>
<p>My <a href='https://reference.wolfram.com/language/'>practical tools</a> had developed a lot since I’d worked on <em>A New Kind of Science</em>. And—as I have found so often—the passage of years had given me greater clarity and perspective about what I’d discovered in <em>A New Kind of Science</em>. And it turned out we were rather quickly able to make spectacular progress. <em>A New Kind of Science</em> had <a href='https://www.wolframscience.com/nks/chap-9--fundamental-physics/'>introduced definite ideas about how fundamental physics might work</a>. Now we could see that these ideas were very much on the right track, but on their own they did not go far enough. Something else was needed. </p>
<p>In <em>A New Kind of Science</em> I’d introduced what I called <a href='https://www.wolframscience.com/nks/chap-5--two-dimensions-and-beyond#sect-5-6--multiway-systems'>multiway systems</a>, but I’d treated them as a kind of <a href='https://www.wolframscience.com/nks/chap-9--fundamental-physics#sect-9-11--uniqueness-and-branching-in-time'>sideshow</a>. Now—particularly <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#the-inevitability-of-quantum-mechanics'>tipped off by quantum mechanics</a>—we realized that multiway systems were not a sideshow but were actually in a sense the main event. They had come out of the computational paradigm of <em>A New Kind of Science</em>, but they were really harbingers of a new paradigm: the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a>.</p>
<p>In <em>A New Kind of Science</em>, I’d already talked about space—and everything else in the universe—ultimately being <a href='https://www.wolframscience.com/nks/chap-9--fundamental-physics#sect-9-7--space-as-a-network'>made up of a network of discrete elements</a> that I’d now call “atoms of space”. And I’d talked about time being associated with the inexorable progressive application of computationally irreducible rules. But now we were thinking not just of a single thread of computation, but instead of a whole multiway system of branching and merging threads—representing in effect a multicomputational history for the universe. </p>
<p>In <em>A New Kind of Science</em> I’d devoted a whole chapter to “<a href='https://www.wolframscience.com/nks/chap-10--processes-of-perception-and-analysis/'>Processes of Perception and Analysis</a>”, recognizing the importance of the observer in computational systems. But with multicomputation there was yet more focus on this, and on how a physical observer knits things together to <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>form a coherent thread of experience</a>. Indeed, it became clear that it’s certain features of the observer that ultimately determine the laws of physics we perceive. And in particular it seems that as soon as we—somehow reflecting core <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>features of our conscious experience</a>—believe that we exist persistently through time, but are computationally bounded, then it follows that we will attribute to the universe the central known laws of spacetime and quantum mechanics.</p>
<p>At the level of atoms of space and individual threads of history everything is full of computational irreducibility. But the key point is that observers like us don’t experience this; instead we sample certain computationally reducible features—that we can describe in terms of meaningful “laws of physics”.</p>
<p style="display: inline-block;float: right;padding: 0px;margin: 0px;"><img title="" class="bookpost" src="https://content.wolfram.com/uploads/sites/43/2022/05/1-inset-phyzA.png" alt="" width="163" height="134" style="margin: 0px; padding: 0px;"></a></p>
<p>I never expected it would be so easy, but by early 2020—only a few months into our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Wolfram Physics Project</a>—we seemed to have successfully identified how the “machine code” of our universe must work. <em>A New Kind of Science</em> had established that computation was a powerful way of thinking about things. But now it was becoming clear that actually our whole universe is in a sense “computational all the way down”. </p>
<p>But where did this leave the traditional mathematical view? To my surprise, far from being at odds it seemed as if our computation-all-the-way-down model of physics perfectly plugged into a great many of the more abstract existing mathematical approaches. Mediated by multicomputation, the concepts of <em>A New Kind of Science—</em>which began as an effort to go beyond mathematics—seemed now to be finding a kind of ultimate convergence with mathematics.</p>
<p>But despite our success in working out the structure of the “machine code” for our universe, a major mystery remained. Let’s say we could find a particular rule that could generate everything in our universe. Then we’d have to ask “Why this rule, and not another?” And if “our rule” was simple, how come we’d “lucked out” like that? Ever since I was working on <em>A New Kind of Science</em> I’d <a href='https://writings.stephenwolfram.com/2007/09/my-hobby-hunting-for-our-universe/'>wondered about this</a>.</p>
<p>And just as we were getting ready to announce the Physics Project in May 2020 the answer <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#why-this-universe-the-relativity-of-rules'>began to emerge</a>. It came out of the multicomputational paradigm. And in a sense it was an ultimate version of it. Instead of imagining that the universe follows some particular rule—albeit applying it multicomputationally in all possible ways—what if the universe follows all possible rules? </p>
<p>And then we realized: this is something much more general than physics. And in a sense it’s the ultimate computational construct. It’s what one gets if one takes all the programs in the computational universe that I studied in <em>A New Kind of Science</em> and runs them together—as a single, giant, multicomputational system. It’s a single, unique object that I call <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>, formed as the entangled limit of all possible computations.</p>
<p>There’s no choice about the ruliad. Everything about it is abstractly necessary—emerging as it does just from the formal concept of computation. <em>A New Kind of Science</em> developed the abstraction of thinking about things in terms of computation. The ruliad takes this to its ultimate limit—capturing the whole entangled structure of all possible computations—and defining an object that in some sense describes everything.</p>
<p>Once we believe—as the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a> implies—that things like our universe are computational, it then inevitably follows that they are described by the ruliad. But the observer has a crucial role here. Because while as a matter of theoretical science we can discuss the whole ruliad, our experience of it inevitably has to be based on sampling it according to our actual capabilities of perception.</p>
<p>In the end, it’s deeply analogous to something that—as <a href='https://www.wolframscience.com/nks/p17--the-personal-story-of-the-science-in-this-book/'>I mention in <em>A New Kind of Science</a></em>—first got me interested in fundamental questions in science 50 years ago: the <a href='https://www.wolframscience.com/nks/p441--irreversibility-and-the-second-law-of-thermodynamics/'>Second Law of thermodynamics</a>. The molecules in a gas move around and interact according to certain rules. But as <em>A New Kind of Science</em> argues, one can think about this as a computational process, which can show computational irreducibility. If one didn’t worry about the “mechanics” of the observer, one might imagine that one could readily “see through” this computational irreducibility, to the detailed behavior of the molecules underneath. But the point is that a realistic, computationally bounded observer—like us—will be forced by computational irreducibility to perceive only certain “coarse-grained” aspects of what’s going on, and so will consider the gas to be behaving in a standard large-scale thermodynamic way. </p>
<p>And so it is, at a grander level, with the ruliad. Observers like us can only perceive certain aspects of what’s going on in the ruliad, and a key result of our Physics Project is that with only quite loose constraints on what we’re like as observers, it’s inevitable that we will perceive our universe to operate according to particular precise known laws of physics. And indeed the <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>attributes that we associate with “consciousness”</a> seem closely tied to what’s needed to get the features of spacetime and quantum mechanics that we know from physics. In <em>A New Kind of Science</em> one of the conclusions is that the Principle of Computational Equivalence <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-10--intelligence-in-the-universe'>implies a fundamental equivalence between systems (like us)</a> that we consider “intelligent” or “conscious”, and systems that we consider “merely computational”. </p>
<p>But what’s now become clear in the multicomputational paradigm is that there’s more to this story. It’s not (as people have often assumed) that there’s something more powerful about “conscious observers” like us. Actually, <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>it&#8217;s rather the opposite</a>: that in order to have consistent “conscious experience” we have to have certain limitations (in particular, computational boundedness, and a belief of <a href='https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/'>persistence in time</a>), and these limitations are what make us “see the ruliad” in the way that corresponds to our usual view of the physical world.</p>
<p style="display: inline-block;float:left;padding: 0px;margin: 0px; margin-top: 7px; margin-right: 8px;"><img class="bookpost" title="" src="https://content.wolfram.com/uploads/sites/43/2022/05/2-inset-ultimate-universe.png" alt="" width="131" height="117" style="margin: 0px;padding: 0px;margin-left: 0px;"></a></p>
<p>The concept of the ruliad is a powerful one, with implications that significantly transcend the traditional boundaries of science. For example, last year I realized that thinking in terms of the ruliad potentially provides a <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>meaningful answer to the ultimate question of why our universe exists</a>. The answer, I posit, is that the ruliad—as a “purely formal” object—“necessarily exists”. And what we perceive as “our universe” is then just the “slice” that corresponds to what we can “see” from the particular place in “rulial space” at which we happen to be. There has to be “something there”—and the remarkable fact is that for an observer with our general characteristics, that something has to have features that are like our usual laws of physics.</p>
<p>In <em>A New Kind of Science</em> I discussed how the Principle of Computational Equivalence implies that <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-10--intelligence-in-the-universe'>almost any system can be thought of as being “like a mind”</a> (as in, “the weather has a mind of its own”). But the issue—that for example is of central importance in talking about extraterrestrial intelligence—is how similar to us that mind is. And now with the ruliad we have a more definite way to discuss this. Different minds (even different human ones) can be thought of as being at different places in the ruliad, and thus in effect attributing different rules to the universe. The Principle of Computational Equivalence implies that there must ultimately be a way to translate (or, in effect, move) from one place to another. But the question is how far it is. </p>
<p>Our senses and measuring devices—together with our general paradigms for thinking about things—define the basic area over which our understanding extends, and for which we can readily produce a high-level narrative description of what’s going on. And in the past we might have assumed that this was all we’d ever need to reach with whatever science we built. But what <em>A New Kind of Science—</em>and now the ruliad—show us is that there’s much more out there. There’s a whole computational universe of possible programs—many of which behave in ways that are far from our current domain of high-level understanding.</p>
<p>Traditional science we can view as operating by gradually expanding our domain of understanding. But in a sense the key methodological idea that launched <em>A New Kind of Science</em> is to do computational experiments, which in effect just “jump without prior understanding” out into the wilds of the computational universe. And that’s in the end why <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs/'>all that ruliology</a> in <em>A New Kind of Science</em> at first looks so alien: we’ve effectively jumped quite far from our familiar place in rulial space, so there’s no reason to expect we’ll recognize anything. And in effect, as the title of the book says, we need to be doing a new kind of science.</p>
<p>In <em>A New Kind of Science</em>, an important part of the story has to do with the phenomenon of computational irreducibility, and the way in which it prevents any computationally bounded observer (like us) from being able to “reduce” the behavior of systems, and thereby perceive them as anything other than complex. But now that we’re thinking not just about computation, but about multicomputation, other attributes of other observers start to be important too. And with the ruliad ultimately representing everything, the question of what will be perceived in any particular case devolves into one about the characteristics of observers.</p>
<p>In <em>A New Kind of Science</em> I give examples of how the same kinds of simple programs (such as cellular automata) can <a href='https://www.wolframscience.com/nks/chap-8--implications-for-everyday-systems/'>provide good “metamodels” for a variety of kinds of systems</a> in nature and elsewhere, that show up in very different areas of science. But one feature of different areas of science is that they’re often concerned with different kinds of questions. And with the focus on the characteristics of the observer this is something we get to capture—and we get to discuss, for example, what the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#chemistry-molecular-biology'>chemical observer</a>, or the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#economics'>economic observer</a>, might be like, and how that affects their perception of what’s ultimately in the ruliad.</p>
<p>In <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Chapter 12 of <em>A New Kind of Science</a></em> there’s a long section on “<a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-9--implications-for-mathematics-and-its-foundations'>Implications for Mathematics and Its Foundations</a>”, which begins with the observation that just as many models in science seem to be able to start from simple rules, mathematics is traditionally specifically set up to start from simple axioms. I then analyzed how <a href='https://www.wolframscience.com/nks/p777--implications-for-mathematics-and-its-foundations/'>multiway systems could be thought of as defining possible derivations</a> (or proofs) of new mathematical theorems from axioms or other theorems—and I discussed how the difficulty of doing mathematics can be thought of as a reflection of computational irreducibility.</p>
<p style="display: inline-block;float: right;padding: 0px;margin: 0px;"><img title="" class="bookpost" src="https://content.wolfram.com/uploads/sites/43/2022/05/3-inset-metamath-project.png" alt="" width="150" height="123" style="margin: 0px; padding: 0px;"></a></p>
<p>But informed by our Physics Project I realized that there&#8217;s much more to say about the foundations of mathematics—and this has led to our recently launched <a href='https://www.wolframscience.com/metamathematics/'>Metamathematics Project</a>. At the core of this project is the idea that mathematics, like physics, is ultimately just a sampling of the ruliad. And just as the ruliad defines the lowest-level machine code of physics, so does it also for mathematics.</p>
<p>The traditional axiomatic level of mathematics (with its built-in notions of variables and operators and so on) is already higher level than the “raw ruliad”. And a crucial observation is that just like physical observers operate at a level far above things like the atoms of space, so “mathematical observers” mostly operate at a level far above the raw ruliad, or even the “assembly code” of axioms. In an analogy with gases, the ruliad—or even axiom systems—are talking about the “molecular dynamics” level; but “mathematical observers” operate more at the “fluid dynamics” level. </p>
<p>And the result of this is what I call the physicalization of metamathematics: the realization that our “perception” of mathematics is like our perception of physics. And that, for example, the very possibility of consistently doing higher-level mathematics where we don&#8217;t always have to drop down to the level of axioms or the raw ruliad has the same origin as the fact that “observers like us” typically view space as something continuous, rather than something made up of lots of atoms of space.</p>
<p>In <em>A New Kind of Science</em> I <a href='https://www.wolframscience.com/nks/p815--implications-for-mathematics-and-its-foundations/'>considered it a mystery</a> why phenomena like undecidability are not more common in typical pure mathematics. But now our Metamathematics Project provides an answer that&#8217;s based on the character of mathematical observers. </p>
<p>My stated goal at the beginning of <em>A New Kind of Science</em> was to go beyond the mathematical paradigm, and that&#8217;s exactly what was achieved. But now there&#8217;s almost a full circle—because we see that building on <em>A New Kind of Science</em> and the computational paradigm we reach the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a> and <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>, and then we realize that mathematics, like physics, is part of the ruliad. Or, put another way, mathematics, like physics—and like everything else—is “made of computation”, and all computation is in the ruliad.</p>
<p>And that means that insofar as we consider there to be physical reality, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-relation-to-mathematics'>so also we must consider there to be “mathematical reality”</a>. Physical reality arises from the sampling of the ruliad by physical observers; so similarly mathematical reality must arise from the sampling of the ruliad by mathematical observers. Or, in other words, if we believe that the physical world exists, so we must—essentially like Plato—also believe that the mathematics exists, and that there is an underlying reality to mathematics.</p>
<p>All of these ideas rest on what was achieved in <em>A New Kind of Science</em> but now go significantly beyond it. <a href='https://writings.stephenwolfram.com/2022/05/the-making-of-a-new-kind-of-science/#the-lost-epilog,-and-other-outtakes-from-the-book'>In an “Epilog” that I eventually cut</a> from the final version of <em>A New Kind of Science</em> I speculated that “major new directions” might be built in 15–30 years. And when I wrote that, I wasn&#8217;t really expecting that I would be the one to be central in doing that. And indeed I suspect that had I simply continued the direct path in basic science defined by my work on <em>A New Kind of Science</em>, it wouldn&#8217;t have been me. </p>
<p>It&#8217;s not something I&#8217;ve explicitly planned, but at this point I can look back on my life so far and see it as a repeated alternation between <a href='https://writings.stephenwolfram.com/2016/04/my-life-in-technology-as-told-at-the-computer-history-museum/'>technology</a> and <a href='https://writings.stephenwolfram.com/2020/04/how-we-got-here-the-backstory-of-the-wolfram-physics-project/'>basic science</a>. Each builds on the other, giving me both ideas and tools—and creating in the end a taller and taller intellectual tower. But what&#8217;s crucial is that every alternation is in many ways a fresh start, where I&#8217;m able to use what I&#8217;ve done before, but have a chance to reexamine everything from a new perspective. And so it has been in the past few years with <em>A New Kind of Science</em>: having returned to basic science after 17 years away, it&#8217;s been possible to make remarkably rapid and dramatic progress that&#8217;s taken things to a new and wholly unexpected level. </p>
<h2 id='the-arrival-of-a-fourth-scientific-paradigm'>The Arrival of a Fourth Scientific Paradigm</h2>
<p style="display: inline-block;float: right;padding: 0px;margin: 0px;"><img title="" class="bookpost" src="https://content.wolfram.com/uploads/sites/43/2022/05/4-inset-opening-sentence.png" alt="" width="124" height="149" style="margin: 0px; padding: 0px;"></a></p>
<p>In the course of intellectual history, there’ve been <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>very few fundamentally different paradigms</a> introduced for theoretical science. The first is what one might call the “structural paradigm”, in which one’s basically just concerned with what things are made of. And beginning in antiquity—and continuing for two millennia—this was pretty much the only paradigm on offer. But in the 1600s there was, as I described it in the <a href='https://www.wolframscience.com/nks/p1--an-outline-of-basic-ideas/'>opening sentence of<em> A New Kind of Science</a></em>, a “dramatic new idea”—that one could describe not just how things are, but also what they can do, in terms of mathematical equations.</p>
<p>And for three centuries this “mathematical paradigm” defined the state of the art for theoretical science. But as I <a href='https://www.wolframscience.com/nks/p1--an-outline-of-basic-ideas/'>went on to explain in the opening paragraph of <em>A New Kind of Science</a></em>, my goal was to develop a new “computational paradigm” that would describe things not in terms of mathematical equations but instead in terms of computational rules or programs. There’d been <a href='https://www.wolframscience.com/nks/chap-1--the-foundations-for-a-new-kind-of-science#sect-1-4--the-personal-story-of-the-science-in-this-book'>precursors to this in my own work in the 1980s</a>, but despite the <a href='https://www.wolfram.com/mathematica/'>practical use of computers in applying the mathematical paradigm</a>, there wasn’t much of a concept of describing things, say in nature, in a fundamentally computational way.</p>
<p>One feature of a mathematical equation is that it aims to encapsulate “in one fell swoop” the whole behavior of a system. Solve the equation and you’ll know everything about what the system will do. But in the computational paradigm it’s a different story. The underlying computational rules for a system in principle determine what it will do. But to actually find out what it does, you have to run those rules—which is often a computationally irreducible process. </p>
<p>Put another way: in the structural paradigm, one doesn’t talk about time at all. In the mathematical paradigm, time is there, but it’s basically just a parameter, that if you can solve the equations you can set to whatever value you want. In the computational paradigm, however, time is something more fundamental: it’s associated with the actual irreducible progression of computation in a system.</p>
<p>It’s an important distinction that cuts to the core of theoretical science. Heavily influenced by the mathematical paradigm, it’s often been assumed that science is fundamentally about being able to make predictions, or in a sense having a model that can “outrun” the system you’re studying, and say what it’s going to do with much less computational effort than the system itself. </p>
<p>But <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-6--computational-irreducibility'>computational irreducibility</a> implies that there’s a fundamental limit to this. There are systems whose behavior is in effect “too complex” for us to ever be able to “find a formula for it”. And this is not something we could, for example, resolve just by increasing our mathematical sophistication: it is a fundamental limit that arises from the whole structure of the computational paradigm. In effect, from deep inside science we’re learning that there are <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-12--historical-perspectives'>fundamental limitations on what science can achieve</a>.</p>
<p>But as I <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-7--the-phenomenon-of-free-will'>mentioned in <em>A New Kind of Science</a></em>, computational irreducibility has an upside as well. If everything were computationally reducible, the passage of time wouldn’t in any fundamental sense add up to anything; we’d always be able to “jump ahead” and see what the outcome of anything would be without going through the steps, and we’d never have something we could reasonably experience as free will.</p>
<p>In practical computing it’s pretty common to want to go straight from “question” to “answer”, and not be interested in “what happened inside”. But in <em>A New Kind of Science</em> there is in a sense an immediate emphasis on “what happens inside”. I don’t just show the initial input and final output for a cellular automaton. I show its whole “spacetime” history. And now that we have a computational theory of fundamental physics we can see that all the richness of our physical experience is contained in the “process inside”. We don’t just want to know the endpoint of the universe; we want to live the ongoing computational process that corresponds to our experience of the passage of time.</p>
<p style="display: inline-block;float:left;padding: 0px;margin: 0px; margin-top: 2px; margin-right: 8px;"><img class="bookpost" title="" src="https://content.wolfram.com/uploads/sites/43/2022/05/5-inset-multicomp.png" alt="" width="144" height="128" style="margin: 0px;padding: 0px;margin-left: 0px;"></a></p>
<p>But, OK, so in <em>A New Kind of Science</em> we reached what we might identify as the third major paradigm for theoretical science. But the exciting—and surprising—thing is that inspired by our Physics Project we can now <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>see a fourth paradigm: the multicomputational paradigm</a>. And while the computational paradigm involves considering the progression of particular computations, the multicomputational paradigm involves considering the entangled progression of many computations. The computational paradigm involves a single thread of time. The multicomputational paradigm involves multiple threads of time that branch and merge.</p>
<p>What in a sense forced us into the multicomputational paradigm was <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#the-inevitability-of-quantum-mechanics'>thinking about quantum mechanics in our Physics Project</a>, and realizing that multicomputation was inevitable in our models. But the idea of multicomputation is vastly more general, and in fact immediately applies to any system where at any given step multiple things can happen. In <em>A New Kind of Science</em> I studied many kinds of computational systems—like cellular automata and Turing machines—where one definite thing happens at each step. I looked a little at <a href='https://www.wolframscience.com/nks/chap-5--two-dimensions-and-beyond#sect-5-6--multiway-systems'>multiway systems</a>—primarily ones based on string rewriting. But now in general in the multicomputational paradigm one is interested in studying multiway systems of all kinds. They can be based on simple iterations, <a href='https://www.wolframphysics.org/bulletins/2021/10/multicomputation-with-numbers-the-case-of-simple-multiway-systems' target=_blank rel=noopener>say involving numbers</a>, in which multiple functions can be applied at each step. They can be based on <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#he-topology-of-proof-space'>systems like games</a> where there are multiple moves at each step. And they can be based on a whole range of systems in nature, technology and elsewhere where there are multiple <a href='https://writings.stephenwolfram.com/2021/05/the-problem-of-distributed-consensus/#asynchronous-updating'>“asynchronous” choices of events</a> that can occur.</p>
<p>Given the basic description of multicomputational systems, one might at first assume that whatever difficulties there are in deducing the behavior of computational systems, they would only be greater for multicomputational systems. But the crucial point is that whereas with a purely computational system (like a cellular automaton) it’s perfectly reasonable to imagine “experiencing” its whole evolution—say just by seeing a picture of it, the same is not true of a multicomputational system. Because for observers like us, who fundamentally experience time in a single thread, we have no choice but to somehow “sample” or “coarse grain” a multicomputational system if we are to reduce its behavior to something we can “experience”. </p>
<p>And there’s then a remarkable formal fact: if one has a system that shows fundamental computational irreducibility, then computationally bounded “single-thread-of-time” observers inevitably perceive certain effective behavior in the system, that follows something like the typical laws of physics. Once again we can make an analogy with gases made from large numbers of molecules. Large-scale (computationally bounded) observers will essentially inevitably perceive gases to follow, say, the standard gas laws, quite independent of the detailed properties of individual molecules. </p>
<p>In other words, the interplay between an “observer like us” and a multicomputational system will effectively select out a slice of computational reducibility from the underlying computational irreducibility. And although I didn’t see this coming, it’s in the end fairly obvious that something like this has to happen. The Principle of Computational Equivalence makes it basically inevitable that the underlying processes in the universe will be computationally irreducible. But somehow the particular features of the universe that we perceive and care about have to be ones that have enough computational reducibility that we can, for example, make consistent decisions about what to do, and we’re not just continually confronted by irreducible unpredictability.</p>
<p>So how general can we expect this picture of multicomputation to be, with its connection to the kinds of things we’ve seen in physics? It seems to be extremely general, and to provide a <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>true fourth paradigm for theoretical science</a>. </p>
<p>There are <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#potential-application-areas'>many kinds of systems</a> for which the multicomputational paradigm seems to be immediately relevant. Beyond physics and metamathematics, there seems to be near-term promise in <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#chemistry-molecular-biology'>chemistry</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#chemistry-molecular-biology'>molecular biology</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#evolutionary-biology'>evolutionary biology</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#neuroscience'>neuroscience</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#immunology'>immunology</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#linguistics'>linguistics</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#economics'>economics</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#machine-learning'>machine learning</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#distributed-computing'>distributed computing</a> and more. In each case there are underlying low-level elements (such as molecules) that interact through some kind of events (say collisions or reactions). And then there’s a big question of what the relevant observer is like.</p>
<p>In <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#chemistry-molecular-biology'>chemistry</a>, for example, the observer could just measure the overall concentration of some kind of molecule, coarse-graining together all the individual instances of those molecules. Or the observer could be sensitive, for example, to detailed causal relationships between collisions among molecules. In traditional chemistry, things like this generally aren’t “observed”. But in biology (for example in connection with membranes), or in molecular computing, they may be crucial. </p>
<p>When I began the project that became <em>A New Kind of Science</em> the central question I wanted to answer is <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/'>why we see so much complexity</a> in so many kinds of systems. And with the computational paradigm and the ubiquity of computational irreducibility we had an answer, which also in a sense told us why it was difficult to make certain kinds of progress in a whole range of areas.</p>
<p>But now we’ve got a new paradigm, the multicomputational paradigm. And the <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#multicomputation-and-the-surprise-return-of-reducibility-'>big surprise</a> is that through the intermediation of the observer we can tap into computational reducibility, and potentially find “physics-like” laws for all sorts of fields. This may not work for the questions that have traditionally been asked in these fields. But the point is that with the “right kind of observer” there’s computational reducibility to be found. And that computational reducibility may be something we can tap into for understanding, or to use some kind of system for technology.</p>
<p style="display: inline-block;float: right;padding: 0px;margin: 0px;"><img title="" class="bookpost" src="https://content.wolfram.com/uploads/sites/43/2022/05/6-inset-ruliad.png" alt="" width="121" height="126" style="margin: 0px; padding: 0px;"></a></p>
<p>It can all be seen as starting with <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>, and involving almost philosophical questions of what one can call “observer theory”. But in the end it gives us very practical ideas and methods that I think have the potential to lead to unexpectedly dramatic progress in a remarkable range of fields.</p>
<p>I knew that <em>A New Kind of Science</em> would have practical applications, particularly in modeling, in <a href='https://writings.stephenwolfram.com/2017/05/a-new-kind-of-science-a-15-year-view/#a-world-of-discovered-technology'>technology</a> and in <a href='https://writings.stephenwolfram.com/2011/06/music-mathematica-and-the-computational-universe/'>producing creative material</a>. And indeed it has. But for our Physics Project applications seemed much further away, perhaps centuries. But a great surprise has been that through the multicomputational paradigm it seems as if there are going to be some quite immediate and very practical applications of the Physics Project.</p>
<p>In a sense the reason for this is that through the intermediation of multicomputation we see that many kinds of systems share the same underlying “metastructure”. And this means that as soon as there are things to say about one kind of system these can be applied to other systems. And in particular the great successes of physics can be applied to a whole range of systems that share the same multicomputational metastructure.</p>
<p>An immediate example is in practical computing, and particularly in the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>. It’s something of a <a href='https://writings.stephenwolfram.com/2020/04/how-we-got-here-the-backstory-of-the-wolfram-physics-project/#the-beginning-of-the-story'>personal irony</a> that the Wolfram Language is based on transformation rules for symbolic expressions, which is a structure very similar to what ends up being what’s involved in the Physics Project. But there’s a crucial difference: in the usual case of the Wolfram Language, everything works in a purely computational way, with a <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/#the-question-of-evaluation-order'>particular transformation being done at each step</a>. But now there’s the potential to generalize that to the multicomputational case, and in effect to trace the multiway system of every possible transformation.</p>
<p>It’s not easy to pick out of that structure things that we can readily understand. But there are important lessons from physics for this. And as we build out the multicomputational capabilities of the Wolfram Language I fully expect that the “notational clarity” it will bring will help us to formulate much more in terms of the multicomputational paradigm.</p>
<p>I built the Wolfram Language as a tool that would help me explore the computational paradigm, and from that paradigm there emerged principles like the Principle of Computational Equivalence, which in turn led me to <a href='https://writings.stephenwolfram.com/2009/05/7-years-of-nks-and-its-first-killer-app/'>see the possibility</a> of something like <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a>. But now from the latest basic science built on the foundations of <em>A New Kind of Science</em>, together with the practical tooling of the Wolfram Language, it’s becoming possible again to see how to make conceptual advances that can drive technology that will again in turn let us make—likely dramatic—progress in basic science. </p>
<h2 id='harvesting-seeds-from-a-new-kind-of-science'>Harvesting Seeds from A New Kind of Science</h2>
<p><em>A New Kind of Science</em> is full of intellectual seeds. And in the past few years—having now returned to basic science—I’ve been harvesting a few of those seeds. The <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> and the Metamathematics Project are two major results. But there’s been quite a bit more. And in fact it’s rather remarkable how many things that were barely more than footnotes in <em>A New Kind of Science</em> have <a href='https://writings.stephenwolfram.com/category/new-kind-of-science/'>turned into major projects</a>, with important results.</p>
<p>Back in 2018—a year before beginning the Physics Project—I <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>returned, for example,</a> to what’s become known as the Wolfram Axiom: the <a href='https://www.wolframscience.com/nks/p808--implications-for-mathematics-and-its-foundations/'>axiom that I found in <em>A New Kind of Science</a></em> that is the very simplest possible axiom for Boolean algebra. But my focus now was not so much on the axiom itself as on the automated process of proving its correctness, and the effort to see the relation between “pure computation” and what one might consider a human-absorbable “narrative proof”.</p>
<p>Computational irreducibility appeared many times, notably in my efforts to understand <a href='https://writings.stephenwolfram.com/2016/10/a-short-talk-on-ai-ethics/'>AI ethics</a> and the implications of <a href='https://writings.stephenwolfram.com/2016/10/computational-law-symbolic-discourse-and-the-ai-constitution/'>computational contracts</a>. I’ve no doubt that in the years to come, the concept of computational irreducibility will become increasingly important in everyday thinking—a bit like how concepts such as energy and momentum from the mathematical paradigm have become important. And in 2019, for example, computational irreducibility made an <a href='https://www.commerce.senate.gov/2019/6/optimizing-for-engagement-understanding-the-use-of-persuasive-technology-on-internet-platforms' target=_blank rel=noopener>appearance in government affairs</a>, as a result of me <a href='https://writings.stephenwolfram.com/2019/06/testifying-at-the-senate-about-a-i-selected-content-on-the-internet/'>testifying about its implications for legislation about AI selection</a> of content on the internet.</p>
<p>In <em>A New Kind of Science</em> I explored many specific systems about which one can ask all sorts of questions. And one might think that after 20 years “all the obvious questions” would have been answered. But they have not. And in a sense the fact that they have not is a direct reflection of the ubiquity of computational irreducibility. But it’s a fundamental feature that whenever there’s computational irreducibility, there must also be pockets of computational reducibility: in other words, the very existence of computational irreducibility implies an infinite frontier of potential progress. </p>
<p>Back in 2007, we’d had great success with our <a href='https://www.wolframscience.com/prizes/tm23/'>Turing Machine Prize</a>, and the Turing machine that I’d suspected was the very simplest possible universal Turing machine was <a href='https://blog.wolfram.com/2007/10/24/the-prize-is-won-the-simplest-universal-turing-machine-is-proved/'>indeed proved universal</a>—providing another piece of evidence for the Principle of Computational Equivalence. And in a sense there’s a general question that’s raised by <em>A New Kind of Science</em> about where the threshold of universality—or computational equivalence—really is in different kinds of systems.</p>
<p style="display: inline-block;float: right;padding: 0px;margin: 0px; margin-left: 8px; margin-top: 2px;"><img title="" class="bookpost" src="https://content.wolfram.com/uploads/sites/43/2022/05/7-inset-rule30prize.png" alt="" width="140" height="116" style="margin: 0px; padding: 0px;"></a></p>
<p>But there are simpler-to-define questions as well. And ever since I <a href='https://www.stephenwolfram.com/publications/academic/statistical-mechanics-cellular-automata.pdf'>first studied rule 30</a> in 1984 I’d wondered about many questions related to it. And in October 2019 I decided to launch the <a href='https://www.rule30prize.org/' target=_blank rel=noopener>Rule 30 Prizes</a>, defining <a href='https://writings.stephenwolfram.com/2019/10/announcing-the-rule-30-prizes'>three specific easy-to-state questions about rule 30</a>. So far I don’t know of progress on them. And for all I know they’ll be open problems for centuries. From the point of view of <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a> we can think of them as distant explorations in rulial space, and the question of when they can be answered is like the question of when we’ll have the technology to get to some distant place in physical space.</p>
<p>Having launched the Physics Project in April 2020, it was rapidly clear that its ideas could also be applied to metamathematics. And it even seemed as if it might be easier to make relevant “real-world” observations in metamathematics than in physics. And the seed for this was in a note in <em>A New Kind of Science</em> entitled “<a href='https://www.wolframscience.com/nks/notes-12-9--empirical-metamathematics/'>Empirical Metamathematics</a>”. That note contained one picture of the theorem-dependency graph of Euclid’s <em>Elements</em>, which in the summer of 2020 <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>expanded into a 70-page study</a>. And in my recent “<a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/'>Physicalization of Metamathematics</a>” there’s a continuation of that—beginning to <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#empirical-metamathematics'>map out empirical metamathematical space</a>, as explored in the practice of mathematics, with the idea that multicomputational phenomena that in physics may take technically infeasible particle accelerators or telescopes might actually be within reach.</p>
<p style="display: inline-block;float:left;padding: 0px;margin: 0px; margin-top: 5px; margin-right: 8px;"><img class="bookpost" title="" src="https://content.wolfram.com/uploads/sites/43/2022/05/8-inset-combinators.png" alt="" width="142" height="139" style="margin: 0px;padding: 0px;margin-left: 0px;"></a></p>
<p>In addition to being the year we launched our Physics Project, 2020 was also the <a href='https://writings.stephenwolfram.com/2020/12/combinators-and-the-story-of-computation/'>100th anniversary of combinators</a>—the first concrete formalization of universal computation. In <em>A New Kind of Science</em> I devoted a <a href='https://www.wolframscience.com/nks/p711--universality-in-turing-machines-and-other-systems/'>few pages</a> and some <a href='https://www.wolframscience.com/nks/notes-11-12--combinators/'>notes</a> to combinators, but I decided to <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/'>do a deep dive</a> and use both what I’d learned from <em>A New Kind of Science</em> and from the Physics Project to take a new look at them. Among other things the result was another <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/#updating-schemes-and-multiway-systems'>application of multicomputation</a>, as well as the realization that even though the S, K combinators from 1920 seemed very minimal, it was possible that <a href='https://writings.stephenwolfram.com/2021/06/1920-2020-and-a-20000-prize-announcing-the-s-combinator-challenge/'>S alone might also be universal</a>, though with something different than the usual input &#8594; output “workflow” of computation. </p>
<p>In <em>A New Kind of Science </em>a <a href='https://www.wolframscience.com/nks/notes-5-6--non-deterministic-systems/'>single footnote mentions multiway Turing machines</a>. And early last year I turned this seed into a <a href='https://www.wolframphysics.org/bulletins/2021/02/multiway-turing-machines/' target=_blank rel=noopener>long and detailed study</a> that provides further foundational examples of multicomputation, and explores the question of just what it means to “do a computation” multicomputationally—something which I believe is highly relevant not only for practical distributed computing but also for things like molecular computing.</p>
<p>In 2021 it was the <a href='https://youtu.be/ultMxODJE7o' target=_blank rel=noopener>centenary of Post tag systems</a>, and again I turned a <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-7--tag-systems'>few pages in <em>A New Kind of Science</a></em> into a <a href='https://writings.stephenwolfram.com/2021/03/after-100-years-can-we-finally-crack-posts-problem-of-tag-a-story-of-computational-irreducibility-and-more/'>long and detailed study</a>. And what’s important about both this and my study of combinators is that they provide foundational examples (much like cellular automata in <em>A New Kind of Science</em>), which even in the past year or so I’ve <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#going-below-axiomatic-mathematics'>used multiple times</a> in different projects.</p>
<p>In mid-2021, yet another <a href='https://www.wolframscience.com/nks/p339--origins-of-discreteness/'>few-page discussion in <em>A New Kind of Science</a></em> turned into a <a href='https://writings.stephenwolfram.com/2021/05/the-problem-of-distributed-consensus/'>detailed study of “The Problem of Distributed Consensus”</a>. And once again, this turned out to have a multicomputational angle, at first in understanding the multiway character of possible outcomes, but later with the realization that the formation of consensus is deeply related to the process of measurement and the coarse-graining involved in it—and the fundamental way that observers extract “coherent experiences” from systems.</p>
<p>In <em>A New Kind of Science</em>, there’s a short note about <a href='https://www.wolframscience.com/nks/notes-5-6--multiway-systems-based-on-numbers/'>multiway systems based on numbers</a>. And once again, in fall 2021 I expanded on this to produce an <a href='https://www.wolframphysics.org/bulletins/2021/10/multicomputation-with-numbers-the-case-of-simple-multiway-systems/' target=_blank rel=noopener>extensive study of such systems</a>, as a certain kind of very minimal example of multicomputation, that at least in some cases connects with traditional mathematical ideas.</p>
<p>From the vantage point of multicomputation and our Physics Project it’s interesting to look back at <em>A New Kind of Science</em>, and see some of what it describes with more clarity. In the fall of 2021, for example, I <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/'>reviewed what had become of the original goal of &#8220;understanding complexity&#8221;</a>, and what methodological ideas had emerged from that effort. I identified two primary ones, which I called “<a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#the-pure-basic-science-of-ruliology'>ruliology</a>” and “<a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#metamodeling-and-the-metatheory-of-models'>metamodeling</a>”. Ruliology, as I’ve mentioned above, is my new name for the pure, basic science of studying the behavior of systems with simple rules: in effect, it’s the science of exploring the computational universe.</p>
<p>Metamodeling is the key to making connections to systems in nature and elsewhere that one wants to study. Its goal is to find the “minimal models for models”. Often there are existing models for systems. But the question is what the ultimate essence of those models is. Can everything be reduced to a cellular automaton? Or a multiway system? What is the <a href='https://www.wolframscience.com/nks/chap-8--implications-for-everyday-systems#sect-8-1--issues-of-modelling'>minimal &#8220;computational essence&#8221; of a system</a>? And as we begin to <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#potential-application-areas'>apply the multicomputational paradigm to different fields</a>, a key step will be metamodeling. </p>
<p>Ruliology and metamodeling are in a sense already core concepts in <em>A New Kind of Science</em>, though not under those names. Observer theory is much less explicitly covered. And many concepts—like <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-concept-of-branchial-graphs/' target=_blank rel=noopener>branchial space</a>, <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#the-formal-structure-of-multicomputation'>token-event graphs</a>, the <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-relationship-between-graphs-and-the-multiway-causal-graph/' target=_blank rel=noopener>multiway causal graph</a> and <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>—have only emerged now, with the Physics Project and the arrival of the multicomputational paradigm. </p>
<p><a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>Multicomputation</a>, the <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> and the <a href='https://www.wolframscience.com/metamathematics/'>Metamathematics Project</a> are sowing their own seeds. But there are still many more seeds to harvest even from <em>A New Kind of Science</em>. And just as the multicomputational paradigm was not something that I, for one, could foresee from <em>A New Kind of Science</em>, no doubt there will in time be other major new directions that will emerge. But, needless to say, one should expect that it will be computationally irreducible to determine what will happen: a metacontribution of the science to the consideration of its own future. </p>
<h2 id='the-doing-of-science'>The Doing of Science</h2>
<p>The creation of <em>A New Kind of Science</em> <a href='https://writings.stephenwolfram.com/2022/05/the-making-of-a-new-kind-of-science/'>took me a decade of intense work</a>, none of which saw the light of day until the moment the book was published on May 14, 2002. Returning to basic science 17 years later the world had changed and it was possible for me to adopt a quite different approach, in a sense making the process of doing science as open and incremental as possible.</p>
<p style="display: inline-block;float: right;padding: 0px;margin: 0px;"><img title="" class="bookpost" src="https://content.wolfram.com/uploads/sites/43/2022/05/9-inset-wolfram-language.png" alt="" width="127" height="126" style="margin: 0px; padding: 0px;"></a></p>
<p>It’s helped that there’s the web, <a href='https://wolframcloud.com' target=_blank rel=noopener>the cloud</a> and <a href='https://www.stephenwolfram.com/livestreams'>livestreaming</a>. But in a sense the most crucial element has been the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>, and its <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>character as a full-scale computational language</a>. Yes, I use English to tell the story of what we’re doing. But fundamentally I’m doing science in the Wolfram Language, using it both as a practical tool, and as a medium for organizing my thoughts, and sharing and communicating what I’m doing.</p>
<p>Starting in 2003, we’ve had an annual <a href='https://education.wolfram.com/summer-school'>Wolfram Summer School</a> at which a long string of talented students have explored ideas based on <em>A New Kind of Science</em>, always through the medium of the Wolfram Language. In the last couple of years we’ve added a <a href='https://education.wolfram.com/summer-school/programs/physics/'>Physics track</a>, connected to the Physics Project, and this year we’re adding a Metamathematics track, connected to the Metamathematics Project.</p>
<p>During the 17 years that I wasn’t focused on basic science, I was doing technology development. And I think it’s fair to say that at <a href='https://www.wolfram.com/'>Wolfram Research</a> over the past 35 years we’ve created a remarkably effective “machine” for doing innovative research and development. Mostly it’s been producing <a href='https://www.wolfram.com/technologies'>technology</a> and <a href='https://www.wolfram.com/products'>products</a>. But one of the very interesting features of the Physics Project and the projects that have followed it is that we’ve been applying the same managed approach to innovation to them that we have been using so successfully for so many years at our company. And I consider the results to be quite spectacular: in a matter of weeks or months I think we’ve managed to deliver what might otherwise have taken years, if it could have been done at all. </p>
<p>And particularly with the arrival of the multicomputational paradigm there’s quite a challenge. There are a huge number of exceptionally promising directions to follow, that have the potential to deliver revolutionary results. And with our concepts of managed research, open science and broad connection to talent it should be possible to make great progress even fairly quickly. But to do so requires significant scaling up of our efforts so far, which is why we’re now <a href='https://writings.stephenwolfram.com/2022/04/weve-got-a-science-opportunity-overload-its-time-to-launch-the-wolfram-institute/'>launching the Wolfram Institute</a> to serve as a focal point for these efforts.</p>
<p>When I think about <em>A New Kind of Science</em>, I can’t help but be struck by all the things that had to align to make it possible. My early experiences in science and technology, the personal environment I’d created—and the tools I built. I wondered at the time whether the five years I took “away from basic science” to <a href='https://www.wolfram.com/mathematica/scrapbook/'>launch Mathematica</a> and what’s now the Wolfram Language might have slowed down what became <em>A New Kind of Science</em>. Looking back I can say that the answer was definitively no. Because without the Wolfram Language the creation of <em>A New Kind of Science</em> would have needed “not just a decade”, but likely more than a lifetime. </p>
<p>And a similar pattern has repeated now, though even more so. The Physics Project and everything that has developed from it has been made possible by a tower of specific circumstances that stretch back nearly half a century—including my 17-year hiatus from basic science. Had all these circumstances not aligned, it is hard to say when something like the Physics Project would have happened, but my guess is that it would have been at least a significant part of a century away. </p>
<p>It is a lesson of the history of science that the <a href='https://writings.stephenwolfram.com/2012/05/living-a-paradigm-shift-looking-back-on-reactions-to-a-new-kind-of-science/'>absorption of major new paradigms</a> is a slow process. And normally the timescales are long compared to the 20 years since <em>A New Kind of Science</em> was published. But in a sense we’ve managed to jump far ahead of schedule with the Physics Project and with the development of the multicomputational paradigm. Five years ago, when I <a href='https://writings.stephenwolfram.com/2017/05/a-new-kind-of-science-a-15-year-view/'>summarized the first 15 years of <em>A New Kind of Science</a></em> I had no idea that any of this would happen. </p>
<p>But now that it has—and with all the methodology we’ve developed for getting science done—it feels as if we have a certain obligation to see just what can be achieved. And to see just what can be built in the years to come on the foundations laid down by <em>A New Kind of Science</em>. </p>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2022/05/twenty-years-later-the-surprising-greater-implications-of-a-new-kind-of-science/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>The Making of A New Kind of Science</title>
		<link>https://writings.stephenwolfram.com/2022/05/the-making-of-a-new-kind-of-science/</link>
		<comments>https://writings.stephenwolfram.com/2022/05/the-making-of-a-new-kind-of-science/#respond</comments>
		<pubDate>Fri, 13 May 2022 22:17:16 +0000</pubDate>
		<dc:creator><![CDATA[Stephen Wolfram]]></dc:creator>
				<category><![CDATA[Companies and Business]]></category>
		<category><![CDATA[Historical Perspectives]]></category>
		<category><![CDATA[Life and Times]]></category>
		<category><![CDATA[New Kind of Science]]></category>
		<category><![CDATA[Other]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=36459</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/05/icon-nks-making.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>I Think I Should Write a Quick Book&#8230; In the end it’s about five and a half pounds of paper, 1280 pages, 973 illustrations and 583,313 words. And its creation took more than a decade of my life. Almost every day of my thirties, and a little beyond, I tenaciously worked on it. Figuring out [&#8230;]]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/05/icon-nks-making.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><p><img class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2022/05/blog-hero-draft2-v2.png' alt='The Making of A New Kind of Science' title='The Making of A New Kind of Science' width='660' height='auto'></p>
<h2 id='i-think-i-should-write-a-quick-book...'>I Think I Should Write a Quick Book&#8230;</h2>
<p>In the end it’s <a href='https://www.wolframalpha.com/input?i=weight+of+the+NKS+book'>about five and a half pounds of paper</a>, 1280 pages, 973 illustrations and <a href='https://datarepository.wolframcloud.com/resources/0825d64d-03fa-43f3-8de6-b04687ffce20/' target=_blank rel=noopener>583,313 words</a>. And its creation took more than a <a href='https://www.stephenwolfram.com/scrapbook/#1991-2002-a-decade-of-basic-science'>decade of my life</a>. Almost every day of my thirties, and a little beyond, I tenaciously worked on it. Figuring out more and more science. Developing new kinds of computational diagrams. Crafting an exposition that I wrote and rewrote to make as clear as possible. And painstakingly laying out page after page of what on May 14, 2002, would be published as <em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em>.</p>
<p>I’ve written before (even <a href='https://www.wolframscience.com/nks/p17--the-personal-story-of-the-science-in-this-book/'>in the book itself</a>) about the intellectual journey involved in the creation of <em>A New Kind of Science</em>. But here I want to share some of the more practical “behind the scenes” journey of the making of what I and others usually now call simply “the NKS book”. Some of what I’ll talk about happened twenty years ago, some more like thirty years ago. And it’s been interesting to go back into my archives (and, yes, those backup tapes from 30 years ago were hard to read!) and relive some of what finally led to the delivery of the ideas and results of <em>A New Kind of Science</em> as truckloads of elegantly printed books with striking covers.<span id="more-36459"></span></p>
<p>It was late 1989—soon after my 30th birthday—when I decided to embark on what would become <em>A New Kind of Science</em>. And at first my objective was quite modest: I just wanted to write a book to summarize the science I’d developed earlier in the 1980s. <a href='https://www.wolfram.com/mathematica/scrapbook/'>We&#8217;d released Version 1.0</a> of <a href='https://www.wolfram.com/mathematica/'>Mathematica</a> (and what’s now the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>) in June 1988, and to accompany that release I’d written what had rapidly become a <a href='https://www.stephenwolfram.com/publications/mathematica-book/'>very successful book</a>. And while I’d basically built Mathematica to give me the opportunity to do more science, my thought in late 1989 was that before seriously embarking on that, I should spend perhaps a year and write a book about what I already knew, and perhaps tie up a few loose ends in the process.</p>
<p>My journey in science began in the early 1970s—and by the time I was 14 I’d already written <a href='https://www.stephenwolfram.com/publications/early-books/'>three book-length &#8220;treatises&#8221; about physics</a> (though these wouldn’t see the light of day for several more decades). I worked purely on physics for a number of years, but in 1979 this led me into my <a href='https://www.stephenwolfram.com/publications/smp-symbolic-manipulation-program/'>first big adventure in technology</a>—thereby starting my (very productive) long-term personal pattern of alternating between science and technology (roughly five times so far). In the early 1980s—back in a “science phase”—I was fortunate enough to make what remains my <a href='https://www.wolframscience.com/nks/chap-2--the-crucial-experiment/'>all-time favorite science discovery</a>: that in cellular automaton programs even with extremely simple rules it’s possible to generate immense complexity. And from this discovery I was led to a series of results that began to suggest what I started calling a <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/'>general &#8220;science of complexity&#8221;</a>.</p>
<p>By the mid-1980s I was quite well positioned in the academic world, and my first thought was to try to build up the study of the “science of complexity” as an academic field. I <a href='https://www.complex-systems.com/'>started a journal</a> and a research center, and collected my papers in a book entitled <em><a href='https://www.stephenwolfram.com/scrapbook/1986-a-first-collection-of-cellular-automaton-papers/'>Theory and Applications of Cellular Automata</a></em> (later reissued as <em><a href='https://www.stephenwolfram.com/publications/cellular-automata-complexity/'>Cellular Automata and Complexity</a></em>). But things developed slowly, and eventually I decided to go to “plan B”—and just try to create the tools and environment that I would need to personally push forward the science as efficiently as possible.</p>
<p>The result was that in late 1986 I started the development of Mathematica (and what’s now the Wolfram Language) and founded <a href='https://www.wolfram.com/'>Wolfram Research</a>. For several years I was completely consumed with the challenges of language design, software development and CEOing our rapidly growing company. But in August 1989 we had released <a href='https://www.wolfram.com/mathematica/quick-revision-history.html'>Mathematica 1.2</a> (tying up the most obvious loose ends of <a href='https://reference.wolfram.com/legacy/v1/'>Version 1.0</a>)—and with the intensity of my other commitments at least temporarily reduced, I began to think about science again. </p>
<p><em><a href='https://www.stephenwolfram.com/publications/mathematica-book/'>The Mathematica Book</a></em> had been comparatively straightforward and fast for me to write—even as a “side project” to architecting and developing the system. And I imagined that it would be a somewhat similar experience writing a book explaining what I’d figured out about complexity.</p>
<p>My first working title was <em>Complexity: An Introduction to the Science of Complex Phenomena</em>. My first draft of a table of contents, from November 1989, begins with “A Gallery of Complex Systems” (or “The Phenomenon of Complexity”), and continues through nine other chapters, capturing some of what I then thought would be important (and in most cases had already studied):</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg2.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg2.png" width="620" height="402" /></a></p>
<p>I wrote a few pages of introductory text—beginning by stating the objective as:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg3.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg3.png" width="620" height="78" /></a></p>
<p>My archives record that in late December I was taking a more computation-first approach, and considering the title <em>Algorithms in Nature: An Introduction to Complexity</em>. But soon I was submerged in the intense effort to develop Mathematica 2.0, and this is what consumed me for most of 1990—though my archives from the time reveal one solitary short note, apparently from the middle of the year: </p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg3-a.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg3-a.png" width="396" height="278" /></a></p>
<p>But through all this I kept thinking about the book I intended to write, and wondering what it should really be like. In the late 1980s there’d been quite a run of unexpectedly successful “popular science” books—like <em>A Brief History of Time</em>—that mixed what were at least often claimed to be new results or new insights about science with a kind of intended-to-entertain “everyman narrative”. A sequence of publishers had encouraged me to “write a popular science book”. But should the book I was planning to write really be one of those? </p>
<p>I talked to quite a few authors and editors. But nobody could quite tell a coherent story. Perhaps the most promising insight came from an editor of several successful such books, who opined that he thought the main market for “popular science” books was people who in the past would have read philosophy books, but now those were too narrow and technical. Other people, though, told me they thought it was really more of an “internal market”, with the books basically being bought by other scientists. And in the media and elsewhere there continued to be an undercurrent of sentiment that while the books might be being bought, they mostly weren’t actually getting read.</p>
<p>“Isn’t there actual data on what’s going on?” I asked my publishing industry contacts. “No”, they said, “that’s just not how our industry works”. “Well”, I said, “why don’t we collect some data?” My then-publisher seemed enthusiastic about it. So I wrote a rather extensive survey to do on “random shoppers” in bookstores. It began with some basic—if “1990-style”—demographic questions, then got to things like</p>
<p><a href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322bpplsurvey4.pdf" target="_blank" rel="noopener"><img title="" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg4.png" alt="" width="500" height="801" /></a></p>
<p>and rather charmingly ended with</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg4-a.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322Aimg4-a.png" width="501" height="396" /></a></p>
<p>(and, yes, in reality it took almost the longest time I could imagine for electronic books to become common). But after many months of “we’ll get results soon” it turned out almost no surveys were ever done. As I would learn repeatedly, most publishers seemed to have a very hard time doing anything they hadn’t already done before. Still, my then-publisher had done well with <em>The Mathematica Book</em>. So perhaps they might be able to just “follow a formula” and do well with my book if it was written in “popular science” form. </p>
<p>But I quickly realized that the pressure to add sensationalism “to sell books” really grated on me. And it didn’t take long to decide that, no, I wasn’t going to write a “formula” popular science book. I was going to write my own kind of book—that was more direct and straightforward. No stories. Just science. With lots of pictures. And if nothing else, the book would at least be helpful to me, as a way of clarifying my own thinking.</p>
<h2 id='beginning-to-tool-up'>Beginning to Tool Up</h2>
<p>In January 1991 we announced <a href='https://www.stephenwolfram.com/scrapbook/1991-mathematica-2-is-released/?iframe=true'>Mathematica 2.0</a>—and in March and June I did a <a href='https://www.wolfram.com/mathematica/scrapbook/1991/03/03/mathematica2-tour-thumb/?iframe=true'>35-city tour of the US and Europe</a> talking about it. Then, finally, at the beginning of July we delivered final floppy disks to the duplicator (as one did in those days)—and Mathematica 2.0 was on its way. So what next? I had a long roadmap of things we should do. But I decided it was time to let the team I’d built just get on with following the roadmap for a while, without me adding yet more things to it. (As it turns out, we finally finished essentially everything that was on my 1991 to-do list just a few years ago.)</p>
<p>And so it was that in July 1991 I became a remote CEO (yes, a few decades ahead of the times), moved a couple thousand miles away from our company headquarters to a place in the hills near San Francisco, and set about getting ready to write. Based on the plan I had for the book—and my experience with <em><a href='https://www.stephenwolfram.com/publications/mathematica-book/'>The Mathematica Book</a></em>—I figured it might take about a year, or maybe 18 months, to finish the project.</p>
<p>In the end—with a few trips in the middle, notably to <a href="https://writings.stephenwolfram.com/2017/08/when-exactly-will-the-eclipse-happen-a-multimillenium-tale-of-computation/">see</a> a <a href='https://www.wolframalpha.com/input?i=total+solar+eclipse+1991'>total solar eclipse</a>—it took me a couple of months to get my remote-CEO setup figured out (with a swank computer-connected fax machine, email getting autodelivered every 15 minutes, etc.). But even while that was going on, I was tooling up to get an efficient modern system for visualizing and studying cellular automata. Back when I had been writing my <a href='https://www.stephenwolfram.com/publications/academic/cellular-automata/'>papers in the 1980s</a>, I’d had a C program (primarily for Sun workstations) that had gradually grown, and was eventually controlled by a rather elaborate—but sensible-for-its-time—hierarchical textual menu system</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img5.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img5.png" width="550" height="550" /></a></p>
<p>which, yes, could generate at least single-graphic-per-screen graphics, as in this picture of my 1983 office setup:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img5c.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img5c.png" width="556" height="329" /></a></p>
<p>But now the world had changed, and I had <a href='https://www.wolfram.com/mathematica'>Mathematica</a>. And I wanted a nice collection of Wolfram Language functions that could be used as streamlined “primitives” for studying cellular automata. Given all my work on cellular automata it might seem strange that I hadn’t built cellular automaton functionality into the Wolfram Language right from the start. But in addition to being a bit bashful about my personal pet kind of system, I hadn’t been able to see how to “package” all the various different kinds of cellular automata I’d studied into one convenient superfunction—and indeed it took me a decade more of understanding, both of language design and of cellular automata, to work out <a href='https://reference.wolfram.com/language/ref/CellularAutomaton.html'>how to nicely do that</a>. And so back in 1991 I just created a collection of add-on functions (or what might today be a paclet) containing the particular functions I needed. And indeed those functions served me well over the course of the development of <em>A New Kind of Science</em>.</p>
<p>A “staged” screen capture from the time shows my basic working environment:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img5a.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img5a.png" width="503" height="409" /></a></p>
<p>Some printouts from early 1991 give a sense of my everyday experience:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img6.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img6.png" width="607" height="380" /></a></p>
<p>And although it&#8217;s now more than 30 years later, I&#8217;m happy to say that we&#8217;ve successfully maintained the compatibility of the Wolfram Language, and those same functions still just run! The .ma format of my Version 2.0 notebooks from 1991 has <a href='https://reference.wolfram.com/language/Developer/ref/NotebookConvert.html'>to be converted to .nb</a>, but then they just open in <a href='https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/'>Version 13</a> (with a bit of automatic style modernization) and I’m immediately “transported back in time” to 1991, with, yes, a very small notebook appropriate for a 1991 rather than a 2022 screen size: </p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img7.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img7.png" width="420" height="465" /></a></p>
<p>(Of course the cellular automata all look the same, but, yes, this notebook looks shockingly similar to ones from our recent <a href='https://twitter.com/stephen_wolfram/status/1420206573096513539' target=_blank rel=noopener>cellular automaton NFT-minting event</a>.)</p>
<p>We’d invented <a href='https://www.wolfram.com/notebooks/'>notebooks</a> in 1987 to be able to do just the kinds of things I wanted to do for my science project—and I’d been itching to use them. But before 1991 I’d mostly been doing core code development (often in C), or using the elaborate but still textual system we had for authoring <em>The Mathematica Book</em>. And so—even though I’d demoed them many times—I hadn’t had a chance to personally make daily use of notebooks.</p>
<p>But in 1991, I went all in on notebooks—and have never looked back. When I first started studying cellular automata back in 1981, I’d had to display their output as text. But soon I was able to start using the bitmapped displays of workstation computers, and by 1984 I was routinely printing cellular automaton images in fairly high resolution on a laser printer. But with Mathematica and our notebook technology things got dramatically more convenient—and what had previously often involved laborious work with paper, scissors and tape now became a matter of simple Wolfram Language code in a notebook.</p>
<p>For almost a decade starting in 1982, my primary computer had been a progressively more sophisticated Sun workstation. But in 1991 I switched to NeXT—mainly to be able to use our notebook interface, which was by then <a href='https://www.wolfram.com/mathematica/scrapbook/1989/04/03/1989_mathematicaarrivesnext-2/?iframe=true'>well developed for NeXT</a> but wasn’t yet ready on X Windows and Sun. (It was also available on Macintosh computers, but at the time those weren’t powerful enough.) </p>
<p>And here I am in 1991, captured “hiding out” as a remote CEO, with a NeXT in the background, just getting started on the book:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img7a.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img7a.png" width="283" height="193" /></a></p>
<p>Here’s a picture showing a bit more of the setup, taken in early 1993, during a short period when I was a remote-remote-CEO, with my computer set up in a hotel room:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img8.png"><img alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img8.png" width="423" height="438" /></a></p>
<h2 id='september-1991:-beyond-cellular-automata'>September 1991: Beyond Cellular Automata</h2>
<p>Throughout the 1980s, I’d used cellular automata—and basically cellular automata alone—as my window into the computational universe. But in August 1991—with my new computational capabilities and new away-from-the-company-to-do-science setup—I decided it’d be worth trying to look at some other systems.</p>
<p>And I have to say that now, three decades later, I didn’t remember just how suddenly everything happened. But my filesystem records that in successive days at the beginning of September 1991 there I was investigating more and more kinds of systems (.ma’s were “Mathematica notebook” files; .mb’s were the “binary forks” of these files):</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img9.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img9.png" width="286" height="308" /></a></p>
<p><a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs/#sect-3-3--mobile-automata'>Mobile automata</a>. <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-4--turing-machines'>Turing machines</a>. <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-7--tag-systems'>Tag systems</a>. Soon these would be joined by <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-9--register-machines'>register machines</a>, and more. The first examples of these systems tended to have quite simple behavior. But I quickly started searching to see whether these systems—like cellular automata—would be capable of complex behavior, as my 1991 notebooks record:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img13a.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img13a.png" width="640" height="618" /></a></p>
<p>Often I would run programs overnight, or sometimes for many days. Later I would recruit many computers from around our company, and have them send me mail about their results:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img10-v2.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img10-v2.png" width="404" height="237" /></a></p>
<p>But already in September 1991 I was starting to see that, yes, just like cellular automata, all these different kinds of systems, even when their underlying rules were simple, could <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs/'>exhibit highly complex behavior</a>. I think I’d sort of implicitly assumed this would be true. But somehow actually seeing it began to elevate my view of just how general a “science of complexity” one might be able to make.</p>
<p>There were a few distractions in the fall of 1991. Like in October a <a href='https://en.wikipedia.org/wiki/Oakland_firestorm_of_1991' target=_blank rel=noopener>large fire</a> came within about half a mile of burning down our house: </p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img11.png"><img loading='lazy'alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img11.png" width="359" height="250" /></a></p>
<p>But by the spring of 1992 it was beginning to become clear that there was a very general principle around all this complexity I was seeing. I had <a href='https://content.wolfram.com/uploads/sites/34/2020/07/undecidability-intractability-theoretical-physics.pdf' target=_blank rel=noopener>invented the concept of computational irreducibility</a> back in 1984. And I suppose in retrospect I should have seen the bigger picture sooner. But as it was, on a pleasant afternoon (and, no, I haven’t figured out the exact date), I was taking a short break from being in front of my computer, and had wandered outside. And that’s when the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a> came to me. Somehow after all those years with cellular automata, and all those months with computer experiments on other systems, I was primed for it. But in the end it all arrived in one moment: the concept, the name, the implications for computational irreducibility. And in the three decades since, it’s been the single most important guiding principle for my intuition. </p>
<h2 id='what-should-the-pages-look-like?'>What Should the Pages Look Like?</h2>
<p>I’ve always found it difficult to produce “disembodied content”: right from the beginning I typically need to have a pretty clear idea how what I’m producing will look in the end. So back in 1991 I really couldn’t produce more than a page or two of content for my book without knowing what the book was going to look like.</p>
<p>“Formula” popular science books tended—for what I later realized were largely economic reasons—to consist mainly of pages of pure text, with at most line drawings, and to concentrate whatever things like photographs they might have into a special collection of “plates” in the middle of the book. For <em>The Mathematica Book</em> we’d developed a definite—very functional—layout, with text, tables and two-column “computer dialogs”:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img14.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img14.png" width="612" height="348" /></a></p>
<p>For the NKS book I knew I needed something much more visual. And at first I imagined it might be a bit like a high-end textbook, complete with all sorts of structured elements (“Historical Note”, “Methodology”, etc.). </p>
<p>I asked a talented young designer who had worked on <em>The Mathematica Book</em> (and who, 31 years later, is now a very senior executive at our company) to see what he could come up with. And here, from November 1991, is the very first “look” for the NKS book—with content pretty much just flowed in from the few pages I’d written out in plain text:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img15.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img15.png" width="620" height="743" /></a></p>
<p>I knew the book would have images of the kind I’d long produced of cellular automata, and that had appeared in <a href='https://www.stephenwolfram.com/publications/academic/cellular-automata'>my papers</a> and <a href='https://www.stephenwolfram.com/publications/cellular-automata-complexity/'>book</a> from the 1980s:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img16.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img16.png" width="999" height="1128" /></a></p>
<p>But what about “diagrams”? At first we toyed with drawing “textbook-style” diagrams—and produced some samples:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img17a.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img17a.png" width="559" height="366" /></a></p>
<p>But these seemed to have way too much &#8220;conceptual baggage&#8221;, and when one looks closely at them, it&#8217;s easy to get confused. I wanted something more minimal—where the spotlight was as much as possible on the systems I was studying, not on &#8220;diagrammatic scaffolding&#8221;. And so I tried to develop a &#8220;direct diagramming&#8221; methodology, where each diagram could directly &#8220;explain itself&#8221;—and where every diagram would be readable &#8220;purely visually&#8221;, without words.</p>
<p>In a typical case I might <a href='https://www.wolframscience.com/nks/p71--mobile-automata/'>show the behavior of a system (here a mobile automaton)</a>, next to an explicit “visual template” of how its rules operate. The idea then was that even a reader who didn’t understand the bigger story, or any of the technical details, could still “match up templates” and understand what was going on in a particular picture:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img18.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img18.png" width="493" height="277" /></a></p>
<p>At the beginning of the project, the diagrams were comparatively simple. But as the project progressed I invented more and more mechanisms for them, until later in the project I was producing very <a href='https://www.wolframscience.com/nks/p768--undecidability-and-intractability/'>complex &#8220;visually readable&#8221; diagrams like this</a>:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img19.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img19.png" width="548" height="325" /></a></p>
<p>A crucial point was that all these diagrams were <a href='https://www.wolframscience.com/nks/notes-0-1--pictures-in-the-book/'>being produced algorithmically</a>—with Wolfram Language code. And in fact I was developing the diagrams as an integral part of actually doing the research for the book. It was a lesson I’d learned years earlier: don’t wait until research is “finished” to figure out how to present it; work out the presentation as early as possible, so you can use it to help you actually do the research.</p>
<p>Another aspect of our first “textbook-like” style for the book was the idea of having additional elements, alongside the “main narrative” of the book. In early layouts we thought about having “Technical Notes”, “Historical Notes”, “Implementation Notes”, etc. But it didn’t take too long to decide that no, that was just going to be too complicated. So we made the decision to have one kind of note, and to <a href='https://www.wolframscience.com/nks/notes-for-chapters/'>collect all notes at the back of the book</a>.</p>
<p>And that meant that in the main part of the book we had just two basic elements: text and images (with captions). But, OK, in designing any book a very basic question is: what size and shape will its pages be? <em>The Mathematica Book</em> was squarish—like a typical textbook—so that it accommodated its text-on-the-left code-on-the-right “dialogs”. We knew that the new book should be wide too, to accommodate the kinds of graphics I expected. But that posed a problem.</p>
<p>In <em>The Mathematica Book</em> ordinary text ran the full width of the page. And that worked OK, because in that book the text was typically broken up by dialogs, tables, etc. In the new book, however, I expected much longer blocks of pure text—which wouldn’t be readable if they ran the full width of the page. But if the text was narrower, then how would the graphics not look like they were awkwardly sticking out? Well, the pages would have to be carefully laid out to appropriately anchor the graphics visually, say to the tops or bottoms of pages. And that was going to make the process of layout much trickier.</p>
<p>Different pages were definitely going to look different. But there had to be a certain overall consistency. Every graphic was going to have a caption—and actually a caption that was sufficiently self-contained so that people could basically “read the book just by looking at the pictures”. Within the graphics themselves there had to be standards. How should arrays of cells be rendered? To what extent should things have boxes around them, or arrows between them? How big should pictures that emphasized particular features be?</p>
<p>Some of these standards got implemented basically just by me remembering to follow them. But others were essentially the result of the whole stack of Wolfram Language functions that we built to produce the algorithmic diagrams for the book. At the time, there was some fiddliness to these functions, and to making their output look good—though in later years what we learned from this was used to tune up the general look of built-in graphics in the Wolfram Language. </p>
<h2 id='the-technology-of-images'>The Technology of Images</h2>
<p>One of the striking features of the NKS book is the crispness of its pictures. And I think it’s fair to say that this wasn’t easy to achieve—and in the end required a pretty deep dive into the technology of imaging and printing (as I’ll describe more in a later section).</p>
<p>Back in the 1980s I’d had plenty of pictures of things like cellular automata in <a href='https://www.stephenwolfram.com/publications/academic/cellular-automata'>my papers</a>. And I’d produced them by outputting what amounted to pages of bitmaps on laser printers, then having publishers photographically reproduce the pictures for printing.</p>
<p>Up to a point the results were OK:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img20.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img20.png" width="620" height="198" /></a></p>
<p>But for example in 1985 when I wanted a 2000-step picture of rule 30 things got difficult. The computation (which, yes, involves 8 million cells) was <a href='https://content.wolfram.com/uploads/sites/34/2020/07/random-sequence-generation-cellular-automata.pdf' target=_blank rel=noopener>done on a prototype Connection Machine parallel computer</a>. And at first the output was generated on a large-format printer that was usually used to print integrated circuit layouts. The result was quite large, and I subsequently laminated pictures like this (and in rolled-up form they served as engaging hiding places for my children when they were very young):</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img21.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img21.png" width="192" height="311" /></a></p>
<p>But when photographically reproduced and printed in a journal the picture definitely wasn’t great:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img22.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img22.png" width="357" height="391" /></a></p>
<p>And the NKS book provided another challenge as well. While the core of a picture might just be an array of cells like in a cellular automaton, a full algorithmic diagram could contain all sorts of other elements.</p>
<p>In the end, the NKS book was a beneficiary of an important design decision that we made back in 1987, early in the development of Mathematica. At the time, most graphics were thought about in terms of bitmaps. On whatever device one was using, there was an array of pixels of a certain resolution. And the focus was on rendering the graphics at that resolution. Not everything worked that way, though. And “drawing” (as opposed to “painting”) programs typically created graphics in “vector” form, in which at first primitives like lines and polygons were specified without reference to resolution, and were then converted to bitmaps only when they were displayed.</p>
<p>The shapes of characters in fonts were something that was often specified—at least at an underlying level—in vector form. There’d been various approaches to doing this, but by 1987 <a href='https://www.adobe.com/products/postscript.html' target=_blank rel=noopener>PostScript</a> was an emerging standard—at least for printing—buoyed by its use in the Apple LaserWriter. The main focus of PostScript was on fonts and text, but the PostScript language also included standard graphics primitives like lines and polygons. </p>
<p>Back when <a href='https://writings.stephenwolfram.com/2013/06/there-was-a-time-before-mathematica/'>I had built SMP in 1979–1981</a> we’d basically had to build a separate driver for every different display or printing device we wanted to output graphics on. But in 1987 there was an alternative: just use PostScript for everything. Printer manufacturers were working hard to support PostScript on their printers, but PostScript mostly hadn’t come to screens yet. There was an important exception though: the NeXT computer was set up to have PostScript as its native screen-rendering system. And partly through that, we decided to use PostScript as our underlying way to represent all graphics in Mathematica.</p>
<p>At a high level, graphics were described with the same <a href='https://reference.wolfram.com/language/guide/SymbolicGraphicsLanguage.html'>symbolic primitives as we use in the Wolfram Language today</a>: <tt><a href='https://reference.wolfram.com/language/ref/Line.html'>Line</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/Polygon.html'>Polygon</a></tt>, etc. But these were converted internally to PostScript—and even stored in notebooks that way. On the NeXT this was pretty much the end of the story, but on other systems we had to write our own interpreters for at least the subset of PostScript we were using. </p>
<p>Why was this important to the NKS book? Well, it meant that all graphics could be specified in a fundamentally resolution-independent way. In developing the graphics I could look at them in a notebook on a screen, or I could print them on a standard laser printer. But for the final book the exact same graphics could be printed at much higher resolution—and look much crisper.</p>
<p>At the time, the standard resolution of a computer screen was 72 dpi (dots per inch) and the resolution of a typical laser printer was 300 dpi. But the typical basic resolution of a book-printing pipeline was more like 2400 dpi. I’ll talk later about the adventure of actually printing the NKS book. But the key point was that because Mathematica’s graphics were fundamentally based on PostScript, they weren’t tied to any particular resolution, so they could in principle make use of whatever resolution was available.</p>
<p>Needless to say, there were plenty of complicated issues. One had to do with indicating the cells in something like a cellular automaton. Here’s a picture of the <a href='https://www.wolframscience.com/nks/p27--how-do-simple-programs-behave/'>first few steps of rule 30</a>, shown as a kind of “macro bitmap”, with pure black and white cells:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 3px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051222img1.png" alt='ArrayPlot' title='ArrayPlot' width='253' height='134' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051222img1A_copy.txt">
					<span class='close' id='1A_out'>&amp;#10005</span></p>
<pre class='text' id='1A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But often I wanted to indicate the extent of each cell:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051222img2.png" alt='ArrayPlot' title='ArrayPlot' width='284' height='140' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051222img2A_copy.txt">
					<span class='close' id='2A_out'>&amp;#10005</span></p>
<pre class='text' id='2A_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And in late 1991 and early 1992 we worried a lot about how to draw the “mesh” between cells. A first thought was just to use a thin black line. But that obviously wouldn’t work, because it wouldn’t separate black cells. And we soon settled on a <tt><a href='https://reference.wolfram.com/language/ref/GrayLevel.html'>GrayLevel</a></tt><tt>[.15]</tt> line, which was visible against both black and white. </p>
<p>But how is such a line printed? If we’re just using black ink, there’s ultimately either black or white at a particular place on the page. But there’s a standard way to achieve the appearance of gray, by changing the local density of black and white. And the typical method used to implement this is (<a href="https://writings.internal.stephenwolfram.com/2022/05/the-making-of-a-new-kind-of-science/#how-to-publish-a-book">as we’ll discuss later</a>) <a href='https://www.wolframscience.com/nks/notes-10-7--halftoning/'>halftoning</a>, in which one renders the “gray” by using black dots of different sizes.</p>
<p>But by the time one&#8217;s using very thin gray lines, things are getting very tricky. For example, it matters how much the ink on either side of the line spreads—because if it&#8217;s too much it can effectively fill in where the line was supposed to be. We wanted to define standards that we could use throughout the NKS book. And we couldn&#8217;t tell what would happen in the final printed book except by actually trying it, on a real printing press. So already in early 1992 we started doing print tests, trying out different thicknesses of lines and so on. And that allowed us to start setting graphics standards that we could implement in the Wolfram Language code used to make the algorithmic diagrams, that would then flow through to all renderings of those diagrams.</p>
<p>Back in 1991 we debated quite a bit whether the NKS book should use color. We knew it would be significantly more expensive to print the book in color. But would color allow seriously better communication of information? Two-color cellular automata like rule 30 can be rendered in pure black and white. But over the years I’d certainly made many striking color pictures of cellular automata with more colors. </p>
<p>Somehow, though, those pictures hadn’t <a href='https://www.stephenwolfram.com/scrapbook/1984-the-business-of-cellular-automata-commemorative-postcards/?iframe=true'>seemed quite as crisp</a> as the <a href='https://writings.stephenwolfram.com/2003/12/cellular-automata-from-christmas-1983/?iframe=true'>black and white ones</a>. And there was another issue too, having to do with a problem I’d noticed in the mid-1980s in human visual perception of arrays of colored cells. Somewhat nerdily, I ended up including a <a href='https://www.wolframscience.com/nks/notes-0-1--using-color/'>note about this in the final NKS book</a>:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img25.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img25.png" width="448" height="299" /></a></p>
<p>But the final conclusion was that, yes, the NKS book would be pure black and white. Nowadays—particularly with screen rendering being in many ways more important than print—it’s much easier to do things in color. And, for example, in our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> it’s been very convenient to <a href='https://www.wolframphysics.org/technical-introduction/additional-material/appendix-graph-types/' target=_blank rel=noopener>distinguish types of graphs, or nodes in graphs, by color</a>. But for the NKS book I think it was absolutely the right decision to use black and white. Color might have added some nice accents to certain kinds of diagrams. But the clarity—and visual force—of the images in the book was much better served by the perceptual crispness of pure black and white. </p>
<h2 id='how-to-lay-out-the-book'>How to Lay Out the Book</h2>
<p>The way most books with complex formats get produced is that first the author creates “disembodied” pieces of content, then a designer or production artist comes in and arranges them on pages. But for the NKS book I wanted something where the process of creation and layout was much more integrated, and where—just as I was directly writing Wolfram Language code to produce images—I could also directly lay out final book pages.</p>
<p>By 1990 “desktop publishing” was commonplace, and there were plenty of systems that basically allowed one to put anything anywhere on a page. But to make a whole book we knew we needed a more consistent and templated approach—that could also interact programmatically with the Wolfram Language. There were a few well-developed “full-scale book production systems” that existed, but they were complex “industrially oriented” pieces of software, that didn’t seem realistic for me to use interactively while writing the book.</p>
<p>In mid-1990, though, we saw a demo of something new, running on the NeXT computer: a system called FrameMaker, which featured book-production capabilities, as well as a somewhat streamlined interchange format. Oh, and especially on the NeXT, it handled PostScript graphics well, inserting them “by reference” into documents. By late 1990 we were building book layout templates in FrameMaker, and we soon settled on using that for the <a href='https://www.wolframscience.com/nks/notes-0-1--book-production-system/'>basic production of the book</a>. (Later, to achieve all the effects we wanted, we ended up having to process everything through Wolfram Language, but that’s another story.</p>
<p>We iterated for a while on the book design, but by the end of 1991 we’d nailed it down, and I started authoring the book. I made images using Mathematica, importing them in “<a href='https://reference.wolfram.com/language/ref/format/EPS.html'>Encapsulated PostScript</a>” into FrameMaker. And words I typed directly into FrameMaker—in the environment reconstructed here using a virtual machine that we saved from the time of authoring the book:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img25a.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img25a.png" width="570" height="494" /></a></p>
<p>I composed every page—not only its content, but also its visual appearance. If I had a cellular automaton to render, and it was going to occupy a certain region on a page, I would pick the number of cells and steps to be appropriate for that region. I was constantly adjusting pictures to make them look good on a given page, or on pairs of facing pages, or along with other nearby pictures, and so on. </p>
<p>One of the tricky issues was how to refer to pictures from within the text. In technical books, it&#8217;s common to number &#8220;figures&#8221;, so that the text might say &#8220;See Figure 16”. But I wanted to avoid that piece of &#8220;scaffolding&#8221;, and instead always just be able to say things like &#8220;the picture below&#8221;, or &#8220;the picture on the facing page“. It was often quite a puzzle to see how to do this. If a picture was too big, or the text was too small, the picture would get too far ahead, and so on. And I was constantly adjusting things to make everything work.</p>
<p>I also decided that for elegance I wanted to <a href='https://www.wolframscience.com/nks/notes-0-1--hyphenation/'>avoid ever having to hyphenate words</a> in the text. And quite often I found myself either rewording things, or slightly changing letter spacing, to make things fit, and to avoid things like &#8220;orphaned&#8221; words at the beginnings of lines.</p>
<p>It was a strange and painstaking process getting each page to look right, and adjusting content and layout together. Sometimes things got a little pathological. I always wanted to fill out pages, and not to leave space at the bottom (oh, and facing pages had to be exactly the same height). And I also tried to start new sections on a new page. But there I was, writing <a href='https://www.wolframscience.com/nks/chap-5--two-dimensions-and-beyond/'>Chapter 5</a>, and trying to end the section on &#8220;<a href='https://www.wolframscience.com/nks/chap-5--two-dimensions-and-beyond#sect-5-4--substitution-systems-and-fractals'>Substitution Systems and Fractals</a>”—and I had an empty bottom third of a page. What was I to do? I decided to invent a whole new kind of system, that <a href='https://www.wolframscience.com/nks/p192--substitution-systems-and-fractals/'>appears on page 192</a>, just to <a href='https://www.wolframscience.com/nks/p191--substitution-systems-and-fractals/'>fill out the layout for page 191</a>:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/swimg051322img26.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/swimg051322img26.png" width="620" height="366" /></a></p>
<p>Looking through my archives, I find traces of other examples. Here are notes on a printout of Chapter 6. And, yes, on <a href='https://www.wolframscience.com/nks/p228--the-emergence-of-order/'>page 228</a> I did insert images of additional rules:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img26a.png"><img loading='lazy' alt="Click to enlarge" title="Click to enlarge" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322img26a.png" width="594" height="428" /></a></p>
<h2 id='the-book-takes-shape'>The Book Takes Shape</h2>
<p>By the end of 1991 I was all set up to author and lay out the book. I started writing—and things went quickly. The first printout I have from that time is from May 1992, and it already has nearly 90 pages of content, with many recognizable pictures from the final NKS book:</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg1.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='572' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At that point the book was titled <em>Computation and the Complexity of Nature</em>, and the chapter titles were a bit different, and rather complexity themed:</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg2.png" alt='Click to enlarge' title='Click to enlarge' width='287' height='465' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A large fraction of the main-text material about cellular automata was already there, as well as material about <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-5--substitution-systems'>substitution systems</a> and <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-3--mobile-automata'>mobile automata</a>. And there were extensive notes at the end, though at that point they were still single-column, and looked pretty much just like a slightly compressed version of the main text. And, by the way, <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-4--turing-machines'>Turing machines</a> were just then appearing in the book, but still relegated to the notes, on the grounds that they “weren’t as minimal as mobile automata”.</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg3.png" alt='Click to enlarge' title='Click to enlarge' width='414' height='560' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And hanging out, so far just as a stub, was the Principle of Computational Equivalence:</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg4.png" alt='Click to enlarge' title='Click to enlarge' width='414' height='560' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By August 1992 the book had changed its title to <em>A New Science of Complexity</em> (subtitle: <em>Rethinking the Mechanisms of Nature</em>). There was a new first chapter “Some Fundamental Phenomena” that began with photographs of various “systems from nature”:</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg5.png" alt='Click to enlarge' title='Click to enlarge' width='571' height='369' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Chapter 3 had now become “The Behavior of Simple Systems”. Turing machines were there. There was at least a stub for <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-9--register-machines'>register machines</a> and <a href='https://www.wolframscience.com/nks/p122--elementary-arithmetic/'>arithmetic systems</a>. But even though I’d investigated <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs#sect-3-7--tag-systems'>tag systems</a> in September 1991 they weren’t yet in the book. <a href='https://www.wolframscience.com/nks/chap-4--systems-based-on-numbers/'>Systems based on numbers</a> were starting to be there.</p>
<p>And then, making their first appearance (with the page tagged as having been modified May 25, 1992), were the <a href='https://www.wolframscience.com/nks/chap-5--two-dimensions-and-beyond#sect-5-6--multiway-systems'>multiway systems</a> that are now so central to the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a> (or, as I had originally and perhaps more correctly called them in this case, “Multiway Substitution Systems”):</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg6.png" alt='Click to enlarge' title='Click to enlarge' width='341' height='519' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By September 1992, register machines were in, complete with the <a href='https://www.wolframscience.com/nks/p100--register-machines/'>simplest register machine with complex behavior</a> (that had taken a lot of computer time to find). My <a href='https://www.wolframscience.com/nks/p165--partial-differential-equations/'>simple PDE with complex behavior</a> was also there. By early 1993 I had changed its name again, to <em>A Science of Complexity</em>, and had begun to have a quite recognizable chapter structure (though not yet with realistic page numbers):</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg7.png" alt='Click to enlarge' title='Click to enlarge' width='418' height='521' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It imagined a rather different configuration of notes than eventually emerged:</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg8.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg8.png" alt='Click to enlarge' title='Click to enlarge' width='418' height='416' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Making its first appearance was a chapter on physics, though still definitely as a stub:</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg9.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg9.png" alt='Click to enlarge' title='Click to enlarge' width='345' height='527' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This version of the book opened with “chapter summaries”, noting about the chapter on fundamental physics that “[Its] high point is probably my (still speculative) attempt to reformulate the foundation of physics in computational terms, including new models for space, time and quantum mechanics”: </p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg10.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg10.png" alt='Click to enlarge' title='Click to enlarge' width='418' height='419' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By February 1994 I was getting bound mockups of the book made, with the final page size, though the wrong title and cover, and at that point only 458 pages (rather than the eventual 1280):</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg11.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg11.png" alt='Click to enlarge' title='Click to enlarge' width='443' height='349' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The two-column format for the notes at the back was established, and even though the content of notes for the still-complexity-themed first chapter were rather different from <a href='https://www.wolframscience.com/nks/p859--an-outline-of-basic-ideas/'>the way they ended up</a>, some later notes already looked pretty much the same as <a href='https://www.wolframscience.com/nks/p917--mathematical-functions/'>they would in the final book</a>: </p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg12.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg12.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='378' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By September 1994 the draft of the book was up to 658 pages. The chapter structure was almost exactly as it finally ended up, albeit also with an epilog, and a bibliography (more about these later):</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg13.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg13.png" alt='Click to enlarge' title='Click to enlarge' width='418' height='588' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The September 1994 draft contained a section entitled “The Story of My Work on Complexity” (later renamed to the final “<a href='https://www.wolframscience.com/nks/chap-1--the-foundations-for-a-new-kind-of-science#sect-1-4--the-personal-story-of-the-science-in-this-book'>The Personal Story of the Science in this Book</a>”) which then included an image of what a <a href='https://www.wolfram.com/notebooks/'>Wolfram Notebook</a> on NeXT looked like at the time:</p>
<table c>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg14.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg14.png" alt='Click to enlarge' title='Click to enlarge' width='329' height='414' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section6Aimg14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The caption talked about how in the course of the project I’d generated 3 gigabytes of notebooks—a number which <a href='https://www.wolframscience.com/nks/pxiv--preface/'>would increase considerably</a> before the book was finished. Charmingly, the caption also said: “The card at the back of this book gives information about obtaining some of the programs used”. Our <a href='https://www.wolfram.com/mathematica/scrapbook/1994/07/04/1994_websites-2/?iframe=true'>first corporate website</a> went live on October 7, 1994.</p>
<p>By late 1994 the form of the book was basically all set. I’d successfully captured pretty much everything I’d known when I started on the book back in 1991, and I’d had three years of good discoveries. But what was still to come was seven years of intense research and writing that would take me much further than I had ever imagined back in 1991—and would end up roughly doubling the length of the book. </p>
<h2 id='photographs-for-the-book'>Photographs for the Book</h2>
<p>In 1991 I knew the book I was going to write would have lots of cellular automaton pictures. And I imagined that the main other type of pictures it would contain would be photographs of actual, natural systems. But where was I going to get those photographs from? There was no web with image search back then. We looked at stock photo catalogs, but somehow the kinds of images they had (often oriented towards advertising) were pretty far from what we wanted. </p>
<p>Over the years, I had collected—albeit a bit haphazardly—quite a few relevant images. But we needed many more. I wanted pictures illustrating both complexity, and simplicity. But the good news was that, as I explained early in the book, both are ubiquitous. So it should be easy to find examples of them—that one could go out and take nice, consistent photographs of. </p>
<p>And starting in late 1991, that’s just what we did. My archives contain all sorts of negatives and contact prints (yes, this was before digital photography, and, yes, that’s a bolt—intended as an example of simplicity in an artifact):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img1.png" alt='Click to enlarge' title='Click to enlarge' width='576' height='469' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Sometimes the specimens I’d want could easily be found in my backyard</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img2.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='158' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or in the sky</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img3.png" alt='Click to enlarge' title='Click to enlarge' width='571' height='130' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or on my desk (and even after waiting 400 million years, the trilobite fossil didn’t make it in)</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img4.png" alt='Click to enlarge' title='Click to enlarge' width='397' height='133' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Over the course of a couple of years, I’d end up visiting all sorts of zoos, museums, labs, aquariums and botanical gardens—as well as taking trips to hardware stores and grocery stores—in search of interesting forms to photograph for the book.</p>
<p>Sometimes it would be a bit challenging to capture things in the field (yes, that’s a big leaf I’m holding on the right):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img5.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='172' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At the zoo, a giraffe took a maddeningly long time to turn around and show me the other side of <a href='https://www.wolframscience.com/nks/p426--biological-pigmentation-patterns/'>its patterning</a> (I was very curious <a href='https://www.wolframscience.com/nks/notes-8-7--origins-of-randomness-in-animal-patterning/'>how similar they were</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img6.png" alt='Click to enlarge' title='Click to enlarge' width='470' height='454' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There were efforts to get pictures of “simple forms” (yes, that’s an egg)</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img7.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='164' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>with, I now notice, a cameo from me—captured in mid experiment:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img8.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img8.png" alt='Click to enlarge' title='Click to enlarge' width='405' height='346' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Sometimes the subjects of photographs—with simple or complex forms—were acquired at local grocery stores (did I eat that cookie?):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img9.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img9.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='346' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I cast about far and wide for forms to photograph—including, I now realize, all of rock, paper and scissors, each illustrating something different:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img10.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img10.png" alt='Click to enlarge' title='Click to enlarge' width='567' height='126' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section8img10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Sometimes we tried to do actual, physical experiments, here with <a href='https://www.wolframscience.com/nks/notes-7-4--billiards/'>billiard balls</a> (though in this case looking just like a simulation):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img11.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img11.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='337' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and here with <a href='https://www.wolframscience.com/nks/notes-8-4--splashes/'>splashes</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img12.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img12.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='276' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img13.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img13.png" alt='Click to enlarge' title='Click to enlarge' width='411' height='322' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I was very interested in trying to illustrate <a href='https://www.wolframscience.com/nks/chap-7--mechanisms-in-programs-and-nature#sect-7-5--the-intrinsic-generation-of-randomness'>reproducible apparently random behavior</a>. I got a several-feet-tall piece of glassware at a surplus store and repeatedly tried dropping dye into water:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img14.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img14.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='347' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I tried looking at <a href='https://www.wolframscience.com/nks/p377--fluid-flow/'>smoke rising</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img15.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img15.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='347' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img15_copy.txt">
					<span class='close' id='15_out'>&amp;#10005</span></p>
<pre class='text' id='15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>These were all do-it-yourself experiments. But that wasn’t always enough. Here’s a visit to a fluid dynamics lab (yes, with me visible checking out the <a href='https://www.wolframscience.com/nks/p377--fluid-flow/'>hydraulic jump</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img16.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img16.png" alt='Click to enlarge' title='Click to enlarge' width='571' height='372' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img16_copy.txt">
					<span class='close' id='16_out'>&amp;#10005</span></p>
<pre class='text' id='16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I’d <a href='https://www.wolframscience.com/nks/p380--fluid-flow/'>simulated flow past an obstacle</a>, but here it was “visualized” in real life:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8-52img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8-52img1.png" alt='Click to enlarge' title='Click to enlarge' width='537' height='404' /></a></p>
<p>Then there was the <a href='https://www.wolframscience.com/nks/chap-8--implications-for-everyday-systems#sect-8-3--the-breaking-of-materials'>section on fracture</a>. Again, I wanted to understand reproducibility. I got a pure silicon wafer from a physicist friend, then broke it:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img17.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img17.png" alt='Click to enlarge' title='Click to enlarge' width='293' height='194' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img17_copy.txt">
					<span class='close' id='17_out'>&amp;#10005</span></p>
<pre class='text' id='17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Under a powerful microscope, all sorts of interesting structure was visible on the fracture surface—that was useful for model building, even if not obviously reproducible:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img18.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img18.png" alt='Click to enlarge' title='Click to enlarge' width='573' height='261' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img18_copy.txt">
					<span class='close' id='18_out'>&amp;#10005</span></p>
<pre class='text' id='18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, talking of fractures, in March 1994 I managed to slip on some ice and break my ankle. Had I had pictures of fractures in the book, I was thinking of including an x-ray of my broken bones:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img19.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img19.png" alt='Click to enlarge' title='Click to enlarge' width='320' height='319' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img19_copy.txt">
					<span class='close' id='19_out'>&amp;#10005</span></p>
<pre class='text' id='19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are all sorts of stories about photographs that were taken for the book. In <a href='https://www.wolframscience.com/nks/p409--growth-of-plants-and-animals/'>illustrating phyllotaxis</a> (ultimately for <a href='https://www.wolframscience.com/nks/chap-8--implications-for-everyday-systems#sect-8-6--growth-of-plants-and-animals'>Chapter 8</a>), I wanted cabbage and broccoli. They were duly obtained from a grocery store, photographed, then eaten by the photographer (who reported that the immortalized cabbage was particularly tasty):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img20.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img20.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='176' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img20_copy.txt">
					<span class='close' id='20_out'>&amp;#10005</span></p>
<pre class='text' id='20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another thing I studied in the book was <a href='https://www.wolframscience.com/nks/p400--growth-of-plants-and-animals/'>shapes of leaves</a>. Back in 1992 I’d picked up some neighborhood leaves where I was living in California at the time, then done a field trip to a nearby botanical garden. A couple of years later—believing the completion of the book was imminent—I was urgently trying to fill out more entries in a <a href='https://www.wolframscience.com/nks/p403--growth-of-plants-and-animals/'>big array of leaf pictures</a>. But I was in the Chicago area, and it was the middle of the winter, with no local leaves to be found. What was I to do? I contacted an employee of ours in Australia. Conveniently it turned out he lived just down the street from the Melbourne botanical gardens. And there he found all sorts of interesting leaves—making <a href='https://www.wolframscience.com/nks/p403--growth-of-plants-and-animals/'>my final page</a> a curious mixture of Californian and Australian fauna:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img21.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img21.png" alt='Click to enlarge' title='Click to enlarge' width='314' height='375' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img21_copy.txt">
					<span class='close' id='21_out'>&amp;#10005</span></p>
<pre class='text' id='21_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As it turned out, by the next spring I hadn’t yet finished the book, and in fact I was still trying to fill in some of what I wanted to say about leaves. I had a model for leaf growth, but I wanted to validate it by seeing how leaves actually grow. That turned out not to be so easy—though I did dissect many leaf buds in the process. (And it was very convenient that this was a plant-related question, because I’m horribly squeamish when it comes to dissecting animals, even for food.)</p>
<p>Some of what I wanted to photograph was out in the world. But some was also collectible. Ever since I was a kid I had been gradually acquiring interesting shells, fossils, rocks and so on, sometimes “out in the field”, but more often at shops. Working on the NKS book I dramatically accelerated that process. Shells were a particular focus, and I soon got to the point where I had specimens of most of the general kinds with “interesting forms”. But there were still plenty of adventures—like finding my very best sample of “cellular-automaton-like” patterning, on a <a href='https://www.wolframscience.com/nks/p423--biological-pigmentation-patterns/'>false melon volute shell</a> tucked away at the back of a store in Florida:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img22.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img22.png" alt='Click to enlarge' title='Click to enlarge' width='512' height='364' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img22_copy.txt">
					<span class='close' id='22_out'>&amp;#10005</span></p>
<pre class='text' id='22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In 1998 I was working on the section of the book about biological growth, and wanted to understand the space of shell shapes. I was living in the Chicago area at that time, and spent a lovely afternoon with the curator of molluscs at the Field Museum of Natural History—gradually trying to fill in (with a story for every mollusc!) what became the array on <a href='https://www.wolframscience.com/nks/p416--growth-of-plants-and-animals/'>page 416 of the book</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img23.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img23.png" alt='Click to enlarge' title='Click to enlarge' width='522' height='207' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img23_copy.txt">
					<span class='close' id='23_out'>&amp;#10005</span></p>
<pre class='text' id='23_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And actually it turned out that my own shell collection (with one exception, later remedied) already contained all the necessary species—and in a drawer in my office I still have the particular shells that were immortalized on that page:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img24.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img24.png" alt='Click to enlarge' title='Click to enlarge' width='539' height='460' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img24_copy.txt">
					<span class='close' id='24_out'>&amp;#10005</span></p>
<pre class='text' id='24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I <a href='https://www.wolframscience.com/nks/notes-8-6--leaf-shapes/'>started to do</a> the same kind of shape analysis for leaves—but never finished it, and it remains an open project even now:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img25.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img25.png" alt='Click to enlarge' title='Click to enlarge' width='366' height='479' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img25_copy.txt">
					<span class='close' id='25_out'>&amp;#10005</span></p>
<pre class='text' id='25_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>My original conception had been to start the book with “things we see in nature and elsewhere” and then work towards models and ideas of computation. But when I switched to “computation first” I briefly considered going to more “abstracted photographs”, for example by stippling:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img26.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img26.png" alt='Click to enlarge' title='Click to enlarge' width='573' height='284' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img26_copy.txt">
					<span class='close' id='26_out'>&amp;#10005</span></p>
<pre class='text' id='26_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But in the end I decided that—just like my images of computational systems—any photographs should be as “direct as possible”. And they wouldn’t be at the beginning of the book, but instead would be concentrated in a specific later chapter (<a href='https://www.wolframscience.com/nks/chap-8--implications-for-everyday-systems/'>Chapter 8: &#8220;Implications for Everyday Systems&#8221;</a>). Pictures of things like bolts and scissors became irrelevant, but by then I’d accumulated quite a library of images to choose from:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img27.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img27.png" alt='Click to enlarge' title='Click to enlarge' width='474' height='359' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img27_copy.txt">
					<span class='close' id='27_out'>&amp;#10005</span></p>
<pre class='text' id='27_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Many of these images did get used, but there were some nice collections, that never made it into the book because I decided to cut the sections that would discuss them. There were the “things that look similar” arrays:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img28.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img28.png" alt='Click to enlarge' title='Click to enlarge' width='568' height='272' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img28_copy.txt">
					<span class='close' id='28_out'>&amp;#10005</span></p>
<pre class='text' id='28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And there were things like pollen grains or mineral-related forms (and, yes, I personally crystallized that bismuth, which did at least <a href='https://www.wolframscience.com/nks/notes-8-2--hopper-crystals/'>make it into the notes</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img29.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img29.png" alt='Click to enlarge' title='Click to enlarge' width='264' height='282' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img29_copy.txt">
					<span class='close' id='29_out'>&amp;#10005</span></p>
<pre class='text' id='29_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img30.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img30.png" alt='Click to enlarge' title='Click to enlarge' width='528' height='279' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img30_copy.txt">
					<span class='close' id='30_out'>&amp;#10005</span></p>
<pre class='text' id='30_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There were all sorts of unexpected challenges. I wanted an array of pictures of animals, to illustrate their range of pigmentation patterns. But so many of the pictures we could find (including ones I’d taken myself) we couldn’t use—because I considered the facial expressions of the animals just too distracting.</p>
<p>And then there were stories like the &#8220;wild goose chase&#8221;. I was sure I&#8217;d seen a <a href='https://www.wolframscience.com/nks/notes-8-6--animal-behavior/'>picture of migrating birds</a> (perhaps geese) in a <a href='https://www.wolframscience.com/nks/p187--substitution-systems-and-fractals/'>nested, Sierpiński-like pattern</a>. But try as we might, we couldn&#8217;t find any trace of this.</p>
<p>But finally I began to assemble pictures into the arrays we were going to use. In the end, only a tiny fraction of the “nature” pictures we had made it into the book (and, for example, neither the egg nor the <a href='https://www.wolframscience.com/nks/notes-8-6--observed-phyllotaxis/'>phyllotactically scaled pangolin</a> here did)—some because they didn’t seem clear in what they were illustrating, and some because they just didn’t fit in with the final narrative:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img31.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img31.png" alt='Click to enlarge' title='Click to enlarge' width='524' height='666' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img31_copy.txt">
					<span class='close' id='31_out'>&amp;#10005</span></p>
<pre class='text' id='31_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Beyond the natural world, the more I explored simple programs and what they can do, the more I wondered why so many of the remarkable things I was discovering <a href='https://www.wolframscience.com/nks/chap-2--the-crucial-experiment#sect-2-3--why-these-discoveries-were-not-made-before'>hadn&#8217;t been discovered before</a>. And as part of that, I was curious what kinds of patterns people had in fact constructed from rules, for art or otherwise. On a few occasions during the time I was working on the book, I managed to visit relevant museums, searching for <a href='https://www.wolframscience.com/nks/p43--why-these-discoveries-were-not-made-before/'>unexpected patterns made by rules</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img32.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img32.png" alt='Click to enlarge' title='Click to enlarge' width='470' height='338' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img32_copy.txt">
					<span class='close' id='32_out'>&amp;#10005</span></p>
<pre class='text' id='32_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img33.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img33.png" alt='Click to enlarge' title='Click to enlarge' width='576' height='316' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img33_copy.txt">
					<span class='close' id='33_out'>&amp;#10005</span></p>
<pre class='text' id='33_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But mostly all I could do was scour books on art history (and architecture) looking for relevant pictures (and, yes, it was books at the time—and in fact the web didn&#8217;t immediately help even when it became available). Sometimes I would find a clear picture, and we would just ask for permission to reproduce it. But often I was interested in something that was for example off on the side in all the pictures we could find. So that meant we had to get our own pictures, and occasionally that was something of an adventure. Like when we got an employee of ours who happened to be vacationing in Italy to go to part of an obscure church in rural Italy—and get a photograph of a <a href='https://www.wolframscience.com/nks/notes-2-3--ornamental-art/'>mosaic there from 1226 AD</a> (and, yes, those are our photographer&#8217;s feet):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img34.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img34.png" alt='Click to enlarge' title='Click to enlarge' width='483' height='321' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img34_copy.txt">
					<span class='close' id='34_out'>&amp;#10005</span></p>
<pre class='text' id='34_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='what-should-the-book-be-called?'>What Should the Book Be Called?</h2>
<p>When I started working on the book in 1991 I saw it as an extension of what I’d done in the 1980s to establish a “science of complexity”. So at first I simply called the book <em>The Science of Complexity</em>, adding the explanatory subtitle <em>A Unified Approach to Complex Behavior in Natural and Artificial Systems</em>. But after a while I began to feel that this sounded a bit stodgy—and like a textbook—so to spruce it up a bit I changed it to <em>A New Science of Complexity</em>, with subtitle <em>Rethinking the Mechanisms of Nature:</em></p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img1.png" alt='Click to enlarge' title='Click to enlarge' width='224' height='298' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Pretty soon, though, I dropped the “New” as superfluous, and the title became <em>A Science of Complexity</em>. I always knew computation was a key part of the story, but as I began to understand more about just what was out there in the computational universe, I started thinking I should capture “computation” in the name of the book, leading to a new idea: <em>Computation and the Complexity of Nature</em>. And for this title I even had a first cover draft made—complete with an eye, added on the theory that human visual perception would draw people to the eye, and thus make them notice the book:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img2.png" alt='Click to enlarge' title='Click to enlarge' width='347' height='429' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But back in 1992 (and I think it would be different today) people really didn’t understand the term “computation”, and it just made the book sound very technical to them. So back I went to <em>A Science of Complexity</em>. I wasn’t very happy with it, though, and I kept on thinking about alternatives. In August 1992 I prepared a little survey:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img3.png" alt='Click to enlarge' title='Click to enlarge' width='520' height='538' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The results of this survey were—like those of many surveys—inconclusive, and didn’t change my mind about the title. Still, in October 1992 I dashed off an email considering <em>The Inevitable Complexity of Nature and Computation</em>. But 15 minutes later, as I put it, I&#8217;d &#8220;lost interest&#8221; in that, and it was back to <em>A Science of Complexity</em>. </p>
<p>By 1993, believing that the completion of the book was somehow imminent, we’d started trying to mock up the complete look of the book, including things like the back cover, and cover flaps:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img4.png" alt='Click to enlarge' title='Click to enlarge' width='576' height='448' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The flap copy began: “This book is about a new kind of science that&#8230;”. In the first chapter there was then a section called “The Need for a New Kind of Science”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img5.png" alt='Click to enlarge' title='Click to enlarge' width='578' height='389' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As 1993 turned into 1994 I was still working with great intensity on the book, leaving almost no time to be out and about, talking about what I was doing. Occasionally, though, I would run into people and they would ask me what I was working on, and I would say it was a book, titled <em>A Science of Complexity</em>. And when I said that—at least among non-technical people—the reaction was essentially always the same “Oh, that sounds very complicated”. And that would be the end of the conversation.</p>
<p>By September 1994 this had happened just too many times, and I realized I needed a new title. So I thought to myself &#8220;How would I describe the book?&#8221;. And there it was, right in the flap copy: &#8220;a new kind of science”. I made a quick note on the back of my then business card:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img6.png" alt='Click to enlarge' title='Click to enlarge' width='567' height='483' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And soon that was the title: <em>A New Kind of Science</em>. I started trying it out. The reaction was again almost always the same. But now it was “So, what’s new about it?” And that would start a conversation.</p>
<p>I liked the title a lot. It definitely said what by then I thought the book was about. But there was one thing I didn’t like. It seemed a bit like a “meta title”. OK, so you have a new kind of science. But what is that new kind of science called? What is its name? And why isn’t the book called that?</p>
<p>I spent countless hours thinking about this. I thought about word roots. I considered comp- (for “computation”), prog- (for “program”), auto- (for “automata”, etc.). I went through Latin and Greek dictionaries, and considered roots like arch- and log- (both way too confusing). I wrote programs to generate “synthetic words” that might evoke the right meaning. I considered names like “algonomics”, “gramistry”, “regulistics” (but not “ruliology”!), and “programistics”—for which I tried to see how its usage might work:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img7.png" alt='Click to enlarge' title='Click to enlarge' width='459' height='625' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section09img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But nothing quite clicked. And in a sense my working title already told me why: I was talking about “a new kind of science”, which involved a new way of thinking, for which there were really no words, because it hadn’t been done before.</p>
<p>I’d had a certain amount of experience inventing words, for concepts in both science and technology. Sometimes it had gone well, sometimes not so well. And I knew the same was true in general in history. For every “physics” or “economics” or even “cybernetics” there were countless names that had never made it. </p>
<p>And eventually I decided that even if I could come up with a name, it wasn’t worth the risk. Maybe a name would eventually emerge, and it would be perfectly OK if the “launch book” was called <em>A New Kind of Science</em> (as yet unnamed). Certainly much better than if it gave the new kind of science a definite name, but the name that stuck was different.</p>
<p>During the writing of <em>A New Kind of Science</em>, I didn’t really need to “refer in the third person” to what the book was about. But pretty much as soon as the book was published, there needed to be a name for the intellectual endeavor that the book was about. During the development of the book, some of the people working on its project management had started calling the book by the initials of its title: ANKOS. And that was the seed for the name of its content, which almost immediately became “NKS”.</p>
<p>Over the years, I’ve returned quite a few times to the question of naming. And very recently I’ve <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#the-pure-basic-science-of-ruliology'>started using the term &#8220;ruliology&#8221;</a> for one of the key pursuits of NKS: exploring the details of what systems based on simple computational rules do. I like the name, and I think it captures well the ethos of the specific scientific activity around studying the consequences of simple rules. But it’s not the whole story of “NKS”. <em>A New Kind of Science</em> is, as its name suggests, about a new kind of science—and a new way of thinking about the kind of thing we imagine science can be about. </p>
<p>When the book was first published, some people definitely seemed to feel that the strength and simplicity of the title “<em>A New Kind of Science</em>” must claim too much. But twenty years later, I think it’s clear that the title said it right. And it’s charming now when people talk about what’s in <em>A New Kind of Science</em>, and how it’s different from other things, and want to find a way to say what it is—and end up <a href='https://www.youtube.com/watch?v=hiOnolbVYs8&#038;t=4727s' target=_blank rel=noopener>finding themselves saying it&#8217;s &#8220;a new kind of science&#8221;</a>. And, yes, that’s why I called the book that!</p>
<h2 id='the-cover-of-the-book'>The Cover of the Book</h2>
<p>We started thinking about the cover of the book very early in the project—with the “eye” design being the first candidate. But considering this a bit too surreal, the next candidate designs were more staid. The title still wasn’t settled, but in the fall of 1992 a few covers were tried:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img1.png" alt='Click to enlarge' title='Click to enlarge' width='542' height='447' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I thought these covers looked a bit drab, so we brightened them up, and by 1993—and after a few “color explorations”</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img2.png" alt='Click to enlarge' title='Click to enlarge' width='542' height='208' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>we had a &#8220;working cover&#8221; for the book (complete with its working title), carrying over typography from the previous designs, but now featuring an image of rule 30 together with the &#8220;mascot of the project&#8221;: a <a href='https://www.wolframscience.com/nks/p423--biological-pigmentation-patterns/'>textile cone shell</a> with a rule-30-like pigmentation pattern:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img3.png" alt='Click to enlarge' title='Click to enlarge' width='308' height='385' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>When I changed the title in 1994, the change was swiftly executed on the cover—with my draft copy from the time being a charming palimpsest with <em>A New Kind of Science</em> pasted over <em>A Science of Complexity</em>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img4.png" alt='Click to enlarge' title='Click to enlarge' width='325' height='407' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I was never particularly happy with this cover, though. I thought it was a bit “static”, particularly with all those boxed-in elements. And compared to other “popular books” in bookstores at the time, it was a very “quiet” cover. My book designer tried to “amp it up”</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img5.png" alt='Click to enlarge' title='Click to enlarge' width='258' height='319' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>sometimes still with a hint of mollusc</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img6.png" alt='Click to enlarge' title='Click to enlarge' width='572' height='232' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>“Not that loud!”, I said. So he quietened it down, but now with the type getting a bit more dynamic:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img7.png" alt='Click to enlarge' title='Click to enlarge' width='572' height='233' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then a bit of a breakthrough: just type and cellular automaton (now <a href='https://www.wolframscience.com/nks/p33--how-do-simple-programs-behave/'>rule 110</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img8.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img8.png" alt='Click to enlarge' title='Click to enlarge' width='572' height='473' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It was nice and simple. But now it seemed perhaps too quiet. We punched up the type, just leaving the cellular automaton as a kind of decoration:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img9.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img9.png" alt='Click to enlarge' title='Click to enlarge' width='571' height='234' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And there were a variety of ways to handle the type (maybe even with an emphasized subtitle—complete with a designer’s misspelling):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img10.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img10.png" alt='Click to enlarge' title='Click to enlarge' width='571' height='235' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But the important point was that we’d basically backed into an idea: why not just use the natural angles of the structures in rule 110 to delimit the cellular automaton on the cover? As so often happens, the computational universe had “spontaneously” thrown up a good idea that we hadn’t thought of.</p>
<p>I didn’t think the cover was quite “there”, but it was making progress. Right around this time, though, we were in discussions with a big New York publisher about them publishing the book, and they were trying to sell us on the value they could add. They were particularly keen to show us their prowess at cover design. We patiently explained that we had quite a large and good art department, which happened to have even recently won some national awards for design. </p>
<p>But the publisher was sure they could do better. I remember saying: &#8220;Go ahead and try”— and then adding, &#8220;But please don&#8217;t show us something from someone who has no idea what kind of a book this is.” </p>
<p>Several weeks later, with some fanfare, they produced their proposal:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img11.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img11.png" alt='Click to enlarge' title='Click to enlarge' width='524' height='321' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Yup, mollusc shells can be found on beaches. But this wasn’t a “beach-reading novel” kind of book. And it would be an understatement to say we weren’t impressed. </p>
<p>So, OK, it was on us: as I’d expected, we’d have to come up with a cover design. My notes aren’t dated, but sometime around then I started thinking harder about the design myself. I was playing around with rule 30, imagining a “physicalized” version of it (with 3D, letters casting shadows, etc.):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img12.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img12.png" alt='Click to enlarge' title='Click to enlarge' width='573' height='351' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I find in my archives some undated sketches of further “physicalized” cover concepts (or, at least I assume they were cover concepts, and, yes, sadly I’ve never learned to draw, and I can’t even imagine who that dude was supposed to be):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img13.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img13.png" alt='Click to enlarge' title='Click to enlarge' width='558' height='289' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But then we had an idea: maybe the strangely shaped triangle could be like a shaft of light illuminating a cellular automaton image. We talked about the metaphor of the science “providing illumination”. I was very taken with the notion that the basic ideas of the science could have been discovered even in ancient times. And that made us think about cellular automaton markings in a cave, suddenly being illuminated by an archaeologist’s flashlight. But how would we make a picture of something like that?</p>
<p>We tried some “stone effects”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img14.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img14.png" alt='Click to enlarge' title='Click to enlarge' width='549' height='337' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We investigated finding a stone mason who could carve a cellular automaton pattern into something like a gravestone. (3D printing wasn&#8217;t a thing yet.) We even tried some photographic experiments. But with the cellular automaton pattern itself having all sorts of fine detail, one barely even noticed a stone texture. And so we went back to pure computer graphics, but now with a &#8220;shaft of light&#8221; motif:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img15.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img15.png" alt='Click to enlarge' title='Click to enlarge' width='314' height='398' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img15_copy.txt">
					<span class='close' id='15_out'>&amp;#10005</span></p>
<pre class='text' id='15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It wasn’t quite right, but it was getting closer. Meanwhile, the New York publisher wanted to have another try. Their new, “spiffier” proposal (offering type alternatives for “extra credit”) was:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img16.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img16.png" alt='Click to enlarge' title='Click to enlarge' width='353' height='222' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img16_copy.txt">
					<span class='close' id='16_out'>&amp;#10005</span></p>
<pre class='text' id='16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(The shell, now shrunk, was being kept because their sales team was enamored of the idea of a tie-in whereby they would give physical shells to bookseller sales prospects.)</p>
<p>OK, so how were we going to tune up the cover? The cellular automaton triangle wasn’t yet really looking much like a shaft of light. It was something to do with the edges, we thought:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img17.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img17.png" alt='Click to enlarge' title='Click to enlarge' width='546' height='337' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img17_copy.txt">
					<span class='close' id='17_out'>&amp;#10005</span></p>
<pre class='text' id='17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It was definitely very subtle. We tried different angles and colors:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img18.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img18.png" alt='Click to enlarge' title='Click to enlarge' width='570' height='471' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img18_copy.txt">
					<span class='close' id='18_out'>&amp;#10005</span></p>
<pre class='text' id='18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We tried, and rejected, sans serif, and even partial sans serif:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img19.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img19.png" alt='Click to enlarge' title='Click to enlarge' width='572' height='231' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img19_copy.txt">
					<span class='close' id='19_out'>&amp;#10005</span></p>
<pre class='text' id='19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And by July 1995 the transition was basically complete, and for the first time our draft printouts started looking (at least on the outside) very much like modern NKS books:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img20.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img20.png" alt='Click to enlarge' title='Click to enlarge' width='567' height='344' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img20_copy.txt">
					<span class='close' id='20_out'>&amp;#10005</span></p>
<pre class='text' id='20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Specifying just what color should be printed was pretty subtle, and over the months that followed we continued to tweak, particularly the “shaft of light”</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img21.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img21.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='394' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img21_copy.txt">
					<span class='close' id='21_out'>&amp;#10005</span></p>
<pre class='text' id='21_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>until eventually <em>A New Kind of Science</em> got its final cover:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img22.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img22.png" alt='Click to enlarge' title='Click to enlarge' width='362' height='448' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img22_copy.txt">
					<span class='close' id='22_out'>&amp;#10005</span></p>
<pre class='text' id='22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>All along we’d also been thinking about what would show up on the spine of the book—and occasionally testing it in an “identity parade” on a bookshelf. And as soon as we had the “shaft of light” idea, we immediately thought of it wrapping around onto the spine: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img23.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img23.png" alt='Click to enlarge' title='Click to enlarge' width='569' height='262' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img23_copy.txt">
					<span class='close' id='23_out'>&amp;#10005</span></p>
<pre class='text' id='23_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Part of what makes the cover work is the specific cellular automaton pattern it uses—which, in characteristic form, I <a href='https://www.wolframscience.com/nks/notes-0-1--cover-image/'>explained in the notes</a> (and, yes, the necessary initial conditions were found by a search, and are now <a href='https://datarepository.wolframcloud.com/resources/Cover-Image-from-A-New-Kind-of-Science' target=_blank rel=noopener>in the Wolfram Data Repository</a>): </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img24.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img24.png" alt='Click to enlarge' title='Click to enlarge' width='570' height='230' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section10img24_copy.txt">
					<span class='close' id='24_out'>&amp;#10005</span></p>
<pre class='text' id='24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='the-opening-paragraphs'>The Opening Paragraphs</h2>
<p>How should the NKS book begin? When I write something I always like to start writing at the beginning, and I always like to say “up front” what the main point is. But over the decade that I worked on the NKS book, the “main point” expanded—and I ended up coming back and rewriting the beginning of the book quite a few times. </p>
<p>In the early years, it was pretty much all about complexity—though even in 1991 the term “a new kind of science” already makes an appearance in the text:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img1.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='878' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In 1993, I considered a more “show, don’t tell” approach that would be based on photographs of simple and complex forms:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img2.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='419' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But soon the pictures were gone, and I began to concentrate more on how what I was doing fitted into the historical arc of the development of science—though still under a banner of complexity:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img3.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='218' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After my 1996 hiatus (spent finishing Mathematica 3.0) the text of the opening section hadn’t changed, but the title was now “The Need for a New Kind of Science”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img4.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='198' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And I was soon moving further away from complexity, treating it more as “just an important example”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img5.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='218' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then, in 1999, “complexity” drops out of the opening paragraphs entirely, and it becomes all about methodology and the arc of history:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img6.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='231' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And in fact from there on out the first couple of paragraphs don’t change—though the section title softens, taking out the explicit mention of “revolution”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img7.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='239' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s interesting to notice that even though until perhaps 1998 before the opening of the book reflected “moving away from complexity”, other things I was writing already had. Here, for example, is a candidate “cover blurb” that I wrote on January 11, 1992 (yes, a decade early):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img8.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img8.png" alt='Click to enlarge' title='Click to enlarge' width='524' height='454' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And as I pull this out of my archives, I notice at the bottom of it: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img9.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img9.png" alt='Click to enlarge' title='Click to enlarge' width='524' height='84' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section8img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Hmm. That would have been interesting. But another 400 pages?</p>
<h2 id='ten-years-of-writing'>Ten Years of Writing</h2>
<p>By the end of 1991 the basic concept of what would become <em>A New Kind of Science</em> was fairly clear. At the time, I still thought—as I had in the 1980s—that the best “hook” was the objective of “explaining complexity”. But I perfectly well understood that from an intellectual and methodological point of view the most important part of the story was that I was starting to truly take seriously the notion of computation—and starting to think broadly in a fundamentally computational way. </p>
<p>But what could be figured out like this? What about systems based on constraints? What about systems that adapt or learn? What about biological evolution? What about fundamental physics? What about the foundations of mathematics? At the outset, I really didn’t know whether my approach would have anything to say about these things. But I thought I should at least try to check each of them out. And what happened was that every time I turned over a (metaphorical) rock it seemed like I discovered a whole new world underneath.</p>
<p>It was intellectually exciting—and almost addictive. I would get into some new area and think “OK, let me see what I can figure out here, then move on”. But then I would get deeper and deeper into it, and weeks would turn into months, and months would turn into years. At the beginning I would sometimes tell people what I was up to. And they would say “That sounds interesting. But what about X, Y, Z?” And I would think “I might as well try and answer those questions too”. But I soon realized that I shouldn’t be letting myself get distracted: I already had more than enough very central questions to answer.</p>
<p>And so I decided to pretty much “go hermit” until the book was done. An email I sent on October 1, 1992, summarizes how I was thinking at the time: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img1.png" alt='Click to enlarge' title='Click to enlarge' width='444' height='139' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But that email was right before I discovered yet more kinds of computational systems to explore, and before I’d understood applications to biology, and physics, and mathematics, and so on. </p>
<p>In the early years of the project I’d had various “I could do that as well” ideas. In 1991 I thought about dashing off an <em>Introduction to Computing</em> book (maybe I should do that now!). In 1992 I had a plan for creating an email directory for the world (a very proto LinkedIn). In 1993 I thought about TIX: “The Information Exchange” (a proto web for <a href='https://writings.stephenwolfram.com/2019/10/the-new-world-of-notebook-publishing/'>computable documents</a>). </p>
<p>But thinking even a little about these things basically just showed me how much what I really wanted to do was move forward on the science and the book. I was still energetically remote-CEOing my company. But every day, by mid-evening, I would get down to science, and work on it through much of the night. And pretty much that’s how I spent the better part of a decade. </p>
<p>My <a href='https://writings.stephenwolfram.com/2012/03/the-personal-analytics-of-my-life/'>personal analytics data</a> of outgoing emails show that during the time I was working on the book I became increasingly nocturnal (I shifted and “stabilized” after the book was finished):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img2temp-v4A.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img2temp-v4A.png" alt='Click to enlarge' title='Click to enlarge' width='568' height='349' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I had started the NKS book right after the big push to release <a href='https://www.wolfram.com/mathematica/scrapbook/1991/06/02/1991_mathematica2-2/?iframe=true'>Mathematica 2.0</a>. And thinking the book would take a year or maybe 18 months I figured it would be long finished before there was a new version of Mathematica, and another big push was needed. But it was not to be. And while I held off as long as I could, by 1996 there was no choice: I had to jump into finishing Mathematica 3.0.</p>
<p>From the beginning until now I’ve always been the ultimate architect of what’s now the Wolfram Language. And back in the 1990s my way of defining the specification for the language was to write its documentation, as a book. So getting <a href='https://www.wolfram.com/mathematica/scrapbook/1996/07/07/1993_itshere-2/?iframe=true'> Mathematica 3.0</a> out required me writing a <a href='https://www.stephenwolfram.com/publications/mathematica-book/'>new edition of <em>The Mathematica Book</a></em>. And since we were <a href='https://reference.wolfram.com/legacy/v3/'>adding a lot in Version 3</a>, the book was long—eventually clocking in at 1403 pages. And it took me a good part of 1996 to write it.</p>
<p>But in September 1996, Mathematica 3.0 was released, and I was able to go back to my intense focus on science and the NKS book. In many ways it was exhilarating. With <a href='https://www.wolfram.com/language/'>Wolfram Language</a> as a tool, I was powering through so much research. But it was difficult stuff. And getting everything right—and as clear as possible—was painstaking, if ultimately deeply satisfying, work. On a good day I might manage to write one page of the book. Other times I might spend many days working out what would end up as just a single paragraph in the notes at the back of the book.</p>
<p>I kept on thinking “OK, in just a few months it’ll be finished”. But I just kept on discovering more and more. And finding out again and again that sections in the table of contents that I thought would just be “quick notes” actually led to major research projects with all sorts of important and unexpected results. </p>
<p>A 1995 picture captured my typical working setup:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img3.png" alt='Click to enlarge' title='Click to enlarge' width='543' height='389' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A year or so later, I had the desk I’m still sitting at today (though not in the same location), and a (rarely used) webcam had appeared:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img4.png" alt='Click to enlarge' title='Click to enlarge' width='543' height='333' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A few years after that, the computer monitor was thinner, two young helpers had arrived, and I was looking distinctly unkempt and hermit-like:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img5.png" alt='Click to enlarge' title='Click to enlarge' width='572' height='419' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In 2000 a <a href='https://aguilerahellweg.com' target=_blank rel=noopener>photographer for Forbes</a> captured my “caged scientist” look</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img6.png" alt='Click to enlarge' title='Click to enlarge' width='383' height='469' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>along with a rather nice artistically lit “still life” of my working environment (complete with a “from-the-future” thicker-than-real-life mockup of the NKS book):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img7.png" alt='Click to enlarge' title='Click to enlarge' width='383' height='441' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section12img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But gradually, inexorably, the book got closer and closer to being finished. The floor of my office had been covered with piles of paper, each marked with whatever issue or unfinished section they related to. But by 2001 the piles were disappearing—and by the fall of that year they were all but gone: a visible sign that the book was nearing completion. </p>
<h2 id='tracking-everything-down:-a-decade-of-scholarship'>Tracking Everything Down: A Decade of Scholarship</h2>
<p><em>A New Kind of Science</em> is—as its title suggests—a book about new things. But an important part of explaining new things is to provide context for them. And for me a key part of the context for things is always the story of what led to them. And that was something I wanted to capture in the NKS book.</p>
<p>Typically there were two parts: a personal narrative of how I was led to something—and a historical narrative of what in the past might connect to it. The academic writing style that I’d adopted in the 1980s really didn’t capture either of these. So for the NKS book I <a href='https://www.wolframscience.com/nks/notes-0-1--writing-style/'>needed a new style</a>. And there were again two parts to this. First, I needed to “put myself into the text”, describing in the first person how I’d reached conclusions, and what their importance to me was. And second, I needed to “tell the story” of whatever historical developments were relevant.</p>
<p>Early on, I made the decision not to mix these kinds of narratives. I would talk about my own relation to the material. And I would talk about other people and their <a href='https://www.wolframscience.com/nks/notes-0-1--historical-notes/'>historical relation to the material</a>. But I didn’t talk about my interactions with other people. And, yes, there are lots of wonderful stories to tell—which perhaps one day I’ll have a chance to <a href='https://writings.stephenwolfram.com/category/historical-perspectives'>systematically write down</a>. But for the NKS book I decided that these stories—while potentially fun to read—just weren’t relevant to the absorption and contextualization of what I had to say. So, with a bit of regret, <a href='https://www.wolframscience.com/nks/notes-0-1--autobiographical-elements/'>I left them out</a>.</p>
<p>In typical academic papers one references other work by inserting pure, uncommented citations to it. And deep within some well-developed field, this is potentially an adequate thing to do. Because in such a field, the structure is in a sense already laid out, so a pure citation is enough to explain the connection. But for the NKS book it was quite different. Because most of the time the historical antecedents were necessarily done in quite different conceptual frameworks—and typically the only reasonable way to see the connection to them was to tell the story of what was done and why, recontextualized in an “NKS way”.</p>
<p>And what this meant was that in writing the NKS book, I ended up doing a huge amount of “scholarship”, tracking down history, and trying to piece together the stories of what happened and why. Sometimes I personally knew—or had known—the people involved. Sometimes I was dealing with things that had happened centuries ago. Often there were mysteries involved. How did this person come to be thinking about this? Why didn’t they figure this-or-that out? What really was their conceptual framework?</p>
<p>I’ve always been a person who tries to “do my homework” in any field I’m studying. I want to know both what’s known, and what’s not known. I want to get a sense of the patterns of thinking in the field, and “value systems” of the field. Many times in working on the NKS book I got the sense that this-or-that field should be relevant. But what was important for the NKS book was often something that was a footnote—or was even implicitly ignored—by the field. And it also didn’t help that the names for things in particular fields were often informed by their specific uses there, and didn’t connect with what was natural for the NKS book.</p>
<p>I started the NKS book shortly after the web was invented, and well before there was substantial content on it. So at least at first a lot of my research had to be done the same way I’d done it in the 1980s: from printed books and papers, and by using online and printed abstracting systems. Here’s part of a “search” from 1991 for papers with the keyword “automata”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img1.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='328' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By the end of writing the NKS book I’d <a href='https://datarepository.wolframcloud.com/resources/Entity-Store-of-Books-in-Stephen-Wolframs-Library' target=_blank rel=noopener>accumulated nearly 5000 books</a>, a few of them pictured here in their then-habitat circa 1999 (complete with me at my I’ve-been-on-this-project-too-long lifetime-maximum weight):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img2.png" alt='Click to enlarge' title='Click to enlarge' width='355' height='494' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I had an online catalog of all my books, which I <a href='https://datarepository.wolframcloud.com/resources/530eb09e-4e71-4493-8983-157089aeb917/' target=_blank rel=noopener>put online</a> soon after the NKS book was published. I also had file cabinets filled with more than 7000 papers. Perhaps it might have been nice when the NKS book was published to be able to say in a kind of traditional academic style “here are the ‘citations’” (and, finally, 20 years later we’re about to be able to actually do that). But at the time it wasn’t the simple citations I wanted, or thought would be useful; it was the narrative I could piece together from them. </p>
<p>And sometimes the papers weren’t enough, and I had to make requests from document archives, or actually interview people. It was hard work, with a steady stream of surprises. For example, in <a href='https://www.wolframscience.com/nks/index/u/?search=Ulam'>Stan Ulam</a>’s archives we found a (somewhat scurrilous) behind-the-scenes interaction about me. And after many hours of discussion <a href='https://www.wolframscience.com/nks/index/con-cp/?search=Conway'>John Conway</a> admitted to me that his usual story about the <a href='https://www.wolframscience.com/nks/notes-2-3--history-of-cellular-automata/'>origin of the Game of Life wasn&#8217;t correct</a>—though I at least found the true story much more interesting (even if some mystery still remains). There were times when the things I wanted to know were still entangled in government or other secrecy. And there were times when people had just outright forgotten, often because the things I now cared about just hadn’t seemed important before—and now could only be recovered by painstakingly “triangulating” from other recollections and documents.</p>
<p>There were so many corners to the scholarship involved in creating the NKS book. One memorable example was what we called the “People Dates” project. I wanted the <a href='https://www.wolframscience.com/nks/index/names/'>index to include</a> not only the name of every person I mentioned in the book, but also their dates, and the primary country or countries in which they worked, as in “Wolfram, Stephen (England/USA, 1959&#8211; ).”</p>
<p>For some people that information was straightforward enough to find. But for other people there were challenges. There were 484 people altogether in the index, with a roughly exponentially increasing number born after about 1800: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img3.png" alt='Click to enlarge' title='Click to enlarge' width='465' height='237' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section13img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For ones who were alive we just sent them email, usually getting helpful (if sometimes witty) responses. In other cases we had to search government records, ask institutions, or find relatives or other personal contacts. There were lots of weird issues about <a href='https://www.wolframscience.com/nks/notes-0-1--people-in-the-index/'>transliterations, historical country designations, and definitions of &#8220;worked in&#8221;</a>. But in the end we basically got everything (though for example <a href='https://www.wolframscience.com/nks/index/s-sg/?search=Sch%C3%B6nfinkel'>Moses Schönfinkel</a>’s date of death remained a mystery, as it does even now, after all <a href='https://writings.stephenwolfram.com/2021/03/a-little-closer-to-finding-what-became-of-moses-schonfinkel-inventor-of-combinators/'>my recent research</a>). </p>
<p>Most of the historical research I did for the NKS book wound up in notes at the back of the book. But of all the 1350 notes spread over 348 small-print pages, only <a href='https://www.wolframscience.com/reference/notes/'>102 were in the end historical</a>. The other notes covered a remarkable range of subject matter. They provided background information, technical details and additional results. And in many ways the notes represent the highest density of information in the NKS book—and I, for example, constantly find myself referring to them, and to their pithy (and, I think, rather clear) summaries of all sorts of things.</p>
<p>When I was working on the book there were often things I thought I’d better figure out, just in case they were relevant to the core narrative of the book. Sometimes they’d be difficult things, and they’d take me—and my computers—days or even weeks. But quite often what came out just didn’t fit into the core narrative of the book, or its main text. And so the results were relegated to notes. Maybe there’ll just be one sentence in the notes making some statement. But behind that statement was a lot of work. </p>
<p>Many times I would have liked to have had “notes to the notes”. But I restrained myself from adding yet more to the project. Even though today I’ve sometimes found myself writing <a href='https://writings.stephenwolfram.com/2021/03/after-100-years-can-we-finally-crack-posts-problem-of-tag-a-story-of-computational-irreducibility-and-more/'>even hundreds of pages</a> to expand on what in the NKS book is just a note, or <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>even a part of a note</a>.</p>
<p>The 1990s spanned the time from the very beginning of the web to the point where the web had a few million pages of content. And by the later years of the project I was making use of the web whenever I could. But often the background facts I needed for the notes were so obscure that there was nothing coherent about them on the web—and in fact even today it’s common for the notes to the NKS book to be the best summaries to be found anywhere. </p>
<p>I figured, though, that the existence of the web could at least “get me off the hook” on some work I might otherwise have had to do. For example, I <a href='https://www.wolframscience.com/nks/notes-0-1--citations-and-references/'>didn&#8217;t think there was any point in giving explicit citations to documents</a>. I made sure to include relevant names of people and topics. Then it seemed as if it’d be much better just to search for those on the web, and find all relevant documents, than for me to do all sorts of additional scholarship trying to pick out particular citations that then someone might have to go to a library to look up. </p>
<h2 id='finishing-the-book'>Finishing the Book</h2>
<p>I’m not sure when I could say that the finishing of the NKS book finally seemed in sight. We’d been making bound book mockups since early 1994. Looking through them now it’s interesting to see how different parts gradually came together. In July 1995, for example, there was already a section in <a href='https://www.wolframscience.com/nks/chap-9--fundamental-physics/'>Chapter 9</a> on &ldquo;<a href='https://www.wolframscience.com/nks/chap-9--fundamental-physics#sect-9-6--the-nature-of-space'>The Nature of Space</a>&rdquo;, but it was followed by a section on the “Nature of Time” that was just a few rough notes. There’s a hiatus in mockups in 1996 (when I was working on Mathematica 3.0) but when the mockups pick up again in January 1997—now bound in three volumes—there’s a section on “The Nature of Time” containing an early (and probably not very good) idea based on <a href='https://www.wolframscience.com/nks/chap-9--fundamental-physics#sect-9-11--uniqueness-and-branching-in-time'>multiway systems</a> that I’d long since forgotten (later “The Nature of Time” section would be broken into different sections): </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img1.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='416' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Already in 1997 there’s a very rough skeleton of <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Chapter 12</a>—with a fairly accurate collection of section headings, but just 18 pages of rather rough notes as content. Meanwhile, there’s a post-Chapter-12 “Epilog” that sprouts up, to be dropped only late in the project (see below). Chapter 12 begins to “bulk up” in late 1999, and in 2000 really “takes off”, for example adding the long section on &ldquo;<a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-9--implications-for-mathematics-and-its-foundations'>Implications for the Foundations of Mathematics</a>&rdquo;. At that point our rate of making book mockups began to pick up. We’d been indicating different mockups with dates and colored labeling (“the banana version”, etc.) But, finally, dated February 14, 2001, there’s a version labeled (in imitation of software release nomenclature) “Alpha 1”.</p>
<p>And by then I was starting to make serious use of the machinery for doing large projects that we’d developed for so many years at Wolfram Research. The “NKS Project” started having project managers, build systems and internal websites (yes, with garish web colors of the time):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img2.png" alt='Click to enlarge' title='Click to enlarge' width='574' height='421' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We’d had the source for the book in a source control system for several years, but as far as I was concerned the ultimate source for the book was my filesystem, and a specific set of directories that, yes, are still there in my filesystem all these years later: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img3.png" alt='Click to enlarge' title='Click to enlarge' width='543' height='353' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Everything was laid out by chapter and section. <span class="input">Text</span> contained the FrameMaker files. <span class="input">Notebooks</span> contained the source notebooks for all the diagrams (with long-to-compute results pre-stored in <tt>Results</tt>):</p>
<p></a></p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img4.png" alt='Click to enlarge' title='Click to enlarge' width='418' height='402' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The workflow was that every diagram was created in Wolfram Language, then saved as an EPS file. (<a href="https://reference.wolfram.com/language/ref/format/EPS.html">EPS or &#8220;Encapsulated PostScript&#8221;</a> was a forerunner of <a href="https://reference.wolfram.com/language/ref/format/PDF.html">PDF</a>.) And gradually, over the course of years, more and more EPS files were generated, here reconstructed in the order of their generation, starting around 1994:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/3-eps-array-@2x.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/3-eps-array-@2x.png" alt='Click to enlarge' title='Click to enlarge' width='645' height='682' /></a></p>
<p>In creating all these EPS files, there was lots of detailed tweaking done, for example in the exact (programmatically specified) sizes for the images given in the files.  We&#8217;d built up a whole diagram-generating system, with all sorts of detailed standards for sizings and spacings and so on. And several times—particularly as a result of discovering quirks in the printing process—we decided we had to change the standards we were using. This could have been a project-derailing disaster. But because we had everything programmatically set up in notebooks it was actually quite straightforward to just go through and automatically regenerate the thousand or so images in the book.</p>
<p>Each EPS file that was generated was put in a <tt>Graphics</tt> directory, then imported (“by reference”) by FrameMaker into the appropriate page of the book. And the result was something that looked almost like the final NKS book. But there were two “little” wrinkles, that ended up leading to quite a bit of technical complexity.</p>
<p>The first had to with the fragments of Wolfram Language code in the notes. At the time it was typical to show code in a simple monospaced font like Courier. But I thought this looked ugly—and threw away much of the effort I’d put into making the code as elegant and readable as possible. So I decided we needed a different code font, and in particular a proportionally spaced sans serif one. But there was a technical problem with this. Many of the characters we needed for the code were available in any reasonable font. But some characters were special to the Wolfram Language—or at least were characters that for example we’d been responsible for being included in the <a href='https://home.unicode.org/' target=_blank rel=noopener>Unicode standard</a>, and weren’t yet widely supported in fonts. </p>
<p>And the result was that in addition to all the other complexities of producing the book we had to design our own font, just for the book:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img5.png" alt='Click to enlarge' title='Click to enlarge' width='567' height='394' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But that wasn’t all. In Mathematica 3.0 we had invented an elaborate typesetting system which carefully formatted Wolfram Language code, breaking it into multiple lines if necessary. But how were we to weave that nicely formatted code into the layouts of pages in FrameMaker? In the end we <a href='https://www.wolframscience.com/nks/notes-0-1--book-production-system/'>had to use Wolfram Language to do this</a>. The way this worked is that first we exported the whole book from FrameMaker in “Maker Interchange Format” (MIF). Then we parsed the resulting MIF file in Wolfram Language, in effect turning the whole book into a big symbolic expression. At that point we could use whatever Wolfram Language functionality we wanted, doing various pattern-matching-based transformations and typesetting each of the pieces of code. (We also handled various aspects of the index at this stage.) Then we took the symbolic expression, converted it to MIF, and imported it back into FrameMaker.</p>
<p>In the end the production of the book was handled by an automated build script—just like the ones we used to build Mathematica (the full build log is 11 pages long):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img6.png" alt='Click to enlarge' title='' width='' height='228' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But, OK, so by early 2001 we were well on the way to setting all these technical systems up. But there was more to do in “producing the book”—as indicated for example by the various column headings in the project management internal website. “Graphics regenerated” was about regenerating all the EPS files with the final standards for the book. “Microtweaking” was about making sure the placement of all the graphics was just right. Then there were various kinds of what in our company we call “document quality assurance”, or DQA—checking every detail of the document, from grammar and spelling to overall consistency and formatting. (And, yes, <a href='https://www.wolframscience.com/nks/notes-0-1--writing-style/'>developing a style guide that worked with my sometimes-nonstandard</a>—but I believe highly sensible!—writing conventions.)</p>
<p>In addition to checking the form of the book, there was also the question of checking the content. Much of that—including extensive fact checking, etc.—had gone on throughout the development of the book. But near the end one more piece of checking had to do with the code that was included in the book itself. Our company has had a long history of sophisticated software quality assurance (“SQA”), and I applied that to the book—for example having extensive tests written for all the code in the book.</p>
<p>Much like for software, once we reached the first “Alpha version” of the book we also started sending it out to external “alpha testers”—and got a modest but helpful collection of responses. We had several pages of instructions for our “testers” (that we called “readers” since, after all, this was a book):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img7.png" alt='Click to enlarge' title='Click to enlarge' width='527' height='514' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After the “Alpha 1” version of the book in February 2001, there followed six more “Alpha” versions. In “Alpha 1” there were still XXXX’s scattered around the text, alignment and other issues in graphics—and some of the more “philosophical” sections in the book were just in note form, crossed out with big X’s in the printout. But in the course of 2001 all these issues got ironed out. And on January 15, 2002, I finished and dated the preface.</p>
<p>Then on February 4, 2002, we produced the &#8220;Beta 1&#8221; version of the book—and began to make final preparations for its printing and publication. It had been a long road, illustrated by the sequence of intermediate versions we’d generated, but we were nearing the end:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img8.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img8.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='254' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section14img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='the-joy-of-indexing'>The Joy of Indexing</h2>
<p>I like indices, and the index to the NKS book—with its 14,967 entries—is my all-time favorite. In these times of ubiquitous full-text search one might think that a book index would just be a quaint relic of the past (and indeed some younger people don’t even seem to know that most books have indices!). But it definitely isn’t with the NKS book. And indeed when I want to find something in the book, the place I always turn first is the <a href='https://www.wolframscience.com/nks/index/0/'>index (now online)</a>. </p>
<p>I started creating the index to the NKS book in the spring of 1999, and finished it right before the final version of the book was produced in February 2002. I had already had the experience of creating indices to five editions of <em>The Mathematica Book</em>, and had seen the importance of those indices in people’s actual use of Mathematica. I had developed various <a href='https://www.wolframscience.com/nks/notes-0-1--index/'>theories about how to make a good index</a>—which sometimes differed from conventional wisdom—but seemed to work rather well. </p>
<p>A good index, I believe, should list whatever terms one might actually think of looking up, regardless of whether it’s those literal terms—or just synonyms for them—that appear in the text. If there’s a phrase (like “<a href='https://www.wolframscience.com/nks/index/f-fli/?search=finite+automata'>finite automata</a>”) explicitly list it in all the ways people might think of it (“<a href='https://www.wolframscience.com/nks/index/f-fli/?search=finite+automata'>finite automata</a>”, “<a href='https://www.wolframscience.com/nks/index/f-fli/?search=finite+automata'>automata, finite</a>”), rather than having some “theory” (that the users of the index are very unlikely to know) about how to list the phrase. And perhaps most important, generously include subterms, “subdividing” until each individual entry references at most a few pages. Because when you’re looking for something, you want to be able to zero in on a particular page, not be confronted with lots of “potentially relevant” pages. And well-chosen subterms immediately give a kind of pointillistic map of the coverage of some area.</p>
<p>I’ve always enjoyed creating indices. For me it’s an interesting exercise in quickly organizing knowledge and identifying what’s important, as well as engaging in rapid “what are different ways to say that?” association. (And, yes, a similar skill is needed in linguistic curation for the <a href='https://www.wolfram.com/natural-language-understanding/'>natural language understanding system</a> of <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a>.) For the NKS book (and other indices) my basic strategy was to go through the book page by page, adding tags for index entries. But what about consistency? Did I just index “<a href='https://www.wolframscience.com/nks/index/f-fli/?search=Fig+leaves'>Fig leaves</a>” in one place, and somewhere else index “Leaves, fig” instead? We built Wolfram Language code to identify such issues. But eventually I just generated the alphabetical index, and read through it. And then had Wolfram Language code that could realign tags to correct the source of whatever fixes I made—which most often related to subterms.</p>
<p>At first I broke the index into an ordinary “Index” and an “Index of Names”. But what counted as a “name”? Only a person’s name? Or also a place name? Or also “rule 30”? Within a couple of months I had combined everything into an “Index of words, names, concepts and systems”—which soon became headed just “Index” (with a pointer to <a href='https://www.wolframscience.com/nks/notes-0-1--index/'>a note about what was in it</a>). </p>
<p>The final index is remarkably eclectic—reflecting of course the content of the book. After “<a href='https://www.wolframscience.com/nks/index/f-fli/?search=Field+theory+(Physics)'>Field theory (physics)</a>” comes “<a href='https://www.wolframscience.com/nks/index/f-fli/?search=Fields+(agricultural)'>Fields (agricultural)</a>”, followed by “<a href='https://www.wolframscience.com/nks/index/f-fli/?search=Fifths+(musical+chords)'>Fifths (musical chords)</a>” and so on: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section15img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section15img1.png" alt='Click to enlarge' title='Click to enlarge' width='555' height='614' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section15img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In the end the index—even printed as it was in 4 columns—ran to 80 pages (or more than 6% of the book). It was obviously a very useful index, and it could even be entertaining to read, not only for its eclectic jumps from one term to the next, but also for the unexpected terms that appeared. What’s “<a href='https://www.wolframscience.com/nks/index/f-fli/?search=Flash+photography'>Flash photography</a>” or “<a href='https://www.wolframscience.com/nks/index/f-fli/?search=Flint+arrowheads'>Flint arrowheads</a>” doing there, or “<a href='https://www.wolframscience.com/nks/index/flo-fz/?search=Frogs'>Frogs</a>” for that matter? What do these terms have to do with a new kind of science? </p>
<p>But for all its value, I was a bit concerned that the index might be so long that it finally made the book “too long”. Even without the index the book ran to <a href='https://www.wolframscience.com/nks/p1197--historical-perspectives/'>1197 pages</a>. But why tell people, I thought, that the whole book is really 1280 pages, including the index? If the pages of the index were numbered, then one could immediately see the number of that last page. But why number the pages of an index? Nobody needs to refer to those pages by numbers; if anything, just use the alphabetized terms. So I decided just quietly to omit the page numbers of the index, so we could report the length of the book as 1192 pages.</p>
<h2 id='how-to-publish-a-book'>How to Publish a Book</h2>
<p>OK, so <em>A New Kind of Science</em> was going to be a book. But how was it going to be published? At the time I started writing <em>A New Kind of Science</em> in 1991 the second edition of <em>The Mathematica Book</em> had just been released, and its publisher (Addison-Wesley) seemed to be doing a good job with it. So it was natural to start talking about my new book with the same publisher. I was quite aware that Addison-Wesley was primarily a publisher of textbook-like books, and in fact the particular division of Addison-Wesley that had published <em>The Mathematica Book</em> was more oriented towards monographs and special projects. But the success of <em>The Mathematica Book</em> generated what seemed like good corporate interest in trying to publish my new book.</p>
<p>But how would the details work? There were immediate questions even about printing the book. I knew the book would rely heavily on graphics which would need to be printed well. But to print them how they needed to be printed was expensive. So how would that work financially? (And at that point I didn’t yet even know that the book would also be more than a thousand pages long.) </p>
<p>The basic business model of publishing tends to be: invest up front in making a book, then (hopefully) make money by selling the book. And for most authors, the book can’t happen without that up-front investment. But that wasn’t my situation. I didn’t need an advance to support myself while writing the book. I didn’t need someone to pay for the production of the book. And if necessary I could even make the investment myself to print the books. But what I thought I needed from a publisher was access to distribution channels. I needed someone to actually sell books to bookstores. I needed there to be a sales team that had relationships with bookstore chains, and that would do things like actually visit bookstores and get books into them.</p>
<p>And in fact quite a lot of the early discussion about the publishing of the book centered around how salespeople would present it. How would the book be positioned relative to the well-known “popular science” books of the time? (That positioning would be key to the size of initial purchases bookstores might make.) What special ways might the salespeople make the book memorable? Could we get enough textile cone shells that the salespeople could drop one off at every bookstore they visited? (The answer, it was determined, was yes: in the <a href='https://www.wolframscience.com/nks/notes-8-7--collecting-shells/'>Philippines such shells were quite plentiful</a>.)</p>
<p>But how exactly would the numbers work? Bookstores took a huge cut (often above 50%). And if the book was expensive to print, that didn’t leave much of a margin. At least at the time, the publishing industry was very much based on formulas. If you spend $x to print a book, you need to spend $y on marketing, and you pay the author $y (yes, same y) as an advance on royalties. For the author, the advance serves as a kind of guarantee of the publisher’s effort—since unless the book sells, the publisher just loses that money.</p>
<p>Well, I most definitely wanted a guarantee that the publisher would put effort in. But I didn’t need or want an advance; I just wanted the publisher to put as much as possible into distribution. Around and around it went, trying to see how that might work. Exasperated, I found an expert on book deals. They didn’t seem to be able to figure it out either. And I began to think: perhaps I should go to a different publisher, maybe one more familiar with widely distributed books.</p>
<p>It’s typical for authors not to interact directly with such publishers, but instead to go through an agent. In principle that allows authors not to have to exercise business savvy, and publishers not to be exposed to the foibles of authors. But I just wanted to make what—at least by tech industry standards—was a very simple deal. One agent I’d known for a while insisted that the key was to maximize the advance: “If the book earns out its advance [i.e. brings in more royalties from actual sales than were paid out up front], I haven’t done my job.” But that wasn’t my way of doing business. I wanted both sides in any deal to do well. </p>
<p>Then there was the question of which publisher would be the right one. “Sell to the highest bidder”, was the typical advice. But what I cared about was successful book distribution, not how much a publisher might (perhaps foolishly) spend to get the book. Particularly at the time, it was a very clubby but strangely dysfunctional industry, full of belief in a kind of magic touch, but also full of stories of confusion and failure. Still, I thought that access to distribution channels was important enough to be worth navigating this.</p>
<p>And by 1993 quite a bit of time had been spent on discussions about publishing the book. A particular, prominent New York publisher had been identified, and the process of negotiating a contract with them was underway. From a tech industry point of view it all seemed quite Victorian. It started from a printed (as in, on a printing press) 70-page contract that seemed to date from 20 years earlier. Though after not very long, essentially every single clause had been crossed out, and replaced by something different. </p>
<p>An effort to “show what value they could bring” led to the incident about cover designs mentioned above. And then there was the story about printing, and printing costs. The terms of our potential deal made it quite important to know just how much it would cost to print the book. So to get a sense of that we got quotes from some of our usual printing vendors (and, yes, in those days before the web, a software company like ours did lots of printing). The publisher insisted that our quotes were too high—and that they could print the book much more cheaply. My team was skeptical. But at the center of this discussion was an important technical issue about how the book would actually be printed.</p>
<p>Most widely distributed (&#8220;trade&#8221;) books are printed on so-called web presses—which are giant industrial machines that take paper from a roll and move it through at perhaps 30 mph. (The term “web” here refers to the “web of paper” on its path through the machine, not the subsequently invented World Wide Web.) A web press is a good way to print a just-read-the-words kind of book. But it doesn’t give one much control for pictures; if everything’s running through at high speed one can’t, for example, carefully inject more ink to deal with a big area of black on a specific page.</p>
<p>And so if one wanted to print a more “art-quality” book one had to use a different approach: a sheet-fed press in which each collection of pages is “manually” set up to be printed separately on a large sheet of paper. Sheet-fed presses give one much more control—but they’re more expensive to operate. The printing quotes we’d got were for sheet-fed presses, because that was the only way we could see printing the book at the quality level we wanted. (I was sufficiently curious about the whole process that I went to watch a print run for something we were printing. In interacting with our potential publisher, I was rather disappointed to discover that none of the editorial team appeared to have ever actually seen anything being printed.)</p>
<p>But in any case the publisher was claiming that they knew better than us, and that they could get the quality we needed on a web press, at a much lower price. They offered to run a test to prove it. We were again skeptical: to do the setup for a web press is an expensive process, and it makes no sense to do it for anything other than a real print run of thousands of books. But the publisher insisted they could do it. And our only admonition was “Don’t show us a result claiming it was made on a web press when it wasn’t!”. </p>
<p>A few weeks went by. Back came the test. “You can’t be serious”, we said. “That’s a sheet from a sheet-fed press; we can see the characteristic registration marks!” I never quite figured out if they thought they could pull the wool over our eyes, or if this was just pure cluelessness. But for me it was basically the last straw. They came back and said “Why don’t we just refactor the contract and give you a really big advance?” “Nope”, I said “you’re profoundly missing the point! We’re done.” And that’s how—in 1995—we came to make the decision to publish <em>A New Kind of Science</em> “ourselves”.</p>
<p>But when I say “ourselves” there was quite a bit more to that story. Back at the beginning of 1995 we were thinking about the upcoming third edition of <em>The Mathematica Book</em>, and realizing that we needed to re-jigger its publishing arrangements. And while the machinations with publishers about the NKS book had been a huge waste of time, they had helped me understand more about the publishing industry—and made me decide it was time for us to create our own publishing “imprint”, <a href='https://www.wolfram-media.com/'>Wolfram Media</a>.</p>
<p><a href='https://web.archive.org/web/19961222151452/https://wolfram-media.com' target=_blank rel=noopener>Its website from 1996</a> (I never liked that logo!) highlights our first title—the co-published third edition of <em>The Mathematica Book</em>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img1.png" alt='Click to enlarge' title='Click to enlarge' width='484' height='588' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This was soon joined by other titles, like our <a href='https://www.wolfram-media.com/products/graphica1.html'>heavily illustrated<em> Graphica </em>books</a>. But it wasn’t until 1999 that I began to think more seriously about the final publishing of the NKS book. In the fall of 1999 we duly listed the book with the large bookstore chains and book distributors, as well as with the already-very-successful Amazon. And in late 2000 we started touting the book on our <a href='https://web.archive.org/web/20001018202031/https://www.wolfram-media.com' target=_blank rel=noopener>now-more-attractive website</a> as “A major release coming soon&#8230;”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img2.png" alt='Click to enlarge' title='Click to enlarge' width='564' height='456' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Particularly in those days, the typical view was that most of the sales of a book would happen in the first few weeks after it was published. But—as we’ll discuss later—printing a book (and especially one like the NKS book) takes many weeks. So that creates a tricky situation, in which a publisher has to make a high-stakes decision about how many books to print at the beginning. Print too few books and at least for a time, you won’t be able to fill orders, and you’ll lose out on the initial sales peak. Print too many books and you’ll be left with an inventory of unsold books—though the more books you print in a single print run, the more you’ll spread the initial setup cost over more books, and the lower the cost of each individual book will be.</p>
<p>Bookstores were also an important part of the picture. Books were at the time still predominantly bought through people physically browsing at bookstores. So the more copies of a book a bookstore had, the more likely it was that someone would see it there, and buy it. And all this added up to a big focus of publishing being on the size of the initial orders that bookstores made.</p>
<p>How was that determined? Mostly it was up to the buyers at bookstores and bookstore chains: they had to understand enough about a book to make an accurate prediction of how many they’d be able to sell. There was a complicated dance through which publishers signaled their expectations, saying for example “X copy initial print run”, “X-city promotional tour”, “$X promotional budget”. But in the end it was a very person-to-person sales process, often done by traveling-around-the-country salespeople who’d developed relationships with book buyers over the course of many years.</p>
<p>How were we going to handle this? It certainly helped that by late 2000 there were starting to be <a href='https://www.forbes.com/asap/2000/1127/162.html' target=_blank rel=noopener>lengthy news articles</a> anticipating the book. And it also helped that one could see that the book was gaining momentum on Amazon. But would a sales manager we had who was used to selling software be able to sell books? At least in this case the answer was yes, and by the end of 2001 there were starting to be substantial orders from bookstores.</p>
<p>By the time I finished writing the book at the beginning of 2002 we were in full “book-publishing” mode. There were still lots of issues to resolve. How would we handle distribution outside the US? (We’d actually had a UK co-publisher lined up but we eventually gave up on them.) How would we reach the full range of independent bookstores? And so on. Looking at my archives I find mail from April 2002 in which I was contacting Jeff Bezos about a practical issue with Amazon; Jeff responded that he “couldn’t wait to read [the book]”, noting that “For a serious book like yours, we often account for a substantial fraction of sales.” He was right—and in fact the NKS book would reach the #1 bestseller slot on Amazon.</p>
<p>By the beginning of 2002 we’d had a design for the front cover of the NKS book for six years. But what about the back cover? It’s traditional to put quotes (“blurbs”) on the backs of books that people will browse in bookstores. So, in February 2002 we sent a few draft copies of the book to people we thought might give us interesting quotes. Probably the most charming response was Arthur C. Clarke’s report of the delivery of the book to his house in Sri Lanka:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img3.png" alt='Click to enlarge' title='Click to enlarge' width='444' height='191' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A few days later, he emailed again “Well, I have &lt;looked&gt; at (almost) every page and am still in a state of shock. Even with computers, I don’t see how you could have done it-”, offering the quote “Stephen’s magnum opus may be the book of the decade, if not the century”, then adding “Even those who skip the 1200 pages of (extremely lucid) text will find the computer-generated illustrations fascinating. My friend HAL is very sorry he hadn’t thought of them first&#8230;”</p>
<p>Other quotes came in too. At his request, I’d sent <a href='https://writings.stephenwolfram.com/2011/10/steve-jobs-a-few-memories/'>Steve Jobs</a> a copy of the book—and I asked if he’d like to provide a quote. He responded that he thought I really shouldn’t have quotes on the back of the book. “Isaac Newton didn’t have quotes; nor should you.” And, yes, Steve had a point. I was trying to write a book that would have long-term value; it didn’t really make sense to have moment-of-publication quotes printed on it.</p>
<p>So—feeling bad for having solicited quotes in the first place—we dropped them from the back cover, instead just putting <a href='https://www.wolframscience.com/reference/backcoverimages/'>images from the book that we thought would intrigue people</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img4.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='325' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Still, my team did use Arthur C. Clarke’s quote on the publishing-industry-obligatory ad we ran in <em>Publisher’s Weekly</em> on April 15 as part of a final sprint to increase up-front orders from bookstores:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img6.png" alt='Click to enlarge' title='Click to enlarge' width='402' height='542' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At least the way the book trade was in those days, there was a whole arcane dance to be done in publishing a book—with carefully orchestrated timing of book reviews, marketing initiatives at bookstores, and so on. My archives contain a whole variety of pieces related to that (many of which I don’t think I saw at the time). One of the more curious (whose purpose I don’t now know) involves a perhaps-not-naturally-colored lizard that could be viewed as having escaped from <a href='https://www.wolframscience.com/nks/p426--biological-pigmentation-patterns/'>page 426</a> of the book:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img7.png" alt='Click to enlarge' title='Click to enlarge' width='486' height='405' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section16img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='how-are-we-going-to-print-the-book?'>How Are We Going to Print the Book?</h2>
<p>From the very beginning I was very committed to doing the best we could in actually printing the book. My original discoveries about rule 30 and its complexity had originally <a href='https://www.wolframscience.com/nks/notes-2-3--my-work-on-cellular-automata/'>crystallized back in 1984 when I&#8217;d first been able to produce a high-resolution image</a> of its behavior on a laser printer. Book printing allowed still vastly higher resolution, and I wanted to make use of that to make the NKS book serve if nothing else as a “printed testament” to the idea that complexity can be generated from simple computational rules.</p>
<p>Here’s what a printout of rule 30 made on a laser printer looks like under a microscope (this printout is from 1999, but it basically looks the same from a typical black-and-white laser printer today):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img1.png" alt='Click to enlarge' title='Click to enlarge' width='555' height='274' /></a></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s what the highest-resolution picture of rule 30 from the printed NKS book looks like (and, yes, coincidentally that picture occurs on <a href='https://www.wolframscience.com/nks/p30--how-do-simple-programs-behave/'>page 30 of the book</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img2.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='469' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can see the grain of the paper, but you can also see crisp boundaries around each cell. To give a sense of scale, here’s a word from the text of the book, shown at the same magnification:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img3.png" alt='Click to enlarge' title='Click to enlarge' width='555' height='274' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>To achieve the kind of crispness we see in the rule 30 picture (while, for example, keeping the book of manageable size and weight) was quite an adventure in printing technology. But the difficulties with pure black and white (as in this picture of rule 30) paled in comparison to those involved with gray scales.</p>
<p>The fundamental technology of printing is quite binary: there’s either ink at a particular place on a page, or there isn’t. But there’s a standard method for achieving the appearance of gray, which is to use halftoning, based essentially on an array of dots of different sizes. Here’s an example of that from the photograph of a tiger on <a href='https://www.wolframscience.com/nks/p426--biological-pigmentation-patterns/'>page 426</a> of the NKS book: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img4.png" alt='Click to enlarge' title='Click to enlarge' width='470' height='375' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But one feature of photographs is that they mostly involve smooth gradations of gray. In the NKS book, however, there are lots of cases where there are tiny cells with different gray levels right next to each other.</p>
<p>Here’s one example (from <a href='https://www.wolframscience.com/nks/p157--continuous-cellular-automata/'>page 157</a>—which we’ll encounter again later): </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img5.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='333' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s another example with slightly smaller cells (<a href='https://www.wolframscience.com/nks/p640--computations-in-cellular-automata/'>page 640</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img6.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='362' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a nice example based from a 3D graphic (<a href='https://www.wolframscience.com/nks/p180--cellular-automata/'>page 180</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img7.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='378' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s one where the gray cells are so small that the halftoning gets mixed up with the actual boundaries of cells (<a href='https://www.wolframscience.com/nks/p67--more-cellular-automata/'>page 67</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img8.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img8.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='275' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But in general to achieve well-delineated patches of gray there have to be a decent number of halftone dots inside each patch. And this is one place where we were pushing the boundaries of printing technology for the NKS book. Here’s an image from a 1995 print test (and, yes, we were testing printing as early as 1992):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img9.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img9.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='332' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This is a more straightforward case, because we’re dealing with exactly 50% gray. But look at the difference for the <a href='https://www.wolframscience.com/nks/p77--mobile-automata/'>same picture in the final NKS book</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img10.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img10.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='353' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We slightly changed our standard for how big the mobile-automaton-active-cell dots should be. But the main thing to notice is that the halftone checkerboard in each gray cell is roughly twice as fine in the final version. In printing terminology, the 1995 test used a standard “100-line screen”; the final NKS book used a “175-line screen” (i.e. basically 175 dots per inch).</p>
<p>The importance of this is even more obvious when we start looking not just at gray cells, but also at gray lines. Here’s the 100-line-screen print test:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img11.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img11.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='396' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s the same picture in the final book:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img12.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img12.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='396' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the picture that first introduces rule 30:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img13.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img13.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='299' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And a big issue was: how thin can the gray lines be, while not filling in, and while still looking gray? That was a difficult question, and was only answered by lots of print testing. One of the main points was: even if you effectively specify dots of a certain size, what will be the actual sizes of dots formed when the ink is absorbed into the paper? And similarly: will the ink from black cells spread into the area of the gray line you’re trying to print between them? In printing it’s typical to talk about “dot gain”. If you think you’re setting up dots to give a certain gray level, what will be the actual gray level you’ll get when those dots are made of ink on paper?</p>
<p>We were constantly testing things like this, with different printing technology, different paper and so on:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img14.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img14.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='389' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We used a “densitometer” (yes, this was before modern digital cameras) to measure the actual gray level, and deduce the dot gain function. And we tested things like how thin lines could be before they wouldn’t print.</p>
<p>In halftoning, one effectively applies a global “screen” (as in, something with an array of holes in it, just like in pre-digital printing) to determine the positions of dots. We considered effectively setting up our own <a href='https://www.wolframscience.com/nks/notes-10-7--halftoning/'>dot placement algorithm</a>, that would for example better align with cells in something like a cellular automaton. But tests didn’t show particularly good behavior, and we soon reverted to considering the “traditional approach”, though with various kinds of tweaking. </p>
<p>Should the halftone dots be round, or elliptical? What should the angle of the array of dots be (it definitely needed to avoid horizontal and vertical directions)? As this manifest indicates, we did many tests:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img15.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img15.png" alt='Click to enlarge' title='Click to enlarge' width='329' height='439' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img15_copy.txt">
					<span class='close' id='15_out'>&amp;#10005</span></p>
<pre class='text' id='15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The final conclusion was: <a href='https://www.wolframscience.com/nks/colophon/'>round dots, 175-line screen, 45° angle</a>. But it took quite a while to get there.</p>
<p>But, OK, so we had a pipeline that started with Wolfram Language code, and eventually generated PostScript. Most of the complexity we’ve just been discussing came in converting that PostScript to the image that would actually be printed. And in imaging technology jargon, that’s achieved by a RIP, or raster image processor, that takes the PostScript and generates a bitmap (normally represented as a TIFF) at an appropriate resolution for whatever will finally render it.</p>
<p>In the 1990s the standard thing to do was first to render the bitmap as a negative onto film. And my archives have tests of this that we did in 1992, here again shown under a microscope:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img16.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img16.png" alt='Click to enlarge' title='Click to enlarge' width='408' height='327' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img16_copy.txt">
					<span class='close' id='16_out'>&amp;#10005</span></p>
<pre class='text' id='16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Everything looks perfectly clean. And indeed printing this purely photographically still gives a perfectly clean result:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img17.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img17.png" alt='Click to enlarge' title='Click to enlarge' width='408' height='327' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img17_copy.txt">
					<span class='close' id='17_out'>&amp;#10005</span></p>
<pre class='text' id='17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But it gets much more complicated when one actually prints this with ink on a printing press:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img18.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img18.png" alt='Click to enlarge' title='Click to enlarge' width='408' height='327' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img18_copy.txt">
					<span class='close' id='18_out'>&amp;#10005</span></p>
<pre class='text' id='18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The basic way the printing is done is to (“lithographically”) etch a printing plate which will then be inked and pressed onto paper to print each copy. Given that one already has film, one can make the plate essentially photographically—more or less the same way microprocessor layouts and many other things are made. But by the beginning of the 2000s, there was a new technology: direct-to-plate printing, in which an (ultraviolet) laser directly etches the plate (a kind of much-higher-resolution “plate analog” of what a laser printer does). And in order to get the very crispest results, direct-to-plate printing was what we used for the NKS book.</p>
<p>What’s the actual setup for printing? In the sheet-fed approach that we were using, one combines multiple pages (in our case 8) as a “signature” to be printed from a single plate onto a single piece of paper. Here’s a (yes, rather-unremarkable-looking) actual plate that was used for the first printing of the NKS book:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img19.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img19.png" alt='Click to enlarge' title='Click to enlarge' width='573' height='425' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img19_copy.txt">
					<span class='close' id='19_out'>&amp;#10005</span></p>
<pre class='text' id='19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s an example of a signature printed from it, with pages that will subsequently be cut and folded:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img20.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img20.png" alt='Click to enlarge' title='Click to enlarge' width='573' height='368' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img20_copy.txt">
					<span class='close' id='20_out'>&amp;#10005</span></p>
<pre class='text' id='20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Under a microscope, the plate looks pretty much like what will finally be printed onto the paper:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img21.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img21.png" alt='Click to enlarge' title='Click to enlarge' width='475' height='256' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img21_copy.txt">
					<span class='close' id='21_out'>&amp;#10005</span></p>
<pre class='text' id='21_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But now the next big issue is: what kind of paper should one use? If the paper is glossy, ink won’t spread on it, and it’s easier to get things crisp. But adding a glossy coating to paper makes the paper heavier and thicker, and we quickly determined that it wasn’t going to be practical to print the NKS book on glossy paper. Back in the 1980s it had become quite popular to print books on paper that looked good at first, but after a few years would turn yellow and disintegrate. And to avoid that, we knew we needed acid-free paper.</p>
<p>Any particular kind of paper will come in different “weights”, or thicknesses. And the thicker the paper is, the more opaque it will be, and the less see-through the pages of the book will be—but also the thicker the book will be with a given number of pages. At the beginning we didn’t know how long the NKS book would be, and we were looking at comparatively thick papers; by the end we were trying to use paper that was as thin as possible.</p>
<p>Back in 1993 we&#8217;d identified Finch Opaque as a possible type of paper. In 1995 our paper rep suggested as an alternative Finch VHF (“Very High Finish”)—which was very smooth, and was quite bright white. But normally this paper was used in very thick pages. Still, it was possible for the paper mill to produce thinner versions as well. We studied the possibilities, and eventually decided that a 50-lb version (i.e. with the paper weighing 50 lbs per 500 uncut sheets) would be the best compromise between bulk and opacity. So 50-lb Finch VHF paper is what the NKS book is printed on.</p>
<p>Paper, of course, is made from trees. And as I’ll explain below, during the publishing of the NKS book, I became quite aware of the physical location of the trees from which the paper for the NKS book was made: they were in upstate New York (in the Adirondacks). At the time, though, I didn’t know more details about the trees. But a few years ago I learned that they were <a href='https://www.wolframalpha.com/input?i=eastern+hemlock'>eastern hemlock trees</a>. And it turns out that these coniferous trees are unusual in having long fibers—which is what allows the paper to be as smooth as it is. Talking about hemlock makes one think of Socrates. But no, hemlock the poison comes from the <a href='https://www.wolframalpha.com/input?i=poison+hemlock'>&#8220;poison hemlock&#8221; plant</a> (<em><a href='https://www.wolframalpha.com/input?i=Conium+maculatum'>Conium maculatum</a></em>), which is unrelated to <a href='https://www.wolframalpha.com/input?i=tsuga'>hemlock trees</a> (which didn’t grow in Europe and seem to have gotten their hemlock name only fairly recently, and for rather tenuous reasons). So, no, the NKS book is not poisonous!</p>
<p>Once signatures are printed, the next thing is that the signatures have to be folded and cut—in the end forming little booklet-like objects. And then comes the final step: binding these pieces together into the finished book. By the mid-1990s <em>The Mathematica Book</em> had given us quite a bit of experience with the binding of “big books”—and it wasn’t good. Many copies of multiple versions of <em>The Mathematica Book</em> (yes, not printed by us) had basically self-destructed in the hands of customers. </p>
<p>How were we going to be sure this wouldn’t happen for the NKS book? First, many books—including some versions of <em>The Mathematica Book</em>—were basically “bound” by just gluing the signatures into the “case” of the book (with little fake threads added at the ends, for effect). But to robustly bind a big book one really has to actually sew the signatures to the case, and a standard way to do this is what’s called Smythe sewing. And that’s what we determined to use for the NKS book.</p>
<p>Still, we wanted to test things. So we sent books to a book-testing lab, where the books were “tumbled” inside a steel container, 1200 times per hour, “impacting the tail, binding edge, head and face” of each book 4800 times per hour. After 1 hour, the lab reported “spine tight and intact”. After 2 hours “text block detached from cover”. But that’s basically only after doing the equivalent of dropping the book thousands of times!</p>
<p>As we approached the final printing of the NKS book, there were other decisions to be made. The <a href='https://www.wolframscience.com/nks/notes-0-1--endpapers/'>endpapers</a> were going to have a rule 30 pattern printed on them. But what color should they be? We considered several, picking the goldenrod in the end (and somehow that color now seems to have become the standard for the endpapers of all books I write):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img22.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img22.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='283' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section17img22_copy.txt">
					<span class='close' id='22_out'>&amp;#10005</span></p>
<pre class='text' id='22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In the late stages of writing the NKS book one of the big concerns was just how long the book would eventually be. We’d figured out the paper, the binding, and so on. And there was one hard constraint: the binding machines that we were going to use could only bind a book up to a certain thickness. With our specs the limit was 80 signatures—or 1280 pages. The main text clocked in at 1197 pages; with front matter, etc. that was 1213 pages. But then there was the index. And I was writing a very extensive index, that threatened to overrun our absolute maximum page count. We formatted the index in 4 columns as small and tight as we thought we could. And in the end it came in just under the wire: the book was 1280 pages, with not a single page to spare. (Somewhat simplifying the story, I’ve sometimes said that after a decade of work on the NKS book, I had to stop because otherwise I was going to have a book that was too long to bind!) </p>
<h2 id='the-great-printing-adventure'>The Great Printing Adventure</h2>
<p>High-quality printing of the kind needed for the NKS book was then—and is now—often done in the Far East. But anticipating that we might need to reprint the book fairly quickly we didn’t consider that an option; it would just take too long to transport books by boat across the Pacific. And conveniently enough, we determined that there was a cost-effective North American alternative: print the book in Canada. And so it was that we chose a printer in Winnipeg, Canada, to print the NKS book.</p>
<p>On February 7, 2002, the files for the book (which were now PDF, not pure PostScript) were transferred (via FTP) to the printer’s computers—a process which took a mere 90 minutes. (Well, it had to be done twice, because of an initial glitch.) But then the next step was to produce “proofs” for the book. In traditional printing, where printing plates were made from film, one could produce the film first, then make a photographic print of this, check it, and only then make the plates. But we were going to be making plates directly. So for us, “proofing” was a more digital process, that involved using a separate device from the one that would actually make the plates. Supposedly, though, “the bits were the bits”, and the results would be the same.</p>
<p>Within a couple of days, the printer had the first proofs made, and a few issues were seen—such as white labels inside black cells simply disappearing. The cause was subtle, though didn’t take a long time to find. Some 3D graphics in the book had generated color PostScript—and in all our tests so far these had just automatically been converted to grayscale. But now the presence of color primitives had made the RIP that was converting from PostScript change its settings—and cause other problems. But soon that was worked around, and generating proofs continued. </p>
<p>By February 14 we had the first batch of proofs in our hands, and my team and I went to work going through them. Everything looked just fine until—ugh—<a href='https://www.wolframscience.com/nks/p157--continuous-cellular-automata/'>page 157</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img1.png" alt='Click to enlarge' title='Click to enlarge' width='530' height='550' /></a></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>That was supposed to be a symmetrical <a href='https://www.wolframscience.com/nks/chap-4--systems-based-on-numbers#sect-4-8--continuous-cellular-automata'>(continuous) cellular automaton</a>! So how could it be different on the two sides? Looking now under a microscope, here are the corresponding places on the two sides:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img2.png" alt='Click to enlarge' title='Click to enlarge' width='576' height='244' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And we can see that somehow on the left an extra column of cells has mysteriously appeared. But where did it come from? We checked the original PostScript. Nope, it wasn’t there. We asked the printer to rerun the proof, and, second time around, it was gone. Very mysterious. But we figured we could go ahead—and in any case we had a tight schedule to meet.</p>
<p>So on February 17 the book designer who’d worked on the project ever since the beginning went to Winnipeg, and on February 18 the book began to be printed.</p>
<p>I wasn’t there (and actually now I wish I’d gone) but a bunch of pictures were taken. After a decade of work all those abstract bits I’d produced were being turned into an actual, physical book. And that took actual industrial work, with actual industrial machines: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img3.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='364' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the actual press that’s about to print a signature of the NKS book (the four “stations” here are set up to print four different colors, but we were only using one of them):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img4.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='364' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s that signature “coming off the press”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img5.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='364' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It really was coming out “hot off the press”—with a machine drying off the ink:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img6.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='364' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Those controls let one change ink flows and pressures to make all the pages come out correctly balanced:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img7.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='364' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Thanks, guys, for checking so carefully:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img8.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img8.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='181' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img9.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img9.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='181' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Pretty soon there were starting to be lots of copies of signatures being printed:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img10.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img10.png" alt='Click to enlarge' title='Click to enlarge' width='383' height='428' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And—after being involved for more than a decade—the book designer was finally able to sign off on the printed version of the opening signature of the book:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img11.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img11.png" alt='Click to enlarge' title='Click to enlarge' width='383' height='428' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The whole process of printing all the signatures of the book was scheduled to take about four weeks. We had been receiving and checking the signatures as they were ready—and on March 12 we received the final batch, and began to check them, on the alert for any possible repeat of something like <a href='https://www.wolframscience.com/nks/p157--continuous-cellular-automata/'>the page-157 problem</a>.</p>
<p>Within a few hours a member of our team got to <a href='https://www.wolframscience.com/nks/p332--the-phenomenon-of-continuity/'>page 332</a> (on “signature 21”) which included this image:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img12.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img12.png" alt='Click to enlarge' title='Click to enlarge' width='402' height='414' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I’m frankly amazed he noticed, but if you look carefully near the right-hand edge you might be able to tell that there’s a strange kind of “seam”. Zoom in at the top and you’ll see:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img13.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img13.png" alt='Click to enlarge' title='Click to enlarge' width='439' height='188' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, this is definitely wrong: with the aggregation rule used to make this picture it simply isn’t possible to have floating pieces. In this case, the correct version is:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img14.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img14.png" alt='Click to enlarge' title='Click to enlarge' width='439' height='188' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>An hour or so later two more glitches were found, on <a href='https://www.wolframscience.com/nks/p251--sensitivity-to-initial-conditions/'>page 251</a> and <a href='https://www.wolframscience.com/nks/p253--sensitivity-to-initial-conditions/'>253</a>. Both cases again involved something like a column of cells being repeated. On page 253 zooming into the image</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img15.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img15.png" alt='Click to enlarge' title='Click to enlarge' width='432' height='348' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img15_copy.txt">
					<span class='close' id='15_out'>&amp;#10005</span></p>
<pre class='text' id='15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>reveals strange and “impossible” imperfections in the supposedly periodic background of <a href='https://www.wolframscience.com/nks/p32--how-do-simple-programs-behave/'>rule 110</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img16.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img16.png" alt='Click to enlarge' title='Click to enlarge' width='137' height='265' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img16_copy.txt">
					<span class='close' id='16_out'>&amp;#10005</span></p>
<pre class='text' id='16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>On <a href='https://www.wolframscience.com/nks/p194--network-systems/'>page 194</a> there was another glitch: an arrow on a graph that had basically become too thin to see. But this problem at least we could understand—and it was our fault. Instead of setting the thickness of the arrow in some absolute way, we’d just set it to be “1 pixel”—which in the final printing was too thin to see.</p>
<p>But what about the other glitches? What were they? And might there be more of them?</p>
<p>The signatures from the book were ready to start being bound. Should we hold off and reprint the signatures where we’d found glitches? Could we do this without blowing our (already very tight) schedule? Could we even get enough extra paper in time? My team was adamant that we should try to fix the glitches, saying that otherwise they would “nag at us forever”. But I wanted first to see if we could characterize the bug better.</p>
<p>We knew it was associated with the rendering of the <a href='https://www.amazon.com/PostScript-Language-Reference-Manual-ADOBE/dp/0201101742' target=_blank rel=noopener>PostScript</a> <span class="input">image</span> operator. Even though PostScript is basically a vector graphics description language, the <span class="input">image</span> operator allows one to include bitmaps. Normally these bitmaps are used to represent things like photographs, and have tiny (“few-pixel”) cells. But in the cellular-automaton-like images we were having trouble with, the cells were much larger; in the case of <a href='https://www.wolframscience.com/nks/p157--continuous-cellular-automata/'>page 157</a>, for example, each one was roughly 75 of the final 2400-dpi pixels across. This was absolutely something the <span class="input">image</span> operator was set up to handle. But somehow something was going wrong.</p>
<p>And what was particularly surprising is that it seemed as if the problem was happening after the PostScript was converted to a <a href='https://reference.wolfram.com/language/ref/format/TIFF.html'>TIFF</a>. Could it perhaps be in the driver for both the proofing and the final plate production system? Time was short, and we needed to make a decision about what to do.</p>
<p>I fired off an email to the CEO of the <a href='https://en.wikipedia.org/wiki/Creo_(company)' target=_blank rel=noopener>company that made the direct-to-plate system</a>, saying: &#8220;We of course do not know the details of your software and hardware systems. However, we have done a little investigation. It appears that the data &#8230; in the case of this image is a bilevel TIFF with <a href='https://www.wolframscience.com/nks/p565/'>LZW compression</a>. We speculate that the <a href='https://www.wolframscience.com/nksonline/page-1072a/'>LZW dictionary</a> contains something close to the actual squares seen in the image, and that somehow pointers to dictionary entries are being corrupted or are not being used correctly in the decompression of the TIFF. The TIFF experts at my company say they have never seen anything like this in developing software based on standard imaging libraries, making us suspect that it may be some kind of buffering or motion optimization bug associated with your actual hardware driver.&#8221;</p>
<p>The CEO of what was by then quite a large company had personally designed the original hardware, and when we talked by phone he speculated that what we were seeing might be some kind of obscure mechanical issue with the hardware. But his chief of software soon sent mail explaining that “of the several hundred thousand books that go through [their system] each year, there are a couple that have imaging problems like this.” But, he added, “Usually they are books about halftone screening algorithms, which cause an almost-recursive problem&#8230;”. He said the specific issue we were having looked like a “difficult to reproduce problem we have known about for some time but is transient enough that re-imaging the same file can ‘correct’ the problem.” He added that: “Our hypothesis is that it is related to a memory access error in the RIP that manifests only at low-memory conditions, or after many allocation/deallocation cycles of RAM blocks. The particular code path is not one we have source-code access to, and is rumored to be many years old, so not many people on earth are prepared to make substantive changes to it.”</p>
<p>OK, so what next? The RIP had been developed by Adobe, creators of PostScript. So I emailed <a href='https://www.wolframalpha.com/input?i=john+warnock'>John Warnock</a>, co-founder of Adobe, who I’d met at quite a few software-industry get-togethers before my NKS-book “hermit period”. I commented that “One thing that’s peculiar (at least without knowing how the RIP works) is that the glitch involves overwriting of a column &#8230; even though scanning the underlying PostScript would involve going from one row to the next.” Warnock responded helpfully, copying his team, though saying (in an echo of what we’d already heard) “I don’t know who does PostScript stuff anymore”. </p>
<p>Well, that seemed like pretty much the end of the road. So we decided to assume that the glitches we’d found were the only ones, and—for perfection’s sake—we’d reprint those signatures, which by that point the printer had helpfully said they could do without blowing the schedule.</p>
<p>Two weeks later, Adobe delivered a new version of the RIP, in which they believed the bug had been fixed, noting that there had been significant code cleanup, and they were now using a newer version of the C++ compiler. Meanwhile, I’d realized another issue: a variety of magazines had requested files from us to be able to print high-resolution images from the book. Would they end up using the same software pipeline, and potentially have the same problem? A general release of any fix was still quite far away. </p>
<p>Meanwhile, with the two “glitch” signatures reprinted, the book was off to be bound. The cover had also been printed, now making use of all four stations of the presses. Under a microscope the characteristic <a href='https://www.wolframscience.com/nksonline/page-1078b/'>&#8220;rosettes&#8221; of 4-color printing</a> are visible:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img17.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img17.png" alt='Click to enlarge' title='Click to enlarge' width='366' height='291' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img17_copy.txt">
					<span class='close' id='17_out'>&amp;#10005</span></p>
<pre class='text' id='17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Actually, the book in a sense has two covers: a detachable dust jacket (including a dated picture of me!) and a “permanent” hard cover—which I think looks very nice:</p>
<p><iframe src="https://player.vimeo.com/video/709577304?h=1fb80366b2" width="640" height="360" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen></iframe></p>
<p>But as I was just now looking back through my archives I found an email from February 2002, expressing concerns about the fading of ink on the cover. The printer assured us that we had “nothing to worry about unless the books were exposed to direct sunlight for an extended amount of time.” But then they added “The reds and yellows will fade faster that the other pigments, but this is not something that would be noticeable in the first 20–40 years.” Well, it’s now been 20 years, and it so happens that I have a copy of the NKS book that’s been exposed to sunlight for much of that time—and look what’s happened to its spine, right on cue:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img19.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img19.png" alt='Click to enlarge' title='Click to enlarge' width='319' height='165' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img19_copy.txt">
					<span class='close' id='19_out'>&amp;#10005</span></p>
<pre class='text' id='19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I received a first, hand-bound, finished NKS book on April 22. And very soon books were on their way to bookstores and distribution centers. And people were ordering the book—in large numbers. And that meant that the books we’d printed so far weren’t going to be enough. And on May 12—two days before the May 14 official publication date of the book—another print run was started. </p>
<p>Fortunately it was possible to reuse the plates from the first print run (well, apart from the one which said “First printing”), so we didn’t have to worry about new glitches showing up. </p>
<p>But once the book was published, demand continued to be strong, and on June 4 we needed to do another print run. And this time new plates had to be made. Were there going to be new glitches? We decided we should check the plates before we started printing—so we sent the person who’d caught the glitches before on a trip to Canada. Turns out the bug hadn’t yet been fixed, and there it was again on pages <a href='https://www.wolframscience.com/nks/p583--visual-perception/'>583</a> and <a href='https://www.wolframscience.com/nks/p979--the-phenomenon-of-continuity/'>979</a>. </p>
<p>Some time later I heard that the bug was finally found and fixed, and had been lurking in the implementation of the PostScript <span class="input">image</span> operator for well over a decade. Yes, software is hard. And computational irreducibility is rampant. But in the years since the NKS book was published, no other weird glitches like this have ever shown up. Or at least nobody has ever told us about any.</p>
<p>But as I was writing this, I wondered: what became of that other glitch that was in the first printing—the one with the thin arrows that was our fault? I opened an NKS book from my desk. No problem. But then I pulled off my shelf the leather-bound copy of the first printing that my team made for me, and turned to <a href='https://www.wolframscience.com/nks/p194--network-systems/'>page 194</a>. And there it was—the “1-pixel arrow” (compared here under a microscope to the second printing):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img20.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img20.png" alt='Click to enlarge' title='Click to enlarge' width='402' height='171' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img20_copy.txt">
					<span class='close' id='20_out'>&amp;#10005</span></p>
<pre class='text' id='20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And yet one more thing: looking in my archives, I find a cover sheet for a print test from March 1, 1999—which notes that there is “glitch with the graphic on <a href='https://www.wolframscience.com/nks/p246--four-classes-of-behavior/'>page 246</a>” &#8230; “which has been traced to a problem with the Adobe 4.1 PostScript driver” for the RIP—made by a completely different company:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img21.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img21.png" alt='Click to enlarge' title='Click to enlarge' width='538' height='688' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img21_copy.txt">
					<span class='close' id='21_out'>&amp;#10005</span></p>
<pre class='text' id='21_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Was it the same “<a href='https://www.wolframscience.com/nks/p157--continuous-cellular-automata/'>page-157</a>” bug? I looked for the print test. And there’s “<a href='https://www.wolframscience.com/nks/p246--four-classes-of-behavior/'>page 246</a>” (which ended up in the final version as <a href='https://www.wolframscience.com/nks/p212--systems-based-on-constraints/'>page 212</a>):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img22.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img22.png" alt='Click to enlarge' title='Click to enlarge' width='472' height='635' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img22_copy.txt">
					<span class='close' id='22_out'>&amp;#10005</span></p>
<pre class='text' id='22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Under a microscope, most of the arrays of cells look just fine:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img23.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img23.png" alt='Click to enlarge' title='Click to enlarge' width='522' height='255' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img23_copy.txt">
					<span class='close' id='23_out'>&amp;#10005</span></p>
<pre class='text' id='23_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But there it is: something weird again!</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img24.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img24.png" alt='Click to enlarge' title='Click to enlarge' width='522' height='255' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section18img24_copy.txt">
					<span class='close' id='24_out'>&amp;#10005</span></p>
<pre class='text' id='24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Is it the same “<a href='https://www.wolframscience.com/nks/p157--continuous-cellular-automata/'>page-157</a>” bug? Or is it another bug, perhaps even still there, 23 years later?</p>
<h2 id='the-great-printing-adventure,-part-2'>The Great Printing Adventure, Part 2</h2>
<p>When the NKS book was officially published on May 14, 2002, it was the #1 bestselling book on Amazon, and it was steadily climbing the <em>New York Times</em> and other bestseller lists. We’d just initiated a second printing, which would be finished in a few weeks. But based on apparent demand that printing wasn’t going to be sufficient. And in fact a single bookstore chain had just offered to buy the whole second printing. We initiated a third printing on June 4, and then a fourth on June 18. But if we were going to keep the momentum of sales, we knew we had to keep feeding books into the channel.</p>
<p>But that&#8217;s where things got difficult again. It just didn&#8217;t seem possible to get enough books, quickly enough. But after everything we’d done to this point, I wasn’t going to be stopped here. And I went into full “hands-on CEO” mode, trying to see how to juggle logistics to make things work. </p>
<p>The paper mill was in Glens Falls, NY. Once the paper had been made, it had to be trucked 2752 km to the printer in Winnipeg, Canada. Then the finished “book blocks” had to go 2225 km to the bindery in Toronto (or maybe there was an alternative bindery in Portland, OR, 2400 km away). And finally the bound books had to come to our warehouse in Illinois, or go directly to book distribution centers. </p>
<p>My archives contain a diagram I made trying to see how to connect these things together, particularly in view of the impending Canada Day holiday on July 1:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section19img1.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section19img1.png" alt='Click to enlarge' title='Click to enlarge' width='566' height='524' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section19img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I have pages and pages of notes, with details of ink drying times (1 day), sheets of paper per skid (20,000), people needed per shift, and so on. But in the end we made it; with a lot of people’s help, we got the books finished on time—and put on trucks, some of which were going to the distribution center for a major bookstore chain. </p>
<p>The trucks arrived. But then we heard nothing. Bookstores were reporting being out of stock. What was going on? At last it was figured out: multiple truckloads of books had somehow been misplaced at the distribution center. (How do you lose something that big?) And, yes, some sales momentum was lost. And so we didn’t peak as high on bestseller lists as we might. Though hopefully in the end everyone who wanted an NKS book got one, no doubt oblivious to the logistical challenges involved in getting it to them. </p>
<h2 id='the-lost-epilog,-and-other-outtakes-from-the-book'>The Lost Epilog, and Other Outtakes from the Book</h2>
<p>For more than a decade I basically poured everything I was doing into the NKS book. Well, at least that’s the way I remember it. But going through my archives now, I realize I did quite a bit that never made it into the final NKS book. Particularly from the early years of the project, there are endless photographs—and investigations—of examples of complexity in nature, which never made it into <a href='https://www.wolframscience.com/nks/chap-8--implications-for-everyday-systems/'>Chapter 8</a>. There are also lots of additional results about specific systems from the computational universe—as well as lots of details about history—that could have been notes to the notes, except I didn’t have those.</p>
<p>Something I didn’t remember is that in 1999—as the book was nearing completion—I considered adding a pictorial “Quick Summary” at the front of the book, here in draft form:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/20.01.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img1.png" alt='Click to enlarge' title='Click to enlarge' width='584' height='680' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I’m not sure if this would have been a good idea, but in the end it effectively got replaced by the textual “<a href='https://www.wolframscience.com/nks/chap-1--the-foundations-for-a-new-kind-of-science#sect-1-1--an-outline-of-basic-ideas'>An Outline of Basic Ideas</a>” that appears at the very beginning of the book. Still, right when the book was being published, I did produce an “outside the book” <a href='https://www.wolframscience.com/reference/CAandNature.pdf'>pictorial 1-pager</a> about <a href='https://www.wolframscience.com/nks/chap-2--the-crucial-experiment/'>Chapter 2</a> that saw quite a bit of use, especially for media briefings:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img2.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img2.png" alt='Click to enlarge' title='Click to enlarge' width='398' height='553' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But as I was looking through my archives, my biggest “rediscovery” is the “Epilog” to the book. There are versions of it from quite early in the development of the book, but the last time it appears is in the December 15, 2000, draft—right before “Alpha 1”. Then it’s gone. Well, that is, until I just found it again:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img3.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img3.png" alt='Click to enlarge' title='Click to enlarge' width='339' height='435' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So what’s in this “lost epilog”, with its intriguing title “The Future of the Science in This Book”? Different versions of it contain somewhat different fragmentary pieces of text. The version from late 1999, for example, begins: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img4.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img4.png" alt='Click to enlarge' title='Click to enlarge' width='543' height='164' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Later it continues (the bracketed text gives alternative phrasings I was considering):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img5.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img5.png" alt='Click to enlarge' title='Click to enlarge' width='543' height='441' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Some of what was in the “lost epilog” found its way into the Preface for the final book; some into a “<a href='https://www.wolframscience.com/nks/chap-0--general-notes--notes/'>General Note</a>” entitled <a href='https://www.wolframscience.com/nks/notes-0-1--developing-the-new-kind-of-science/'>“Developing the new kind of science”</a>. But quite a lot never made it. It’s often quite rough-hewn text—and almost just “notes to myself”. But in a section entitled “What Should Be Done Now”, there are, for example, suggestions like:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img6.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img6.png" alt='Click to enlarge' title='Click to enlarge' width='527' height='155' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And there’s a list of “principles” that aren’t a bad summary of at least my general approach to research:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img7.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img7.png" alt='Click to enlarge' title='Click to enlarge' width='527' height='244' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Later on there are some rough notes about what I thought might happen in the future: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img8.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img8.png" alt='Click to enlarge' title='Click to enlarge' width='527' height='287' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s a charming time-capsule-like item. But it’s interesting to see how what I jotted down more than 20 years ago has actually panned out. And in fact I think much of it is surprisingly close to the mark. Plenty of small extensions did indeed get made in the first few years, with larger ones—both in studying abstract systems and in building practical models—coming later. (One notable extension was the <a href='https://writings.stephenwolfram.com/2007/10/the-prize-is-won-the-simplest-universal-turing-machine-is-proved/'>2,3 Turing machine universality proof</a> at year 5, stimulated by our <a href='https://www.wolframscience.com/prizes/tm23/'>2,3 Turing Machine Prize</a>.) </p>
<p>How about “major new directions”? We’re remarkably “on cue” there. At year 18 was our <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/'>Physics Project</a>, and from that has emerged the whole <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a>, which I consider to be the next major direction building on the ideas of the NKS book. I have to say that when I wrote down these expectations 20+ years ago, I didn’t imagine that I would personally be involved in the “major new direction” I mentioned—but, unexpected as it has been, I feel very fortunate that that’s the way it’s worked out. </p>
<p>What about technology? Already at year 7 <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a> was in many ways a <a href='https://writings.stephenwolfram.com/2009/05/7-years-of-nks-and-its-first-killer-app/'>major &#8220;philosophical spinoff&#8221;</a> of the NKS book. And although one doesn’t know its detailed origins, the proof-of-work concept of bitcoin (which also first appeared at year 7) has fundamental connections to the idea of <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence#sect-12-6--computational-irreducibility'>computational irreducibility</a>. Meanwhile, the general methodology of searching the computational universe for useful programs is something that has continued to grow. And although the details are more complicated, the whole notion of deep learning in neural nets <a href='https://writings.stephenwolfram.com/2017/05/a-new-kind-of-science-a-15-year-view/#machine-learning-and-the-neural-net-renaissance'>can also be thought of as related</a>.</p>
<p>It’s very hard to assess just what’s happened in “becoming a part of everyday thought”—though it’s been wonderful over the years to run into so many people who’ve told me how much the NKS book affected their way of thinking about things. But my impression is that—despite quite a few specific applications—the truly widespread absorption of ideas like computational irreducibility and their implications is a bit “behind schedule”, though definitely now building well. (One piece of absorption that did happen in the 4–10 year window was into areas like <a href='https://writings.stephenwolfram.com/2017/06/oh-my-gosh-its-covered-in-rule-30s/'>art and architecture</a>.)</p>
<p>What about education? 1D cellular automata have certainly become widely used as “do-a-little-extra” examples for both programming and math. But more serious integration of ideas from the NKS book as foundational elements of computational thinking—or as a kind of “pre-computer science”—is basically still a “work in progress”.</p>
<p>Beyond the main text of the “lost epilog”, I found something else: “Notes for the Epilog”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img9.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img9.png" alt='Click to enlarge' title='Click to enlarge' width='574' height='275' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And after short (and unfinished) notes on “The sociology of the new science” and “The role of amateurs”, there’s the most significant “find”: a list of altogether 283 “Open questions” for each of the chapters of the book, most still unanswered. </p>
<p>In preparation for our first <a href='https://education.wolfram.com/summer-school'>Wolfram Summer School</a> (then called the NKS Summer School) in June 2003, I worked on a more detailed version of something similar—but left it incomplete after getting up to the middle of Chapter 4, and didn’t include much if anything from the “Notes to the Epilog” even though I’d been accumulating those for much of the time I worked on the book:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img10.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img10.png" alt='Click to enlarge' title='Click to enlarge' width='221' height='283' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>During the decade I worked on the NKS book I generated a vast amount of material. Most of it I kept in my still-very-much-extant computer filesystem, and while I can’t say that I’ve reexamined everything there, my impression is that—perhaps apart from some “notes to the notes” material—a large fraction of what should have made it into the NKS book did. But in the course of working on the book there was definitely quite a bit of more ephemeral material. Some was preserved in my computer filesystem. But some was printed out and discarded, and some was simply handwritten. But all these years I’ve kept archive boxes of that material.</p>
<p>Some of those boxes have now been sealed for nearly 30 years. But I thought it’d be interesting to see what they contain. So I pulled out a box labeled 6/93–10/93. It’s slightly the worse for wear after all these years, but what’s inside is well preserved. I turn over a few pages of notes, printouts and ancient company memos (some sent as faxes). And then: what’s this? </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img11.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img11.png" alt='Click to enlarge' title='Click to enlarge' width='578' height='364' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s a note about multiway systems: things that are now central to the multicomputational paradigm I’ve just been pursuing. There’s a <a href='https://www.wolframscience.com/nks/notes-5-6--multiway-systems-based-on-numbers/'>brief comment about numerical multiway systems</a> in the NKS book—but just last year, I wrote a <a href='https://www.wolframphysics.org/bulletins/2021/10/multicomputation-with-numbers-the-case-of-simple-multiway-systems' target=_blank rel=noopener>whole 85-page &#8220;treatise&#8221; about them</a>.</p>
<p>I turn over a few more pages. It feels a bit like a time warp. I just <a href='https://www.wolframphysics.org/bulletins/2021/02/multiway-turing-machines/' target=_blank rel=noopener>wrote about multiway Turing machines last year</a>, and <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/'>my very recent work on metamathematics</a> is full of multiway string rewrites and their correspondence to mathematical proofs!</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img12.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img12.png" alt='Click to enlarge' title='Click to enlarge' width='434' height='334' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A few more pages and I get to:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img13.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img13.png" alt='Click to enlarge' title='Click to enlarge' width='475' height='589' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s not something that made it into the NKS book in that form—but last year I wrote a piece entitled “<a href='https://writings.stephenwolfram.com/2021/05/how-inevitable-is-the-concept-of-numbers/'>How Inevitable Is the Concept of Numbers?</a>” which explores (in an admittedly modernized way) some of the exact same issues.</p>
<p>A few more pages later I get to “timeless” graphics like these:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img14.png" alt='' title='' width='568' height='319' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But soon there’s a charming reminder of the times:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img15.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img15.png" alt='Click to enlarge' title='Click to enlarge' width='411' height='205' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img15_copy.txt">
					<span class='close' id='15_out'>&amp;#10005</span></p>
<pre class='text' id='15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I’ve only gone through perhaps an inch of paper so far. And I’m getting to pages like these:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img16.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img16.png" alt='Click to enlarge' title='Click to enlarge' width='570' height='298' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw0513section20img16_copy.txt">
					<span class='close' id='16_out'>&amp;#10005</span></p>
<pre class='text' id='16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Yes, I’m still today investigating consequences of “computational irreducibility and the PCE (Principle of Computational Equivalence)”. And just last year I used <img loading='lazy' style="margin-bottom: -4px" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section20formulaA.png" width= '120' height='17' /> as a central example in <a href='https://www.wolframphysics.org/bulletins/2021/10/multicomputation-with-numbers-the-case-of-simple-multiway-systems' target=_blank rel=noopener>writing about numerical multiway systems</a>!</p>
<p>I’ve gone through perhaps 10% of one box—and there are more than 40 boxes in all. And I can’t help but wonder what gems there may be in all these “outtakes” from the NKS book. But I’m also thankful that back when I was working on the NKS book I didn’t try to pursue them all—or the decade I spent on the book might have stretched into more than a lifetime.</p>
<h2 id='and-now-it&rsquo;s-out...'>And Now It&rsquo;s Out&#8230;</h2>
<p>On May 14, 2002, the NKS book was finally published. In some ways the actual day of publication was quite anticlimactic. In modern times there’d be that moment of “making things live” (as there was, for example, for <a href="https://www.youtube.com/watch?v=zEkxX-M-VRc" target="_blank">Wolfram|Alpha in 2009</a>). But back then there’d been a big rush to get books to bookstores, but on the actual “day of publication” there wasn’t much for me to do.</p>
<p>It had been a long journey getting to this point, though, and for example the <a href='https://www.wolframscience.com/nks/pxii--preface/'>acknowledgements at the front of the book</a> listed 376 people who’d helped in one way or another over the decade devoted to writing the book, or in the years beforehand. But in terms of the physical production of the book one clue about what had been involved could be found on the very last page—<a href='https://www.wolframscience.com/nks/colophon/'>its “Colophon</a>&rdquo;:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img1.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img1.png" alt='Click to enlarge' title='Click to enlarge' width='397' height='527' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, as I’ve explained here, there was quite a story behind the simple paragraph: “The book was printed on 50-pound Finch VHF paper on a sheet-fed press. It was imaged directly to plates at 2400 dpi, with halftones rendered using a 175-line screen with round dots angled at 45°. The binding was Smythe sewn.” And whatever other awards the book would win, it was rather lovely to win one for its creative use of paper: </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img2.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img2.png" alt='Click to enlarge' title='Click to enlarge' width='225' height='269' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So much about the NKS book was unusual. It was a book about new discoveries on the frontiers of science written for anyone to read. It was a book full of algorithmic pictures like none seen before. It was a book about science produced to a level of quality probably never equaled except by books about art. And it was a book that was published in a direct, entrepreneurial way without the intermediation of a standard large publishing company. </p>
<p><em>Publisher’s Weekly</em> ran an interesting—and charmingly titled—piece purely about the “publishing dynamics” of the book: </p>
<p>	<a href="https://www.publishersweekly.com/pw/print/20020624/28068-a-new-kind-of-self-publishing.html" target="_blank" ><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img3.png" alt='' title='' width='551' height='747' /></a></p>
<p>Just before the book was finally published, I’d signed some copies for friends, employees and people who’d contributed in one way or another to the book:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img4.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img4.png" alt='Click to enlarge' title='Click to enlarge' width='473' height='348' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Shortly after the book was published, we decided to make a “<a href='https://store.wolfram.com/view/misc/#nks-poster'>commemorative poster</a>”, reproducing (small, but faithfully) every one of the pages that had taken so much effort to create:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img5.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img5.png" alt='Click to enlarge' title='Click to enlarge' width='464' height='512' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then there were the “computational-irreducibility-inspired” bookmarks that I, for one, still use all the time:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img6.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img6.png" alt='Click to enlarge' title='Click to enlarge' width='568' height='160' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We carefully stored a virtual machine image of the environment used to produce the book (and, yes, that’s how quite a few of the images here were made):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img7.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img7.png" alt='Click to enlarge' title='Click to enlarge' width='568' height='355' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And over the years that followed we’d end up using the raw material for the book many times. Within a year there was “NKS Explorer”—a <a href='https://www.wolfram.com/notebooks/'>Wolfram Notebook</a> system, distributed on CD-ROM, that served as a kind of virtual lab that let one (as it put it) “Experience the discoveries of <em>A New Kind of Science</em> on your own computer”:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img8.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img8.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='228' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>About five years later, more or less the same content would show up in the web-accessible <a href='https://demonstrations.wolfram.com/search.html?query=A+New+Kind+of+Science'>Wolfram Demonstrations Project</a> (and 10 years later, in its cloud version):</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img9.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img9.png" alt='Click to enlarge' title='Click to enlarge' width='394' height='455' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>When the book came out, there was already a “<a href='https://www.wolframscience.com/'>wolframscience.com</a>” website:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img10.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img10.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='362' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But in 2004 we were able to put a <a href='https://www.wolframscience.com/nks/'>full version of the NKS book on the web</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img11.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img11.png" alt='Click to enlarge' title='Click to enlarge' width='569' height='322' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In <a href='https://writings.stephenwolfram.com/2010/09/a-new-kind-of-science-is-on-the-ipad/'>2010 we made a version for the iPad</a>:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img12.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img12.png" alt='Click to enlarge' title='Click to enlarge' width='224' height='305' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And in recent years there have followed all sorts of modernizations, especially on the web—with a bunch of new functionality just recently released:</p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img13.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img13.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='438' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>I went to great effort to write the NKS book to last, and I think it’s fair to say—20 years out—that it very much has. The computational universe, of course, will be the same forever. And those pictures of the behavior of simple computational systems that occur throughout the book share the kind of fundamental timelessness that pictures of geometric constructions from antiquity do.</p>
<p>Of course, I knew that some things in the book would &#8220;date&#8221;, most notably my references to technology—as I warned in <a href='https://www.wolframscience.com/nks/notes-0-1--technology-references/'>one of the &#8220;General Notes&#8221; at the back of the book</a> (though actually, 20 years later, notwithstanding “electronic address books” from <a href='https://www.wolframscience.com/nks/p643--the-phenomenon-of-universality/'>page 643</a>, and MP3 on <a href='https://www.wolframscience.com/nks/p1080--auditory-perception/'>page 1080</a> being described as a “recent” format, surprisingly little has yet changed): </p>
<table >
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img14.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img14.png" alt='Click to enlarge' title='Click to enlarge' width='428' height='196' /></a>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What about mistakes? For 20 years we’ve meticulously tracked them. And I think it’s fair to say that all the careful checking we did originally really paid off, because in all the text and pictures in the book remarkably few errors have been found. For example, here’s the list of everything in <a href='https://www.wolframscience.com/nks/chap-4--systems-based-on-numbers/'>Chapter 4</a>, indicating a few errors that were fixed in early printings—and a couple that remain, and that we are now fixing online:</p>
<p>					<a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img15.png"><img class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img15.png" alt='Click to enlarge' title='Click to enlarge' width='575' height='210' /></a></p>
<p>People ask me if there’ll be a second edition of the NKS book. I say no. Yes, there are gradually starting to be more things one can say—and in the past couple of years the <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Wolfram Physics Project</a> and the whole <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a> has added significantly more. But there’s nothing wrong with what’s in the NKS book. It remains as valid and coherent as it was 20 years ago. And any “second-edition surgery” would run the risk of degrading its crispness and integrity—and detract from its unique perspective of presenting science at the time of its discovery. </p>
<p>But, OK, so all those NKS books that were printed on all those tons of paper from hemlock trees 20 years ago: what happened to them? Looking on the web today, one can find a few out there in the wild, sitting on bookshelves alongside a remarkable variety of other books:</p>
<p><a class="magnific image" alt="" title="" href="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img16.png"><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2022/05/sw051322section21img16.png" alt='Click to enlarge' title='Click to enlarge' width='567' height='466' /></a></p>
<p>I myself have many NKS books on my shelves (though admittedly a few more as convenient 2.5-inch “filler bookends”). And—at least when I’m in a “science phase”—I find myself using the online NKS book (if not a physical book) all the time, to see an example of some remarkable phenomenon in the computational universe, or to remind myself of some elaborate explanation or result that I put so much effort into finding all those years ago.</p>
<p>I consider the NKS book one the great achievements of my life—as well as one of the great “stepping-stone” points in my life, that was made possible by what I’d done before, and that in turn has made possible what I’ve done since. Twenty years later it’s interesting to think back—as I’ve done here—on just what it took to produce the NKS book, and how all those individual steps that I worked so hard on for a decade came together to make the whole that is the NKS book. </p>
<p>To me it’s a satisfying and inspiring story of what can be achieved with clear vision, sustained effort and a willingness to go where discoveries lead. And as I reflect on achievements of the past it makes me all the more enthusiastic about what’s now possible—and why it’s worth putting great effort today into what we can now build for the future. </p>
<p><a href="https://www.amazon.com/Kind-Science-Twentieth-Anniversary-Collection/dp/1579550568/ref=sr_1_1?crid=GL9BLLSBPEAF&#038;keywords=new+kind+of+science+20th&#038;qid=1652459905&#038;s=books&#038;sprefix=new+kind+of+science+20th%2Cstripbooks%2C80&#038;sr=1-1" target='blank'><img class="" title="A New Kind of Science Twentieth Anniversary Collection" src="https://content.wolfram.com/uploads/sites/43/2022/05/sw-writing-banner-ad.png" alt="A New Kind of Science Twentieth Anniversary Collection" width="620" height="185" /></a></p>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2022/05/the-making-of-a-new-kind-of-science/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>We&#8217;ve Got a Science Opportunity Overload: It&#8217;s Time to Launch the Wolfram Institute!</title>
		<link>https://writings.stephenwolfram.com/2022/04/weve-got-a-science-opportunity-overload-its-time-to-launch-the-wolfram-institute/</link>
		<comments>https://writings.stephenwolfram.com/2022/04/weve-got-a-science-opportunity-overload-its-time-to-launch-the-wolfram-institute/#comments</comments>
		<pubDate>Wed, 06 Apr 2022 19:28:31 +0000</pubDate>
		<dc:creator><![CDATA[Stephen Wolfram]]></dc:creator>
				<category><![CDATA[Education]]></category>
		<category><![CDATA[Other]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=36394</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/04/inst-icon2.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>Suddenly There&#8217;s Just So Much New Science to Do Something remarkable has happened these past two years. For 45 years I’ve devoted myself to building a taller and taller tower of science and technology—which along the way has delivered many outputs of which I’m quite proud. But starting in 2020 with the unexpected breakthroughs of [&#8230;]]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/04/inst-icon2.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><h2 id='suddenly-there&rsquo;s-just-so-much-new-science-to-do'>Suddenly There&rsquo;s Just So Much New Science to Do</h2>
<p style="display: inline-block; float: right; margin-left: 10px; margin-top: 0px; padding-bottom: 0px;"><img class="alignnone size-full" title="Wolfram Institute" src="https://content.wolfram.com/uploads/sites/43/2022/04/wolfram-institute-logo2.png" width="251" height="119" /></p>
<p>Something <a href='https://writings.stephenwolfram.com/all-by-date/'>remarkable has happened these past two years</a>. For 45 years I’ve devoted myself to building a taller and taller tower of science and technology—which along the way has delivered <a href='https://www.stephenwolfram.com/'>many outputs</a> of which I’m quite proud. But starting in 2020 with the unexpected breakthroughs of our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Wolfram Physics Project</a> we’ve jumped to a whole new level. And suddenly—yes, building on our multi-decade tower—it seems as if we’ve <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>found a new paradigm</a> that’s incredibly powerful, and that’s going to let us tackle an <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#potential-application-areas'>almost absurd range of longstanding questions</a> in all sorts of areas of science.</p>
<p>Developing a fundamental theory of physics is certainly an ambitious place to start, and I’m happy to say that things seem to be <a href='https://writings.stephenwolfram.com/2021/04/the-wolfram-physics-project-a-one-year-update/'>going quite excellently there</a>, not least in providing new foundations for many existing results and initiatives in physics. But the amazing (and to me very unexpected) thing is that we can take our new paradigm and also apply it to a huge range of other areas. Just a couple of weeks ago I <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/'>published a 250-page treatise</a> about its application to the “physicalization of metamathematics”—and to providing a very new view of the foundations of mathematics (with implications both for the question of what mathematics really is, and for the practical long-term future of mathematics).<span id="more-36394"></span></p>
<p>In a sense, everything we’re doing ultimately builds on the great intellectual tide of the past century: the rise of the concept of computation. (And, yes, that’s something in which I’ve been deeply involved both scientifically and technologically throughout my career.) But what’s happening now is something else—that one can see as the birth of what I call the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a>. It’s all about doing what our Physics Project has suggested, and going beyond working with specific computations—to look at the systemic behavior of whole interacting collections of computations. In the whole multi-millennium history of science, there’ve only been a very few fundamentally different paradigms for making models of things—and I think multicomputation is basically the fourth one ever. </p>
<p>And what makes its arrival particularly dramatic is that it comes already supercharged by its deep relation to physics, and by its ability to spread the successes of physics to other areas of science, and beyond. When I started investigating the concept of <a href='https://www.wolframscience.com/nks/p737--computational-irreducibility/'>computational irreducibility</a> in the 1980s it became clear that there are fundamental barriers to many kinds of scientific progress. But what I didn’t see coming is there would be a new path opened up by a new paradigm: the paradigm of multicomputation. And suddenly there are now all sorts of fundamental questions that are no longer blocked—and instead are ripe for rapid progress.</p>
<p>Over the past year we’ve started exploring a <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#potential-application-areas'>host of potential application areas</a>. We’ve got a concept of “<a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#chemistry-molecular-biology'>formalized subchemistry</a>” with applications to a new way of thinking about molecular computing, and with potentially dramatic implications for <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#chemistry-molecular-biology'>molecular biology</a>. We’ve got new ideas about how to think about <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#immunology'>immunology</a> and probably also <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#neuroscience'>neuroscience</a>. We’ve got a potential new approach to finding a <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#evolutionary-biology'>formalization for biological evolution</a> and its relation to biocomplexity. We’ve got a new concept for “geometrizing” the space of programs—with implications for <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/' target=_blank rel=noopener>foundational questions in computational complexity theory</a>. We’ve got a promising way to construct new kinds of theories for <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#economics'>economics</a>, with implications, for example, for <a href='https://writings.stephenwolfram.com/2021/05/the-problem-of-distributed-consensus/'>distributed generalizations of blockchain</a>. We’ve got a potential new way to think about <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#linguistics'>linguistics</a>, and the structure of meaning space. Oh, and we’ve got a new “physicalized” way to <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#distributed-computing'>conceptualize and organize distributed computing</a>. </p>
<p>In the nearly half a century that I’ve been doing science, I’ve had the good fortune to be involved in quite a few significant bursts of progress. But I’ve never seen one quite as concentrated and immediate as what we’re now seeing. It’s an exciting thing. But it’s also overwhelming. There’s just so much low-hanging fruit to be picked—so many things with such important potential consequences, for science, technology and the world. </p>
<p>We’ve been working very hard to move all this forward with the resources we have available. But even though I think we’ve achieved a <a href='https://writings.stephenwolfram.com/all-by-date/'>remarkable level of productivity</a>, it’s become clear that there’s just too much to do. We’re in the midst of a major “science opportunity overload”. And to be good stewards of the ideas and their potential we’ve got to scale things up. I’ve had lots of experience over decades in <a href='https://www.wolfram.com/company'>making big projects happen</a>. And now it’s time to take that experience and define a new structure to move forward the amazing science opportunity we find ourselves with. </p>
<p>And I think that leaves us no choice: we’ve got to launch the Wolfram Institute, and now!</p>
<h2 id='maximizing-scientific-productivity-&#038;-communication'>Maximizing Scientific Productivity &#038; Communication</h2>
<p>In the course of my life I’ve spent a great deal of effort trying to maximize productivity and innovation around the things I do. I’ve done lots of <a href='https://writings.stephenwolfram.com/2019/02/seeking-the-productive-life-some-details-of-my-personal-infrastructure/'>(arguably nerdy) optimization of my own personal setup</a>. I’ve thought long and hard about the best strategies both for choosing what to do, and for getting things done. But in many ways the most important piece has been the whole structure we’ve built up over the past 35 years at <a href='https://www.wolfram.com/'>Wolfram Research</a>.</p>
<p>I sometimes refer to our company as a machine for turning ideas into real things. And I think it’s been an extremely impressive machine—year after year for more than three decades <a href='https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/'>systematically delivering all sorts of far-reaching innovation</a>, and using our progressive tower of technology to efficiently implement it on larger and larger scales.</p>
<p>As a company, we’ve mainly been concerned with delivering technology and products. But the systems, culture and methodologies we’ve developed are, at their core, about maximizing innovation and productivity. So what happens if we apply them to science? </p>
<p><em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em> was in a sense a first result, and I consider it an impressive one. Indeed, even nearly 20 years after it was published I’m still amazed at the <a href='https://www.wolframscience.com/nks/notes-for-chapters/'>sheer volume</a>—and depth—of scientific results that it was possible to obtain in the span of just a single decade.</p>
<p>But with the Wolfram Physics Project it’s a yet more impressive story. <a href='https://writings.stephenwolfram.com/2020/04/how-we-got-here-the-backstory-of-the-wolfram-physics-project/'>We started late in 2019</a>, and in less than six months—with an extremely small team—we were able to make dramatic progress, and to publish nearly 700 pages of material about it. It wouldn’t have been even vaguely possible without the whole tower of <a href='https://www.wolframphysics.org/tools/' target=_blank rel=noopener>computational tooling provided by the Wolfram Language</a>. And nor would it have been possible without the structure and strategy for doing projects that we’ve honed over the past three decades. </p>
<p>In the past two years, we’ve been energetically moving forward—and we’ve now published altogether <a href='https://www.wolframphysics.org/bulletins/' target=_blank rel=noopener>over 2500 pages of new material</a>, as well as nearly <a href='https://www.wolframcloud.com/obj/wolframphysics/Tools/guide-page'>200 publicly deployed new functions</a>. In terms of scientific ideas the pace of innovation has been quite breathtaking. But we’ve also been innovating in terms of how to do the science.</p>
<p>An important objective has been to open the science up to give the widest possible access and potential for engagement. I’ve worked hard to define a style of expository writing that makes what we’ve done accessible to a wide audience as well as to experts. And in what we&#8217;ve published, essentially every graphic has <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>&#8220;click-to-copy&#8221; Wolfram Language code</a>, that anyone can immediately run and build on. We&#8217;ve also <a href='https://www.wolframphysics.org/archives/index/' target=_blank rel=noopener>uploaded our working notebooks</a>—so far nearly 2000 of them—so that everyone can see not only our “finished product” but also the research (wrong turns and all) that led to it.</p>
<p>A few years ago I started <a href='https://livestreams.stephenwolfram.com/' target=_blank rel=noopener>livestreaming to the world</a> many of our software design reviews. And building on this concept, we’ve now routinely been <a href='https://livestreams.stephenwolfram.com/category/physics-project-working-sessions' target=_blank rel=noopener>livestreaming our scientific working sessions</a>—giving people for the first time real-time visibility into how science is done, as well as the possibility to interact with it. And for those interested in an even deeper dive, we’ve also been recording and uploading “<a href='https://livestreams.stephenwolfram.com/category/personal-video-worklogs' target=_blank rel=noopener>video work logs</a>”—bringing us up to a total of nearly 1000 hours of video so far.</p>
<p>Even when we thought we were “just solving physics” we knew we had to involve other people in the project. For 20 years we’ve been doing a very successful annual <a href='https://education.wolfram.com/summer-school'>Summer School</a> about our approach to science and technology, and starting in 2020 we added a <a href='https://education.wolfram.com/summer-school/programs/physics/'>track about the Physics Project</a>, as well as a physics Winter School. We’ve had a terrific stream of “students” for our Physics Project. And partly building on this we’ve been setting up a <a href='https://www.wolframphysics.org/people/' target=_blank rel=noopener>network of people involved in the Physics Project</a>—now with 55 members from 20 countries. </p>
<p>Increasingly, there’s work based on our Physics Project that’s happening in academic institutions, quite independent of us. And no doubt this will bear all sorts of fruit. </p>
<p>But as we look at the next phases of our Physics Project, and even more so the huge collection of opportunities provided by our <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>new multicomputational paradigm</a>, it’s clear there’s so much to do that—particularly if we want it to happen in years rather than decades—we need a more focused approach.</p>
<p>And the good news is that through 35 years of experience at <a href='https://www.wolfram.com/'>Wolfram Research</a>, as well as the experience of <em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em> and the <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Wolfram Physics Project</a>, we have an excellent blueprint for what to do. But now we have to implement it at scale. And that’s what the Wolfram Institute is about. </p>
<h2 id='the-plan-for-the-wolfram-institute'>The Plan for the Wolfram Institute</h2>
<p>The basic plan is simple: to create a basic-science analog of the immensely productive “machine” that I’ve built at <a href='https://www.wolfram.com/'>Wolfram Research</a> over the past 35 years—and to use this “machine” to accelerate the delivery of new science by many decades if not more. We’ve already got a definite seed: the <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Wolfram Physics Project</a>. But now we have to scale this up to the full Wolfram Institute—and give it the structure it needs to grow and take full advantage of the amazing opportunities we now have.</p>
<p>It’s often assumed that the way to achieve maximum innovation is to put together innovative people, and then let them “just innovate” in whatever directions they choose. But it has been my consistent experience that the greatest innovation is instead achieved when there is a definite “flow” and definite, ambitious goals. The Wolfram Institute is going to be about doing large-scale basic research this way. </p>
<p>Modeled on Wolfram Research and the Wolfram Physics Project, the idea of the Wolfram Institute is to aggressively pursue basic research that’s explicitly managed and energetically led towards its goals. </p>
<p>Our initial goals are already tremendously ambitious. We want to use our new paradigm to basically rewrite the foundations of several important fields of science. As with the Physics Project there’ll no doubt be tremendous synergy with existing approaches and the communities around them. But with the paradigm we now have, the tools and methods we’ve developed, and the organizational framework we’re defining for the Wolfram Institute, I think we have the opportunity to jump ahead, and in effect to deliver foundational science that would otherwise emerge at best only in the distant future. </p>
<p>It’s going to be an exciting thing to be a part of, and—as with projects I’ve done in the past—there are going to be many outstanding people who want to be involved. Our many decades of activity in science and technology have provided an extremely broad network of contacts, and we’ve developed a particularly concentrated pipeline of worldwide talent through our annual <a href='https://education.wolfram.com/summer-school'>Summer School</a> (as well as our <a href='https://education.wolfram.com/summer-camp/'>High School Summer Camp</a>).</p>
<p>What will the Wolfram Institute be like? There’ll be a leadership core, which, yes, I’m signing up to head. But the main meat of the institute will be a collection of researchers and fellows, working on particular, managed projects—together with students at multiple levels from high school to graduate school. We’ll be doing open science, so there’ll be lots of livestreaming and lots of open tools produced. There’ll be lots of working materials and academic papers published, and whenever we manage to make a big step forward our plan is to present it to the world using the immediate and accessible approach to exposition that I’ve developed.</p>
<p>In what we’ve done for the past 35 years at Wolfram Research there’s in a sense a clear model for how the organization fundamentally operates. We invent things, then we deliver them in products—and from these products we derive revenue, which is then used to allow us to invent more things and deliver more products. It’s been an extremely productive setup. And because we’re a private company without outside investment we’re able to chart our own course, pursuing the ambitious and long-term projects that we believe in. Often we choose to make things we do freely available to the world, but in the end we rely on the fact that we’re producing commercially valuable products from which we derive revenue that funds our activities. </p>
<p>There’s no question that the science we’ll be doing at the Wolfram Institute will lead to things of great value to the world. But it won’t be near-term commercial value. And our fundamental model is to concentrate on producing the best and broadest long-term basic research—rather than to aim for things that can be deployed directly in specific products that provide immediate value to specific customers.</p>
<p>In a sense, our “customer” is the world at large—and the future. But in the present we need a way to support our researchers and fellows. So far we’ve basically been incubating the Wolfram Institute within our existing organization, with me effectively footing the bill. But as we launch the full Wolfram Institute we need a larger scale of support, and we’re counting on having a network of people and organizations to provide that.</p>
<p>Some of the support will be for specific researchers, fellows or students, perhaps drawn from particular geographies, backgrounds or communities. Some of it will be for specific projects. But it’s also important to have a stable core of support that will allow the institute to pursue long-term basic research that will likely deliver many of its most valuable results through developments that are in effect computationally irreducible to predict in advance.</p>
<p>It’s difficult to know how society at large should value the general activity of basic research, and it’s easy to criticize the inefficiencies of a large-scale “just let researchers do what they want” approach. But with the Wolfram Institute we have a very different model. We’re starting the institute right now for a specific reason: we’ve got a new paradigm that’s just opened up an amazing collection of possibilities. And we plan to pursue those possibilities in an efficient and tightly managed way, optimized for innovation and new ideas.</p>
<p>When I look at our Physics Project and what we’ve achieved so far with it, I’m frankly amazed at how quickly and comparatively frugally we’ve managed to do it. (Yes, it helps that at least so far we need only people and computers, not telescopes and particle accelerators.) And as we scale this up to all the various projects we plan at the Wolfram Institute, it’s almost absurd how much of long-term significance I expect we will be able to deliver for how comparatively little.</p>
<p>The Wolfram Physics Project has been done as an entirely geodistributed project—building on the 30+ years of experience with coherent geodistributed work that we’ve had at Wolfram Research. And even though its projects will be tightly managed, the Wolfram Institute will also primarily be geodistributed, although we plan regular physical events and we’ll probably have some physical locations available. </p>
<p>It’s been great in working on the Wolfram Physics Project to have what we’ve been doing be so open, and to be able to share it with so many people. And as we launch the Wolfram Institute I’m looking forward to having all sorts of people involved, both within the institute, and as supporters of it.</p>
<p>It’s been exciting these past many months seeing the whole multicomputational paradigm emerge, and seeing more and more possibilities reveal themselves. It’s a remarkable—if overwhelming—collection of opportunities, and I believe a historic moment for the progress of science. And as we launch the Wolfram Institute I hope that with the help of enough supporters we’ll be able to deliver many dramatic results that will have great long-term value to the world and to the arc of intellectual history. </p>
<div class="purplestripe">
<strong>Learn more about our plans: <a href="mailto:institute@wolframfoundation.org" target="_blank">contact the Wolfram Institute team &#187;</a></strong>
</div>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2022/04/weve-got-a-science-opportunity-overload-its-time-to-launch-the-wolfram-institute/feed/</wfw:commentRss>
		<slash:comments>7</slash:comments>
		</item>
		<item>
		<title>On the Concept of Motion</title>
		<link>https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/</link>
		<comments>https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/#comments</comments>
		<pubDate>Fri, 18 Mar 2022 21:40:17 +0000</pubDate>
		<dc:creator><![CDATA[Stephen Wolfram]]></dc:creator>
				<category><![CDATA[Language and Communication]]></category>
		<category><![CDATA[Philosophy]]></category>
		<category><![CDATA[Physics]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=36204</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/03/motion-icon2.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>How Is It That Things Can Move? It seems like the kind of question that might have been hotly debated by ancient philosophers, but would have been settled long ago: how is it that things can move? And indeed with the view of physical space that’s been almost universally adopted for the past two thousand [&#8230;]]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/03/motion-icon2.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><h2 id='how-is-it-that-things-can-move?'>How Is It That Things Can Move?</h2>
<p>It seems like the kind of question that might have been hotly debated by ancient philosophers, but would have been settled long ago: how is it that things can move? And indeed with the view of physical space that’s been almost universally adopted for the past two thousand years it’s basically a non-question. As crystallized by the likes of Euclid it’s been assumed that space is ultimately just a kind of “geometrical background” into which any physical thing can be put—and then moved around. </p>
<p>But in our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> we’ve developed a fundamentally different view of space—in which space is not just a background, but has its <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#what-is-space'>own elaborate composition and structure</a>. And in fact, we posit that space is in a sense everything that exists, and that all “things” are ultimately just features of the structure of space. We imagine that at the lowest level, space consists of large numbers of abstract “atoms of space” connected in a hypergraph that’s continually getting updated according to definite rules and that’s a huge version of something like this:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 3px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822Zimg1.png" alt='' title='' width='578' height='219' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822Yimg1_copy-v3.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><span id="more-36204"></span></p>
<p>But with this setup, what even is motion? It’s no longer something baked into our basic ideas about space. Instead—much like the ancient philosophers imagined—it’s something we can try to derive from a lower level of description. It’s not something we can take for granted—and indeed it’s going to turn out that its character depends in fundamental ways on issues like <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>our nature as observers</a>.</p>
<p>To have a concept of motion, one has to have not only a concept of space—and time—but also a concept of “things”. One has to have something definite that one can imagine moves through space with time. And in effect the concept of “pure motion” is that there can be a “thing” that “just moves” without “changing its character”. But if the thing is “made of atoms of space” that are continually getting updated, what does this mean? Somehow the identity of the “thing” has to be associated with some collective characteristic that doesn’t depend on the particular atoms of space from which it’s made.</p>
<p>There’s an immediate analogy here. Consider something like a vortex in a fluid. The vortex can move around as a “thing” even though “underneath” it’s made of an ever-changing collection of lots of discrete molecules. If we looked in microscopic detail, we’d see effects from those discrete molecules. But at the scale at which we humans typically operate, we just consider there to be a definite “thing” we describe as a vortex—that at this level of description exhibits “pure motion”.</p>
<p>Our fundamental model of space is not so different from this. At the lowest level there’s continual activity associated with the application of rules that create new atoms of space and new connections between them. And just as continual collisions between molecules in a fluid “knit together” the structure of the fluid, so also the continual rewriting of the hypergraph that connects atoms of space knits together the structure of space. But then on top of this there can be “localized collective features” that have a certain persistence. And these are the “things” (or “objects”) that we can consider to “show pure motion”.</p>
<p>Physics suggests two kinds of things like this. The first are particles, like electrons or photons or quarks. And the second are black holes. As of now, we have no specific evidence that particles like electrons are “made of anything”; they just seem to act like geometrical points. But in our Physics Project we posit that they are <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#elementary-particles-old-and-new'>ultimately &#8220;made of space&#8221;</a> and actually contain large numbers of atoms of space that collectively form some kind of persistent structure a bit like a vortex in a fluid. </p>
<p>Black holes operate on a very different scale—though I suspect they’re actually very similar in character to particles. And in fact for black holes <a href='https://www.wolframphysics.org/bulletins/2020/05/event-horizons-singularities-and-other-exotic-spacetime-phenomena/' target=_blank rel=noopener>we already have a sense</a> from traditional general relativity that they can just be “made of space”—though without our discrete underlying model there are some inevitable mathematical hacks involved.</p>
<p>So what is it that leads to persistent structures? Often one can identify it as something “topological”. There’s an underlying “medium” in which all sorts of essentially continuous changes can be made. But then there are structures that can’t be created or destroyed by such continuous changes—in effect because they are “topologically distinct”. Vortices are one such example—because around the core of the vortex, independent of what “continuous deformations” one makes, there’s always a constant circulation of fluid, that can’t be gotten rid of except by some kind of discontinuous change. (In reality, of course, vortices are eventually damped out by viscosity generated as a result of microscopic motion, but the point is that this takes a while, and until it’s happened, the vortex can reasonably be considered to persistently be a “thing”.)</p>
<p>In our Physics Project, we’ve already been able to figure out quite a bit about how black holes work. We know less about the specifics of how particles work. But the basic idea is that somehow there are features that are local and persistent that we can identify as particles—and perhaps these features have topological origins that make it inevitable that, for example, all electrons “intrinsically seem the same”, and that there are only a discrete set of possible types of particles (at least at our energy scales).</p>
<p>So in the end what we imagine is that there are certain “carriers of pure motion”: certain collective features of space that are persistent enough that we can consider them to “just move”, without changing. At the outset it’s not obvious that any such features should exist at all, and that pure motion should ever be possible. Unlike in the traditional “pure geometrical” view of space, in our Physics Project it’s something one has to explicitly derive from the underlying structure of the model—though it seems quite likely that it’s ultimately an inevitable and ubiquitous consequence of rather general “topological” features of hypergraph rewriting. </p>
<p>We keep on talking about “features that persist”. But what does this really mean? As soon as something moves it’ll be made of different atoms of space. So what does it mean for it to “persist”? In the end it’s all about what observers perceive. Do we view it as being the “same thing” but in a different place? Or do we say it’s different because some detail of it is different?</p>
<p>And actually this kind of issue already comes up even before we’re talking about motion and the persistence of “objects”: it’s crucial just in the emergence of the basic notion of space itself. At the level of individual atoms of space there isn’t anything we can really call “space”, just like at the level of individual molecules there isn’t anything we can reasonably call a fluid. And instead, the notion of space—or of fluids—emerges when we look at things in the kind of way that observers like us do. We’re not tracking what’s happening at the level of individual atoms of space—or individual molecules; we’re looking at things in a more coarse-grained way, that it turns out we can summarize in terms of what amount to continuum concepts.</p>
<p>Once again, it’s not obvious things will work like this. Down at the level of atoms of space—or, for that matter, molecules—there are definite computational rules being followed. And from the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a> it’s almost inevitable that there’ll be <a href='https://www.wolframscience.com/nks/p737--computational-irreducibility/'>computational irreducibility</a>, implying that there’s no way to find the outcome except in effect by doing an irreducible amount of computational work. If we as observers were computationally unbounded then, yes, we could always “decode” what’s going on, and “see down” to the behavior of individual atoms of space or individual molecules. But if we’re computationally bounded we can’t do this. And, as I’ve argued <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>elsewhere</a>, that’s both why we believe in the Second Law of thermodynamics, and why we perceive there to be something like ordinary “geometrical space”. </p>
<p>In other words, our inability to track the details means that in a first approximation we can summarize what’s going on just by saying we’ve got something that seems like our ordinary notion of space. And going one step beyond that is what has us talking about “persistent objects in space”. But now we’re back to discussing what it means for an object to “be persistent”. Ultimately it’s that we as observers somehow perceive it to “be the same”, even though perhaps in a “different place”. </p>
<p>A key finding of our Physics Project is that certain basic laws of physics—in particular general relativity and quantum mechanics—inevitably seem to emerge as soon as we assume that observers have two basic characteristics: first, that they are computationally bounded, and second, that they are persistent in time.</p>
<p>In our Physics Project the passage of time corresponds to the inexorable (and irreducible) computational process of updating the “spatial hypergraph” that represents the lowest-level structure of the universe. And when we talk formally we can imagine looking at this “from the outside”. But in reality we as observers must be embedded within the system, being continually updated and changed just like the rest of the system.</p>
<p>But here there’s a crucial point. Even though the particular configuration of atoms in our brains is continually changing, we think it’s “still us”. Or, in other words, we have the perception that we persist through time. Now it could be that this wouldn’t be a consistent thing to imagine, and that if we imagined it, we’d never be able to form a coherent view of the world. But in fact what our Physics Project implies is that with this assumption we can (subject to various conditions) form a coherent view of the world, and it’s one where the core known laws of physics are in evidence.</p>
<p>OK, so we ourselves are persistent essentially because we assume that we are (and in most situations nothing goes wrong if we do this). But the persistence of something like a particle, or a black hole, is a different story. From our point of view, we’re not “inside” things like these; instead we’re “looking at them from the outside”. </p>
<p>But what do we notice in them? Well, that depends on our “powers of observation”. The basic idea of particles, for example, is that they should be objects that can somehow be separated from each other and from everything else. In our Physics Project, though, any particle must ultimately be “embedded as a part of space”. So when we say that it’s a “separable object” what we’re imagining is just that there’s some attribute of it that we can identify and observe independent of its “environment”. </p>
<p>But just what this is can depend on our characteristics as observers, and the fact that we operate on certain scales of length and time. If we were able to go down to the level of individual atoms of space we probably wouldn’t be able to “see” that there’s anything like a particle there at all. That’s something that emerges for observers with our kinds of characteristics.</p>
<p>Quite what the full spectrum of “conceivable persistent features” might be isn’t clear (though we’ll see some exotic possibilities below). But as soon as one can identify a persistent feature, one can ask about motion. Is it possible for that feature to “move” from being embedded at one “place” to another?</p>
<p>There’s yet another subtlety here, though. Our ordinary experience of motion involves things going from one place to another by progressively “visiting every place in between”. But ultimately, as soon as we’re dealing with discrete atoms of space, this can’t be how things work. And instead what we need to discuss is whether something somehow “maintains its form” at intermediate stages as it “moves”.</p>
<p>For example, we probably wouldn’t consider it motion in the ordinary sense if what we had was a kind of <em>Star Trek</em>&#8211;like “transporter” in which objects get completely disassembled, then get “transmitted to a different place” and reassembled. But somehow it does seem more like “ordinary motion” if there’s a collection of pixel values that move across a computer screen—even if at intermediate moments they are distorted by all sorts of aliasing effects.</p>
<p>Even in ordinary general relativity there are issues with the idea of motion—at least for extended objects. If we’re in a region of space that’s reasonably flat it’s fine. But if we’re near a spacetime singularity then inevitably objects won’t be able to “maintain their integrity”—and instead they’ll effectively be “shredded”—and so can’t be interpreted as “just moving”. When we’re dealing not with geometric continuum spacetime but instead with our spatial hypergraph, there’ll always be something analogous to “shredding” on a small enough scale, and the question is whether at the level we perceive things we’ll be able to tell that there’s something persistent that isn’t shredded.</p>
<p>So, in the end, how is it that things can move? Ultimately it’s something that has to be formally derived from the underlying model, based on the characteristics of the observer. At least conceptually the first step is to identify what kinds of things the observer considers “the same”, and what details make them “seem different”. Then one needs to determine whether there are structures that would be considered the same by the observer, but which progressively change ”where they’re embedded”. And if so, we’ve identified “motion”.</p>
<p>For us humans with our current state of technological development, particles and objects made of them are the most obvious things to consider. So in a sense the question reduces to whether there are “lumps of space” that persist in maintaining (perhaps topological) features recognized by our powers of perception. And to determine this is a formal question that’s important to explore as our Physics Project progresses.</p>
<h2 id='motion-can-be-a-complicated-story'>Motion Can Be a Complicated Story</h2>
<p>We’ve talked about “persistent structures” as “carriers of pure motion”. But how do such structures actually work? Ultimately it can be a very complicated story. But here we’ll consider a simplified case that begins to illustrate some of the issues. We’ll be talking not about the actual model of space in our Physics Project, but instead about the <a href='https://www.wolframscience.com/nks/chap-2--the-crucial-experiment/'>cellular automaton systems</a> I’ve studied for many years in which space is effectively predefined to consist of a rigid array of cells, each with a discrete value updated according to a local rule. </p>
<p>Here’s an example in which there quickly emerge obvious “<a href='https://www.wolframscience.com/nks/p282--structures-in-class-4-systems/'>localized persistent structures</a>” that we can think of as being roughly like particles:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img2.png" alt='' title='' width='578' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Some “stay still” relative to the fixed cellular automaton background; others “move”. With this specific cellular automaton, it’s easy to identify certain <a href='https://www.wolframscience.com/nks/p284--structures-in-class-4-systems/'>possible &#8220;particles&#8221;</a>, some “staying still” and some “showing motion”: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img3.png" alt='' title='' width='578' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But consider instead a cellular automaton with very different behavior:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: -3px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img4.png" alt='' title='' width='578' height='301' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Does this support the concept of motion? Certainly not as obviously as the previous case. And in fact there doesn’t seem to be anything identifiable that systematically propagates across the system. Or in other words, at least with our typical “powers of perception” we don’t “see motion” here.</p>
<p>There’s a whole spectrum of more complicated cases, however. Consider for example:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img5.png" alt='' title='' width='578' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here one can easily identify “particle-like” structures, but they never seem to “keep moving forever”; instead they always fairly quickly interact and “annihilate”. But to expect otherwise is to imagine an idealization in which there is at some level “only one object” in the whole system. As soon as there are multiple objects it’s basically inevitable that they’ll eventually interact. Or, put another way, motion in any real situation will never be about “persistently moving” forever; it’s just about persisting for at least long enough to be identified as something separate and definite. (This is very similar to the situation in quantum field theory where actual particles eventually interact, even though their formal definition assumes no interaction.) </p>
<p>Here’s another case, where on a large scale there’s no “obvious motion” to be seen</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img6.png" alt='' title='' width='578' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>but where locally one can identify rather simple “particle-like” structures</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img7.png" alt='' title='' width='578' height='181' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>that on their own can be thought of as “exhibiting motion”, even though there are other structures that for example just expand, apparently without bound:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: -3px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img8.png" alt='' title='' width='578' height='246' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Sometimes there can be lots of “particle-like” activity, but with other things consistently mixed in:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: -3px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img9.png" alt='' title='' width='577' height='346' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a slightly more exotic example, where continual “streams of particles” are produced:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img10.png" alt='' title='' width='575' height='297' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In all the examples we’ve seen so far the “particles” exist on a “blank” or otherwise simple background. But it’s also perfectly possible for them to be on a <a href='https://www.wolframscience.com/nks/notes-6-8--background-in-rule-110/'>background with more elaborate structure</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img11.png" alt='' title='' width='578' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But what about a seemingly random background? Here’s at least a partial example where there are both structures that “respond to the background” and ones that have “intrinsic particle-like form”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img12.png" alt='' title='' width='578' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What does all this mean for the concept of motion? The most important point is that we’ve seen that “objects” that can be thought of as “showing pure motion” can emerge even in underlying systems that don’t seem to have any particular “built-in concept of motion”. But what we’ve also seen is that along with “objects that show pure motion” there can be all sorts of other effects and phenomena. And in our actual Physics Project these can necessarily in a sense be much more extreme. </p>
<p>The cellular automaton systems we’ve been discussing so far have a built-in underlying notion of space, which exists even if the system basically “doesn’t do anything”. But in our Physics Project the structure of space itself is created through activity. So—as we discussed in the previous section—“objects” or particles have to somehow exist “on top” of this. </p>
<p>It’s fairly clear roughly how such particles must work, being based for example on essentially topological features of the system. But we don’t yet know the details, and there’s probably quite a depth of mathematical formalism that needs to be built to clarify them. It’s still possible, though, to explore at least some toy examples. </p>
<p>Consider the hypergraph rewriting rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: -5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img13.png" alt='' title='' width='486' height='75' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It maintains a very simple (effectively 1D and cyclic) form of space (with rewrites shown in red):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 3px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img14B.png" alt='' title='' width='635' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img14_copy.txt">
					<span class='close' id='14_out'>&amp;#10005</span></p>
<pre class='text' id='14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If the initial conditions contain a feature that can be interpreted as something like a “particle” then the rules are such that this can “move around”, but can’t be destroyed:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 3px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img15B.png" alt='' title='' width='635' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img15_copy.txt">
					<span class='close' id='15_out'>&amp;#10005</span></p>
<pre class='text' id='15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s a little clearer what’s going on if instead of looking at an explicit sequence of hypergraphs we instead generate <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#the-graph-of-causal-relationships'>causal graphs</a> (see the next section) that show the “spacetime” network of causal relationships between updating events. Here’s the causal graph for the “space only, no particles” case (where here we can think of time as effectively running from left to right):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img16.png" alt='' title='' width='567' height='160' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img16_copy.txt">
					<span class='close' id='16_out'>&amp;#10005</span></p>
<pre class='text' id='16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the causal graph when there’s a “particle” included:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img17.png" alt='' title='' width='566' height='185' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img17_copy.txt">
					<span class='close' id='17_out'>&amp;#10005</span></p>
<pre class='text' id='17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s the result when there are “two particles”—where things begin to get more complicated:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img18.png" alt='' title='' width='569' height='188' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img18_copy.txt">
					<span class='close' id='18_out'>&amp;#10005</span></p>
<pre class='text' id='18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='the-observer-is-actually-inside-the-system'>The Observer Is Actually inside the System</h2>
<p>We’ve discussed what it takes for an observer to identify something as “moving” in a system. But so far there’s an important piece we’ve left out. Because in effect we’ve assumed that the observer is “outside the system” and “looking in”. But if we imagine that we’re dealing with a complete model of the physical universe the observer necessarily has to “be inside”. And ultimately the observer has got to be “made of the same stuff” as whatever thing it is to which we’re attributing motion.</p>
<p>How does an observer observe? Ultimately whatever is “happening in the outside world” must affect the observer, and the observer must change as a result. Our Physics Project has a fundamental way to think about change, in terms of elementary “updating events”. In addition to imagining that space is made up of discrete “atoms of space”, we imagine that change is made up of discrete “atoms of change” or “events”.</p>
<p>In the hypergraph that represents space and everything in it, each event updates (or “rewrites”) the hypergraph, by “consuming” some collection of hyperedges, and generating a new collection. But actually events are a more general concept that don’t for example depend on having an underlying hypergraph. We can just think of them as <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/#the-formal-structure-of-multicomputation'>consuming collections of &#8220;tokens&#8221;</a>, whatever they may be, and generating new ones. </p>
<p>But events satisfy a very important constraint, which in some sense is responsible for the very existence of what we think of as time. And the constraint is that for any event to happen, all the tokens it’s going to consume have to exist. But those tokens have to have “come from somewhere”. And at least if we ignore what happens “at the very beginning” every token that’s going to be consumed has to have been generated by some other event. In other words, there’s a certain necessary ordering among events. And we can capture this by constructing a <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/events-and-their-causal-relationships/' target=_blank rel=noopener>causal graph</a> that captures the causal relationships that must exist between events.</p>
<p>As a <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/causal-foliations-and-causal-cones/#p-237' target=_blank rel=noopener>simple example</a>, here’s a system that consists of a string of As and Bs, and in which each “updating event” (indicated as a yellow box) corresponds to an application of the rule BA&#8594;AB:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822Zimg2.png" alt='' title='' width='496' height='387' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822Zimg2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the causal graph for this superimposed:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822Zimg3.png" alt='' title='' width='496' height='387' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822Zimg3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Imagine that some collection of characters on the left-hand side represents “an observer”. <a href='https://www.wolframscience.com/nks/p516--space-time-and-relativity/'>The only way this observer can be affected</a> by what happens on the right-hand side is as a result of its events being affected by events on the right-hand side. But what event is affected by what other event is exactly what the causal graph defines. And so in the end we can say that what the observer can “perceive” is just the causal graph of causal relationships between events.</p>
<p>“From the outside” we might see some particular “absolute” arrangement of events in the cellular-automaton-like picture above. But the point is that “from the inside” the observer can’t perceive this “absolute arrangement”. All they can perceive is the causal graph. Or, put another way, the observer doesn’t have any “absolute knowledge” of the system; all they “know about” is “effects on them”.</p>
<p>So what does this imply about motion? In something like a cellular automaton there’s a fixed concept of space that we typically “look at from the outside”—and we can readily “see what’s moving” relative to that fixed, absolute “background space”. But in something like our Physics Project we imagine that any observer must be inside the system, able to “tell what’s going on” only from the causal graph.</p>
<p>In standard physics we might posit that to find out “where something is” we’d have to probe it, say with light signals. Here we’ve broken everything down to the level of elementary events and we’re in some sense “representing everything that can happen” in terms of the causal graph of relationships between events.</p>
<p>And in fact as soon as we assume that our “perceived reality” has to be based on the causal graph, we’ve inevitably abandoned any absolute notion of space. All we as observers can know is “relative information”, defined for us by the causal graph.</p>
<p>Looking at our BA&#8594;AB system above we can see that “viewed from the outside” there’s a lot of arbitrariness in “when we do” each update. But it turns out that none of this matters to the causal graph we construct—because this particular underlying system has the property of <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-phenomenon-of-causal-invariance/' target=_blank rel=noopener>causal invariance</a>, which makes the causal graph have the same structure independent of these choices. And in general whenever there’s causal invariance (which there inevitably will be at least at the <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>ultimate level of the ruliad</a>) this has the important implication that there’s <a href='https://www.wolframscience.com/nks/p516--space-time-and-relativity/'>relativistic invariance in the system</a>.</p>
<p>We won’t go into this in detail here. Because while it certainly affects the specifics of how motion works there are more fundamental issues to discuss about the underlying concept of motion itself. </p>
<p>We’ve already discussed the idea that observers like us posit our own persistence through time. But now we can be a bit more precise—and say that what we really posit is that we “follow the causal graph”. It could be that our perception samples all sorts of events—that we might think of as being “all over spacetime”. But in fact we assume that we don’t “jump around the causal graph”, and that instead our experiences are based on “coherent paths” through the causal graph.</p>
<p>We never in any absolute sense “know where we are”. But we construct our notion of place by positing that we exist at a definite—and in a sense “coherent”—place, relative to which we perceive other things. If our perception of “where we are” could “jump around” the causal graph, we’d never be able to define a coherent concept of pure motion. </p>
<p>To make this a little bit “more practical” let’s discuss (as <a href='https://writings.stephenwolfram.com/2020/10/faster-than-light-in-our-model-of-physics-some-preliminary-thoughts/'>I did some time ago</a>) the question of faster-than-light travel in our Physics Project. By the very definition of the causal graph the effect of one event on another is represented by the presence of a “causal path” between the events within the graph. We can assume that “traversing” each “causal edge” (i.e. going from one event to the next) takes a certain elementary time. But to work out “how fast the effect propagated” we need to know how “far away in space” the event that was affected is.</p>
<p>But recall that all the observer ultimately has available is the causal graph. So any questions about “distances in space” have to be deduced from the causal graph. And the nature of the observer—and the assumptions they make about themselves—inevitably affect the deductions they make. </p>
<p>Imagine a causal graph that is mostly a grid, but suppose there is a single edge that “jumps across the grid”, connecting events that would otherwise be distant in the graph. If we as observers were sensitive to that single edge it’d make us think that the two events it joins are “very close together”. But if we look only at the “bulk structure” of the causal graph, we’d ignore that edge in our definition of the “layout of space”, and consider it only as some kind of “microscopic anomaly”. </p>
<p>So should we in fact <a href='https://writings.stephenwolfram.com/2020/10/faster-than-light-in-our-model-of-physics-some-preliminary-thoughts/#to-travel-to-communicate'>include that single edge when we define our concept of motion</a>? If we posit that we “exist at a definite place” then the presence of such an edge in what “constitutes us” means the “place we’re at” must extend to wherever in the causal graph the edge reaches. But if there are enough “stray edges” (or in general <a href='https://writings.stephenwolfram.com/2020/10/faster-than-light-in-our-model-of-physics-some-preliminary-thoughts/#can-we-make-tunnels-in-space'>what I call &#8220;space tunnels&#8221;</a>) we as observers would inevitably get very “delocalized”.</p>
<p>To be able to “observe motion” we’d better be observers who can coherently form a notion of space in which there can be consistent “local places”. And if there’s some elaborate pattern of space tunnels this could potentially be broken. Although ultimately it won’t be unless the space tunnels are somehow coherent enough to “get observers like us through them”.</p>
<p>Earlier we saw that the concept of motion depends on the idea that we as observers can identify “things” as “persistent” relative to the “background structure of space”. And now we can see that in fact motion depends on a certain persistence in time and “coherence” in place not only for the “thing” we posit is moving, but also for us as observers observing it.</p>
<p>In our Physics Project we imagine that both time and space are fundamentally discrete. But the concept of persistence—or “coherence”—implies that at least at the level of our perception there must be a certain effectively continuous character to them. There’s a certain resonance with things like Zeno’s paradoxes. Yes, our models may define only what happens at a sequence of discrete steps. But the perception that we persistently exist will make us effectively fill in all the “intervening moments”—to form what we experience as a “continuous thread of existence”. </p>
<p>The idea that pure motion is possible is thus intimately connected to the idea of the continuum. Pure motion in a sense posits that there is some kind of “thread of existence” for “things” that leads from one place and time to another. But ultimately all that’s relevant is that observers like us perceive there to be such a thread. And the whole point is that the possibility of such perception can be deduced as a matter of formal derivation from the structure of the underlying model and general characteristics of us as observers.</p>
<p>But in describing our perception what we’ll tend to do is to talk in terms of the continuum. Because that’s the level of description at which we can abstractly discuss pure motion, without having to get into the mechanics of how it happens. And in effect the “derivation of pure motion” is thus directly connected to the “derivation of the continuum”: pure motion is in a sense an operational consequence not necessarily of an actual continuum world, but of a continuum perception of the world by an embedded observer like us.</p>
<h2 id='motion-beyond-physical-space:-the-branchial-case'>Motion beyond Physical Space: The Branchial Case</h2>
<p>Our everyday experience of motion has to do with ordinary, physical space. But the <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a> inspired by our Physics Project inevitably leads to other kinds of space—that are different in character and interpretation from ordinary, physical space, but have deep analogies to it. So in the context of these other kinds of space, what analogs of the concept of “pure motion” might there be?</p>
<p>Let’s talk first about <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-concept-of-branchial-graphs/' target=_blank rel=noopener>branchial space</a>, which in our Physics Project is interpreted as the space of quantum states. To approach this from a simple example, let’s consider the multiway graph generated by applying the rule {A&#8594;AB,B&#8594;A} in all possible ways to each “state”: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img21.png" alt='' title='' width='529' height='274' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/sw031822img21_copy.txt">
					<span class='close' id='21_out'>&amp;#10005</span></p>
<pre class='text' id='21_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can think of each path through this graph as defining a possible history for the system, leading to a complicated pattern of possible “threads of history”, sometimes branching and sometimes merging. But now consider taking a “branchial slice” across this system—and then characterizing the “multicomputational behavior” of the system by constructing what we call the branchial graph by joining states that share an ancestor on the step before: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img style="margin-left: 5px" class='' src="https://content.wolfram.com/uploads/sites/43/2022/03/finalimagev5.png" alt='' title='' width='522' height='258' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/finalimagev4_copy.txt">
					<span class='close' id='22_out'>&amp;#10005</span></p>
<pre class='text' id='22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For physics, we interpret the nodes of these graphs as quantum states, so that the branchial graph effectively gives us a “<a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/quantum-formalism/' target=_blank rel=noopener>map of quantum entanglements</a>” between states. And just like for the hypergraph that we imagine defines the relations between the atoms of physical space, we think about the limit of a very large branchial graph—that gives us what we can call branchial space. As we’ve <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/typical-forms-of-branchial-graphs/' target=_blank rel=noopener>discussed elsewhere</a>, branchial space is in many ways much wilder than ordinary, physical space, and is for example probably exponential-dimensional.</p>
<p>In basic quantum mechanics, distances in branchial space are probably related to differences in phase between quantum amplitudes. In more complicated cases they probably correspond to more complicated transformations between quantum states. So how might we think about “motion” in branchial space?</p>
<p>Although we’ve <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/matter-energy-and-gravitation/' target=_blank rel=noopener>discussed it at length elsewhere</a>, we didn’t above talk about what we might call “bulk motion” in physical space, as effectively produced by the curvature of space associated with gravity. But in branchial space there <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/correspondence-between-relativity-and-quantum-mechanics/' target=_blank rel=noopener>seems to be a directly analogous phenomenon</a>—in which the presence of energy (which corresponds to the density of activity in the system) leads to an effective curvature in branchial space which deflects all paths, in a way that seems to produce the change of quantum phase specified by the path integral. </p>
<p>But can we identify specific things moving and preserving their identity in branchial space, as we can identify things like particles moving in physical space? It’s a tricky story, incompletely figured out, and deeply connected to issues of quantum measurement. But just like in physical space, an important issue is to define what “observers like us” are like. And a crucial first step is to realize that—as entities embedded in the universe—we must inevitably have multiple histories. So to ask how we perceive what happens in the universe is in effect to ask how a “branching mind” perceives a branching universe. </p>
<p>And the crucial point—directly analogous to what we’ve discussed in the case of physical space—is that whatever one might be able to “see from outside”, we “internally” assume that we as observers have a certain persistence and coherence. In particular, even though “from the outside” the multiway graph might show many branching threads of history, our perception is that we have a single thread of experience. </p>
<p>In ordinary quantum mechanics, it’s quite tricky to see how this “conflation of threads of history” interacts even with “bulk motion” in branchial space. Typically, as in traditional quantum measurement, one just considers “snapshots” at particular times. Yes, one can imagine that things like <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/wave-particle-duality-uncertainty-relations-etc/' target=_blank rel=noopener>wave packets spread out in branchial space</a>, but—a bit like discussing “motion” for gravitational fields or even gravitational waves in spacetime—there isn’t the same kind of systematic concept of pure motion that we’ve encountered with things like particles in physical space.</p>
<p>When we get to quantum field theory—or the full quantum gravity associated with our models—it will probably be a different story. Perhaps we can view certain configurations of quantum fields as being like structures in branchial space, that an observer will consider to be localized and persistent. Indeed, it’s easy to imagine that in the branchial graph—or even more so the multiway causal graph—there may be things like “topologically stable” structures that we can reasonably think of as “things that move”. But just what the character and interpretation of such things might be, we don’t yet know.</p>
<h2 id='motion-in-rulial-space'>Motion in Rulial Space</h2>
<p>There’s physical space, and there’s branchial space. But in a sense the ultimate kind of space is rulial space. The story begins with <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>, which represents the entangled limit of all possible computations. The ruliad is what we imagine underlies not only physics <a href='https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/'>but also mathematics</a>. When we “experience physics” we’re sampling a certain slice of the ruliad that’s accessible to physical observers like us. And when we “experience mathematics” we’re sampling a slice of the ruliad that’s accessible to “mathematical observers” like us. </p>
<p>So what do different “places” in rulial space correspond to? Fundamentally they’re different choices for the rules we sample from the ruliad. Ultimately everything is part of the unique object that is the ruliad. But at different places in the ruliad we’ll have different specific experiences as observers.</p>
<p>Inevitably, though, there’s a translation that can be made. It’s basically like the situation with different computational systems that—according to the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a>—are generically universal: there’s always an “interpreter” that can be created in one system that can translate to the other.</p>
<p>In a sense the idea of different places in rulial space is quite familiar from our everyday experience. Because it’s directly analogous to the idea that different minds “parse” and “experience” the world differently. Whether one’s talking about a human brain or an artificial neural net, the details of its past experience will cause it to represent things in the world in different ways, and to process them differently.</p>
<p>At the very lowest level, the components of the systems will—like any other universal computer—be able to emulate the detailed operations of other systems. But at this level there are no “things that are moving from one place to another in rulial space”; everything is just being “atomized”.</p>
<p>So are there in fact robust structures that can “move across rulial space”? The <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#communicating-across-rulial-space'>answer, I think, is yes</a>. But it’s a strange story. I suspect that the analog in rulial space of particles in physical space is basically concepts—say of the kind that might be represented by words in a human <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>(or computational) language</a>.</p>
<p>Imagine thinking about a cat. There’s a particular representation of a cat in one’s brain—and in detail it’ll be different from the representation in anyone else’s brain. But now imagine using the word “cat”, or in some way communicating the concept of “cat”. The “cat” concept is something robust, that we’re used to seeing “transmitted” from one brain to another—even though different brains represent it differently.</p>
<p>Things might not work this way. It could be that there’d be no robust way to transmit anything about the thinking going on in one brain to another brain. But that’s where the idea of concepts comes in. They’re an abstracted way to “transport” some feature of thinking in one brain to another.</p>
<p>And in a sense they’re a reflection of the possibility of pure motion in rulial space: they’re a way to have some kind of persistent “thing” that can be traced across rulial space. </p>
<p>But just like our examples of motion, the way this works depends on the characteristics of the observers observing it—and insofar as we are the observers, it therefore depends on us. We know from experience that we form concepts, and that they have a certain robustness. But why is this? In a sense, concepts are a way of coarse-graining things so that we—as computationally bounded entities—can deal with them. And the fact that we take concepts to maintain some kind of fixed meaning is part of our perception that we maintain a single persistent thread of experience.</p>
<p>It is strange to think that something as explicit and concrete as an electron in physical space could in some sense be similar to an abstract concept like “cat”. But this is the kind of thing that happens when one has something as fundamental and general as the ruliad underlying everything.</p>
<p>We know that our general characteristics as observers inevitably lead to certain general laws of physics. And so similarly we can expect that our general characteristics as observers will lead to certain general laws about the overall representation of things. Perhaps we’ll be able to identify analogs of energy and gravity and quantum mechanics. But a first step is to identify the analog of motion, and the kinds of things which can exhibit pure motion.</p>
<p>In physical space, particles like electrons are our basic “carriers of motion”. In rulial space “concepts” seem to be our best description of the “carriers of motion” (though there are presumably higher-level constructs too, like analogies and syntactic structures). And, yes, it might seem very odd to say that something as apparently human-centered as “concepts” can be associated with something as fundamental as motion. But as we’ve emphasized several times here, “pure motion” is something that relies on the observer, and on the observer having what amounts to a “sensory apparatus” that considers a “thing” to maintain a persistent character. So when it comes to the representation of “arbitrary content” it’s not surprising that we as observers have to talk about the fundamental way we think about things, and about constructs like concepts.</p>
<p>But are things like concepts the only kind of persistent structures that can exist in rulial space? They’re ones that we as observers can readily parse out of the ruliad—based for example on the particular ways of thinking that we’ve embraced so far in our intellectual development. But we can certainly imagine that there’s the possibility for “robust communication” independent, for example, of human minds.</p>
<p>There’s a great tendency, though, to try to relate things back to human constructs. For example, we might consider a machine-learning system that’s successfully discovered a <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/#the-concept-of-concepts'>distinction that can repeatedly be used</a> for some purpose. And, yes, we can imagine “transporting” that to a different system. But we’ll tend to think of this again in terms of some “feature” or “concept”, even though, for example, we might not happen (at least yet) to have some word for it in a human language, or a computational language intended for use by humans.</p>
<p>We can similarly talk about communication with or between other animals, or, more ambitiously, we can discuss <a href='https://writings.stephenwolfram.com/2018/01/showing-off-to-the-universe-beacons-for-the-afterlife-of-our-civilization/'>communications with or between &#8220;alien intelligences&#8221;</a>. We might assume that we would be able to say nothing about such cases. But ultimately we imagine that everything is represented somewhere in the ruliad. And in effect by doing things like <a href='https://www.wolframscience.com/nks/chap-3--the-world-of-simple-programs/'>exploring arbitrarily chosen programs</a> we can investigate possible “raw material” for “alien intelligence”.</p>
<p>And it’s then at some level a <a href='https://www.wolframscience.com/nks/'>matter of science</a>—or, more specifically, <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#the-pure-basic-science-of-ruliology'>ruliology</a>—to try to identify “transportable elements” between different programs, or, in effect, between different places in rulial space. At a simple level we might say we’re looking for “common principles”—which puts us back to something like “concepts”. But in general we can imagine a more elaborate computational structure for our “transportable elements” in rulial space.</p>
<p>In physical space we know that we can make “material objects” out of particles like electrons and quarks, and then “move these around” in physical space. Within the domain of “human-thinking rulial space” we can do something analogous with descriptions “made from known concepts”. And in both cases we can imagine that there are more general constructs that are “possible”, even though we human observers as we are now might not be able to “parse them out of the ruliad”.</p>
<p>The constraints of computational boundedness and perception of persistence are probably pretty fundamental to any form of experience that can be connected to us. But as we develop what amount to new sensory capabilities or new ways of thinking we can expect that our “range” as observers will at least somewhat increase. </p>
<p>And in a sense our very exploration of the concept of motion here can be thought of as a way to make possible a little bit more motion in rulial space. The concept of motion is a very general one. And one that we now see is deeply tied into ideas about observers and multicomputation. The question of how things can move is the same one that was asked in antiquity. But the tower of ideas that we can now bring to bear in answering is very different, and it’s sobering to see just how far we really were earlier in intellectual history from being able to meaningfully address it.</p>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2022/03/on-the-concept-of-motion/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
		</item>
		<item>
		<title>The Physicalization of Metamathematics and Its Implications for the Foundations of Mathematics</title>
		<link>https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/</link>
		<comments>https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#comments</comments>
		<pubDate>Tue, 08 Mar 2022 00:25:12 +0000</pubDate>
		<dc:creator><![CDATA[Stephen Wolfram]]></dc:creator>
				<category><![CDATA[Computational Science]]></category>
		<category><![CDATA[Mathematics]]></category>
		<category><![CDATA[New Kind of Science]]></category>
		<category><![CDATA[Philosophy]]></category>
		<category><![CDATA[Physics]]></category>
		<category><![CDATA[Ruliology]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=34645</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/03/metamathematics-news-icon3.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><style type='text/css'>
h2 span {color: #a5a5a5;}
table.InCell { margin-left: -0.27rem; }
#blog .post_content .inline-table-of-contents {
     background-color: #ebf9f8;
     border: solid 1px #89cac7;
}
#blog .post_content .inline-table-of-contents div a {
     color: #783f19;
}
#blog .post_content .inline-table-of-contents {
     padding: 20px 20px 0px 20px;
}
#blog .post_content .inline-table-of-contents ul.additional-links {
     padding-bottom: 5px;
}
</style>

<div class="inline-table-of-contents">
<div class="grid cols-2 heirs-width-1-2 cols-1__600 heirs-width-full__600">
<div class="left">
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#mathematics-and-physics-have-the-same-foundations"><span>1</span><span>Mathematics and Physics Have the Same Foundations</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-underlying-structure-of-mathematics-and-physics"><span>2</span><span>The Underlying Structure of Mathematics and Physics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-metamodeling-of-axiomatic-mathematics"><span>3</span><span>The Metamodeling of Axiomatic Mathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#some-simple-examples-with-mathematical-interpretations"><span>4</span><span>Simple Examples with Mathematical Interpretations</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#metamathematical-space"><span>5</span><span>Metamathematical Space</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-issue-of-generated-variables"><span>6</span><span>The Issue of Generated Variables</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#rules-applied-to-rules"><span>7</span><span>Rules Applied to Rules</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#accumulative-evolution"><span>8</span><span>Accumulative Evolution</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#accumulative-string-systems"><span>9</span><span>Accumulative String Systems</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-case-of-hypergraphs"><span>10</span><span>The Case of Hypergraphs</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#proofs-in-accumulative-systems"><span>11</span><span>Proofs in Accumulative Systems</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#beyond-substitution-cosubstitution-and-bisubstitution"><span>12</span><span>Beyond Substitution: Cosubstitution and Bisubstitution</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#some-first-metamathematical-phenomenology"><span>13</span><span>Some First Metamathematical Phenomenology</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#relations-to-automated-theorem-proving"><span>14</span><span>Relations to Automated Theorem Proving</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#axiom-systems-of-present-day-mathematics"><span>15</span><span>Axiom Systems of Present-Day Mathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-model-theoretic-perspective"><span>16</span><span>The Model-Theoretic Perspective</span></a></div>
</div>
<div class="right">
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#axiom-systems-in-the-wild"><span>17</span><span>Axiom Systems in the Wild</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-topology-of-proof-space"><span>18</span><span>The Topology of Proof Space</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#time-timelessness-and-entailment-fabrics"><span>19</span><span>Time, Timelessness and Entailment Fabrics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-notion-of-truth"><span>20</span><span>The Notion of Truth</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#what-can-human-mathematics-be-like"><span>21</span><span>What Can Human Mathematics Be Like?</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#going-below-axiomatic-mathematics"><span>22</span><span>Going below Axiomatic Mathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-physicalized-laws-of-mathematics"><span>23</span><span>The Physicalized Laws of Mathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#uniformity-and-motion-in-metamathematical-space"><span>24</span><span>Uniformity and Motion in Metamathematical Space</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#gravitational-and-relativistic-effects-in-metamathematics"><span>25</span><span>Gravitational and Relativistic Effects in Metamathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#empirical-metamathematics"><span>26</span><span>Empirical Metamathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#invented-or-discovered-how-mathematics-relates-to-humans"><span>27</span><span>Invented or Discovered? How Math Relates to Humans</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#what-axioms-can-there-be-for-human-mathematics"><span>28</span><span>What Axioms Can There Be for Human Mathematics?</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#counting-the-emes-of-mathematics-and-physics"><span>29</span><span>Counting the Emes of Mathematics and Physics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#some-historical-and-philosophical-background"><span>30</span><span>Some Historical (and Philosophical) Background</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#implications-for-the-future-of-mathematics"><span>31</span><span>Implications for the Future of Mathematics</span></a></div>
<div class="hide-number deemphasis"><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#some-personal-history-the-evolution-of-these-ideas"><span>32</span><span>Some Personal History: The Evolution of These Ideas</span></a></div>
<ul class="additional-links"><li><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#notes-and-thanks">Notes &#38; Thanks</a></li><li><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#graphical-key">Graphical Key</a></li><li><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#glossary">Glossary</a></li></ul>
</div>
</div>
</div>


<a name='ruliad'></a><h2 id="mathematics-and-physics-have-the-same-foundations" ><span>1 &#124; </span> Mathematics and Physics Have the Same Foundations</h2>
<p>One of the many surprising (and to me, unexpected) implications of our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> is its suggestion of a <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>very deep correspondence between the foundations of physics and mathematics</a>. We might have imagined that physics would have certain laws, and mathematics would have certain theories, and that while they might be historically related, there wouldn’t be any fundamental formal correspondence between them. </p>
<p>But what our Physics Project suggests is that underneath everything we physically experience there is a single very general abstract structure—that we call <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>—and that our physical laws arise in an inexorable way from the particular samples we take of this structure. We can think of the ruliad as the entangled limit of all possible computations—or in effect a representation of all possible formal processes. And this then leads us to the idea that perhaps the ruliad might underlie not only physics but also mathematics—and that everything in mathematics, like everything in physics, might just be the result of sampling the ruliad. <!--more-->]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2022/03/metamathematics-news-icon3.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><style type='text/css'>
h2 span {color: #a5a5a5;}
table.InCell { margin-left: -0.27rem; }
#blog .post_content .inline-table-of-contents {
     background-color: #ebf9f8;
     border: solid 1px #89cac7;
}
#blog .post_content .inline-table-of-contents div a {
     color: #783f19;
}
#blog .post_content .inline-table-of-contents {
     padding: 20px 20px 0px 20px;
}
#blog .post_content .inline-table-of-contents ul.additional-links {
    padding: 0;
    margin: 0 0 0 1.9rem;
    line-height: 1.4rem;
}
#blog .post_content .inline-table-of-contents {
    padding: 20px 20px 17px 20px;
}
</style>
<div class="inline-table-of-contents">
<div class="grid cols-2 heirs-width-1-2 cols-1__600 heirs-width-full__600">
<div class="left">
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#mathematics-and-physics-have-the-same-foundations"><span>1</span><span>Mathematics and Physics Have the Same Foundations</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-underlying-structure-of-mathematics-and-physics"><span>2</span><span>The Underlying Structure of Mathematics and Physics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-metamodeling-of-axiomatic-mathematics"><span>3</span><span>The Metamodeling of Axiomatic Mathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#some-simple-examples-with-mathematical-interpretations"><span>4</span><span>Simple Examples with Mathematical Interpretations</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#metamathematical-space"><span>5</span><span>Metamathematical Space</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-issue-of-generated-variables"><span>6</span><span>The Issue of Generated Variables</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#rules-applied-to-rules"><span>7</span><span>Rules Applied to Rules</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#accumulative-evolution"><span>8</span><span>Accumulative Evolution</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#accumulative-string-systems"><span>9</span><span>Accumulative String Systems</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-case-of-hypergraphs"><span>10</span><span>The Case of Hypergraphs</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#proofs-in-accumulative-systems"><span>11</span><span>Proofs in Accumulative Systems</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#beyond-substitution-cosubstitution-and-bisubstitution"><span>12</span><span>Beyond Substitution: Cosubstitution and Bisubstitution</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#some-first-metamathematical-phenomenology"><span>13</span><span>Some First Metamathematical Phenomenology</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#relations-to-automated-theorem-proving"><span>14</span><span>Relations to Automated Theorem Proving</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#axiom-systems-of-present-day-mathematics"><span>15</span><span>Axiom Systems of Present-Day Mathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-model-theoretic-perspective"><span>16</span><span>The Model-Theoretic Perspective</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#axiom-systems-in-the-wild"><span>17</span><span>Axiom Systems in the Wild</span></a></div>
</div>
<div class="right">
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-topology-of-proof-space"><span>18</span><span>The Topology of Proof Space</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#time-timelessness-and-entailment-fabrics"><span>19</span><span>Time, Timelessness and Entailment Fabrics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-notion-of-truth"><span>20</span><span>The Notion of Truth</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#what-can-human-mathematics-be-like"><span>21</span><span>What Can Human Mathematics Be Like?</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#going-below-axiomatic-mathematics"><span>22</span><span>Going below Axiomatic Mathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#the-physicalized-laws-of-mathematics"><span>23</span><span>The Physicalized Laws of Mathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#uniformity-and-motion-in-metamathematical-space"><span>24</span><span>Uniformity and Motion in Metamathematical Space</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#gravitational-and-relativistic-effects-in-metamathematics"><span>25</span><span>Gravitational and Relativistic Effects in Metamathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#empirical-metamathematics"><span>26</span><span>Empirical Metamathematics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#invented-or-discovered-how-mathematics-relates-to-humans"><span>27</span><span>Invented or Discovered? How Math Relates to Humans</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#what-axioms-can-there-be-for-human-mathematics"><span>28</span><span>What Axioms Can There Be for Human Mathematics?</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#counting-the-emes-of-mathematics-and-physics"><span>29</span><span>Counting the Emes of Mathematics and Physics</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#some-historical-and-philosophical-background"><span>30</span><span>Some Historical (and Philosophical) Background</span></a></div>
<div><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#implications-for-the-future-of-mathematics"><span>31</span><span>Implications for the Future of Mathematics</span></a></div>
<div class="hide-number deemphasis"><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#some-personal-history-the-evolution-of-these-ideas"><span>32</span><span>Some Personal History: The Evolution of These Ideas</span></a></div>
<ul class="additional-links">
<li style="margin-bottom: 0px;"><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#notes-and-thanks">Notes &amp; Thanks</a></li>
<li style="margin-bottom: 0px;"><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#graphical-key">Graphical Key</a></li>
<li style="margin-bottom: 0px;"><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#glossary">Glossary</a></li>
</ul>
<ul class="additional-links" style="margin-top: -3px;">
<li style="margin-bottom: 0px;"><a href="https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/#annotated-bibliography">Annotated Bibliography</a></li>
</ul>
</ul>
</div>
</div>
</div>
<p><a name='ruliad'></a></p>
<h2 id="mathematics-and-physics-have-the-same-foundations" ><span>1 | </span> Mathematics and Physics Have the Same Foundations</h2>
<p>One of the many surprising (and to me, unexpected) implications of our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> is its suggestion of a <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>very deep correspondence between the foundations of physics and mathematics</a>. We might have imagined that physics would have certain laws, and mathematics would have certain theories, and that while they might be historically related, there wouldn’t be any fundamental formal correspondence between them. </p>
<p>But what our Physics Project suggests is that underneath everything we physically experience there is a single very general abstract structure—that we call <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>—and that our physical laws arise in an inexorable way from the particular samples we take of this structure. We can think of the ruliad as the entangled limit of all possible computations—or in effect a representation of all possible formal processes. And this then leads us to the idea that perhaps the ruliad might underlie not only physics but also mathematics—and that everything in mathematics, like everything in physics, might just be the result of sampling the ruliad. <span id="more-34645"></span></p>
<p><a name='mathematical-observer'></a>Of course, mathematics as it’s normally practiced doesn’t look the same as physics. But the idea is that they can both be seen as views of the same underlying structure. What makes them different is that physical and mathematical observers sample this structure in somewhat different ways. But since in the end both kinds of observers are associated with human experience they inevitably have certain core characteristics in common. And the result is that there should be “fundamental laws of mathematics” that in some sense mirror the perceived laws of physics that we derive from our physical observation of the ruliad. </p>
<p>So what might those fundamental laws of mathematics be like? And how might they inform our conception of the foundations of mathematics, and our view of what mathematics really is?</p>
<p>The most obvious manifestation of the mathematics that we humans have developed over the course of many centuries is the few million mathematical theorems that have been published in the literature of mathematics. But what can be said in generality about this thing we call mathematics? Is there some notion of what mathematics is like “in bulk”? And what might we be able to say, for example, about the structure of mathematics in the limit of infinite future development?</p>
<p>When we do physics, the traditional approach has been to start from our basic sensory experience of the physical world, and of concepts like space, time and motion—and then to try to formalize our descriptions of these things, and build on these formalizations. And in its early development—for example by <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>Euclid</a>—mathematics took the same basic approach. But beginning a little more than a century ago there emerged the idea that one could build mathematics purely from formal axioms, without necessarily any reference to what is accessible to sensory experience.</p>
<p>And in a way our Physics Project begins from a similar place. Because at the outset it just considers purely abstract structures and abstract rules—typically described in terms of hypergraph rewriting—and then tries to deduce their consequences. Many of these consequences are incredibly complicated, and full of <a href='https://www.wolframscience.com/nks/p737--computational-irreducibility/'>computational irreducibility</a>. But the remarkable discovery is that when sampled by <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>observers with certain general characteristics that make them like us</a>, the behavior that emerges must generically have regularities that we can recognize, and in fact must follow exactly known core laws of physics.</p>
<p>And already this begins to suggest a new perspective to apply to the foundations of mathematics. But there’s another piece, and that’s the idea of the ruliad. We might have supposed that our universe is based on some particular chosen underlying rule, like an axiom system we might choose in mathematics. But the concept of the ruliad is in effect to represent the entangled result of “running all possible rules”. And the key point is then that it turns out that an “observer like us” sampling the ruliad must perceive behavior that corresponds to known laws of physics. In other words, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>without “making any choice” it&#8217;s inevitable</a>—given what we’re like as observers—that our “experience of the ruliad” will show fundamental laws of physics.</p>
<p>But now we can make a bridge to mathematics. Because in embodying all possible computational processes the ruliad also necessarily embodies the consequences of all possible axiom systems. As humans doing physics we’re effectively taking a certain sampling of the ruliad. And we realize that as humans doing mathematics we’re also doing essentially the same kind of thing. </p>
<p>But will we see “general laws of mathematics” in the same kind of way that we see “general laws of physics”? It depends on what we’re like as “mathematical observers”. In physics, there turn out to be general laws—and concepts like space and motion—that we humans can assimilate. And in the abstract it might not be that anything similar would be true in mathematics. But it seems as if the thing mathematicians typically call mathematics is something for which it is—and where (usually in the end leveraging our experience of physics) it’s possible to successfully carve out a sampling of the ruliad that’s again one we humans can assimilate. </p>
<p>When we think about physics we have the idea that there’s an actual physical reality that exists—and that we experience physics within this. But in the formal axiomatic view of mathematics, things are different. There’s no obvious “underlying reality” there; instead there’s just a certain choice we make of axiom system. But now, with the concept of the ruliad, the story is different. Because now we have the idea that “deep underneath” both physics and mathematics there’s the same thing: the ruliad. And that means that insofar as physics is “grounded in reality”, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-relation-to-mathematics'>so also must mathematics be</a>.</p>
<p>When most working mathematicians do mathematics it seems to be typical for them to reason as if the constructs they’re dealing with (whether they be numbers or sets or whatever) are “real things”. But usually there’s a concept that in principle one could “drill down” and formalize everything in terms of some axiom system. And indeed if one wants to get a global view of mathematics and its structure as it is today, it seems as if the best approach is to work from the <a href='https://www.wolframscience.com/nks/p773--implications-for-mathematics-and-its-foundations/'>formalization that’s been done with axiom systems</a>.</p>
<p>In starting from the ruliad and the ideas of our Physics Project we’re in effect positing a certain “theory of mathematics”. And to validate this theory we need to study the “phenomena of mathematics”. And, yes, we could do this in effect by directly “reading the whole literature of mathematics”. But it’s more efficient to start from what’s in a sense the “current prevailing underlying theory of mathematics” and to begin by building on the methods of formalized mathematics and axiom systems.</p>
<p>Over the past century a certain amount of metamathematics has been done by looking at the general properties of these methods. But most often when the methods are systematically used today, it’s to set up some particular mathematical derivation, normally with the aid of a computer. But here what we want to do is think about what happens if the methods are used “in bulk”. Underneath there may be all sorts of specific detailed formal derivations being done. But somehow what emerges from this is something higher level, something “more human”—and ultimately something that corresponds to our experience of pure mathematics.</p>
<p>How might this work? We can get an idea from an analogy in physics. Imagine we have a gas. Underneath, it consists of zillions of molecules bouncing around in detailed and complicated patterns. But most of our “human” experience of the gas is at a much more coarse-grained level—where we perceive not the detailed motions of individual molecules, but instead continuum fluid mechanics.</p>
<p>And so it is, I think, with mathematics. All those detailed formal derivations—for example of the kind <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>automated theorem proving</a> might do—are like molecular dynamics. But most of our “human experience of mathematics”—where we talk about concepts like integers or morphisms—is like fluid dynamics. The molecular dynamics is what builds up the fluid, but for most questions of “human interest” it’s possible to “reason at the fluid dynamics level”, without dropping down to molecular dynamics.</p>
<p>It’s certainly not obvious that this would be possible. It could be that one might start off describing things at a “fluid dynamics” level—say in the case of an actual fluid talking about the motion of vortices—but that everything would quickly get “shredded”, and that there’d soon be nothing like a vortex to be seen, only elaborate patterns of detailed microscopic molecular motions. And similarly in mathematics one might imagine that one would be able to prove theorems in terms of things like real numbers but actually find that everything gets “shredded” to the point where one has to start talking about elaborate issues of mathematical logic and different possible axiomatic foundations.</p>
<p>But in physics we effectively have the <a href='https://www.wolframscience.com/nks/p441--irreversibility-and-the-second-law-of-thermodynamics/'>Second Law of thermodynamics</a>—which we now <a href='https://www.wolframscience.com/nks/p441--irreversibility-and-the-second-law-of-thermodynamics/'>understand in terms of computational irreducibility</a>—that tells us that there’s a robust sense in which the microscopic details are systematically “washed out” so that things like fluid dynamics “work”. Just sometimes—like in studying Brownian motion, or hypersonic flow—the molecular dynamics level still “shines through”. But for most “human purposes” we can describe fluids just using ordinary fluid dynamics.</p>
<p>So what’s the analog of this in mathematics? Presumably it’s that there’s some kind of “general law of mathematics” that explains why one can so often do mathematics “purely in the large”. Just like in fluid mechanics there can be “corner-case” questions that probe down to the “molecular scale”—and indeed that’s where we can expect to see things like undecidability, as a rough analog of situations where we end up tracing the potentially infinite paths of single molecules rather than just looking at “overall fluid effects”. But somehow in most cases there’s some much stronger phenomenon at work—that effectively aggregates low-level details to allow the kind of “bulk description” that ends up being the essence of what we normally in practice call mathematics.</p>
<p>But is such a phenomenon something formally inevitable, or does it somehow depend on us humans “being in the loop”? In the case of the Second Law it’s crucial that we only get to track coarse-grained features of a gas—as we humans with our current technology typically do. Because if instead we watched and decoded what every individual molecule does, we wouldn’t end up identifying anything like the usual bulk “Second-Law” behavior. In other words, the emergence of the Second Law is in effect a direct consequence of the fact that it’s us humans—with our limitations on measurement and computation—who are observing the gas.</p>
<p>So is something similar happening with mathematics? At the underlying “molecular level” there’s a lot going on. But the way we humans think about things, we’re effectively taking just particular kinds of samples. And those samples turn out to give us “general laws of mathematics” that give us our usual experience of “human-level mathematics”.</p>
<p><a name='axiomatic-level'></a>To ultimately ground this we have to go down to the fully abstract level of the ruliad, but we’ll already see many core effects by looking at mathematics essentially just at a traditional “axiomatic level”, albeit “in bulk”. </p>
<p>The full story—and the full correspondence between physics and mathematics—requires in a sense “going below” the level at which we have recognizable formal axiomatic mathematical structures; it requires going to a level at which we’re just talking about making everything out of completely abstract elements, which in physics we might interpret as “atoms of space” and in mathematics as some kind of “symbolic raw material” below variables and operators and everything else familiar in traditional axiomatic mathematics.</p>
<p>The deep correspondence we’re describing between physics and mathematics might make one wonder to what extent the methods we use in physics can be applied to mathematics, and vice versa. In axiomatic mathematics the emphasis tends to be on looking at particular theorems and seeing how they can be knitted together with proofs. And one could certainly imagine an analogous “axiomatic physics” in which one does particular experiments, then sees how they can “deductively” be knitted together. But our impression that there’s an “actual reality” to physics makes us seek broader laws. And the correspondence between physics and mathematics implied by the ruliad now suggests that we should be doing this in mathematics as well.</p>
<p>What will we find? Some of it in essence just confirms impressions that working pure mathematicians already have. But it provides a definite framework for understanding these impressions and for seeing what their limits may be. It also lets us address questions like why undecidability is so comparatively rare in practical pure mathematics, and why it is so common to discover remarkable correspondences between apparently quite different areas of mathematics. And beyond that, it suggests a host of new questions and approaches both to mathematics and metamathematics—that help frame the foundations of the remarkable intellectual edifice that we call mathematics. </p>
<h2 id='the-underlying-structure-of-mathematics-and-physics'><span>2 | </span>The Underlying Structure of Mathematics and Physics</h2>
<p>If we “drill down” to what we’ve called above the “molecular level” of mathematics, what will we find there? There are many technical details (some of which we’ll discuss later) about the historical conventions of mathematics and its presentation. But in broad outline we can think of there as being a kind of “gas” of “mathematical statements”—like 1&nbsp;+&nbsp;1&nbsp;=&nbsp;2 or <em>x</em>&nbsp;+&nbsp;<em>y</em>&nbsp;=&nbsp;<em>y</em>&nbsp;+&nbsp;<em>x</em>—represented in some specified symbolic language. (And, yes, <a href='https://www.wolfram.com/language/'>Wolfram Language</a> provides a well-developed example of what that language can be like.)</p>
<p>But how does the “gas of statements” behave? The essential point is that new statements are derived from existing ones by “interactions” that implement laws of inference (like that <em>q</em> can be derived from the statement <em>p</em> and the statement “<em>p</em> implies <em>q</em>”). And if we trace the paths by which one statement can be derived from others, these correspond to proofs. And the whole graph of all these derivations is then a representation of the possible historical development of mathematics—with slices through this graph corresponding to the sets of statements reached at a given stage.</p>
<p>By talking about things like a “gas of statements” we’re making this sound a bit like physics. But while in physics a gas consists of actual, physical molecules, in mathematics our statements are just abstract things. But this is where the discoveries of our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> start to be important. Because in our project we’re “drilling down” beneath for example the usual notions of space and time to an “ultimate machine code” for the physical universe. And we can think of that ultimate machine code as operating on things that are in effect just abstract constructs—very much like in mathematics.</p>
<p>In particular, we imagine that space and everything in it is made up of a <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#what-is-space'>giant network (hypergraph) of “atoms of space”</a>—with each “atom of space” just being an abstract element that has certain relations with other elements. The evolution of the universe in time then corresponds to the application of computational rules that (much like laws of inference) take abstract relations and yield new relations—thereby progressively updating the network that represents space and everything in it.</p>
<p>But while the individual rules may be very simple, the whole detailed pattern of behavior to which they lead is normally very complicated—and typically shows <a href='https://www.wolframscience.com/nks/p737--computational-irreducibility/'>computational irreducibility</a>, so that there’s no way to systematically find its outcome except in effect by explicitly tracing each step. But despite all this underlying complexity it turns out—much like in the case of an ordinary gas—that at a coarse-grained level there are much simpler (“bulk”) laws of behavior that one can identify. And the remarkable thing is that these turn out to be exactly general relativity and quantum mechanics (which, yes, <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#general-relativity-and-quantum-mechanics-are-the-same-idea'>end up being the same theory</a> when looked at in terms of an appropriate generalization of the notion of space). </p>
<p>But down at the lowest level, is there some specific computational rule that’s “running the universe”? I don’t think so. Instead, I think that in effect all possible rules are always being applied. And the result is <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>: the entangled structure associated with performing all possible computations. </p>
<p>But what then gives us our experience of the universe and of physics? Inevitably we are observers embedded within the ruliad, sampling only certain features of it. But what features we sample are determined by the characteristics of us as observers. And what seem to be critical to have <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>“observers like us” are basically two characteristics</a>. First, that we are computationally bounded. And second, that we somehow persistently maintain our coherence—in the sense that we can consistently identify what constitutes “us” even though the detailed atoms of space involved are continually changing.</p>
<p><a name='rulial-space'></a>But we can think of different “observers like us” as taking different specific samples, corresponding to different reference frames in rulial space, or just different positions in rulial space. These different observers may describe the universe as evolving according to different specific underlying rules. But the crucial point is that the general structure of the ruliad implies that so long as the observers are “like us”, it’s inevitable that their perception of the universe will be that it follows things like general relativity and quantum mechanics.</p>
<p>It’s very much like what happens with a gas of molecules: to an “observer like us” there are the same gas laws and the same laws of fluid dynamics essentially independent of the detailed structure of the individual molecules. </p>
<p>So what does all this mean for mathematics? The crucial and at first surprising point is that the ideas we’re describing in physics can in effect immediately be carried over to mathematics. And the key is that the ruliad represents not only all physics, but also all mathematics—and it shows that these are not just related, but in some sense fundamentally the same.</p>
<p>In the traditional formulation of axiomatic mathematics, one talks about deriving results from particular axiom systems—say <a href='https://www.wolframscience.com/nks/notes-12-9--axioms-for-arithmetic/'>Peano Arithmetic</a>, or <a href='https://www.wolframscience.com/nks/notes-12-9--set-theory-and-axioms/'>ZFC set theory</a>, or the axioms of <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>Euclidean geometry</a>. But the ruliad in effect represents the entangled consequences not just of specific axiom systems but of all possible axiom systems (as well as all possible laws of inference). </p>
<p>But from this structure that in a sense corresponds to all possible mathematics, how do we pick out any particular mathematics that we’re interested in? The answer is that just as we are limited observers of the physical universe, so we are also limited observers of the “mathematical universe”. </p>
<p>But what are we like as “mathematical observers”? As I’ll argue in more detail later, we inherit our core characteristics from those we exhibit as “physical observers”. And that means that when we “do mathematics” we’re effectively sampling the ruliad in much the same way as when we “do physics”. </p>
<p>We can operate in different rulial reference frames, or at different locations in rulial space, and these will correspond to picking out different underlying “rules of mathematics”, or essentially using different axiom systems. But now we can make use of the correspondence with physics to say that we can also expect there to be certain “overall laws of mathematics” that are the result of general features of the ruliad as perceived by observers like us.</p>
<p>And indeed we can expect that in some formal sense these overall laws will have exactly the same structure as those in physics—so that in effect in mathematics we’ll have something like the notion of space that we have in physics, as well as formal analogs of things like general relativity and quantum mechanics. </p>
<p>What does this mean? It implies that—just as it’s possible to have coherent “higher-level descriptions” in physics that don’t just operate down at the level of atoms of space, so also this should be possible in mathematics. And this in a sense is why we can expect to consistently do what I described above as “human-level mathematics”, without usually having to drop down to the “molecular level” of specific axiomatic structures (or below).</p>
<p>Say we’re talking about the Pythagorean theorem. Given some particular detailed axiom system for mathematics we can imagine using it to build up a precise—if potentially very long and pedantic—representation of the theorem. But let’s say we change some detail of our axioms, say associated with the way they talk about sets, or real numbers. We’ll almost certainly still be able to build up something we consider to be “the Pythagorean theorem”—even though the details of the representation will be different.</p>
<p>In other words, this thing that we as humans would call “the Pythagorean theorem” is not just a single point in the ruliad, but a whole cloud of points. And now the question is: what happens if we try to derive other results from the Pythagorean theorem? It might be that each particular representation of the theorem—corresponding to each point in the cloud—would lead to quite different results. But it could also be that essentially the whole cloud would coherently lead to the same results.</p>
<p>And the claim from the correspondence with physics is that there should be “general laws of mathematics” that apply to “observers like us” and that ensure that there’ll be coherence between all the different specific representations associated with the cloud that we identify as “the Pythagorean theorem”.</p>
<p>In physics it could have been that we’d always have to separately say what happens to every atom of space. But we know that there’s a coherent higher-level description of space—in which for example we can just imagine that objects can move while somehow maintaining their identity. And we can now expect that it’s the same kind of thing in mathematics: that just as there’s a coherent notion of space in physics where things can for example move without being “shredded”, so also this will happen in mathematics. And this is why it’s possible to do “higher-level mathematics” without always dropping down to the lowest level of axiomatic derivations.</p>
<p>It’s worth pointing out that even in physical space a concept like “pure motion” in which objects can move while maintaining their identity doesn’t always work. For example, close to a spacetime singularity, one can expect to eventually be forced to see through to the discrete structure of space—and for any “object” to inevitably be “shredded”. But most of the time it’s possible for observers like us to maintain the idea that there are coherent large-scale features whose behavior we can study using “bulk” laws of physics.</p>
<p>And we can expect the same kind of thing to happen with mathematics. Later on, we’ll discuss more specific correspondences between phenomena in physics and mathematics—and we’ll see the effects of things like general relativity and quantum mechanics in mathematics, or, more precisely, in metamathematics. </p>
<p>But for now, the key point is that we can think of mathematics as somehow being made of exactly the same stuff as physics: they’re both just features of the ruliad, as sampled by observers like us. And in what follows we’ll see the great power that arises from using this to combine the achievements and intuitions of physics and mathematics—and how this lets us think about new “general laws of mathematics”, and view the ultimate foundations of mathematics in a different light.</p>
<h2 id='the-metamodeling-of-axiomatic-mathematics'><span>3 | </span>The Metamodeling of Axiomatic Mathematics</h2>
<p>Consider all the mathematical statements that have appeared in mathematical books and papers. We can view these in some sense as the “observed phenomena” of (human) mathematics. And if we’re going to make a “general theory of mathematics” a first step is to do something like we’d typically do in natural science, and try to “drill down” to find a uniform underlying model—or at least representation—for all of them.</p>
<p>At the outset, it might not be clear what sort of representation could possibly capture all those different mathematical statements. But what’s emerged over the past century or so—with particular clarity in <a href='https://www.wolfram.com/mathematica/'>Mathematica</a> and the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>—is that there is in fact a rather simple and general representation that works remarkably well: a representation in which everything is a symbolic expression. </p>
<p>One can view a symbolic expression such as <tt>f[g[x][y, h[z]], w]</tt> as a <a href='https://www.wolfram.com/language/elementary-introduction/2nd-ed/33-expressions-and-their-structure.html'>hierarchical or tree structure</a>, in which at every level some particular “head” (like <tt>f</tt>) is “applied to” one or more arguments. Often in practice one deals with expressions in which the heads have “known meanings”—as in <tt><a href='https://reference.wolfram.com/language/ref/Times.html'>Times</a>[<a href='https://reference.wolfram.com/language/ref/Plus.html'>Plus</a>[2, 3], 4]</tt> in Wolfram Language. And with this kind of setup symbolic expressions are reminiscent of human natural language, with the heads basically corresponding to “known words” in the language. </p>
<p>And presumably it’s this familiarity from human natural language that’s caused “human natural mathematics” to develop in a way that can so readily be represented by symbolic expressions. </p>
<p>But in typical mathematics there’s an important wrinkle. One often wants to make statements not just about particular things but about whole classes of things. And it’s common to then just declare that some of the “symbols” (like, say, <em>x</em>) that appear in an expression are “variables”, while others (like, say, <tt><a href='https://reference.wolfram.com/language/ref/Plus.html'>Plus</a></tt>) are not. But in our effort to capture the essence of mathematics as uniformly as possible it seems much better to burn the idea of an object representing a whole class of things right into the structure of the symbolic expression. </p>
<p><a name='pattern-expression'></a>And indeed this is a <a href='https://www.wolfram.com/language/elementary-introduction/2nd-ed/32-patterns.html'>core idea in the Wolfram Language</a>, where something like <em>x</em> or <tt>f</tt> is just a “symbol that stands for itself”, while <em>x_</em> is a pattern (named <em>x</em>) that can stand for anything. (More precisely, <em>_</em> on its own is what stands for “anything”, and <em>x_</em>—which can also be written <em>x:_</em>—just says that whatever <em>_</em> stands for in a particular instance will be called <em>x</em>.) </p>
<p>Then with this notation an example of a “mathematical statement” might be: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img1.png" alt='' title='' width='170' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img1_copy.txt">
					<span class='close' id='04-1_out'>&amp;#10005</span></p>
<pre class='text' id='04-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In more explicit form we could write this as <tt><a href='https://reference.wolfram.com/language/ref/Equal.html'>Equal</a>[f[x_, y_], f[f[y_, x_],y_]]</tt>&mdash;where <tt><a href='https://reference.wolfram.com/language/ref/Equal.html'>Equal</a></tt> (<span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/long-equalA.png" width= '13' height='23' align='absmiddle'></span>) has the “known meaning” of representing equality. But what can we do with this statement? At a “mathematical level” the statement asserts that <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img2.png" width= '48' height='21' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img3A.png" width= '88' height='21' align='absmiddle'></span> should be considered equivalent. But thinking in terms of symbolic expressions there’s now a more explicit, lower-level, “structural” interpretation: that any expression whose structure matches <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img4A.png" width= '48' height='21' align='absmiddle'></span> can equivalently be replaced by <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img5.png" width= '88' height='21' align='absmiddle'></span> (or, in Wolfram Language notation, just (<em>y</em> ∘ <em>x</em>) ∘ <em>y</em>) and vice versa. We can indicate this interpretation using the notation</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img6.png" alt='' title='' width='172' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img6_copy.txt">
					<span class='close' id='04-6_out'>&amp;#10005</span></p>
<pre class='text' id='04-6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which can be viewed as a shorthand for the pair of Wolfram Language rules:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img7A.png" alt='' title='' width='279' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img7_copy.txt">
					<span class='close' id='04-7_out'>&amp;#10005</span></p>
<pre class='text' id='04-7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>OK, so let’s say we have the expression <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img8A.png" width= '59' height='19' align='absmiddle'></span>. Now we can just apply the rules defined by our statement. Here’s what happens if we do this just once in all possible ways:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img9A.png" alt='' title='' width='339' height='93' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img9_copy.txt">
					<span class='close' id='04-9_out'>&amp;#10005</span></p>
<pre class='text' id='04-9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><a name='multiway-graph'></a>And here we see, for example, that <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img10A.png" width= '59' height='19' align='absmiddle'></span> can be transformed to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img11A.png" width= '29' height='19' align='absmiddle'></span>. Continuing this we build up a whole multiway graph. After just one more step we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img12A.png" alt='' title='' width='551' height='176' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img12_copy.txt">
					<span class='close' id='04-12_out'>&amp;#10005</span></p>
<pre class='text' id='04-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Continuing for a few more steps we then get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0307img13A.png" alt='' title='' width='553' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/04-sw0307img13.txt">
					<span class='close' id='04-13_out'>&amp;#10005</span></p>
<pre class='text' id='04-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or in a different rendering:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img14A.png" alt='' title='' width='551' height='414' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img14_copy.txt">
					<span class='close' id='04-14_out'>&amp;#10005</span></p>
<pre class='text' id='04-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But what does this graph mean? Essentially it gives us a map of equivalences between expressions—with any pair of expressions that are connected being equivalent. So, for example, it turns out that the expressions <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img15A.png" width= '149' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img16A.png" width= '29' height='19' align='absmiddle'></span> are equivalent, and we can <a href='https://www.wolframscience.com/nks/p775--implications-for-mathematics-and-its-foundations/'>“prove this”</a> by exhibiting a path between them in the graph: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img17A.png" alt='' title='' width='551' height='414' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img17_copy.txt">
					<span class='close' id='04-17_out'>&amp;#10005</span></p>
<pre class='text' id='04-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The steps on the path can then be viewed as steps in the proof, where here at each step we’ve indicated where the transformation in the expression took place:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img1A.png" alt='' title='' width='467' height='127' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img1_copy.txt">
					<span class='close' id='1-v2_out'>&amp;#10005</span></p>
<pre class='text' id='1-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In mathematical terms, we can then say that starting from the “axiom” <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img19A.png" width= '107' height='21' align='absmiddle'></span> we were able to prove a certain equivalence theorem between two expressions. We gave a particular proof. But there are others, for example the “less efficient” 35-step one</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img2A.png" alt='' title='' width='467' height='603' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img2_copy.txt">
					<span class='close' id='2-v2_out'>&amp;#10005</span></p>
<pre class='text' id='2-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>corresponding to the path:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img21A.png" alt='' title='' width='551' height='414' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img21_copy.txt">
					<span class='close' id='04-21_out'>&amp;#10005</span></p>
<pre class='text' id='04-21_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For our later purposes it’s worth talking in a little bit more detail here about how the steps in these proofs actually proceed. Consider the expression:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img22A.png" alt='' title='' width='167' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img22_copy.txt">
					<span class='close' id='04-22_out'>&amp;#10005</span></p>
<pre class='text' id='04-22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can think of this as a tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img3A.png" alt='' title='' width='493' height='171' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img3_copy.txt">
					<span class='close' id='3-v2_out'>&amp;#10005</span></p>
<pre class='text' id='3-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Our axiom can then be represented as:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img4A.png" alt='' title='' width='562' height='108' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img4_copy.txt">
					<span class='close' id='4-v2_out'>&amp;#10005</span></p>
<pre class='text' id='4-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In terms of trees, our first proof becomes</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img25A.png" alt='' title='' width='563' height='127' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img25_copy.txt">
					<span class='close' id='04-25_out'>&amp;#10005</span></p>
<pre class='text' id='04-25_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where we’re indicating at each step <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/#updating-schemes-and-multiway-systems'>which piece of tree gets “substituted for”</a> using the axiom.</p>
<p><a name='proof-path'></a>What we’ve done so far is to generate a multiway graph for a certain number of steps, and then to see if we can find a “proof path” in it for some particular statement. But what if we are given a statement, and asked whether it can be proved within the specified axiom system? In effect this asks whether if we make a sufficiently large multiway graph we can find a path of any length that corresponds to the statement.</p>
<p>If our system was computationally reducible we could expect always to be able to find a finite answer to this question. But in general—with the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a> and the ubiquitous presence of <a href='https://www.wolframscience.com/nks/p737--computational-irreducibility/'>computational irreducibility</a>—it’ll be common that there is no fundamentally better way to determine whether a path exists than effectively to try explicitly generating it. If we knew, for example, that the intermediate expressions generated always remained of bounded length, then this would still be a bounded problem. But in general the expressions can grow to any size—with the result that there is no general upper bound on the length of path necessary to prove even a statement about equivalence between small expressions. </p>
<p>For example, for the axiom we are using here, we can look at statements of the form <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img26A.png" width= '112' height='21' align='absmiddle'></span>. Then this shows how many expressions <em>expr</em> of what sizes have shortest proofs of <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img27A.png" width= '112' height='21' align='absmiddle'></span> with progressively greater lengths:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0307img28-2A.png" alt='' title='' width='578' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/04-sw0307img28.txt">
					<span class='close' id='04-28_out'>&amp;#10005</span></p>
<pre class='text' id='04-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And for example if we look at the statement</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/04-sw0219img29A.png" alt='' title='' width='267' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/04-sw0219img29_copy.txt">
					<span class='close' id='04-29_out'>&amp;#10005</span></p>
<pre class='text' id='04-29_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>its shortest proof is</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img5A.png" alt='' title='' width='554' height='154' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img5_copy.txt">
					<span class='close' id='5-v2_out'>&amp;#10005</span></p>
<pre class='text' id='5-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where, as is often the case, there are intermediate expressions that are longer than the final result. </p>
<h2 id='some-simple-examples-with-mathematical-interpretations'><span>4 | </span>Some Simple Examples with Mathematical Interpretations</h2>
<p><a name='substitution-event'></a>The multiway graphs in the previous section are in a sense fundamentally metamathematical. Their “raw material” is mathematical statements. But what they represent are the results of operations—like substitution—that are defined at a kind of meta level, that “talks about mathematics” but isn’t itself immediately “representable as mathematics”. But to help understand this relationship it’s useful to look at simple cases where it’s possible to make at least some kind of correspondence with familiar mathematical concepts.</p>
<p>Consider for example the axiom</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img1A.png" alt='' title='' width='134' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img1_copy.txt">
					<span class='close' id='1-05_out'>&amp;#10005</span></p>
<pre class='text' id='1-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>that we can think of as representing commutativity of the binary operator ∘. Now consider using substitution to “apply this axiom”, say starting from the expression <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img2A.png" width= '87' height='19' align='absmiddle'></span>. The result is the (finite) multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img6A.png" alt='' title='' width='402' height='240' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img6_copy.txt">
					<span class='close' id='6-v2_out'>&amp;#10005</span></p>
<pre class='text' id='6-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Conflating the pairs of edges going in opposite directions, the resulting graphs starting from any expression involving <em>s</em> ∘’s (and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img4A.png" width= '31' height='19' align='absmiddle'></span> distinct variables) are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img5A.png" alt='' title='' width='570' height='123' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/05sw0219img5_copy-2.txt">
					<span class='close' id='5-05_out'>&amp;#10005</span></p>
<pre class='text' id='5-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And these are just the Boolean hypercubes, each with <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img6A.png" width= '15' height='19' align='absmiddle'></span> nodes.</p>
<p>If instead of commutativity we consider the associativity axiom</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img7A.png" alt='' title='' width='202' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img7_copy.txt">
					<span class='close' id='7-05_out'>&amp;#10005</span></p>
<pre class='text' id='7-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>then we get a simple “ring” multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img7A.png" alt='' title='' width='423' height='204' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img7_copy.txt">
					<span class='close' id='7-v2_out'>&amp;#10005</span></p>
<pre class='text' id='7-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With both associativity and commutativity we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img9A.png" alt='' title='' width='521' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img9_copy.txt">
					<span class='close' id='9-05_out'>&amp;#10005</span></p>
<pre class='text' id='9-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What is the mathematical significance of this object? We can think of our axioms as being the general <a href='https://www.wolframscience.com/nks/notes-5-6--semigroups-and-groups-and-multiway-systems/'>axioms for a commutative semigroup</a>. And if we build a multiway graph—say starting with <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img10A.png" width= '59' height='19' align='absmiddle'></span>—we’ll find out what expressions are equivalent to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img11A.png" width= '59' height='19' align='absmiddle'></span> in any commutative semigroup—or, in other words, we’ll get a collection of theorems that are “true for any commutative semigroup”: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img12A.png" alt='' title='' width='487' height='201' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img12_copy.txt">
					<span class='close' id='12-05_out'>&amp;#10005</span></p>
<pre class='text' id='12-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But what if we want to deal with a “specific semigroup” rather than a generic one? We can think of our symbols <em>a</em> and <em>b</em> as generators of the semigroup, and then we can add relations, as in: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img13A.png" alt='' title='' width='400' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img13_copy.txt">
					<span class='close' id='13-05_out'>&amp;#10005</span></p>
<pre class='text' id='13-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And the result of this will be that we get more equivalences between expressions:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img14A.png" alt='' title='' width='551' height='182' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img14_copy.txt">
					<span class='close' id='14-05_out'>&amp;#10005</span></p>
<pre class='text' id='14-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The multiway graph here is still finite, however, giving a finite number of equivalences. But let’s say instead that we add the relations: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img15A.png" alt='' title='' width='163' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img15_copy.txt">
					<span class='close' id='15-05_out'>&amp;#10005</span></p>
<pre class='text' id='15-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then if we start from <em>a</em> we get a multiway graph that begins like</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img16A.png" alt='' title='' width='551' height='264' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img16_copy.txt">
					<span class='close' id='16-05_out'>&amp;#10005</span></p>
<pre class='text' id='16-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>but just keeps growing forever (here shown after 6 steps):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img17A.png" alt='' title='' width='545' height='312' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img17_copy.txt">
					<span class='close' id='17-05_out'>&amp;#10005</span></p>
<pre class='text' id='17-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And what this then means is that there are an infinite number of equivalences between expressions. We can think of our basic symbols <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img18A.png" width= '9' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img19A.png" width= '9' height='19' align='absmiddle'></span> as being generators of our semigroup. Then our expressions correspond to “words” in the semigroup formed from these generators. The fact that the multiway graph is infinite then tells us that there are an infinite number of equivalences between words.</p>
<p>But when we think about the semigroup mathematically we’re typically not so interested in specific words as in the overall “distinct elements” in the semigroup, or in other words, in those “clusters of words” that don’t have equivalences between them. And to find these we can imagine starting with all possible expressions, then building up multiway graphs from them. Many of the graphs grown from different expressions will join up. But what we want to know in the end is how many disconnected graph components are ultimately formed. And each of these will correspond to an element of the semigroup.</p>
<p>As a simple example, let’s start from all words of length 2:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img20A.png" alt='' title='' width='497' height='35' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/05sw0219img20_copy-2.txt">
					<span class='close' id='20-05_out'>&amp;#10005</span></p>
<pre class='text' id='20-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The multiway graphs formed from each of these after 1 step are: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img21A.png" alt='' title='' width='571' height='72' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/05sw0219img21_copy-2.txt">
					<span class='close' id='21-05_out'>&amp;#10005</span></p>
<pre class='text' id='21-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But these graphs in effect “overlap”, leaving three disconnected components:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img22-2A.png" alt='' title='' width='655' height='134' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img22_copy.txt">
					<span class='close' id='22-05_out'>&amp;#10005</span></p>
<pre class='text' id='22-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps the corresponding result has two components:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img23A.png" alt='' title='' width='564' height='201' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img23_copy.txt">
					<span class='close' id='23-05_out'>&amp;#10005</span></p>
<pre class='text' id='23-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And if we start with longer (or shorter) words, and run for more steps, we’ll keep finding the same result: that there are just two disconnected “droplets” that “condense out” of the “gas” of all possible initial words:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img24A.png" alt='' title='' width='572' height='254' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img24_copy.txt">
					<span class='close' id='24-05_out'>&amp;#10005</span></p>
<pre class='text' id='24-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And what this means is that our semigroup ultimately has just two distinct elements—each of which can be represented by any of the different (“equivalent”) words in each “droplet”. (In this particular case the droplets just contain respectively all words with an odd or even number of <em>b</em>’s.) </p>
<p>In the mathematical analysis of semigroups (as well as groups), it’s common ask what happens if one forms products of elements. In our setting what this means is in effect that one wants to “combine droplets using ∘”. The simplest words in our two droplets are respectively <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img26A.png" width= '9' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img27A.png" width= '9' height='19' align='absmiddle'></span>. And we can use these as “representatives of the droplets”. Then we can see how multiplication by <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img28A.png" width= '9' height='19' align='absmiddle'></span> and by <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img29A.png" width= '9' height='19' align='absmiddle'></span> transforms words from each droplet:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img30A.png" alt='' title='' width='575' height='234' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img30_copy.txt">
					<span class='close' id='30-05_out'>&amp;#10005</span></p>
<pre class='text' id='30-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With only finite words the multiplications will sometimes not “have an immediate target” (so they are not indicated here). But in the limit of an infinite number of multiway steps, every multiplication will “have a target” and we’ll be able to summarize the effect of multiplication in our semigroup by the graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img31A.png" alt='' title='' width='504' height='83' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img31_copy.txt">
					<span class='close' id='31-05_out'>&amp;#10005</span></p>
<pre class='text' id='31-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>More familiar as mathematical objects than semigroups are groups. And while their axioms are slightly more complicated, the basic setup we’ve discussed for semigroups also applies to groups. And indeed the graph we’ve just generated for our semigroup is very much like a standard <a href='https://reference.wolfram.com/language/ref/CayleyGraph.html'>Cayley graph</a> that we might generate for a group—in which the nodes are elements of the group and the edges define how one gets from one element to another by multiplying by a generator. (One technical detail is that in Cayley graphs identity-element self-loops are normally dropped.) </p>
<p>Consider the group <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img32A.png" width= '19' height='19' align='absmiddle'></span> (the <a href='https://reference.wolfram.com/language/ref/FiniteGroupData.html'>“Klein four-group”</a>). In our notation the axioms for this group can be written:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img33A.png" alt='' title='' width='521' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img33_copy.txt">
					<span class='close' id='33-05_out'>&amp;#10005</span></p>
<pre class='text' id='33-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Given these axioms we do the same construction as for the semigroup above. And what we find is that now four “droplets” emerge, corresponding to the four elements of <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img34A.png" width= '19' height='19' align='absmiddle'></span></p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img35A.png" alt='' title='' width='565' height='268' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img35_copy.txt">
					<span class='close' id='35-05_out'>&amp;#10005</span></p>
<pre class='text' id='35-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and the pattern of connections between them in the limit yields exactly the Cayley graph for <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img36A.png" width= '19' height='19' align='absmiddle'></span>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px'  src="https://content.wolfram.com/uploads/sites/43/2022/08/05sw0219img37A.png" alt='' title='' width='521' height='144' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/05sw0219img37_copy.txt">
					<span class='close' id='37-05_out'>&amp;#10005</span></p>
<pre class='text' id='37-05_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can view what’s happening here as a first example of something we’ll return to at length later: the idea of “parsing out” recognizable mathematical concepts (here things like elements of groups) from lower-level “purely metamathematical” structures. </p>
<h2 id='metamathematical-space'><span>5 | </span>Metamathematical Space</h2>
<p>In multiway graphs like those we’ve shown in previous sections we routinely generate very large numbers of “mathematical” expressions. But how are these expressions related to each other? And in some appropriate limit can we think of them all being embedded in some kind of “metamathematical space”?</p>
<p><a name='branchial-space'></a>It turns out that this is the direct analog of what in our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> we call <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-concept-of-branchial-graphs/' target=_blank rel=noopener>branchial space</a>, and what in that case defines a map of the entanglements between branches of quantum history. In the mathematical case, let’s say we have a multiway graph generated using the axiom: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' src="https://content.wolfram.com/uploads/sites/43/2022/08/06sw0219img1A.png" alt='' title='' width='172' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/06sw0219img1_copy.txt">
					<span class='close' id='1-06_out'>&amp;#10005</span></p>
<pre class='text' id='1-06_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After a few steps starting from <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/06sw0219img2A.png" width= '29' height='19' align='absmiddle'></span> we have:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' src="https://content.wolfram.com/uploads/sites/43/2022/08/06sw0219img3A.png" alt='' title='' width='564' height='183' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/06sw0219img3_copy.txt">
					<span class='close' id='3-06_out'>&amp;#10005</span></p>
<pre class='text' id='3-06_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now—just as in our Physics Project—let’s form a branchial graph by looking at the final expressions here and connecting them if they are “entangled” in the sense that they share an ancestor on the previous step:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' src="https://content.wolfram.com/uploads/sites/43/2022/08/06sw0219img4A.png" alt='' title='' width='498' height='155' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/06sw0219img4_copy.txt">
					<span class='close' id='4-06_out'>&amp;#10005</span></p>
<pre class='text' id='4-06_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There’s some trickiness here associated with loops in the multiway graph (which are the analog of closed timelike curves in physics) and what it means to define different “steps in evolution”. But just iterating once more the construction of the multiway graph, we get a branchial graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' src="https://content.wolfram.com/uploads/sites/43/2022/08/06sw0219img5A.png" alt='' title='' width='564' height='174' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/06sw0219img5_copy.txt">
					<span class='close' id='5-06_out'>&amp;#10005</span></p>
<pre class='text' id='5-06_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After a couple more iterations the structure of the branchial graph is (with each node sized according to the size of expression it represents):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' src="https://content.wolfram.com/uploads/sites/43/2022/08/06sw0219img6A.png" alt='' title='' width='534' height='282' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/06sw0219img6_copy.txt">
					<span class='close' id='6-06_out'>&amp;#10005</span></p>
<pre class='text' id='6-06_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Continuing another iteration, the structure becomes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' src="https://content.wolfram.com/uploads/sites/43/2022/08/06sw0219img7A.png" alt='' title='' width='555' height='343' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/06sw0219img7_copy-2.txt">
					<span class='close' id='7-06_out'>&amp;#10005</span></p>
<pre class='text' id='7-06_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And in essence this structure can indeed be thought of as defining a kind of “metamathematical space” in which the different expressions are embedded. But what is the “geography” of this space? This shows how expressions (drawn as trees) are laid out on a particular branchial graph</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' src="https://content.wolfram.com/uploads/sites/43/2022/08/06sw0219img8A.png" alt='' title='' width='564' height='268' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/06sw0219img8Q_copy.txt">
					<span class='close' id='8-06_out'>&amp;#10005</span></p>
<pre class='text' id='8-06_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and we see that there is at least a general clustering of similar trees on the graph—indicating that “similar expressions” tend to be “nearby” in the metamathematical space defined by this axiom system. </p>
<p>An important feature of branchial graphs is that effects are—essentially by construction—always local in the branchial graph. For example, if one changes an expression at a particular step in the evolution of a multiway system, it can only affect a region of the branchial graph that essentially expands by one edge per step. </p>
<p><a name='entailment-cone'></a>One can think of the affected region—in analogy with a light cone in spacetime—as being the “entailment cone” of a particular expression. The edge of the entailment cone in effect expands at a certain “maximum metamathematical speed” in metamathematical (i.e. branchial) space—which one can think of as being measured in units of “expression change per multiway step”.</p>
<p>By analogy with physics one can start talking in general about motion in metamathematical space. A particular proof path in the multiway graph will progressively “move around” in the branchial graph that defines metamathematical space. (Yes, there are many subtle issues here, not least the fact that one has to imagine a certain kind of limit being taken so that the structure of the branchial graph is “stable enough” to “just be moving around” in something like a “fixed background space”.)</p>
<p>By the way, the shortest proof path in the multiway graph is the analog of a geodesic in spacetime. And later we’ll talk about how the “density of activity” in the branchial graph is the analog of energy in physics, and how it can be seen as “deflecting” the path of geodesics, just as gravity does in spacetime.</p>
<p>It’s worth mentioning just one further subtlety. Branchial graphs are in effect associated with <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/foliations-of-the-multiway-graph-and-the-structure-of-branchial-space/' target=_blank rel=noopener>“transverse slices”</a> of the multiway graph—but there are many consistent ways to make these slices. In physics terms one can think of the foliations that define different choices of sequences of slices as being like “reference frames” in which one is specifying a sequence of “simultaneity surfaces” (here “branchtime hypersurfaces”). The particular branchial graphs we’ve shown here are ones associated with what in physics might be called the cosmological rest frame in which every node is the result of the same number of updates since the beginning.</p>
<h2 id='the-issue-of-generated-variables'><span>6 | </span>The Issue of Generated Variables</h2>
<p>A rule like</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img1A.png" alt='' title='' width='172' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img1_copy.txt">
					<span class='close' id='1-07_out'>&amp;#10005</span></p>
<pre class='text' id='1-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>defines transformations for any expressions <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img2A.png" width= '18' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img3A.png" width= '19' height='21' align='absmiddle'></span>. So, for example, if we use the rule from left to right on the expression <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img4A.png" width= '59' height='19' align='absmiddle'></span> the “pattern variable” <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img5A.png" width= '18' height='19' align='absmiddle'></span> will be taken to be <em>a</em> while <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img6A.png" width= '19' height='21' align='absmiddle'></span> will be taken to be <em>b</em>&nbsp;∘&nbsp;<em>a</em>, and the result of applying the rule will be <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img7A.png" width= '119' height='19' align='absmiddle'></span>. </p>
<p>But consider instead the case where our rule is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img8A.png" alt='' title='' width='172' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img8_copy.txt">
					<span class='close' id='8-07_out'>&amp;#10005</span></p>
<pre class='text' id='8-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Applying this rule (from left to right) to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img9A.png" width= '59' height='19' align='absmiddle'></span> we’ll now get <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img10A.png" width= '97' height='19' align='absmiddle'></span>. And applying the rule to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img11A.png" width= '29' height='19' align='absmiddle'></span> we’ll get <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img12A.png" width= '67' height='19' align='absmiddle'></span>. But what should we make of those <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img13A.png" width= '17' height='19' align='absmiddle'></span>’s? And in particular, are they “the same”, or not? </p>
<p>A pattern variable like <em>z</em>_ can stand for any expression. But do two different <em>z</em>_’s have to stand for the same expression? In a rule like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img14A.png" width= '45' height='19' align='absmiddle'></span>&nbsp;<span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/long-arrowA.png" style='margin-bottom:4px' width= '20' height='24' align='absmiddle'></span>&nbsp;&#8230; we’re assuming that, yes, the two <em>z</em>_’s always stand for the same expression. But if the <em>z</em>_’s appear in different rules it’s a different story. Because in that case we’re dealing with two separate and unconnected <em>z</em>_’s—that can stand for completely different expressions.</p>
<p>To begin seeing how this works, let’s start with a very simple example. Consider the (for now, one-way) rule</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img15A.png" alt='' title='' width='76' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img15_copy.txt">
					<span class='close' id='15-07_out'>&amp;#10005</span></p>
<pre class='text' id='15-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img16A.png" width='9' height='19' align='absmiddle'></span> is the literal symbol <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img17A.png" width= '9' height='19' align='absmiddle'></span>, and <em>x</em>_ is a pattern variable. Applying this to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img18A.png" width= '29' height='19' align='absmiddle'></span> we might think we could just write the result as:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img19A.png" alt='' title='' width='222' height='94' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img19_copy.txt">
					<span class='close' id='19-07_out'>&amp;#10005</span></p>
<pre class='text' id='19-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then if we apply the rule again both branches will give the same expression <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img20A.png" width= '47' height='19' align='absmiddle'></span>, so there’ll be a merge in the multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img21A.png" alt='' title='' width='222' height='165' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img21_copy.txt">
					<span class='close' id='21-07_out'>&amp;#10005</span></p>
<pre class='text' id='21-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But is this really correct? Well, no. Because really those should be two different <em>x</em>_’s, that could stand for two different expressions. So how can we indicate this? One approach is just to give every “generated” <em>x</em>_ a new name: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img22A.png" alt='' title='' width='404' height='176' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img22_copy.txt">
					<span class='close' id='22-07_out'>&amp;#10005</span></p>
<pre class='text' id='22-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But this result isn’t really correct either. Because if we look at the second step we see the two expressions <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img23A.png" width= '63' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img24A.png" width= '65' height='19' align='absmiddle'></span>. But what’s really the difference between these? The names <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img25A.png" width= '13' height='19' align='absmiddle'></span> are arbitrary; the only constraint is that within any given expression they have to be different. But between expressions there’s no such constraint. And in fact <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img26A.png" width= '63' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img27A.png" width= '65' height='19' align='absmiddle'></span> both represent exactly the same class of expressions: any expression of the form <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img28A.png" width= '49' height='19' align='absmiddle'></span>. </p>
<p>So in fact it’s not correct that there are two separate branches of the multiway system producing two separate expressions. Because those two branches produce equivalent expressions, which means they can be merged. And turning both equivalent expressions into the same canonical form we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img29A.png" alt='' title='' width='222' height='175' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img29_copy.txt">
					<span class='close' id='29-07_out'>&amp;#10005</span></p>
<pre class='text' id='29-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s important to notice that this isn’t the same result as what we got when we assumed that every <em>x</em>_ was the same. Because then our final result was the expression <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img30A.png" width= '47' height='19' align='absmiddle'></span> which can match <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img31A.png" width= '29' height='19' align='absmiddle'></span> but not <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img32A.png" width= '29' height='19' align='absmiddle'></span>—whereas now the final result is <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img33A.png" width= '49' height='19' align='absmiddle'></span> which can match both <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img34A.png" width= '29' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img35A.png" width= '29' height='19' align='absmiddle'></span>.</p>
<p>This may seem like a subtle issue. But it’s critically important in practice. Not least because generated variables are in effect what make up all “truly new stuff” that can be produced. With a rule like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img36A.png" width= '165' height='21' align='absmiddle'></span> one’s essentially just taking whatever one started with, and successively rearranging the pieces of it. But with a rule like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img37A.png" width= '163' height='21' align='absmiddle'></span> there’s something “truly new” generated every time <em>z</em>_ appears. </p>
<p>By the way, the basic issue of “generated variables” isn’t something specific to the particular symbolic expression setup we’ve been using here. For example, there’s a <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-in-our-models/updating-events-and-causal-dependence/' target=_blank rel=noopener>direct analog of it in the hypergraph rewriting systems</a> that appear in our Physics Project. But in that case there’s a particularly clear interpretation: the analog of “generated variables” are new “atoms of space” produced by the application of rules. And far from being some kind of footnote, these “generated atoms of space” are what make up everything we have in our universe today. </p>
<p>The issue of generated variables—and especially their naming—is the bane of all sorts of formalism for mathematical logic and programming languages. As we’ll see later, it’s perfectly possible to “go to a lower level” and set things up with no names at all, for example using <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/'>combinators</a>. But without names, things tend to seem quite alien to us humans—and certainly if we want to understand the correspondence with standard presentations of mathematics it’s pretty necessary to have names. So at least for now we’ll keep names, and handle the issue of generated variables by uniquifying their names, and canonicalizing every time we have a complete expression.</p>
<p>Let’s look at another example to see the importance of how we handle generated variables. Consider the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img38A.png" alt='' title='' width='138' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img38_copy.txt">
					<span class='close' id='38-07_out'>&amp;#10005</span></p>
<pre class='text' id='38-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><a name='uniquification'></a>If we start with <em>a</em>&nbsp;∘&nbsp;<em>a</em> and do no uniquification, we’ll get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img39A.png" alt='' title='' width='409' height='244' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img39_copy.txt">
					<span class='close' id='39-07_out'>&amp;#10005</span></p>
<pre class='text' id='39-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With uniquification, but not canonicalization, we’ll get a pure tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img40A.png" alt='' title='' width='551' height='191' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img40_copy.txt">
					<span class='close' id='40-07_out'>&amp;#10005</span></p>
<pre class='text' id='40-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But with canonicalization this is reduced to:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img41A.png" alt='' title='' width='484' height='190' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img41_copy.txt">
					<span class='close' id='41-07_out'>&amp;#10005</span></p>
<pre class='text' id='41-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A confusing feature of this particular example is that this same result would have been obtained just by canonicalizing the original “assume-all-<em>x</em>_’s-are-the-same” case. </p>
<p>But things don’t always work this way. Consider the rather trivial rule</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img42-2A.png" alt='' title='' width='162' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img42-2_copy.txt">
					<span class='close' id='42-07_out'>&amp;#10005</span></p>
<pre class='text' id='42-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>starting from <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img43A.png" width= '38' height='19' align='absmiddle'></span>. If we don’t do uniquification, and don’t do canonicalization, we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img44A.png" alt='' title='' width='398' height='210' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img44_copy.txt">
					<span class='close' id='44-07_out'>&amp;#10005</span></p>
<pre class='text' id='44-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we do uniquification (but not canonicalization), we get a pure tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img45A.png" alt='' title='' width='422' height='125' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img45_copy.txt">
					<span class='close' id='45-07_out'>&amp;#10005</span></p>
<pre class='text' id='45-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But if we now canonicalize this, we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img46A.png" alt='' title='' width='355' height='204' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img46_copy.txt">
					<span class='close' id='46-07_out'>&amp;#10005</span></p>
<pre class='text' id='46-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And this is now not the same as what we would get by canonicalizing, without uniquifying:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/07sw2019img47A.png" alt='' title='' width='445' height='207' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/07sw2019img47_copy.txt">
					<span class='close' id='47-07_out'>&amp;#10005</span></p>
<pre class='text' id='47-07_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='rules-applied-to-rules'><span>7 | </span>Rules Applied to Rules</h2>
<p>In what we’ve done so far, we’ve always talked about applying rules (like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img1A.png" width= '165' height='21' align='absmiddle'></span>) to expressions (like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/metamath-split-fomula-AA.png" width= '92' height='' align='absmiddle'></span> or <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/metamath-split-formula-BA.png" width= '89' height='' align='absmiddle'></span>). But if everything is a symbolic expression there shouldn’t really need to be a distinction between “rules” and “ordinary expressions”. They’re all just expressions. And so we should as well be able to apply rules to rules as to ordinary expressions.</p>
<p><a name='two-way-rule'></a>And indeed the concept of “applying rules to rules” is something that has a familiar analog in standard mathematics. The “two-way rules” we’ve been using effectively define equivalences—which are very common kinds of statements in mathematics, though in mathematics they’re usually written with <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/long-equalA.png" width= '13' height='23' align='absmiddle'></span> rather than with <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/double-arrowA.png" style='margin-bottom:4px' width='20' height='22' align='absmiddle'></span>. And indeed, many axioms and many theorems are specified as equivalences—and in equational logic one takes everything to be defined using equivalences. And when one’s dealing with theorems (or axioms) specified as equivalences, the basic way one derives new theorems is by applying one theorem to another—or in effect by applying rules to rules.</p>
<p>As a specific example, let’s say we have the “axiom”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img3A.png" alt='' title='' width='172' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img3_copy.txt">
					<span class='close' id='3-08_out'>&amp;#10005</span></p>
<pre class='text' id='3-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can now apply this to the rule</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img4A.png" alt='' title='' width='106' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img4_copy.txt">
					<span class='close' id='4-08_out'>&amp;#10005</span></p>
<pre class='text' id='4-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>to get (where since <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img5A.png" width= '47' height='19' align='absmiddle'></span> is equivalent to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img6A.png" width= '47' height='19' align='absmiddle'></span> we’re sorting each two-way rule that arises)</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img7A.png" alt='' title='' width='564' height='177' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img7_copy.txt">
					<span class='close' id='7-08_out'>&amp;#10005</span></p>
<pre class='text' id='7-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or after a few more steps:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img8A.png" alt='' title='' width='552' height='312' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img8_copy.txt">
					<span class='close' id='8-08_out'>&amp;#10005</span></p>
<pre class='text' id='8-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In this example all that’s happening is that the substitutions specified by the axiom are getting separately applied to the left- and right-hand sides of each rule that is generated. But if we really take seriously the idea that everything is a symbolic expression, things can get a bit more complicated. </p>
<p>Consider for example the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img9A.png" alt='' title='' width='112' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img9_copy.txt">
					<span class='close' id='9-08_out'>&amp;#10005</span></p>
<pre class='text' id='9-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we apply this to</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img10A.png" alt='' title='' width='106' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img10_copy.txt">
					<span class='close' id='10-08_out'>&amp;#10005</span></p>
<pre class='text' id='10-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>then if <em>x</em>_ “matches any expression” it can match the whole expression <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img11A.png" width= '87' height='19' align='absmiddle'></span> giving the result:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img12A.png" alt='' title='' width='201' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img12_copy.txt">
					<span class='close' id='12-08_out'>&amp;#10005</span></p>
<pre class='text' id='12-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Standard mathematics doesn’t have an obvious meaning for something like this—although as soon as one “goes metamathematical” it’s fine. But in an effort to maintain contact with standard mathematics we’ll for now have the “meta rule” that <em>x</em>_ can’t match an expression whose top-level operator is <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/long-arrowA.png" style='margin-bottom:4px' width='20' height='24' align='absmiddle'></span>. (As we’ll discuss later, including such matches would allow us to do exotic things like <a href='https://www.wolframscience.com/nks/p815--implications-for-mathematics-and-its-foundations/'>encode set theory within arithmetic</a>, which is again something usually considered to be “syntactically prevented” in mathematical logic.)</p>
<p>Another—still more obscure—meta rule we have is that <em>x</em>_ can’t “match inside a variable”. In Wolfram Language, for example, <em>a</em>_ has the full form <tt><a href='https://reference.wolfram.com/language/ref/Pattern.html'>Pattern</a>[a,<a href='https://reference.wolfram.com/language/ref/Blank.html'>Blank</a>[]]</tt>, and one could imagine that <em>x</em>_ could match “internal pieces” of this. But for now, we’re going to treat all variables as atomic—even though later on, when we “descend below the level of variables”, the story will be different. </p>
<p>When we apply a rule like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img13A.png" width= '105' height='21' align='absmiddle'></span> to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img14A.png" width= '87' height='19' align='absmiddle'></span> we’re taking a rule with pattern variables, and doing substitutions with it on a “literal expression” without pattern variables. But it’s also perfectly possible to apply pattern rules to pattern rules<span style="font-size:14px">&mdash;</span>and indeed that’s what we’ll mostly do below. But in this case there’s another subtle issue that can arise. Because if our rule generates variables, we can end up with two different kinds of variables with “arbitrary names”: generated variables, and pattern variables from the rule we’re operating on. And when we canonicalize the names of these variables, we can end up with identical expressions that we need to merge.</p>
<p>Here’s what happens if we apply the rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img15A.png" width= '105' height='21' align='absmiddle'></span> to the literal rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img16A.png" width= '67' height='19' align='absmiddle'></span>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img17A.png" alt='' title='' width='404' height='74' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img17_copy.txt">
					<span class='close' id='17-08_out'>&amp;#10005</span></p>
<pre class='text' id='17-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we apply it to the pattern rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img18A.png" width= '97' height='19' align='absmiddle'></span> but don’t do canonicalization, we’ll just get the same basic result:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img19A.png" alt='' title='' width='474' height='79' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img19_copy.txt">
					<span class='close' id='19-08_out'>&amp;#10005</span></p>
<pre class='text' id='19-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But if we canonicalize we get instead: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img20A.png" alt='' title='' width='474' height='71' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img20_copy.txt">
					<span class='close' id='20-08_out'>&amp;#10005</span></p>
<pre class='text' id='20-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The effect is more dramatic if we go to two steps. When operating on the literal rule we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img21A.png" alt='' title='' width='453' height='101' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img21_copy.txt">
					<span class='close' id='21-08_out'>&amp;#10005</span></p>
<pre class='text' id='21-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Operating on the pattern rule, but without canonicalization, we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img22A.png" alt='' title='' width='570' height='109' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img22_copy.txt">
					<span class='close' id='22-08_out'>&amp;#10005</span></p>
<pre class='text' id='22-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>while if we include canonicalization many rules merge and we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy'src="https://content.wolfram.com/uploads/sites/43/2022/08/08sw0223img23A.png" alt='' title='' width='453' height='108' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/08sw0223img23_copy.txt">
					<span class='close' id='23-08_out'>&amp;#10005</span></p>
<pre class='text' id='23-08_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='accumulative-evolution'><span>8 | </span>Accumulative Evolution</h2>
<p>We can think of “ordinary expressions” like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img1A.png" width= '29' height='19' align='absmiddle'></span> as being like “data”, and rules as being like “code”. But when everything is a symbolic expression, it’s perfectly possible—as we saw above—to “treat code like data”, and in particular to generate rules as output. But this now raises a new possibility. When we “get a rule as output”, why not start “using it like code” and applying it to things?</p>
<p>In mathematics we might apply some theorem to prove a lemma, and then we might subsequently use that lemma to prove another theorem—eventually building up a whole “accumulative structure” of lemmas (or theorems) being used to prove other lemmas. In any given proof we can in principle always just keep using the axioms over and over again—but it’ll be much more efficient to progressively build a library of more and more lemmas, and use these. And in general we’ll build up a richer structure by “<a href='https://www.wolframscience.com/nks/notes-12-9--proof-structures/'>accumulating lemmas</a>” than always just going back to the axioms.</p>
<p><a name='token-event-graph'></a>In the multiway graphs we’ve drawn so far, each edge represents the application of a rule, but that rule is always a fixed axiom. To represent accumulative evolution we need a slightly more elaborate structure—and it’ll be convenient to use <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#the-formal-structure-of-multicomputation'>token-event graphs</a> rather than pure multiway graphs.</p>
<p>Every time we apply a rule we can think of this as an event. And with the setup we’re describing, that event can be thought of as taking two tokens as input: one the “code rule” and the other the “data rule”. The output from the event is then some collection of rules, which can then serve as input (either “code” or “data”) to other events. </p>
<p>Let’s start with the very simple example of the rule</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img2A.png" alt='' title='' width='71' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img2_copy.txt">
					<span class='close' id='2-09_out'>&amp;#10005</span></p>
<pre class='text' id='2-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where for now there are no patterns being used. Starting from this rule, we get the token-event graph (where now we’re indicating the initial “axiom” statement using a slightly different color):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img3A.png" alt='' title='' width='228' height='175' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img3_copy.txt">
					<span class='close' id='3-09_out'>&amp;#10005</span></p>
<pre class='text' id='3-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One subtlety here is that the <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img4A.png" width= '46' height='21' align='absmiddle'></span> is applied to itself—so there are two edges going into the event from the node representing the rule. Another subtlety is that there are two different ways the rule can be applied, with the result that there are two output rules generated.</p>
<p>Here’s another example, based on the two rules:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img5A.png" alt='' title='' width='127' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img5_copy.txt">
					<span class='close' id='5-09_out'>&amp;#10005</span></p>
<pre class='text' id='5-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p class="padding-t-1">
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img6A.png" alt='' title='' width='316' height='113' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img6_copy.txt">
					<span class='close' id='6-09_out'>&amp;#10005</span></p>
<pre class='text' id='6-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Continuing for another step we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img7A.png" alt='' title='' width='551' height='198' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img7_copy.txt">
					<span class='close' id='7-09_out'>&amp;#10005</span></p>
<pre class='text' id='7-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Typically we will want to consider <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/long-arrowA.png" style='margin-bottom:4px' width='20' height='' align='absmiddle'></span> as “defining an equivalence”, so that <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img8A.png" width= '47' height='19' align='absmiddle'></span> means the same as <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img9A.png" width= '47' height='19' align='absmiddle'></span>, and can be conflated with it—yielding in this case: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img10A.png" alt='' title='' width='551' height='196' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img10_copy.txt">
					<span class='close' id='10-09_out'>&amp;#10005</span></p>
<pre class='text' id='10-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now let’s consider the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img11A.png" alt='' title='' width='90' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img11_copy.txt">
					<span class='close' id='11-09_out'>&amp;#10005</span></p>
<pre class='text' id='11-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After one step we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img12A.png" alt='' title='' width='247' height='116' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img12_copy.txt">
					<span class='close' id='12-09_out'>&amp;#10005</span></p>
<pre class='text' id='12-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img13A.png" alt='' title='' width='387' height='148' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img13_copy.txt">
					<span class='close' id='13-09_out'>&amp;#10005</span></p>
<pre class='text' id='13-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The token-event graphs after 3 and 4 steps in this case are (where now we’ve deduplicated events):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img14A.png" alt='' title='' width='564' height='226' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img14_copy.txt">
					<span class='close' id='14-09_out'>&amp;#10005</span></p>
<pre class='text' id='14-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Let’s now consider a rule with the same structure, but with pattern variables instead of literal symbols:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img15A.png" alt='' title='' width='115' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img15_copy.txt">
					<span class='close' id='15-09_out'>&amp;#10005</span></p>
<pre class='text' id='15-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s what happens after one step (note that there’s canonicalization going on, so <em>a</em>_’s in different rules aren’t “the same”)</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img16A.png" alt='' title='' width='336' height='128' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img16_copy.txt">
					<span class='close' id='16-09_out'>&amp;#10005</span></p>
<pre class='text' id='16-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and we see that there are different theorems from the ones we got without patterns. After 2 steps with the pattern rule we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img17A.png" alt='' title='' width='483' height='176' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img17_copy.txt">
					<span class='close' id='17-09_out'>&amp;#10005</span></p>
<pre class='text' id='17-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where now the complete set of “theorems that have been derived” is (dropping the _’s for readability)</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img18A.png" alt='' title='' width='554' height='124' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img18_copy.txt">
					<span class='close' id='18-09_out'>&amp;#10005</span></p>
<pre class='text' id='18-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or as trees:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img19A.png" alt='' title='' width='544' height='209' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/09sw0219img19_copy-2.txt">
					<span class='close' id='19-09_out'>&amp;#10005</span></p>
<pre class='text' id='19-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After another step one gets</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img20A.png" alt='' title='' width='551' height='285' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/09sw0219img20_copy-2.txt">
					<span class='close' id='20-09_out'>&amp;#10005</span></p>
<pre class='text' id='20-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where now there are 2860 “theorems”, roughly exponentially distributed across sizes according to</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img21A.png" alt='' title='' width='564' height='94' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img21_copy.txt">
					<span class='close' id='21-09_out'>&amp;#10005</span></p>
<pre class='text' id='21-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and with a typical “size-19” theorem being:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img22A.png" alt='' title='' width='418' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img22_copy.txt">
					<span class='close' id='22-09_out'>&amp;#10005</span></p>
<pre class='text' id='22-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In effect we can think of our original rule (or “axiom”) as having initiated some kind of “mathematical Big Bang” from which an increasing number of theorems are generated. Early on we described having a “gas” of mathematical theorems that—a little like molecules—can interact and create new theorems. So now we can view our accumulative evolution process as a concrete example of this.</p>
<p>Let’s consider the rule from previous sections:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img23A.png" alt='' title='' width='172' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img23_copy.txt">
					<span class='close' id='23-09_out'>&amp;#10005</span></p>
<pre class='text' id='23-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After one step of accumulative evolution according to this rule we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img24A.png" alt='' title='' width='512' height='141' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/09sw0219img24_copy.txt">
					<span class='close' id='24-09_out'>&amp;#10005</span></p>
<pre class='text' id='24-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 and 3 steps the results are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/09sw0219img25A.png" alt='' title='' width='564' height='221' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/09sw0219img25_copy-3.txt">
					<span class='close' id='25-09_out'>&amp;#10005</span></p>
<pre class='text' id='25-09_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What is the significance of all this complexity? At a basic level, it’s just an example of the ubiquitous phenomenon in the computational universe (captured in the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a>) that even systems with very simple rules can generate behavior as complex as anything. But the question is whether—on top of all this complexity—there are simple “coarse-grained” features that we can identify as “higher-level mathematics”; features that we can think of as capturing the “bulk” behavior of the accumulative evolution of axiomatic mathematics.</p>
<h2 id='accumulative-string-systems'><span>9 | </span>Accumulative String Systems</h2>
<p>As we’ve just seen, the accumulative evolution of even very simple transformation rules for expressions can quickly lead to considerable complexity. And in an effort to understand the essence of what’s going on, it’s useful to look at the slightly simpler case not of rules for “tree-structured expressions” but instead at rules for strings of characters. </p>
<p>Consider the seemingly trivial case of the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img1A.png" alt='' title='' width='43' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After one step this gives</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img2A.png" alt='' title='' width='271' height='219' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>while after 2 steps we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img3A.png" alt='' title='' width='559' height='203' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>though treating <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img4A.png" width= '47' height='19' align='absmiddle'></span> as the same as <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img5A.png" width= '47' height='19' align='absmiddle'></span> this just becomes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img6A.png" alt='' title='' width='271' height='175' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img6_copy.txt">
					<span class='close' id='6_out'>&amp;#10005</span></p>
<pre class='text' id='6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s what happens with the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img7A.png" alt='' title='' width='52' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img8A.png" alt='' title='' width='515' height='183' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img9A.png" alt='' title='' width='551' height='189' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and after 3 steps</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img10A.png" alt='' title='' width='414' height='219' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where now there are a total of 25 “theorems”, including (unsurprisingly) things like:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img11A.png" alt='' title='' width='112' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s worth noting that despite the “lexical similarity” of the string rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img12A.png" width= '60' height='19' align='absmiddle'></span> we’re now using to the expression rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img13A.png" width= '67' height='19' align='absmiddle'></span> from the previous section, these rules actually work in very different ways. The string rule can apply to characters anywhere within a string, but what it inserts is always of fixed size. The expression rule deals with trees, and only applies to “whole subtrees”, but what it inserts can be a tree of any size. (One can align these setups by thinking of strings as expressions in which characters are “bound together” by an associative operator, as in A·B·A·A. But if one explicitly gives associativity axioms these will lead to additional pieces in the token-event graph.)</p>
<p>A rule like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img14A.png" width= '97' height='19' align='absmiddle'></span> also has the feature of involving patterns. In principle we could include patterns in strings too—both for single characters (as with _) and for sequences of characters (as with __)—but we won’t do this here. (We can also consider one-way rules, using &#8594; instead of <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/double-arrowA.png" style='margin-bottom:4px' width='20' height='22' align='absmiddle'></span>.)</p>
<p>To get a general sense of the kinds of things that happen in accumulative (string) systems, we can consider enumerating all possible distinct two-way string transformation rules. With only a single character A, there are only two distinct cases</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img8A.png" alt='' title='' width='487' height='156' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img8-2_copy.txt">
					<span class='close' id='8-v2_out'>&amp;#10005</span></p>
<pre class='text' id='8-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>because <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img16A.png" width= '62' height='19' align='absmiddle'></span><span style="font-weight:Regular"> </span>systematically generates all possible <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img17A.png" width= '73' height='19' align='absmiddle'></span> rules</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img18A.png" alt='' title='' width='503' height='200' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/10sw0223img19X_copy.txt">
					<span class='close' id='18X_out'>&amp;#10005</span></p>
<pre class='text' id='18X_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and at <em>t</em> steps gives a total number of rules equal to:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img19A.png" alt='' title='' width='127' height='25' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img19_copy.txt">
					<span class='close' id='19_out'>&amp;#10005</span></p>
<pre class='text' id='19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With characters A and B the distinct token-event graphs generated starting from rules with a total of at most 5 characters are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img20A.png" alt='' title='' width='578' height='232' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img20_copy.txt">
					<span class='close' id='20_out'>&amp;#10005</span></p>
<pre class='text' id='20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Note that when the strings in the initial rule are the same length, only a rather trivial finite token-event graph is ever generated, as in the case of <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img21A.png" width= '72' height='19' align='absmiddle'></span>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/10sw0223img22A.png" alt='' title='' width='289' height='103' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/10sw0223img22_copy.txt">
					<span class='close' id='22_out'>&amp;#10005</span></p>
<pre class='text' id='22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But when the strings are of different lengths, there is always unbounded growth. </p>
<h2 id='the-case-of-hypergraphs'><span>10 | </span>The Case of Hypergraphs</h2>
<p>We’ve looked at accumulative versions of expression and string rewriting systems. So what about accumulative versions of hypergraph rewriting systems of the kind that appear in our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a>? </p>
<p>Consider the very simple <a href='https://www.wolframphysics.org/technical-introduction/basic-form-of-models/' target=_blank rel=noopener>hypergraph rule</a></p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img9A.png" alt='' title='' width='186' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img9_copy.txt">
					<span class='close' id='9-v2_out'>&amp;#10005</span></p>
<pre class='text' id='9-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or pictorially:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img2A.png" alt='' title='' width='240' height='58' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img2_copy.txt">
					<span class='close' id='2-11_out'>&amp;#10005</span></p>
<pre class='text' id='2-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(Note that the nodes that are named 1 here are really like pattern variables, that could be named for example <em>x</em>_.)</p>
<p>We can now do accumulative evolution with this rule, at each step combining results that involve equivalent (i.e. isomorphic) hypergraphs:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img3A.png" alt='' title='' width='468' height='144' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img3_copy.txt">
					<span class='close' id='3-11_out'>&amp;#10005</span></p>
<pre class='text' id='3-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After two steps this gives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img4A.png" alt='' title='' width='469' height='172' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img4_copy.txt">
					<span class='close' id='4-11_out'>&amp;#10005</span></p>
<pre class='text' id='4-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And after 3 steps:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img5A.png" alt='' title='' width='562' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img5_copy.txt">
					<span class='close' id='5-11_out'>&amp;#10005</span></p>
<pre class='text' id='5-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>How does all this compare to “ordinary” evolution by hypergraph rewriting? Here’s a multiway graph based on applying the same underlying rule repeatedly, starting from an initial condition formed from the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img6A.png" alt='' title='' width='545' height='280' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img6_copy.txt">
					<span class='close' id='6-11_out'>&amp;#10005</span></p>
<pre class='text' id='6-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What we see is that the accumulative evolution in effect “shortcuts” the ordinary multiway evolution, essentially by “caching” the result of every piece of every transformation between states (which in this case are rules), and delivering a given state in fewer steps.</p>
<p>In our typical investigation of hypergraph rewriting for our Physics Project we consider one-way transformation rules. Inevitably, though, the ruliad contains rules that go both ways. And here, in an effort to understand the correspondence with our metamodel of mathematics, we can consider two-way hypergraph rewriting rules. An example is the tw0-way version of the rule above:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img10A.png" alt='' title='' width='190' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img10_copy.txt">
					<span class='close' id='10-v2_out'>&amp;#10005</span></p>
<pre class='text' id='10-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p class="padding-t-1">
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img8A.png" alt='' title='' width='231' height='50' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img8_copy.txt">
					<span class='close' id='8-11_out'>&amp;#10005</span></p>
<pre class='text' id='8-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now the token-event graph becomes</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img9A.png" alt='' title='' width='475' height='230' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img9_copy.txt">
					<span class='close' id='9-11_out'>&amp;#10005</span></p>
<pre class='text' id='9-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or after 2 steps (where now the transformations from “later states” to “earlier states” have started to fill in):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img10A.png" alt='' title='' width='473' height='238' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img10_copy.txt">
					<span class='close' id='10-11_out'>&amp;#10005</span></p>
<pre class='text' id='10-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Just like in ordinary hypergraph evolution, the only way to get hypergraphs with additional hyperedges is to start with a rule that involves the addition of new hyperedges—and the same is true for the addition of new elements. Consider the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img11A.png" alt='' title='' width='327' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img11_copy.txt">
					<span class='close' id='11-v2_out'>&amp;#10005</span></p>
<pre class='text' id='11-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p class="padding-t-1">
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img12A.png" alt='' title='' width='563' height='41' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img12_copy.txt">
					<span class='close' id='12-v2_out'>&amp;#10005</span></p>
<pre class='text' id='12-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 1 step this gives</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img13A.png" alt='' title='' width='572' height='150' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/11sw0223img13X_copy.txt">
					<span class='close' id='13-11_out'>&amp;#10005</span></p>
<pre class='text' id='13-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>while after 2 steps it gives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/11sw0223img14A.png" alt='' title='' width='564' height='219' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/11sw0223img14_copy.txt">
					<span class='close' id='14-11_out'>&amp;#10005</span></p>
<pre class='text' id='14-11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The general appearance of this token-event graph is not much different from what we saw with string rewrite or expression rewrite systems. So what this suggests is that it doesn’t matter much whether we’re starting from our metamodel of axiomatic mathematics or from any other reasonably rich rewriting system: we’ll always get the same kind of “large-scale” token-event graph structure. And this is an example of what we’ll use to argue for general laws of metamathematics.</p>
<h2 id='proofs-in-accumulative-systems'><span>11 | </span>Proofs in Accumulative Systems</h2>
<p>In an earlier section, we discussed how paths in a multiway graph can represent proofs of “equivalence” between expressions (or the “entailment” of one expression by another). For example, with the rule (or “axiom”)</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img1A.png" alt='' title='' width='120' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img1_copy.txt">
					<span class='close' id='1-12_out'>&amp;#10005</span></p>
<pre class='text' id='1-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>this shows a path that “proves” that “BA entails AAB”: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img2A.png" alt='' title='' width='547' height='353' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img2_copy.txt">
					<span class='close' id='2-12_out'>&amp;#10005</span></p>
<pre class='text' id='2-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But once we know this, we can imagine adding this result (as what we can think of as a “lemma”) to our original rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img3A.png" alt='' title='' width='191' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img3_copy.txt">
					<span class='close' id='3-12_out'>&amp;#10005</span></p>
<pre class='text' id='3-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now (the “theorem”) “BA entails AAB” takes just one step to prove—and all sorts of other proofs are also shortened: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img4A.png" alt='' title='' width='547' height='287' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img4_copy.txt">
					<span class='close' id='4-12_out'>&amp;#10005</span></p>
<pre class='text' id='4-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s perfectly possible to imagine evolving a multiway system with a kind of “caching-based” speed-up mechanism where every new entailment discovered is added to the list of underlying rules. And, by the way, it’s also possible to use two-way rules throughout the multiway system:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img5A.png" alt='' title='' width='547' height='268' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img5_copy.txt">
					<span class='close' id='5-12_out'>&amp;#10005</span></p>
<pre class='text' id='5-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But accumulative systems provide a much more principled way to progressively “add what’s discovered”. So what do proofs look like in such systems?</p>
<p>Consider the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img6A.png" alt='' title='' width='51' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img6_copy.txt">
					<span class='close' id='6-12_out'>&amp;#10005</span></p>
<pre class='text' id='6-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Running it for 2 steps we get the token-event graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img7A.png" alt='' title='' width='551' height='208' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img7_copy.txt">
					<span class='close' id='7-12_out'>&amp;#10005</span></p>
<pre class='text' id='7-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now let’s say we want to prove that the original “axiom” <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img8A.png" width= '60' height='19' align='absmiddle'></span> implies (or “entails”) the “theorem” <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img9A.png" width= '93' height='19' align='absmiddle'></span>. Here’s the subgraph that demonstrates the result:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img10A.png" alt='' title='' width='551' height='208' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img10_copy.txt">
					<span class='close' id='10-12_out'>&amp;#10005</span></p>
<pre class='text' id='10-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><a name='proof-graph'></a>And here it is as a separate “proof graph”</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img11A.png" alt='' title='' width='520' height='182' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img11_copy.txt">
					<span class='close' id='11-12_out'>&amp;#10005</span></p>
<pre class='text' id='11-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where each event takes two inputs—the “rule to be applied” and the “rule to apply to”—and the output is the derived (i.e. entailed or implied) new rule or rules.</p>
<p>If we run the accumulative system for another step, we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img12A.png" alt='' title='' width='551' height='290' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img12_copy.txt">
					<span class='close' id='12-12_out'>&amp;#10005</span></p>
<pre class='text' id='12-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now there are additional “theorems” that have been generated. An example is: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img13A.png" alt='' title='' width='86' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img13_copy.txt">
					<span class='close' id='13-12_out'>&amp;#10005</span></p>
<pre class='text' id='13-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now we can find a proof of this theorem:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img14A.png" alt='' title='' width='521' height='271' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img14_copy.txt">
					<span class='close' id='14-12_out'>&amp;#10005</span></p>
<pre class='text' id='14-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This proof exists as a subgraph of the token-event graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img15A.png" alt='' title='' width='564' height='284' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img15_copy.txt">
					<span class='close' id='15-12_out'>&amp;#10005</span></p>
<pre class='text' id='15-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The proof just given has the fewest events—or “proof steps”—that can be used. But altogether there are 50 possible proofs, other examples being:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img16A.png" alt='' title='' width='563' height='416' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/12sw0223img16_copy-2.txt">
					<span class='close' id='16-12_out'>&amp;#10005</span></p>
<pre class='text' id='16-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>These correspond to the subgraphs:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img17A.png" alt='' title='' width='574' height='97' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img17_copy.txt">
					<span class='close' id='17-12_out'>&amp;#10005</span></p>
<pre class='text' id='17-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>How much has the accumulative character of these token-event graphs contributed to the structure of these proofs? It’s perfectly possible to find proofs that never use “intermediate lemmas” but always “go back to the original axiom” at every step. In this case examples are</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img13A.png" alt='' title='' width='513' height='283' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img13-2_copy.txt">
					<span class='close' id='13-v2_out'>&amp;#10005</span></p>
<pre class='text' id='13-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which all in effect require at least one more “sequential event” than our shortest proof using intermediate lemmas. </p>
<p>A slightly more dramatic example occurs for the theorem </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/12sw0223img19A.png" alt='' title='' width='120' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/12sw0223img19_copy.txt">
					<span class='close' id='19-12_out'>&amp;#10005</span></p>
<pre class='text' id='19-12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where now without intermediate lemmas the shortest proof is</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img14A.png" alt='' title='' width='525' height='450' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img14_copy.txt">
					<span class='close' id='14-v2_out'>&amp;#10005</span></p>
<pre class='text' id='14-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>but with intermediate lemmas it becomes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img15A.png" alt='' title='' width='546' height='344' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img15_copy.txt">
					<span class='close' id='15-v2_out'>&amp;#10005</span></p>
<pre class='text' id='15-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What we’ve done so far here is to generate a complete token-event graph for a certain number of steps, and then to see if we can find a proof in it for some particular statement. The proof is a subgraph of the “relevant part” of the full token-event graph. Often—in analogy to the simpler case of finding proofs of equivalences between expressions in a multiway graph—we’ll call this subgraph a “proof path”. </p>
<p>But in addition to just “finding a proof” in a fully constructed token-event graph, we can ask whether, given a statement, we can directly construct a proof for it. As discussed in the context of proofs in ordinary multiway graphs, computational irreducibility implies that in general there’s no “shortcut” way to find a proof. In addition, for any statement, there may be no upper bound on the length of proof that will be required (or on the size or number of intermediate “lemmas” that will have to be used). And this, again, is the <a href='https://www.wolframscience.com/nks/p779--implications-for-mathematics-and-its-foundations/'>shadow of undecidability in our systems</a>: that there can be statements whose provability may be arbitrarily difficult to determine. </p>
<h2 id='beyond-substitution-cosubstitution-and-bisubstitution'><span>12 | </span>Beyond Substitution: Cosubstitution and Bisubstitution</h2>
<p>In making our “metamodel” of mathematics we’ve been discussing the rewriting of expressions according to rules. But there’s a subtle issue that we’ve so far avoided, that has to do with the fact that the expressions we’re rewriting are often themselves patterns that stand for whole classes of expressions. And this turns out to allow for <a href='https://www.wolframscience.com/nks/notes-12-9--substitution-strategies-in-proofs/'>additional kinds of transformations</a> that we’ll call cosubstitution and bisubstitution.</p>
<p>Let’s talk first about cosubstitution. Imagine we have the expression <tt>f[a]</tt>. The rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img1A.png" width= '40' height='19' align='absmiddle'></span> would do a substitution for <em>a</em> to give <tt>f[b]</tt>. But if we have the expression <tt>f[c]</tt> the rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img2A.png" width= '40' height='19' align='absmiddle'></span> will do nothing.</p>
<p>Now imagine that we have the expression <tt>f[x_]</tt>. This stands for a whole class of expressions, including <tt>f[a]</tt>, <tt>f[c]</tt>, etc. For most of this class of expressions, the rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img3A.png" width= '40' height='19' align='absmiddle'></span> will do nothing. But in the specific case of <tt>f[a]</tt>, it applies, and gives the result <tt>f[b]</tt>.</p>
<p>If our rule is <tt>f[x_]&nbsp;→&nbsp;s</tt> then this will apply as an ordinary substitution to <tt>f[a]</tt>, giving the result <em>s</em>. But if the rule is <tt>f[b]&nbsp;→&nbsp;s</tt> this will not apply as an ordinary substitution to <tt>f[a]</tt>. However, it can apply as a cosubstitution to <tt>f[x_]</tt> by picking out the specific case where <tt>x_</tt> stands for <em>b</em>, then using the rule to give <em>s</em>.</p>
<p>In general, the point is that ordinary substitution specializes patterns that appear in rules—while what one can think of as the “dual operation” of cosubstitution specializes patterns that appear in the expressions to which the rules are being applied. If one thinks of the rule that’s being applied as like an operator, and the expression to which the rule is being applied as an operand, then in effect substitution is about making the operator fit the operand, and cosubstitution is about making the operand fit the operator.</p>
<p>It’s important to realize that as soon as one’s operating on expressions involving patterns, cosubstitution is not something “optional”: it’s something that one has to include if one is really going to interpret patterns—wherever they occur—as standing for classes of expressions.</p>
<p>When one’s operating on a literal expression (without patterns) only substitution is ever possible, as in</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img4A.png" alt='' title='' width='201' height='27' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/13sw0223img4X_copy.txt">
					<span class='close' id='4X-13_out'>&amp;#10005</span></p>
<pre class='text' id='4X-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>corresponding to this fragment of a token-event graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img5A.png" alt='' title='' width='546' height='118' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/13sw0223img5X_copy.txt">
					<span class='close' id='5-13_out'>&amp;#10005</span></p>
<pre class='text' id='5-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Let’s say we have the rule <tt>f[a]&nbsp;→&nbsp;s</tt> (where <tt>f[a]</tt> is a literal expression). Operating on <tt>f[b]</tt> this rule will do nothing. But what if we apply the rule to <tt>f[x_]</tt>? Ordinary substitution still does nothing. But cosubstitution can do something. In fact, there are two different cosubstitutions that can be done in this case: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img6A.png" alt='' title='' width='183' height='69' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img6_copy.txt">
					<span class='close' id='6-13_out'>&amp;#10005</span></p>
<pre class='text' id='6-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What’s going on here? In the first case, <tt>f[x_]</tt> has the “special case” <tt>f[a]</tt>, to which the rule applies (“by cosubstitution”)—giving the result <em>s</em>. In the second case, however, it’s <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img7A.png" width= '18' height='19' align='absmiddle'></span> on its own which has the special case <tt>f[a]</tt>, that gets transformed by the rule to <em>s</em>, giving the final cosubstitution result <tt>f[s]</tt>.</p>
<p>There’s an additional wrinkle when the same pattern (such as <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img8A.png" width= '18' height='19' align='absmiddle'></span>) appears multiple times:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img9A.png" alt='' title='' width='249' height='108' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/13sw0223img9Z_copy.txt">
					<span class='close' id='9-13_out'>&amp;#10005</span></p>
<pre class='text' id='9-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In all cases, <em>x</em>_ is matched to <em>a</em>. But which of the <em>x</em>_’s is actually replaced is different in each case. </p>
<p>Here’s a slightly more complicated example:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img10A.png" alt='' title='' width='300' height='150' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img10_copy.txt">
					<span class='close' id='10-13_out'>&amp;#10005</span></p>
<pre class='text' id='10-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In ordinary substitution, replacements for patterns are in effect always made “locally”, with each specific pattern separately being replaced by some expression. But in cosubstitution, a “special case” found for a pattern will get used throughout when the replacement is done. </p>
<p>Let’s see how this all works in an accumulative axiomatic system. Consider the very simple rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img11A.png" alt='' title='' width='136' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img11_copy.txt">
					<span class='close' id='11-13_out'>&amp;#10005</span></p>
<pre class='text' id='11-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One step of substitution gives the token-event graph (where we’ve canonicalized the names of pattern variables to <em>a</em>_ and <em>b</em>_):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img12A.png" alt='' title='' width='528' height='156' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img12_copy.txt">
					<span class='close' id='12-13_out'>&amp;#10005</span></p>
<pre class='text' id='12-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But one step of cosubstitution gives instead:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img13A.png" alt='' title='' width='534' height='128' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img13_copy.txt">
					<span class='close' id='13-13_out'>&amp;#10005</span></p>
<pre class='text' id='13-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here are the individual transformations that were made (with the rule at least nominally being applied only in one direction):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img14A.png" alt='' title='' width='446' height='237' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/13sw0223img14X_copy.txt">
					<span class='close' id='14-13_out'>&amp;#10005</span></p>
<pre class='text' id='14-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The token-event graph above is then obtained by canonicalizing variables, and combining identical expressions (though for clarity we don’t merge rules of the form <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img15A.png" width= '47' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img16A.png" width= '47' height='19' align='absmiddle'></span>).</p>
<p>If we go another step with this particular rule using only substitution, there are additional events (i.e. transformations) but no new theorems produced:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img17A.png" alt='' title='' width='413' height='133' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img17_copy.txt">
					<span class='close' id='17-13_out'>&amp;#10005</span></p>
<pre class='text' id='17-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Cosubstitution, however, produces another 27 theorems</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img18A.png" alt='' title='' width='331' height='173' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img18_copy.txt">
					<span class='close' id='18-13_out'>&amp;#10005</span></p>
<pre class='text' id='18-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or altogether</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img19A.png" alt='' title='' width='573' height='163' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img19_copy.txt">
					<span class='close' id='19-13_out'>&amp;#10005</span></p>
<pre class='text' id='19-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or as trees:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img20A.png" alt='' title='' width='559' height='133' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/13sw0223img20_copy-2.txt">
					<span class='close' id='20-13_out'>&amp;#10005</span></p>
<pre class='text' id='20-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We’ve now seen examples of both substitution and cosubstitution in action. But in our metamodel for mathematics we’re ultimately dealing not with each of these individually, but rather with the “symmetric” concept of bisubstitution, in which both substitution and cosubstitution can be mixed together, and applied even to parts of the same expression.</p>
<p>In the particular case of <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img21A.png" width= '127' height='19' align='absmiddle'></span>, bisubstitution adds nothing beyond cosubstitution. But often it does. Consider the rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img22A.png" alt='' title='' width='167' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img22_copy.txt">
					<span class='close' id='22-13_out'>&amp;#10005</span></p>
<pre class='text' id='22-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the result of applying this to three different expressions using substitution, cosubstitution and bisubstitution (where we consider only matches for “whole ∘ expressions”, not subparts):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img23A.png" alt='' title='' width='427' height='214' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img23_copy.txt">
					<span class='close' id='23-13_out'>&amp;#10005</span></p>
<pre class='text' id='23-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Cosubstitution very often yields substantially more transformations than substitution—bisubstitution then yielding modestly more than cosubstitution. For example, for the axiom system</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img24A.png" alt='' title='' width='176' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img24_copy.txt">
					<span class='close' id='24-13_out'>&amp;#10005</span></p>
<pre class='text' id='24-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>the number of theorems derived after 1 and 2 steps is given by:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/13sw0223img25A.png" alt='' title='' width='530' height='98' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/13sw0223img25_copy.txt">
					<span class='close' id='25-13_out'>&amp;#10005</span></p>
<pre class='text' id='25-13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In some cases there are theorems that can be produced by full bisubstitution, but not—even after any number of steps—by substitution or cosubstitution alone. However, it is also common to find that theorems can in principle be produced by substitution alone, but that this just takes more steps (and sometimes vastly more) than when full bisubstitution is used. (It’s worth noting, however, that the notion of “how many steps” it takes to “reach” a given theorem depends on the foliation one chooses to use in the token-event graph.)</p>
<p>The various forms of substitution that we’ve discussed here represent different ways in which one theorem can entail others. But our overall metamodel of mathematics—based as it is purely on the structure of symbolic expressions and patterns—implies that bisubstitution covers all entailments that are possible.</p>
<p>In the history of metamathematics and mathematical logic, a whole variety of “laws of inference” or “methods of entailment” <a href='https://www.wolframscience.com/nks/notes-12-9--proof-structures/'>have been considered</a>. But with the modern view of symbolic expressions and patterns (as used, for example, in the Wolfram Language), bisubstitution emerges as the fundamental form of entailment, with other forms of entailment corresponding to the use of particular types of expressions or the addition of further elements to the pure substitutions we’ve used here. </p>
<p>It should be noted, however, that when it comes to the ruliad different kinds of entailments correspond merely to different foliations—with the form of entailment that we’re using representing just a particularly straightforward case.</p>
<p>The concept of bisubstitution has arisen in the theory of term rewriting, as well as in automated theorem proving (where it is often viewed as a particular “strategy”, and called “<a href='https://www.wolframscience.com/nks/notes-12-9--substitution-strategies-in-proofs/'>paramodulation</a>”). In term rewriting, bisubstitution is closely related to the concept of <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/testing-for-causal-invariance/#p-224' target=_blank rel=noopener>unification</a>—which essentially asks what assignment of values to pattern variables is needed in order to make different subterms of an expression be identical.</p>
<h2 id='some-first-metamathematical-phenomenology'><span>13 | </span>Some First Metamathematical Phenomenology</h2>
<p>Now that we’ve finished describing the many technical issues involved in constructing our metamodel of mathematics, we can start looking at its consequences. We discussed above how multiway graphs formed from expressions can be used to define a branchial graph that represents a kind of “metamathematical space”. We can now use a similar approach to set up a metamathematical space for our full metamodel of the “progressive accumulation” of mathematical statements.</p>
<p>Let’s start by ignoring cosubstitution and bisubstitution and considering only the process of substitution—and beginning with the axiom:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img1A.png" alt='' title='' width='117' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/14sw0219img1_copy.txt">
					<span class='close' id='1-14_out'>&amp;#10005</span></p>
<pre class='text' id='1-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Doing accumulative evolution from this axiom we get the token-event graph</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img2A.png" alt='' title='' width='365' height='171' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/14sw0219img2_copy.txt">
					<span class='close' id='2-14_out'>&amp;#10005</span></p>
<pre class='text' id='2-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or after 2 steps:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img3A.png" alt='' title='' width='354' height='186' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/14sw0219img3_copy.txt">
					<span class='close' id='3-14_out'>&amp;#10005</span></p>
<pre class='text' id='3-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>From this we can derive an “effective multiway graph” by directly connecting all input and output tokens involved in each event:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img4A.png" alt='' title='' width='462' height='185' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/14sw0219img4_copy.txt">
					<span class='close' id='4-14_out'>&amp;#10005</span></p>
<pre class='text' id='4-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And then we can produce a <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-concept-of-branchial-graphs/' target=_blank rel=noopener>branchial graph</a>, which in effect yields an approximation to the “metamathematical space” generated by our axiom:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img5A.png" alt='' title='' width='436' height='241' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/14sw0219img5_copy.txt">
					<span class='close' id='5-14_out'>&amp;#10005</span></p>
<pre class='text' id='5-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Showing the statements produced in the form of trees we get (with the top node representing &#10231;):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img6A.png" alt='' title='' width='565' height='281' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/14sw0219img6X_copy.txt">
					<span class='close' id='6-14_out'>&amp;#10005</span></p>
<pre class='text' id='6-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we do the same thing with full bisubstitution, then even after one step we get a slightly larger token-event graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img7A.png" alt='' title='' width='561' height='118' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/14sw0219img7_copy.txt">
					<span class='close' id='7-14_out'>&amp;#10005</span></p>
<pre class='text' id='7-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After two steps, we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img8A.png" alt='' title='' width='564' height='228' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/14sw0219img8_copy.txt">
					<span class='close' id='8-14_out'>&amp;#10005</span></p>
<pre class='text' id='8-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which contains 46 statements, compared to 42 if only substitution is used. The corresponding branchial graph is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/14sw0219img9A.png" alt='' title='' width='468' height='291' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/14sw0219img9_copy.txt">
					<span class='close' id='9-14_out'>&amp;#10005</span></p>
<pre class='text' id='9-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The adjacency matrices for the substitution and bisubstitution cases are then</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img16A.png" alt='' title='' width='553' height='191' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/v2sw0305img16X_copy.txt">
					<span class='close' id='16-v2_out'>&amp;#10005</span></p>
<pre class='text' id='16-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which have 80% and 85% respectively of the number of edges in complete graphs of these sizes.</p>
<p>Branchial graphs are usually quite dense, but they nevertheless do show definite structure. Here are some results after 2 steps:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/08/14-2sw0222img1A.png" alt='' title='' width='579' height='481' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/14-2sw0222img1_copy-2.txt">
					<span class='close' id='1-14_out'>&amp;#10005</span></p>
<pre class='text' id='1-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='relations-to-automated-theorem-proving'><span>14 | </span>Relations to Automated Theorem Proving</h2>
<p>We’ve discussed at some length what happens if we start from axioms and then build up an “entailment cone” of all statements that can be derived from them. But in the actual practice of mathematics people often want to just look at particular target statements, and see if they can be derived (i.e. proved) from the axioms.</p>
<p>But what can we say “in bulk” about this process? The best source of potential examples we have right now come from the practice of automated theorem proving—as for example implemented in the Wolfram Language function <tt><a href='https://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt>. As a simple example of how this works, consider the axiom</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img1A.png" alt='' title='' width='244' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img1_copy.txt">
					<span class='close' id='1-15_out'>&amp;#10005</span></p>
<pre class='text' id='1-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and the theorem:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img2A.png" alt='' title='' width='287' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img2_copy.txt">
					<span class='close' id='2-15_out'>&amp;#10005</span></p>
<pre class='text' id='2-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Automated theorem proving (based on <tt><a href='https://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt>) finds the following proof of this theorem:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img3A.png" alt='' title='' width='566' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img3_copy.txt">
					<span class='close' id='3-15_out'>&amp;#10005</span></p>
<pre class='text' id='3-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Needless to say, this isn’t the only possible proof. And in this very simple case, we can construct the full entailment cone—and determine that there aren’t any shorter proofs, though there are two more of the same length: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img4A.png" alt='' title='' width='581' height='49' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img4_copy.txt">
					<span class='close' id='4-15_out'>&amp;#10005</span></p>
<pre class='text' id='4-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>All three of these proofs can be seen as paths in the entailment cone:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img5A.png" alt='' title='' width='558' height='190' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img5_copy.txt">
					<span class='close' id='5-15_out'>&amp;#10005</span></p>
<pre class='text' id='5-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>How “complicated” are these proofs? In addition to their lengths, we can for example ask how big the successive intermediate expressions they involve become, where here we are including not only the proofs already shown, but also some longer ones as well:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img6A.png" alt='' title='' width='553' height='153' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img6_copy.txt">
					<span class='close' id='6-15_out'>&amp;#10005</span></p>
<pre class='text' id='6-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In the setup we’re using here, we can find a proof of <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img24A.png" width= '64' height='19' align='absmiddle'></span> by starting with <em>lhs</em>, building up an entailment cone, and seeing whether there’s any path in it that reaches <em>rhs</em>. In general there’s no upper bound on how far one will have to go to find such a path—or how big the intermediate expressions may need to get.</p>
<p>One can imagine all kinds of optimizations, for example where one looks at multistep consequences of the original axioms, and treats these as “lemmas” that we can “add as axioms” to provide new rules that jump multiple steps on a path at a time. Needless to say, there are lots of tradeoffs in doing this. (Is it worth the memory to store the lemmas? Might we “jump” past our target? etc.)</p>
<p>But <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/#the-mechanics-of-proof'>typical actual automated theorem provers</a> tend to work in a way that is much closer to our accumulative rewriting systems—in which the “raw material” on which one operates is statements rather than expressions.</p>
<p>Once again, we can in principle always construct a whole entailment cone, and then look to see whether a particular statement occurs there. But then to give a proof of that statement it’s sufficient to find the subgraph of the entailment cone that leads to that statement. For example, starting with the axiom</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img7A.png" alt='' title='' width='131' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img7_copy.txt">
					<span class='close' id='7-15_out'>&amp;#10005</span></p>
<pre class='text' id='7-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>we get the entailment cone (shown here as a token-event graph, and dropping _’s):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img8A.png" alt='' title='' width='470' height='129' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img8_copy.txt">
					<span class='close' id='8-15_out'>&amp;#10005</span></p>
<pre class='text' id='8-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps the statement </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img9A.png" alt='' title='' width='287' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img9_copy.txt">
					<span class='close' id='9-15_out'>&amp;#10005</span></p>
<pre class='text' id='9-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>shows up in this entailment cone</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img10A.png" alt='' title='' width='562' height='194' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img10_copy.txt">
					<span class='close' id='10-15_out'>&amp;#10005</span></p>
<pre class='text' id='10-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where we’re indicating the subgraph that leads from the original axiom to this statement. Extracting this subgraph we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img11A.png" alt='' title='' width='481' height='194' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img11_copy.txt">
					<span class='close' id='11-15_out'>&amp;#10005</span></p>
<pre class='text' id='11-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which we can view as a proof of the statement within this axiom system. </p>
<p>But now let’s use traditional automated theorem proving (in the form of <tt><a href='https://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt>) to get a proof of this same statement. Here’s what we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img12A.png" alt='' title='' width='524' height='191' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img12_copy.txt">
					<span class='close' id='12-15_out'>&amp;#10005</span></p>
<pre class='text' id='12-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This is again a token-event graph, but its structure is slightly different from the one we “fished out of” the entailment cone. Instead of starting from the axiom and “progressively deriving” our statement we start from both the statement and the axiom and then show that together they lead “merely via substitution” to a statement of the form <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img13A.png" width= '35' height='19' align='absmiddle'></span>, which we can take as an “obviously derivable tautology”. </p>
<p>Sometimes the minimal “direct proof” found from the entailment cone can be considerably simpler than the one found by automated theorem proving. For example, for the statement</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img14A.png" alt='' title='' width='244' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img14_copy.txt">
					<span class='close' id='14-15_out'>&amp;#10005</span></p>
<pre class='text' id='14-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>the minimal direct proof is</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img15A.png" alt='' title='' width='481' height='196' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img15_copy.txt">
					<span class='close' id='15-15_out'>&amp;#10005</span></p>
<pre class='text' id='15-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>while the one found by <tt><a href='https://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt> is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img16A.png" alt='' title='' width='487' height='241' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img16_copy.txt">
					<span class='close' id='16-15_out'>&amp;#10005</span></p>
<pre class='text' id='16-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But the great advantage of automated theorem proving is that it can “directedly” search for proofs instead of just “fishing them out of” the entailment cone that contains all possible exhaustively generated proofs. To use automated theorem proving you have to “know where you want to go”—and in particular identify the theorem you want to prove. </p>
<p>Consider the axiom</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img17A.png" alt='' title='' width='181' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img17_copy.txt">
					<span class='close' id='17-15_out'>&amp;#10005</span></p>
<pre class='text' id='17-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and the statement: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img18A.png" alt='' title='' width='163' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img18_copy.txt">
					<span class='close' id='18-15_out'>&amp;#10005</span></p>
<pre class='text' id='18-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This statement doesn’t show up in the first few steps of the entailment cone for the axiom, even though millions of other theorems do. But automated theorem proving finds a proof of it&#8212;and rearranging the “prove-a-tautology proof” so that we just have to feed in a tautology somewhere in the proof, we get: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img19A.png" alt='' title='' width='477' height='396' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img19_copy.txt">
					<span class='close' id='19-15_out'>&amp;#10005</span></p>
<pre class='text' id='19-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The model-theoretic methods we’ll discuss a little later allow one effectively to “guess” theorems that might be derivable from a given axiom system. So, for example, for the axiom system</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img20A.png" alt='' title='' width='197' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img20_copy.txt">
					<span class='close' id='20-15_out'>&amp;#10005</span></p>
<pre class='text' id='20-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>here’s a “guess” at a theorem</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img21A.png" alt='' title='' width='217' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img21_copy.txt">
					<span class='close' id='21-15_out'>&amp;#10005</span></p>
<pre class='text' id='21-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and here’s a representation of its proof found by automated theorem proving—where now the length of an intermediate “lemma” is indicated by the size of the corresponding node</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img22A.png" alt='' title='' width='571' height='711' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img22_copy.txt">
					<span class='close' id='22-15_out'>&amp;#10005</span></p>
<pre class='text' id='22-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and in this case the longest intermediate lemma is of size 67 and is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img23A.png" alt='' title='' width='663' height='52' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img23_copy.txt">
					<span class='close' id='23-15_out'>&amp;#10005</span></p>
<pre class='text' id='23-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In principle it’s possible to rearrange token-event graphs generated by automated theorem proving to have the same structure as the ones we get directly from the entailment cone—with axioms at the beginning and the theorem being proved at the end. But typical strategies for automated theorem proving don’t naturally produce such graphs. In principle automated theorem proving could work by directly searching for a “path” that leads to the theorem one’s trying to prove. But usually it’s much easier instead to have as the “target” a simple tautology.</p>
<p>At least conceptually automated theorem proving must still try to “navigate” through the full token-event graph that makes up the entailment cone. And the main issue in doing this is that there are many places where one does not know “which branch to take”. But here there’s a crucial—if at first surprising—fact: at least so long as one is using full bisubstitution it ultimately doesn’t matter which branch one takes; there’ll always be a way to “merge back” to any other branch.</p>
<p>This is a consequence of the fact that the accumulative systems we’re using automatically have the property of confluence which says that every branch is accompanied by a subsequent merge. There’s an almost trivial way in which this is true by virtue of the fact that for every edge the system also includes the reverse of that edge. But there’s a more substantial reason as well: that given any two statements on two different branches, there’s always a way to combine them using a bisubstitution to get a single statement.</p>
<p>In our Physics Project, the concept of <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-phenomenon-of-causal-invariance/' target=_blank rel=noopener>causal invariance</a>—which effectively generalizes confluence—is an important one, that leads among other things to ideas like relativistic invariance. Later on we’ll discuss the idea that “regardless of what order you prove theorems in, you’ll always get the same math”, and its relationship to causal invariance and to the notion of relativity in metamathematics. But for now the importance of confluence is that it has the potential to simplify automated theorem proving—because in effect it says one can never ultimately “make a wrong turn” in getting to a particular theorem, or, alternatively, that if one keeps going long enough every path one might take will eventually be able to reach every theorem. </p>
<p>And indeed this is exactly how things work in the full entailment cone. But the challenge in automated theorem proving is to generate only a tiny part of the entailment cone, yet still “get to” the theorem we want. And in doing this we have to carefully choose which “branches” we should try to merge using bisubstitution events. In automated theorem proving these bisubstitution events are typically called “critical pair lemmas”, and there are a variety of strategies for defining an order in which critical pair lemmas should be tried. </p>
<p>It’s worth pointing out that there’s absolutely no guarantee that such procedures will find the shortest proof of any given theorem (or in fact that they’ll find a proof at all with a given amount of computational effort). One can imagine “higher-order proofs” in which one attempts to transform not just statements of the form <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img24A.png" width= '64' height='19' align='absmiddle'></span>, but full proofs (say represented as token-event graphs). And one can imagine <a href='https://arxiv.org/pdf/2105.04057.pdf' target=_blank rel=noopener>using such transformations to try to simplify proofs</a>. </p>
<p>A general feature of the proofs we’ve been showing is that they are accumulative, in the sense they continually introduce lemmas which are then reused. But in principle any proof can be “unrolled” into one that just repeatedly uses the original axioms (and in fact, purely by substitution)—and never introduces other lemmas. The necessary “<a href='https://www.wolframscience.com/nks/notes-12-9--proof-structures/'>cut elimination</a>” can effectively be done by always recreating each lemma from the axioms whenever it’s needed—a process which can become exponentially complex.</p>
<p>As an example, from the axiom above we can generate the proof</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/15sw0224img25A.png" alt='' title='' width='484' height='464' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/15sw0224img25_copy.txt">
					<span class='close' id='25-15_out'>&amp;#10005</span></p>
<pre class='text' id='25-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where for example the first lemma at the top is reused in four events. But now by cut elimination we can “unroll” this whole proof into a “straight-line” sequence of substitutions on expressions done just using the original axiom</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img17A.png" alt='' title='' width='556' height='419' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img17_copy.txt">
					<span class='close' id='17-v2_out'>&amp;#10005</span></p>
<pre class='text' id='17-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and we see that our final theorem is the statement that the first expression in the sequence is equivalent under the axiom to the last one.</p>
<p><a name='physicalization-of-metamathematics'></a>As is fairly evident in this example, a feature of automated theorem proving is that <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>its result tends to be very “non-human”</a>. Yes, it can provide incontrovertible evidence that a theorem is valid. But that evidence is typically far away from being any kind of “narrative” suitable for human consumption. In the analogy to molecular dynamics, an automated proof gives detailed “turn-by-turn instructions” that show how a molecule can reach a certain place in a gas. Typical “human-style” mathematics, on the other hand, operates on a higher level, analogous to talking about overall motion in a fluid. And a core part of what&#8217;s achieved by our physicalization of metamathematics is understanding why it&#8217;s possible for mathematical observers like us to perceive mathematics as operating at this higher level.</p>
<h2 id='axiom-systems-of-present-day-mathematics'><span>15 | </span>Axiom Systems of Present-Day Mathematics</h2>
<p>The axiom systems we’ve been talking about so far were chosen largely for their axiomatic simplicity. But what happens if we consider <a href='https://www.wolframscience.com/nks/p773--implications-for-mathematics-and-its-foundations/'>axiom systems that are used in practice in present-day mathematics</a>? </p>
<p>The simplest common example are the axioms (actually, a single axiom) of <a href='https://www.wolframscience.com/nks/notes-12-9--semigroups-and-axioms/'>semigroup theory</a>, stated in our notation as:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img1A.png" alt='' title='' width='534' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img1_copy.txt">
					<span class='close' id='1-16_out'>&amp;#10005</span></p>
<pre class='text' id='1-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Using only substitution, all we ever get after any number of steps is the token-event graph (i.e. “entailment cone”):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img2A.png" alt='' title='' width='453' height='123' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img2_copy.txt">
					<span class='close' id='2-16_out'>&amp;#10005</span></p>
<pre class='text' id='2-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But with bisubstitution, even after one step we already get the entailment cone</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img3A.png" alt='' title='' width='562' height='191' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img3_copy.txt">
					<span class='close' id='3-16_out'>&amp;#10005</span></p>
<pre class='text' id='3-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which contains such theorems as:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img4A.png" alt='' title='' width='289' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img4_copy.txt">
					<span class='close' id='4-16_out'>&amp;#10005</span></p>
<pre class='text' id='4-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps, the entailment cone becomes</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img5A.png" alt='' title='' width='525' height='327' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img5_copy.txt">
					<span class='close' id='5-16_out'>&amp;#10005</span></p>
<pre class='text' id='5-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which contains 1617 theorems such as </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img6A.png" alt='' title='' width='549' height='133' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img6_copy.txt">
					<span class='close' id='6-16_out'>&amp;#10005</span></p>
<pre class='text' id='6-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>with sizes distributed as follows:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img7A.png" alt='' title='' width='537' height='134' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img7_copy.txt">
					<span class='close' id='7-16_out'>&amp;#10005</span></p>
<pre class='text' id='7-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Looking at these theorems we can see that—in fact by construction—they are all just statements of the associativity of ∘. Or, put another way, they state that under this axiom all expression trees that have the same sequence of leaves are equivalent.</p>
<p>What about <a href='https://www.wolframscience.com/nks/notes-12-9--groups-and-axioms/'>group theory</a>? The standard axioms can be written</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img8A.png" alt='' title='' width='544' height='75' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img8_copy.txt">
					<span class='close' id='8-16_out'>&amp;#10005</span></p>
<pre class='text' id='8-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where ∘ is interpreted as the binary group multiplication operation, overbar as the unary inverse operation, and 1 as the constant identity element (or, equivalently, zero-argument function).</p>
<p>One step of substitution already gives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img9A.png" alt='' title='' width='562' height='457' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img9_copy.txt">
					<span class='close' id='9-16_out'>&amp;#10005</span></p>
<pre class='text' id='9-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s notable that in this picture one can already see “different kinds of theorems” ending up in different “metamathematical locations”. One also sees some “obvious” tautological “theorems”, like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img10A.png" width= '37' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img11A.png" width= '33' height='19' align='absmiddle'></span>.</p>
<p>If we use full bisubstitution, we get 56 rather than 27 theorems, and many of the theorems are more complicated:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img12A.png" alt='' title='' width='562' height='310' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img12_copy.txt">
					<span class='close' id='12-16_out'>&amp;#10005</span></p>
<pre class='text' id='12-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps of pure substitution, the entailment cone in this case becomes</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img13A.png" alt='' title='' width='406' height='362' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img13_copy.txt">
					<span class='close' id='13-16_out'>&amp;#10005</span></p>
<pre class='text' id='13-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which includes 792 theorems with sizes distributed according to:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img14A.png" alt='' title='' width='504' height='124' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img14_copy.txt">
					<span class='close' id='14-16_out'>&amp;#10005</span></p>
<pre class='text' id='14-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But among all these theorems, do straightforward “textbook theorems” appear, like?</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img15A.png" alt='' title='' width='441' height='114' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img15_copy.txt">
					<span class='close' id='15-16_out'>&amp;#10005</span></p>
<pre class='text' id='15-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The answer is no. It’s inevitable that in the end all such theorems must appear in the entailment cone. But it turns out that it takes quite a few steps. And indeed with automated theorem proving we can find “paths” that can be taken to prove these theorems—involving significantly more than two steps:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img16A.png" alt='' title='' width='540' height='337' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img16_copy.txt">
					<span class='close' id='16-16_out'>&amp;#10005</span></p>
<pre class='text' id='16-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So how about logic, or, more specifically <a href='https://www.wolframscience.com/nks/notes-12-9--basic-logic-and-axioms/'>Boolean algebra</a>? A typical <a href='https://reference.wolfram.com/language/ref/AxiomaticTheory.html'>textbook axiom system</a> for this (represented in terms of <tt><a href='https://reference.wolfram.com/language/ref/And.html'>And</a></tt> ∧, <tt><a href='https://reference.wolfram.com/language/ref/Or.html'>Or</a></tt> ∨ and <tt><a href='https://reference.wolfram.com/language/ref/Not.html'>Not</a></tt> <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img1A.png" width= '10' height='19' align='absmiddle'></span>) is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img17A.png" alt='' title='' width='429' height='98' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img17_copy.txt">
					<span class='close' id='17-16_out'>&amp;#10005</span></p>
<pre class='text' id='17-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After one step of <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/#all-possible-theorems'>substitution from these axioms we get</a></p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img18A.png" alt='' title='' width='562' height='158' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img18_copy.txt">
					<span class='close' id='18-16_out'>&amp;#10005</span></p>
<pre class='text' id='18-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or in our more usual rendering:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img19A.png" alt='' title='' width='588' height='444' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img19_copy.txt">
					<span class='close' id='19-16_out'>&amp;#10005</span></p>
<pre class='text' id='19-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So what happens here with “<a href='https://www.wolframscience.com/nks/p817--implications-for-mathematics-and-its-foundations/'>named textbook theorems</a>” (excluding commutativity and distributivity, which already appear in the particular axioms we’re using)?</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img20A.png" alt='' title='' width='587' height='163' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img20_copy.txt">
					<span class='close' id='20-16_out'>&amp;#10005</span></p>
<pre class='text' id='20-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Once again none of these appear in the first step of the entailment cone. But at step 2 with full bisubstitution the idempotence laws show up</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img21A.png" alt='' title='' width='564' height='583' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img21_copy.txt">
					<span class='close' id='21-16_out'>&amp;#10005</span></p>
<pre class='text' id='21-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where here we’re only operating on theorems with leaf count below 14 (of which there are a total of 27,953). </p>
<p>And if we go to step 3&mdash;and use leaf count below 9&mdash;we see the law of excluded middle and the law of noncontradiction show up:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img22A.png" alt='' title='' width='562' height='513' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img22_copy.txt">
					<span class='close' id='22-16_out'>&amp;#10005</span></p>
<pre class='text' id='22-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>How are these reached? Here’s the smallest fragment of token-event graph (“shortest path”) within this entailment cone from the axioms to the law of excluded middle:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img23A.png" alt='' title='' width='503' height='210' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img23_copy.txt">
					<span class='close' id='23-16_out'>&amp;#10005</span></p>
<pre class='text' id='23-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are actually many possible “paths” (476 in all with our leaf count restriction); the next smallest ones with distinct structures are: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img24A.png" alt='' title='' width='548' height='450' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img24_copy.txt">
					<span class='close' id='24-16_out'>&amp;#10005</span></p>
<pre class='text' id='24-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the “path” for this theorem found by automated theorem proving:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img25A.png" alt='' title='' width='415' height='313' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img25_copy.txt">
					<span class='close' id='25-16_out'>&amp;#10005</span></p>
<pre class='text' id='25-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Most of the other “named theorems” involve longer proofs—and so won’t show up until much later in the entailment cone:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img26A.png" alt='' title='' width='581' height='478' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img26_copy.txt">
					<span class='close' id='26-16_out'>&amp;#10005</span></p>
<pre class='text' id='26-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The axiom system we’ve used for Boolean algebra here is by no means the only possible one. For example, it’s stated in terms of <tt><a href='https://reference.wolfram.com/language/ref/And.html'>And</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/Or.html'>Or</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Not.html'>Not</a></tt>—but one doesn’t need all those operators; any Boolean expression (and thus any theorem in Boolean algebra) <a href='https://www.wolframscience.com/nks/p807--implications-for-mathematics-and-its-foundations/'>can also be stated just in terms of the single operator <tt>Nand</a></tt>.</p>
<p>And in terms of that operator the very simplest axiom system for Boolean algebra contains (<a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/#a-discovery-about-basic-logic'>as I found in 2000</a>) just one axiom (where here ∘ is now interpreted as <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt>):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img27A.png" alt='' title='' width='226' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img27_copy.txt">
					<span class='close' id='27-16_out'>&amp;#10005</span></p>
<pre class='text' id='27-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s one step of the substitution entailment cone for this axiom:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img28A.png" alt='' title='' width='576' height='218' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img28_copy.txt">
					<span class='close' id='28-16_out'>&amp;#10005</span></p>
<pre class='text' id='28-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps this gives an entailment cone with 5486 theorems</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img18A.png" alt='' title='' width='525' height='373' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img18-2_copy.txt">
					<span class='close' id='18-v2_out'>&amp;#10005</span></p>
<pre class='text' id='18-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>with size distribution:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img30A.png" alt='' title='' width='525' height='168' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img30_copy.txt">
					<span class='close' id='30-16_out'>&amp;#10005</span></p>
<pre class='text' id='30-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>When one’s working with <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt>, it’s less clear what one should consider to be “notable theorems”. But an obvious one is the commutativity of <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img31A.png" alt='' title='' width='109' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img31_copy.txt">
					<span class='close' id='31-16_out'>&amp;#10005</span></p>
<pre class='text' id='31-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a proof of this obtained by automated theorem proving (tipped on its side for readability):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img32A.png" alt='' title='' width='562' height='202' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img32_copy.txt">
					<span class='close' id='32-16_out'>&amp;#10005</span></p>
<pre class='text' id='32-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Eventually it’s inevitable that this theorem must show up in the entailment cone for our axiom system. But based on this proof we would expect it only after something like 102 steps. And with the entailment cone growing exponentially this means that by the time <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img33A.png" width= '79' height='21' align='absmiddle'></span> shows up, perhaps <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img34A.png" width= '37' height='19' align='absmiddle'></span> other theorems would have done so—though most vastly more complicated.</p>
<p>We’ve looked at axioms for group theory and for Boolean algebra. But what about other <a href='https://reference.wolfram.com/language/ref/AxiomaticTheory.html'>axiom systems from present-day mathematics</a>? In a sense it’s remarkable how few of these there are—and indeed I was able to list essentially all of them in just two pages in<em> </em><em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em>:</p>
<p><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16-nks-p773-774-implications-for-mathematicsA.png" usemap="#image-map"></p>
<map name="image-map">
<area target="" alt="Page 773" title="Page 773" href="https://www.wolframscience.com/nks/p773--implications-for-mathematics-and-its-foundations/" coords="10,6,302,361" shape="rect">
<area target="" alt="Page 774" title="Page 774" href="https://www.wolframscience.com/nks/p774--implications-for-mathematics-and-its-foundations/" coords="613,358,323,6" shape="rect">
</map>
<p>The longest axiom system listed here is a <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/#formalizing-euclid'>precise version of Euclid’s original axioms</a></p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img35A.png" alt='' title='' width='562' height='603' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/16sw0302img35X_copy.txt">
					<span class='close' id='35-16_out'>&amp;#10005</span></p>
<pre class='text' id='35-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where we are listing everything (even logic) in explicit (Wolfram Language) functional form. Given these axioms we should now be able to prove all theorems in Euclidean geometry. As an example (that’s already complicated enough) let’s take <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>Euclid&#8217;s very first “proposition” (Book 1, Proposition 1)</a> which states that it’s possible “with a ruler and compass” (i.e. with lines and circles) to construct an equilateral triangle based on any line segment—<a href='https://reference.wolfram.com/language/ref/GeometricScene.html'>as in</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img20A.png" alt='' title='' width='184' height='184' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img19_copy.txt">
					<span class='close' id='19-v2_out'>&amp;#10005</span></p>
<pre class='text' id='19-v2_out_text'>RandomInstance[Entity["GeometricScene","EuclidBook1Proposition1"]["Scene"]]["Graphics"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can write this theorem by saying that given the axioms together with the “setup” </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img39A.png" alt='' title='' width='496' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img39_copy.txt">
					<span class='close' id='39-16_out'>&amp;#10005</span></p>
<pre class='text' id='39-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>it’s possible to derive: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img40A.png" alt='' title='' width='439' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img40_copy.txt">
					<span class='close' id='40-16_out'>&amp;#10005</span></p>
<pre class='text' id='40-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can now use automated theorem proving to generate a proof</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img41A.png" alt='' title='' width='562' height='202' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img41_copy.txt">
					<span class='close' id='41-16_out'>&amp;#10005</span></p>
<pre class='text' id='41-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and in this case the proof takes 272 steps. But the fact that it’s possible to generate this proof shows that (up to various issues about the “setup conditions”) the theorem it proves must eventually “occur naturally” in the entailment cone of the original axioms—though along with an absolutely immense number of other theorems that Euclid didn’t “call out” and write down in his books.</p>
<p>Looking at the collection of axiom systems from <em>A New Kind of Science</em> (and a few related ones) for many of them we can just directly start generating entailment cones—here shown after one step, using substitution only:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img42A.png" alt='' title='' width='581' height='283' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img42_copy.txt">
					<span class='close' id='42-16_out'>&amp;#10005</span></p>
<pre class='text' id='42-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But if we’re going to make entailment cones for all axiom systems there are a few other technical wrinkles we have to deal with. The axiom systems shown above are all “straightforwardly equational” in the sense that they in effect state what amount to “algebraic relations” (in the sense of universal algebra) universally valid for all choices of variables. But some axiom systems traditionally used in mathematics also make other kinds of statements. In the traditional formalism and notation of mathematical logic these can look quite complicated and abstruse. But with a metamodel of mathematics like ours it’s possible to untangle things to the point where these different kinds of statements can also be handled in a streamlined way.</p>
<p>In standard mathematical notation one might write</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img43A.png" alt='' title='' width='312' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img43_copy.txt">
					<span class='close' id='43-16_out'>&amp;#10005</span></p>
<pre class='text' id='43-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which we can read as “<a href='https://reference.wolfram.com/language/ref/ForAll.html'>for all</a> <em>a</em> and <em>b</em>, <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img44A.png" width= '29' height='19' align='absmiddle'></span> equals <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img45A.png" width= '29' height='19' align='absmiddle'></span>”—and which we can interpret in our “metamodel” of mathematics as the (two-way) rule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img46A.png" alt='' title='' width='214' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img46_copy.txt">
					<span class='close' id='46-16_out'>&amp;#10005</span></p>
<pre class='text' id='46-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What this says is just that any time we see an expression that matches the pattern <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img47A.png" width= '49' height='19' align='absmiddle'></span> we can replace it by <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img48A.png" width= '49' height='19' align='absmiddle'></span> (or in Wolfram Language notation just <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img49A.png" width= '29' height='19' align='absmiddle'></span>), and vice versa, so that in effect <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img50A.png" width= '49' height='19' align='absmiddle'></span> can be said to entail <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img51A.png" width= '49' height='19' align='absmiddle'></span>.</p>
<p>But what if we have axioms that involve not just universal statements (“for all &#8230;”) but also <a href='https://reference.wolfram.com/language/ref/Exists.html'>existential statements (“there exists&#8230;”)</a>? In a sense we’re already dealing with these. Whenever we write <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img52A.png" width= '49' height='19' align='absmiddle'></span>—or in explicit functional form, say <span style="color:#000000;font-weight:SemiBold;font-size:15px;font-family:Source Sans Pro">o[a_, b_]</span>—we’re effectively asserting that there exists some operator <em>o</em> that we can do operations with. It’s important to note that once we introduce <em>o</em> (or ∘) we imagine that it represents the same thing wherever it appears (in contrast to a pattern variable like <em>a</em>_ that can represent different things in different instances).</p>
<p>Now consider an “explicit existential statement” like </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img53A.png" alt='' title='' width='180' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img53_copy.txt">
					<span class='close' id='53-16_out'>&amp;#10005</span></p>
<pre class='text' id='53-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which we can read as “there exists something <em>a</em> for which <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img54A.png" width= '29' height='19' align='absmiddle'></span> equals <em>a</em>”. To represent the “something” we just introduce a “constant”, or equivalently an expression with head, say, α, and zero arguments: <span style="color:#000000;font-weight:SemiBold;font-size:15px;font-family:Source Sans Pro">&alpha;[ ]</span>. Now we can write out existential statement as</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img55A.png" alt='' title='' width='208' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img55_copy.txt">
					<span class='close' id='55-16_out'>&amp;#10005</span></p>
<pre class='text' id='55-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>or:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img56A.png" alt='' title='' width='220' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img56_copy.txt">
					<span class='close' id='56-16_out'>&amp;#10005</span></p>
<pre class='text' id='56-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can operate on this using rules like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img57A.png" width= '127' height='19' align='absmiddle'></span>, with <span style="color:#000000;font-weight:SemiBold;font-size:15px;font-family:Source Sans Pro">&alpha;[]</span> always “passing through” unchanged—but with its mere presence asserting that “it exists”.</p>
<p>A very similar setup works even if we have <a href='https://www.wolframscience.com/nks/notes-12-9--predicate-logic/'>both universal and existential quantifiers</a>. For example, we can represent </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img58A.png" alt='' title='' width='201' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img58_copy.txt">
					<span class='close' id='58-16_out'>&amp;#10005</span></p>
<pre class='text' id='58-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>as just</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img59A.png" alt='' title='' width='208' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img59_copy.txt">
					<span class='close' id='59-16_out'>&amp;#10005</span></p>
<pre class='text' id='59-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where now there isn’t just a single object, say β[], that we assert exists; instead there are “lots of different β’s”, “parametrized” in this case by <em>a</em>. </p>
<p>We can apply our standard accumulative bisubstitution process to this statement—and after one step we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img60A.png" alt='' title='' width='574' height='152' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img60_copy.txt">
					<span class='close' id='60-16_out'>&amp;#10005</span></p>
<pre class='text' id='60-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Note that this is a very different result from the one for the “purely universal” statement:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img61A.png" alt='' title='' width='189' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img61_copy.txt">
					<span class='close' id='61-16_out'>&amp;#10005</span></p>
<pre class='text' id='61-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img21A.png" alt='' title='' width='480' height='139' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img21_copy.txt">
					<span class='close' id='21-v2_out'>&amp;#10005</span></p>
<pre class='text' id='21-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In general, we can “compile” any statement in terms of quantifiers into our metamodel, essentially using the standard technique of Skolemization from mathematical logic. Thus for example</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img63A.png" alt='' title='' width='376' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img63_copy.txt">
					<span class='close' id='63-16_out'>&amp;#10005</span></p>
<pre class='text' id='63-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>can be “compiled into”</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img64A.png" alt='' title='' width='298' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img64_copy.txt">
					<span class='close' id='64-16_out'>&amp;#10005</span></p>
<pre class='text' id='64-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>while </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img65A.png" alt='' title='' width='220' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img65_copy.txt">
					<span class='close' id='65-16_out'>&amp;#10005</span></p>
<pre class='text' id='65-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>can be compiled into:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img66A.png" alt='' title='' width='206' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img66_copy.txt">
					<span class='close' id='66-16_out'>&amp;#10005</span></p>
<pre class='text' id='66-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we look at the actual axiom systems used in current mathematics there’s one more issue to deal with—which doesn’t affect the axioms for logic or group theory, but does show up, for example, in the <a href='https://www.wolframscience.com/nks/notes-12-9--axioms-for-arithmetic/'>Peano axioms for arithmetic</a>. And the issue is that in addition to quantifying over “variables”, we also need to quantify over “functions”. Or formulated differently, we need to set up not just individual axioms, but a whole “<a href='https://www.wolframscience.com/nks/notes-12-9--axiom-schemas/'>axiom schema</a>” that can generate an infinite sequence of “ordinary axioms”, one for each possible “function”. </p>
<p>In our metamodel of mathematics, we can think of this in terms of “parametrized functions”, or in Wolfram Language, just as having functions whose heads are themselves patterns, as in <span style="color:#000000;font-weight:SemiBold;font-size:15px;font-family:Source Sans Pro">f[n_][a_]</span>.</p>
<p>Using this setup we can then “compile” the standard induction axiom of Peano arithmetic</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img67A.png" alt='' title='' width='516' height='26' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img67_copy.txt">
					<span class='close' id='67-16_out'>&amp;#10005</span></p>
<pre class='text' id='67-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>into the (Wolfram Language) metamodel form</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img68A.png" alt='' title='' width='440' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/16sw0302img68_copy.txt">
					<span class='close' id='68-16_out'>&amp;#10005</span></p>
<pre class='text' id='68-16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where the “implications” in the original axiom have been converted into one-way rules, so that what the axiom can now be seen to do is to define a transformation for something that is not an “ordinary mathematical-style expression” but rather an expression that is itself a rule.</p>
<p>But the important point is that our whole setup of doing substitutions in symbolic expressions—like Wolfram Language—makes no fundamental distinction between dealing with “ordinary expressions” and with “rules” (in Wolfram Language, for example, <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/16sw0302img69A.png" width= '40' height='19' align='absmiddle'></span> is just <tt><a href='https://reference.wolfram.com/language/ref/Rule.html'>Rule</a>[a,b]</tt>). And as a result we can expect to be able to construct token-event graphs, build entailment cones, etc. just as well for axiom systems like Peano arithmetic, as for ones like Boolean algebra and group theory.</p>
<p>The actual number of nodes that appear even in what might seem like simple cases can be huge, but the whole setup makes it clear that exploring an axiom system like this is just another example—that can be uniformly represented with our metamodel of mathematics—of a form of sampling of the ruliad.</p>
<h2 id='the-model-theoretic-perspective'><span>16 | </span>The Model-Theoretic Perspective</h2>
<p>We’ve so far considered something like</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img1A.png" alt='' title='' width='202' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img1_copy.txt">
					<span class='close' id='1-17_out'>&amp;#10005</span></p>
<pre class='text' id='1-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>just as an abstract statement about arbitrary symbolic variables <em>x</em> and <em>y</em>, and some abstract operator ∘. But can we make a <a href='https://www.wolframscience.com/nks/p802--implications-for-mathematics-and-its-foundations/'>“model” of what <em>x</em>, <em>y</em>, and ∘ could “explicitly be”</a>?</p>
<p>Let’s imagine for example that <em>x</em> and <em>y</em> can take 2 possible values, say 0 or 1. (We’ll use numbers for notational convenience, though in principle the values could be anything we want.) Now we have to ask what ∘ can be in order to have our original statement always hold. It turns out in this case that <a href='https://resources.wolframcloud.com/FunctionRepository/resources/FindFiniteModels'>there are several possibilities</a>, that can be specified by giving possible “multiplication tables” for ∘: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img22A.png" alt='' title='' width='493' height='60' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img22_copy.txt">
					<span class='close' id='22-v2_out'>&amp;#10005</span></p>
<pre class='text' id='22-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(For convenience we’ll often refer to such multiplication tables by numbers <tt><a href='https://reference.wolfram.com/language/ref/FromDigits.html'>FromDigits</a>[<a href='https://reference.wolfram.com/language/ref/Flatten.html'>Flatten</a>[m],k]</tt>, here 0, 1, 5, 7, 10, 15.) Using let’s say the second multiplication table we can then “evaluate” both sides of the original statement for all possible choices of <em>x</em> and <em>y</em>, and verify that the statement always holds:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img23A.png" alt='' title='' width='508' height='115' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img23_copy.txt">
					<span class='close' id='23-v2_out'>&amp;#10005</span></p>
<pre class='text' id='23-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we allow, say, 3 possible values for <em>x</em> and <em>y</em>, there turn out to be 221 possible forms for ∘. The first few are:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img24A.png" alt='' title='' width='579' height='74' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img24_copy.txt">
					<span class='close' id='24-v2_out'>&amp;#10005</span></p>
<pre class='text' id='24-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As another example, let’s consider the <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>simplest axiom for Boolean algebra (that I discovered in 2000)</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img5A.png" alt='' title='' width='296' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img5_copy.txt">
					<span class='close' id='5-17_out'>&amp;#10005</span></p>
<pre class='text' id='5-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here are the “size-2” models for this</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img25A.png" alt='' title='' width='565' height='60' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img25_copy.txt">
					<span class='close' id='25-v2_out'>&amp;#10005</span></p>
<pre class='text' id='25-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and these, as expected, are the <a href='https://www.wolframscience.com/nks/p806--implications-for-mathematics-and-its-foundations/'>truth tables for <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Nor.html'>Nor</a></tt> respectively. (In this particular case, there are no size-3 models, 12 size-4 models, and in general <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img7A.png" width= '30' height='40' align='absmiddle'></span> <a href='https://www.wolframscience.com/nks/notes-12-9--operators-on-sets/'>models of size 2<sup><em>n</em></sup></a>—and no finite models of any other size.)</p>
<p>Looking at this example suggests a way to talk about <a href='https://www.wolframscience.com/nks/notes-12-9--model-theory/'>models for axiom systems</a>. We can think of an axiom system as defining a collection of abstract constraints. But what can we say about objects that might satisfy those constraints? A model is in effect telling us about these objects. Or, put another way, it’s telling what “things” the axiom system “describes”. And in the case of my axiom for Boolean algebra, those “things” would be Boolean variables, operated on using <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt> or <tt><a href='https://reference.wolfram.com/language/ref/Nor.html'>Nor</a></tt>.</p>
<p>As another example, consider the <a href='https://www.wolframscience.com/nks/p773--implications-for-mathematics-and-its-foundations/'>axioms for group theory</a></p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img9A.png" alt='' title='' width='368' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img9_copy.txt">
					<span class='close' id='9-17_out'>&amp;#10005</span></p>
<pre class='text' id='9-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p class="padding-t-1">
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img26A.png" alt='' title='' width='569' height='102' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img26_copy.txt">
					<span class='close' id='26-v2_out'>&amp;#10005</span></p>
<pre class='text' id='26-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Is there a mathematical interpretation of these? Well, yes. They essentially correspond to (representations of) particular finite groups. The original axioms define constraints to be satisfied by any group. These models now correspond to particular groups with specific finite numbers of elements (and in fact specific representations of these groups). And just like in the Boolean algebra case this interpretation now allows us to start saying what the models are “about”. The first three, for example, correspond to cyclic groups which can be thought of as being “about” addition of integers mod <em>k</em>.</p>
<p>For axiom systems that haven’t traditionally been studied in mathematics, there typically won’t be any such preexisting identification of what they’re “about”. But we can still think of models as being a way that a mathematical observer can characterize—or summarize—an axiom system. And in a sense we can see the collection of possible finite models for an axiom system as being a kind of “model signature” for the axiom system.</p>
<p>But let’s now consider what models tell us about “theorems” associated with a given axiom system. Take for example the axiom:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img11A.png" alt='' title='' width='184' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img11_copy.txt">
					<span class='close' id='11-17_out'>&amp;#10005</span></p>
<pre class='text' id='11-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here are the size-2 models for this axiom system:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img27A.png" alt='' title='' width='475' height='60' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img27_copy.txt">
					<span class='close' id='27-v2_out'>&amp;#10005</span></p>
<pre class='text' id='27-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Let’s now pick the last of these models. Then we can take any symbolic expression involving ∘, and say what its values would be for every possible choice of the values of the variables that appear in it:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img13A.png" alt='' title='' width='540' height='137' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img13_copy.txt">
					<span class='close' id='13-17_out'>&amp;#10005</span></p>
<pre class='text' id='13-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The last row here gives an “expression code” that summarizes the values of each expression in this particular model. And if two expressions have different codes in the model then this tells us that these expressions cannot be equivalent according to the underlying axiom system.</p>
<p>But if the codes are the same, then it’s at least possible that the expressions are equivalent in the underlying axiom system. So as an example, let’s take the equivalences associated with pairs of expressions that have code 3 (according to the model we’re using):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img14A.png" alt='' title='' width='556' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img14_copy.txt">
					<span class='close' id='14-17_out'>&amp;#10005</span></p>
<pre class='text' id='14-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So now let’s compare with an actual entailment cone for our underlying axiom system (where to keep the graph of modest size we have dropped expressions involving more than 3 variables):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img15A.png" alt='' title='' width='564' height='234' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img15_copy.txt">
					<span class='close' id='15-17_out'>&amp;#10005</span></p>
<pre class='text' id='15-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So far this doesn’t establish equivalence between any of our code-3 expressions. But if we generate a larger entailment cone (here using a different initial expression) we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img16A.png" alt='' title='' width='521' height='332' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img16_copy.txt">
					<span class='close' id='16-17_out'>&amp;#10005</span></p>
<pre class='text' id='16-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>where the path shown corresponds to the statement</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img17A.png" alt='' title='' width='233' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img17_copy.txt">
					<span class='close' id='17-17_out'>&amp;#10005</span></p>
<pre class='text' id='17-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>demonstrating that this is an equivalence that holds in general for the axiom system. </p>
<p>But let’s take another statement implied by the model, such as:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img18A.png" alt='' title='' width='233' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img18_copy.txt">
					<span class='close' id='18-17_out'>&amp;#10005</span></p>
<pre class='text' id='18-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Yes, it’s valid in the model. But it’s not something that’s generally valid for the underlying axiom system, or could ever be derived from it. And we can see this for example by picking another model for the axiom system, say the second-to-last one in our list above</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img28A.png" alt='' title='' width='209' height='60' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img28_copy.txt">
					<span class='close' id='28-v2_out'>&amp;#10005</span></p>
<pre class='text' id='28-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and finding out that the values for the two expressions here are different in that model:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img20A.png" alt='' title='' width='536' height='141' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img20_copy.txt">
					<span class='close' id='20-17_out'>&amp;#10005</span></p>
<pre class='text' id='20-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The definitive way to establish that a particular statement follows from a particular axiom system is to find an explicit proof for it, either directly by picking it out as a path in the entailment cone or by using automated theorem proving methods. But models in a sense give one a way to “get an approximate result”.</p>
<p>As an example of how this works, consider a collection of possible expressions, with pairs of them joined whenever they can be proved equal in the axiom system we’re discussing:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img21A.png" alt='' title='' width='565' height='337' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img21_copy.txt">
					<span class='close' id='21-17_out'>&amp;#10005</span></p>
<pre class='text' id='21-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now let’s indicate what codes two models of the axiom system assign to the expressions:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img29A.png" alt='' title='' width='566' height='288' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img29_copy.txt">
					<span class='close' id='29-v2_out'>&amp;#10005</span></p>
<pre class='text' id='29-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The expressions within each connected graph component are equal according to the underlying axiom system, and in both models they are always assigned the same codes. But sometimes the models “overshoot”, assigning the same codes to expressions not in the same connected component—and therefore not equal according to the underlying axiom system. </p>
<p>The models we’ve shown so far are ones that are valid for the underlying axiom system. If we use a model that isn’t valid we’ll find that even expressions in the same connected component of the graph (and therefore equal according to the underlying axiom system) will be assigned different codes (note the graphs have been rearranged to allow expressions with the same code to be drawn in the same “patch”):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img30A.png" alt='' title='' width='566' height='288' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img30_copy.txt">
					<span class='close' id='30-v2_out'>&amp;#10005</span></p>
<pre class='text' id='30-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><a name='entailment-fabric'></a><a name='entailment-graph'></a>We can think of our graph of equivalences between expressions as corresponding to a slice through an entailment graph—and essentially being “laid out in metamathematical space”, like a branchial graph, or what we’ll later call an “entailment fabric”. And what we see is that when we have a valid model different codes yield different patches that in effect cover metamathematical space in a way that respects the equivalences implied by the underlying axiom system.</p>
<p>But now let’s see what happens if we make an entailment cone, tagging each node with the code corresponding to the expression it represents, first for a valid model, and then for non-valid ones:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img31A.png" alt='' title='' width='562' height='187' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img31-2_copy.txt">
					<span class='close' id='31-v2_out'>&amp;#10005</span></p>
<pre class='text' id='31-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With the valid model, the whole entailment cone is tagged with the same code (and here also same color). But for the non-valid models, different “patches” in the entailment cone are tagged with different codes. </p>
<p>Let’s say we’re trying to see if two expressions are equal according to the underlying axiom system. The definitive way to tell this is to find a “proof path” from one expression to the other. But as an “approximation” we can just “evaluate” these two expressions according to a model, and see if the resulting codes are the same. Even if it’s a valid model, though, this can only definitively tell us that two expressions aren’t equal; it can’t confirm that they are. In principle we can refine things by checking in multiple models—particularly ones with more elements. But without essentially pre-checking all possible equalities we can’t in general be sure that this will give us the complete story.</p>
<p>Of course, generating explicit proofs from the underlying axiom system can also be hard—because in general the proof can be arbitrarily long. And in a sense there is a tradeoff. Given a particular equivalence to check we can either search for a path in the entailment graph, often effectively having to try many possibilities. Or we can “do the work up front” by finding a model or collection of models that we know will correctly tell us whether the equivalence is correct.</p>
<p>Later we’ll see how these choices relate to how mathematical observers can “parse” the structure of metamathematical space. In effect observers can either explicitly try to trace out “proof paths” formed from sequences of abstract symbolic expressions—or they can “globally predetermine” what expressions “mean” by identifying some overall model. In general there may be many possible choices of models—and what we’ll see is that these different choices are essentially analogous to different choices of reference frames in physics.</p>
<p>One feature of our discussion of models so far is that we’ve always been talking about making models for axioms, and then applying these models to expressions. But in the accumulative systems we’ve discussed above (and that seem like closer metamodels of actual mathematics), we’re only ever talking about “statements”—with “axioms” just being statements we happen to start with. So how do models work in such a context?</p>
<p>Here’s the beginning of the token-event graph starting with </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img25A.png" alt='' title='' width='204' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img25_copy.txt">
					<span class='close' id='25-17_out'>&amp;#10005</span></p>
<pre class='text' id='25-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>produced using one step of entailment by substitution:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img26A.png" alt='' title='' width='529' height='109' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img26_copy.txt">
					<span class='close' id='26-17_out'>&amp;#10005</span></p>
<pre class='text' id='26-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For each of the statements given here, there are certain size-2 models (indicated here by their multiplication tables) that are valid—or in some cases all models are valid:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img27A.png" alt='' title='' width='577' height='149' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img27_copy.txt">
					<span class='close' id='27-17_out'>&amp;#10005</span></p>
<pre class='text' id='27-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can summarize this by indicating in a 4×4 grid which of the 16 possible size-2 models are consistent with each statement generated so far in the entailment cone:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img28A.png" alt='' title='' width='565' height='140' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img28_copy.txt">
					<span class='close' id='28-17_out'>&amp;#10005</span></p>
<pre class='text' id='28-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Continuing one more step we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img29A.png" alt='' title='' width='580' height='161' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img29_copy.txt">
					<span class='close' id='29-17_out'>&amp;#10005</span></p>
<pre class='text' id='29-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s often the case that statements generated on successive steps in the entailment cone in essence just “accumulate more models”. But—as we can see from the right-hand edge of this graph—it’s not always the case—and sometimes a model valid for one statement is no longer valid for a statement it entails. (And the same is true if we use full bisubstitution rather than just substitution.)</p>
<p>Everything we’ve discussed about models so far here has to do with expressions. But there can also be models for other kinds of structures. For strings it’s possible to <a href='https://www.wolframscience.com/nks/notes-12-9--multiway-systems-and-operator-systems/'>use something like the same setup</a>, though it doesn’t work quite so well. One can think of transforming the string</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img30A.png" alt='' title='' width='63' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img30_copy.txt">
					<span class='close' id='30-17_out'>&amp;#10005</span></p>
<pre class='text' id='30-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>into</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/17sw0228img31A.png" alt='' title='' width='181' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/17sw0228img31_copy.txt">
					<span class='close' id='31-17_out'>&amp;#10005</span></p>
<pre class='text' id='31-17_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and then trying to find appropriate “multiplication tables” for ∘, but here operating on the specific elements A and B, not on a collection of elements defined by the model.</p>
<p>Defining models for a hypergraph rewriting system is more challenging, if interesting. One can think of the expressions we’ve used as corresponding to trees—which can be <a href='https://reference.wolfram.com/language/ref/TreeFold.html'>“evaluated” as soon as definite “operators”</a> associated with the model are filled in at each node. If we try to do the same thing with graphs (or hypergraphs) we’ll immediately be thrust into issues of the order in which we scan the graph.</p>
<p>At a more general level, we can think of a “model” as being a way that an observer tries to summarize things. And we can imagine many ways to do this, with differing degrees of fidelity, but always with the feature that if the summaries of two things are different, then those two things can’t be transformed into each other by whatever underlying process is being used. </p>
<p>Put another way, a model defines some kind of invariant for the underlying transformations in a system. The raw material for computing this invariant may be operators at nodes, or may be things like overall graph properties (like cycle counts).</p>
<h2 id='axiom-systems-in-the-wild'><span>17 | </span>Axiom Systems in the Wild</h2>
<p>We’ve talked about what happens with specific, sample axiom systems, as well as with various axiom systems that have arisen in present-day mathematics. But what about “<a href='https://www.wolframscience.com/nks/p804--implications-for-mathematics-and-its-foundations/'>axiom systems in the wild</a>”—say just obtained by random sampling, or by systematic enumeration? In effect, each possible axiom system can be thought of as “defining a possible field of mathematics”—just in most cases not one that’s actually been studied in the history of human mathematics. But <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a> certainly contains all such axiom systems. And in the style of <em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em><em> </em>we can do <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#the-pure-basic-science-of-ruliology'>ruliology</a> to explore them. </p>
<p>As an example, let’s look at axiom systems with just one axiom, one binary operator and one or two variables. Here are the smallest few: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img1A.png" alt='' title='' width='565' height='103' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img1_copy.txt">
					<span class='close' id='1-18_out'>&amp;#10005</span></p>
<pre class='text' id='1-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For each of these axiom systems, we can then ask what theorems they imply. And for example we can enumerate theorems—just as we have enumerated axiom systems—then use automated theorem proving to determine which theorems are implied by which axiom systems. This <a href='https://www.wolframscience.com/nks/p812--implications-for-mathematics-and-its-foundations/'>shows the result</a>, with possible axiom systems going down the page, possible theorems going across, and a particular square being filled in (darker for longer proofs) if a given theorem can be proved from a given axiom system:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img2A.png" alt='' title='' width='562' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img2_copy.txt">
					<span class='close' id='2-18_out'>&amp;#10005</span></p>
<pre class='text' id='2-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The diagonal on the left is axioms “proving themselves”. The lines across are for axiom systems like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img3A.png" width= '37' height='19' align='absmiddle'></span> that basically say that any two expressions are equal—so that any theorem that is stated can be proved from the axiom system. </p>
<p>But what if we look at the whole entailment cone for each of these axiom systems? Here are a few examples of the first two steps:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img32A.png" alt='' title='' width='565' height='308' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img32_copy.txt">
					<span class='close' id='32-v2_out'>&amp;#10005</span></p>
<pre class='text' id='32-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>With our method of accumulative evolution the axiom <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img5A.png" width= '37' height='19' align='absmiddle'></span> doesn’t on its own generate a growing entailment cone (though if combined with any axiom containing ∘ it does, and so does <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img6A.png" width= '55' height='19' align='absmiddle'></span> on its own). But in all the other cases shown the entailment cone grows rapidly (typically at least exponentially)—in effect quickly establishing many theorems. Most of those theorems, however, are “not small”—and for example after 2 steps here are the distributions of their sizes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img7A.png" alt='' title='' width='571' height='147' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/18sw0228img7_copy-2.txt">
					<span class='close' id='7-18_out'>&amp;#10005</span></p>
<pre class='text' id='7-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So let’s say we generate only one step in the entailment cone. This is the pattern of “small theorems” we establish:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img8A.png" alt='' title='' width='562' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img8_copy.txt">
					<span class='close' id='8-18_out'>&amp;#10005</span></p>
<pre class='text' id='8-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here is the corresponding result after two steps:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img9A.png" alt='' title='' width='562' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img9_copy.txt">
					<span class='close' id='9-18_out'>&amp;#10005</span></p>
<pre class='text' id='9-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Superimposing this on our original array of theorems we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img10A.png" alt='' title='' width='562' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img10_copy.txt">
					<span class='close' id='10-18_out'>&amp;#10005</span></p>
<pre class='text' id='10-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In other words, there are many small theorems that we can establish “if we look for them”, but which won’t “naturally be generated” quickly in the entailment cone (though eventually it’s inevitable that they will be generated). (Later we’ll see how this relates to the concept of “entailment fabrics” and the “knitting together of pieces of mathematics”.) </p>
<p>In the previous section we discussed the concept of models for axiom systems. So what models do typical “axiom systems from the wild” have? The <a href='https://www.wolframscience.com/nks/p804--implications-for-mathematics-and-its-foundations/'>number of possible models of a given size varies greatly for different axiom systems</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img11A.png" alt='' title='' width='559' height='212' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/18sw0228img11Z_copy.txt">
					<span class='close' id='11-18_out'>&amp;#10005</span></p>
<pre class='text' id='11-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p class="padding-t-1">
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img12-2A.png" alt='' title='' width='525' height='481' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/18sw0228img12_copy-2.txt">
					<span class='close' id='12-18_out'>&amp;#10005</span></p>
<pre class='text' id='12-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But for each model we can ask what theorems it implies are valid. And for example combining all models of size 2 yields the following “predictions” for what theorems are valid (with the actual theorems indicated by dots):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img13A.png" alt='' title='' width='562' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img13_copy.txt">
					<span class='close' id='13-18_out'>&amp;#10005</span></p>
<pre class='text' id='13-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Using instead models of size 3 gives “more accurate predictions”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img14A.png" alt='' title='' width='562' height='311' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img14_copy.txt">
					<span class='close' id='14-18_out'>&amp;#10005</span></p>
<pre class='text' id='14-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As expected, looking at a fixed number of steps in the entailment cone “underestimates” the number of valid theorems, while looking at finite models overestimates it.</p>
<p>So how does our analysis for “axiom systems from the wild” compare with what we’d get if we considered axiom systems that have been explicitly studied in traditional human mathematics? Here are some examples of “known” axiom systems that involve just a single binary operator</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img15A.png" alt='' title='' width='558' height='229' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img15_copy.txt">
					<span class='close' id='15-18_out'>&amp;#10005</span></p>
<pre class='text' id='15-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and here’s the distribution of theorems they give:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img16A.png" alt='' title='' width='562' height='163' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img16_copy.txt">
					<span class='close' id='16-18_out'>&amp;#10005</span></p>
<pre class='text' id='16-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As must be the case, all the axiom systems for Boolean algebra yield the same theorems. But axiom systems for “different mathematical theories” yield different collections of theorems.</p>
<p>What happens if we look at entailments from these axiom systems? Eventually all theorems must show up somewhere in the entailment cone of a given axiom system. But here are the results after one step of entailment:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img17A.png" alt='' title='' width='562' height='163' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img17_copy.txt">
					<span class='close' id='17-18_out'>&amp;#10005</span></p>
<pre class='text' id='17-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Some theorems have already been generated, but many have not: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img18A.png" alt='' title='' width='562' height='163' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img18_copy.txt">
					<span class='close' id='18-18_out'>&amp;#10005</span></p>
<pre class='text' id='18-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Just as we did above, we can try to “predict” theorems by constructing models. Here’s what happens if we ask what theorems hold for all valid models of size 2:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img19A.png" alt='' title='' width='562' height='163' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img19_copy.txt">
					<span class='close' id='19-18_out'>&amp;#10005</span></p>
<pre class='text' id='19-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For several of the axiom systems, the models “perfectly predict” at least the theorems we show here. And for Boolean algebra, for example, this isn’t surprising: the models just correspond to identifying ∘ as <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt> or <tt><a href='https://reference.wolfram.com/language/ref/Nor.html'>Nor</a></tt>, and to say this gives a complete description of Boolean algebra. But in the case of groups, “size-2 models” just capture particular groups that happen to be of size 2, and for these particular groups there are special, extra theorems that aren’t true for groups in general.</p>
<p>If we look at models specifically of size 3 there aren’t any examples for Boolean algebra so we don’t predict any theorems. But for group theory, for example, we start to get a slightly more accurate picture of what theorems hold in general:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/18sw0228img20A.png" alt='' title='' width='562' height='163' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/18sw0228img20_copy.txt">
					<span class='close' id='20-18_out'>&amp;#10005</span></p>
<pre class='text' id='20-18_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Based on what we’ve seen here, is there something “obviously special” about the axiom systems that have traditionally been used in human mathematics? There are cases like Boolean algebra where the axioms in effect constrain things so much that we can reasonably say that they’re “talking about definite things” (like <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Nor.html'>Nor</a></tt>). But there are plenty of other cases, like group theory, where the axioms provide much weaker constraints, and for example allow an infinite number of possible specific groups. But both situations occur among axiom systems “from the wild”. And in the end what we’re doing here <a href='https://www.wolframscience.com/nks/p812--implications-for-mathematics-and-its-foundations/'>doesn&#8217;t seem to reveal anything “obviously special”</a> (say in the statistics of models or theorems) about “human” axiom systems.</p>
<p>And what this means is that we can expect that conclusions we draw from looking at the “general case of all axiom systems”—as captured in general by the ruliad—can be expected to hold in particular for the specific axiom systems and mathematical theories that human mathematics has studied. </p>
<h2 id='the-topology-of-proof-space'><span>18 | </span>The Topology of Proof Space</h2>
<p>In the typical practice of pure mathematics the main objective is to establish theorems. Yes, one wants to know that a theorem has a proof (and perhaps the proof will be helpful in understanding the theorem), but the main focus is on theorems and not on proofs. In our effort to “go underneath” mathematics, however, we want to study not only what theorems there are, but also the process by which the theorems are reached. We can view it as an important simplifying assumption of typical mathematical observers that all that matters is theorems—and that different proofs aren’t relevant. But to explore the underlying structure of metamathematics, we need to unpack this—and in effect look directly at the structure of proof space.</p>
<p>Let’s consider a simple system based on strings. Say we have the rewrite rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228img1A.png" width= '139' height='19' align='absmiddle'></span> and we want to establish the theorem <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228img2A.png" width= '65' height='19' align='absmiddle'></span>. To do this we have to find some path from A to ABA in the multiway system (or, effectively, in the entailment cone for this axiom system):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img33A.png" alt='' title='' width='547' height='333' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img33_copy.txt">
					<span class='close' id='33-v2_out'>&amp;#10005</span></p>
<pre class='text' id='33-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But this isn’t the only possible path, and thus the only possible proof. In this particular case, there are 20 distinct paths, each corresponding to at least a slightly different proof:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228img4A.png" alt='' title='' width='566' height='159' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/19sw0228img4_copy-2.txt">
					<span class='close' id='4-19_out'>&amp;#10005</span></p>
<pre class='text' id='4-19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But one feature here is that all these different proofs can in a sense be “smoothly deformed” into each other, in this case by progressively changing just one step at a time. So this means that in effect there is no nontrivial topology to proof space in this case—and “distinctly inequivalent” collections of proofs: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img34A.png" alt='' title='' width='551' height='227' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img34_copy.txt">
					<span class='close' id='34-v2_out'>&amp;#10005</span></p>
<pre class='text' id='34-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But consider instead the rule <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228img6A.png" width= '151' height='19' align='absmiddle'></span>. With this “axiom system” there are 15 possible proofs for the theorem <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228img7A.png" width= '139' height='19' align='absmiddle'></span>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img35A.png" alt='' title='' width='565' height='243' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img35_copy.txt">
					<span class='close' id='35-v2_out'>&amp;#10005</span></p>
<pre class='text' id='35-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Pulling out just the proofs we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img36A.png" alt='' title='' width='564' height='308' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img36_copy.txt">
					<span class='close' id='36-v2_out'>&amp;#10005</span></p>
<pre class='text' id='36-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And we see that in a sense there’s a “hole” in proof space here—so that there are two distinctly different kinds of proofs that can be done. </p>
<p>One place it’s common to <a href='https://christopherwolfram.com/projects/rush-hour/' target=_blank rel=noopener>see a similar phenomenon is in games and puzzles</a>. Consider for example the <a href='https://www.wolframscience.com/nks/notes-3-5--history-of-substitution-systems/'>Towers of Hanoi puzzle</a>. We can set up a multiway system for the possible moves that can be made. Starting from all disks on the left peg, we get after 1 step:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228Zimg10A.png" alt='' title='' width='525' height='206' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/19sw0228Ximg1_copy.txt">
					<span class='close' id='10X-19_out'>&amp;#10005</span></p>
<pre class='text' id='10X-19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps we have:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228Zimg11A.png" alt='' title='' width='514' height='168' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/19sw0228Ximg2_copy.txt">
					<span class='close' id='11X-19_out'>&amp;#10005</span></p>
<pre class='text' id='11X-19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And after 8 steps (in this case) we have the whole “game graph”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228Zimg12A.png" alt='' title='' width='579' height='506' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/19sw0228Ximg3_copy.txt">
					<span class='close' id='12X-19_out'>&amp;#10005</span></p>
<pre class='text' id='12X-19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The corresponding result for 4 disks is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228img13A.png" alt='' title='' width='439' height='374' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/19sw0228img13_copy.txt">
					<span class='close' id='13-19_out'>&amp;#10005</span></p>
<pre class='text' id='13-19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And in each case we see the phenomenon of nontrivial topology. What fundamentally causes this? In a sense it reflects the possibility for distinctly different strategies that lead to the same result. Here, for example, different sides of the “main loop” correspond to the “foundational choice” of whether to move the biggest disk first to the left or to the right. And the same basic thing happens with 4 disks on 4 pegs, though the overall structure is more complicated there:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228img14A.png" alt='' title='' width='459' height='336' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/19sw0228img14_copy.txt">
					<span class='close' id='14-19_out'>&amp;#10005</span></p>
<pre class='text' id='14-19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If two paths diverge in a multiway system it could be that it will never be possible for them to merge again. But whenever the system has the property of confluence, it’s guaranteed that eventually the paths will merge. And, as it turns out, our accumulative evolution setup guarantees that (at least ignoring generation of new variables) <a href='#accumulative-evolution'>confluence will always be achieved</a>. But the issue is <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/testing-for-causal-invariance' target=_blank rel=noopener>how quickly</a>. If branches always merge after just one step, then in a sense there’ll always be topologically trivial proof space. But if the merging can take awhile (and in a continuum limit, arbitrarily long) then there’ll in effect be nontrivial topology.</p>
<p>And one consequence of the nontrivial topology we’re discussing here is that it leads to disconnection in branchial space. Here are the branchial graphs for the first 3 steps in our original 3-disk 3-peg case: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228Zimg15AA.png" alt='' title='' width='523' height='232' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/06/19sw0228Ximg4_copy.txt">
					<span class='close' id='15X-19_out'>&amp;#10005</span></p>
<pre class='text' id='15X-19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For the first two steps, the branchial graphs stay connected; but on the third step there’s disconnection. For the 4-disk 4-peg case the sequence of branchial graphs begins:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/19sw0228img16A.png" alt='' title='' width='570' height='148' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/19sw0228img16_copy-2.txt">
					<span class='close' id='16-19_out'>&amp;#10005</span></p>
<pre class='text' id='16-19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At the beginning (and also the end) there’s a single component, that we might think of as a coherent region of metamathematical space. But in the middle it breaks into multiple disconnected components—in effect reflecting the emergence of multiple distinct regions of metamathematical space with something like event horizons temporarily existing between them.</p>
<p>How should we interpret this? First and foremost, it’s something that reveals that there’s structure “below” the “fluid dynamics” level of mathematics; it’s something that depends on the discrete “axiomatic infrastructure” of metamathematics. And from the point of view of our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a>, we can think of it as a kind of metamathematical analog of a “<a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/basic-concepts-of-quantum-mechanics/' target=_blank rel=noopener>quantum effect</a>”.</p>
<p>In our Physics Project we imagine different paths in the multiway system to correspond to different possible quantum histories. The observer is in effect spread over multiple paths, which they coarse grain or conflate together. An “observable quantum effect” occurs when there are paths that can be followed by the system, but that are somehow “too far apart” to be immediately coarse-grained together by the observer. </p>
<p>Put another way, there is “noticeable quantum interference” when the different paths corresponding to different histories that are “simultaneously happening” are “far enough apart” to be distinguished by the observer. “Destructive interference” is presumably associated with paths that are so far apart that to conflate them would effectively require conflating essentially every possible path. (And <a href='#the-notion-of-truth'>our later discussion</a> of the relationship between falsity and the “principle of explosion” then suggests a connection between destructive interference in physics and falsity in mathematics.) </p>
<p>In essence what determines the extent of “quantum effects” is then our “size” as observers in branchial space relative to the size of features in branchial space such as the “topological holes” we’ve been discussing. In the metamathematical case, the “size” of us as observers is in effect related to our ability (or choice) to distinguish slight differences in axiomatic formulations of things. And what we’re saying here is that when there is nontrivial topology in proof space, there is an intrinsic dynamics in metamathematical entailment that leads to the development of distinctions at some scale—though whether these become “visible” to us as mathematical observers depends on how “strong a metamathematical microscope” we choose to use relative to the scale of the “topological holes”.</p>
<h2 id='time-timelessness-and-entailment-fabrics'><span>19 | </span>Time, Timelessness and Entailment Fabrics</h2>
<p>A fundamental feature of our metamodel of mathematics is the idea that a given set of mathematical statements can entail others. But in this picture what does “mathematical progress” look like?</p>
<p>In analogy with physics one might imagine it would be like the evolution of the universe through time. One would start from some limited set of axioms and then—in a kind of “mathematical Big Bang”—these would lead to a progressively larger entailment cone containing more and more statements of mathematics. And in analogy with physics, one could imagine that the process of following chains of successive entailments in the entailment cone would correspond to the passage of time.</p>
<p>But realistically this isn’t how most of the actual history of human mathematics has proceeded. Because people—and even their computers—basically never try to extend mathematics by axiomatically deriving all possible valid mathematical statements. Instead, they come up with particular mathematical statements that for one reason or another they think are valid and interesting, then try to prove these.</p>
<p>Sometimes the proof may be difficult, and may involve a long chain of entailments. Occasionally—especially if automated theorem proving is used—the entailments may approximate a geodesic path all the way from the axioms. But the practical experience of human mathematics tends to be much more about identifying “nearby statements” and then trying to “fit them together” to deduce the statement one’s interested in.</p>
<p>And in general human mathematics seems to progress not so much through the progressive “time evolution” of an entailment graph as through the assembly of what one might call an “entailment fabric” in which different statements are being knitted together by entailments.</p>
<p>In physics, the analog of the entailment graph is basically the causal graph which builds up over time to define the content of a light cone (or, more accurately, an entanglement cone). The analog of the entailment fabric is basically the (more-or-less) instantaneous state of space (or, more accurately, branchial space). </p>
<p>In our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> we typically take our lowest-level structure to be a hypergraph—and informally we often say that this <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#what-is-space'>hypergraph “represents the structure of space”</a>. But really we should be <a href='https://writings.stephenwolfram.com/2020/10/faster-than-light-in-our-model-of-physics-some-preliminary-thoughts/#causal-balls-vs-geodesic-balls'>deducing the “structure of space”</a> by taking a particular time slice from the “dynamic evolution” represented by the causal graph—and for example we should think of two “atoms of space” as “being connected” in the “instantaneous state of space” if there’s a causal connection between them defined within the slice of the causal graph that occurs within the time slice we’re considering. In other words, the “structure of space” is knitted together by the causal connections represented by the causal graph. (In traditional physics, we might say that space can be “mapped out” by looking at overlaps between lots of little light cones.)</p>
<p>Let’s look at how this works out in our metamathematical setting, using string rewrites to simplify things. If we start from the axiom <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/20sw0228img1A.png" width= '62' height='19' align='absmiddle'></span> this is the beginning of the entailment cone it generates:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/20sw0228img2A.png" alt='' title='' width='562' height='336' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/20sw0228img2_copy.txt">
					<span class='close' id='2-20_out'>&amp;#10005</span></p>
<pre class='text' id='2-20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/20sw0228img3A.png" alt='' title='' width='562' height='294' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/20sw0228img3_copy.txt">
					<span class='close' id='3-20_out'>&amp;#10005</span></p>
<pre class='text' id='3-20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But instead of starting with one axiom and building up a progressively larger entailment cone, let’s start with multiple statements, and from each one generate a small entailment cone, say applying each rule at most twice. Here are entailment cones started from several different statements:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/20sw0228img4A.png" alt='' title='' width='569' height='523' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/20sw0228img4_copy.txt">
					<span class='close' id='4-20_out'>&amp;#10005</span></p>
<pre class='text' id='4-20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But the crucial point is that these entailment cones overlap—so we can knit them together into an “entailment fabric”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/20sw0228img5A.png" alt='' title='' width='573' height='381' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/20sw0228img5_copy.txt">
					<span class='close' id='5-20_out'>&amp;#10005</span></p>
<pre class='text' id='5-20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Or with more pieces and another step of entailment:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/20sw0228img6A.png" alt='' title='' width='569' height='444' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/20sw0228img6_copy.txt">
					<span class='close' id='6-20_out'>&amp;#10005</span></p>
<pre class='text' id='6-20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And in a sense this is a “timeless” way to imagine building up mathematics—and metamathematical space. Yes, this structure can in principle be viewed as part of the branchial graph obtained from a slice of an entailment graph (and technically this will be a useful way to think about it). But a different view—closer to the practice of human mathematics—is that it’s a “fabric” formed by fitting together many different mathematical statements. It’s not something where one’s tracking the overall passage of time, and seeing causal connections between things—as one might in “running a program”. Rather, it’s something where one’s fitting pieces together in order to satisfy <a href='https://www.wolframscience.com/nks/p210--systems-based-on-constraints/'>constraints—as one might in creating a tiling</a>.</p>
<p>Underneath everything is <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>. And entailment cones and entailment fabrics can be thought of just as different samplings or slicings of the ruliad. The ruliad is ultimately the entangled limit of all possible computations. But one can think of it as being built up by starting from all possible rules and initial conditions, then running them for an infinite number of steps. An entailment cone is essentially a “slice” of this structure where one’s looking at the “time evolution” from a particular rule and initial condition. An entailment fabric is an “orthogonal” slice, looking “at a particular time” across different rules and initial conditions. (And, by the way, rules and initial conditions are essentially equivalent, particularly in an accumulative system.)</p>
<p>One can think of these different slices of the ruliad as being what different kinds of observers will perceive within the ruliad. Entailment cones are essentially what <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>observers who persist through time</a> but are localized in rulial space will perceive. Entailment fabrics are what observers who ignore time but explore more of rulial space will perceive. </p>
<p><a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>Elsewhere I’ve argued</a> that a crucial part of what makes us perceive the laws of physics we do is that we are observers who consider ourselves to be persistent through time. But now we’re seeing that in the way human mathematics is typically done, the “mathematical observer” will be of a different character. And whereas for a physical observer what’s crucial is causality through time, for a mathematical observer (at least one who’s doing mathematics the way it’s usually done) what seems to be crucial is some kind of consistency or coherence across metamathematical space. </p>
<p>In physics it’s far from obvious that a persistent observer would be possible. It could be that with all those detailed computationally irreducible processes happening down at the level of atoms of space there might be nothing in the universe that one could consider consistent through time. But the point is that there are certain “coarse-grained” attributes of the behavior that are consistent through time. And it is by concentrating on these that we end up describing things in terms of the laws of physics we know.</p>
<p>There’s something very analogous going on in mathematics. The detailed branchial structure of metamathematical space is complicated, and presumably full of computational irreducibility. But once again there are “coarse-grained” attributes that have a certain consistency and coherence across it. And it is on these that we concentrate as human “mathematical observers”. And it is in terms of these that we end up being able to do “human-level mathematics”—in effect operating at a “fluid dynamics” level rather than a “molecular dynamics” one. </p>
<p>The possibility of “doing physics in the ruliad” depends crucially on the fact that as physical observers we assume that we have certain persistence and coherence through time. The possibility of “doing mathematics (the way it’s usually done) in the ruliad” depends crucially on the fact that as “mathematical observers” we assume that the mathematical statements we consider will have a certain coherence and consistency—or, in effect, that it’s possible for us to maintain and grow a coherent body of mathematical knowledge, even as we try to include all sorts of new mathematical statements. </p>
<h2 id='the-notion-of-truth'><span>20 | </span>The Notion of Truth</h2>
<p>Logic was originally conceived as a way to characterize human arguments—in which the concept of “truth” has always seemed quite central. And when logic was applied to the foundations of mathematics, “truth” was also usually assumed to be quite central. But the way we’ve modeled mathematics here has been much more about what statements can be derived (or entailed) than about any kind of <a href='https://www.wolframscience.com/nks/notes-12-9--truth-and-falsity-in-formal-systems/'>abstract notion of what statements can be “tagged as true”</a>. In other words, we’ve been more concerned with “structurally deriving” that “<span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img1A.png" width= '59' height='19' align='absmiddle'></span>” than in saying that “1&nbsp;+&nbsp;1&nbsp;=&nbsp;2 is true”.</p>
<p>But what is the relation between this kind of “constructive derivation” and the logical notion of truth? We might just say that “if we can construct a statement then we should consider it true”. And if we’re starting from axioms, then in a sense we’ll never have an “absolute notion of truth”—because whatever we derive is only “as true as the axioms we started from”. </p>
<p>One issue that can come up is that our axioms might be <a href='https://www.wolframscience.com/nks/p781--implications-for-mathematics-and-its-foundations/'>inconsistent</a>—in the sense that from them we can derive two obviously inconsistent statements. But to get further in discussing things like this we really need not only to have a notion of truth, but also a notion of falsity.</p>
<p>In traditional logic it has tended to be assumed that truth and falsity are very much “the same kind of thing”—like 1 and 0. But one feature of our view of mathematics here is that actually truth and falsity seem to have a rather different character. And perhaps this is not surprising—because in a sense if there’s one true statement about something there are typically an infinite number of false statements about it. So, for example, the single statement <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img3A.png" width= '59' height='19' align='absmiddle'></span> is true, but the infinite collection of statements <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img4A.png" width= '59' height='19' align='absmiddle'></span> for any other <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img5A.png" width= '9' height='19' align='absmiddle'></span> are all false. </p>
<p>There is another aspect to this, discussed since at least the Middle Ages, often under the name of the “<a href='https://en.wikipedia.org/wiki/Principle_of_explosion' target=_blank rel=noopener>principle of explosion</a>”: that as soon as one assumes any statement that is false, one can logically derive absolutely any statement at all. In other words, introducing a single “false axiom” will start an explosion that will eventually “blow up everything”.</p>
<p>So within our model of mathematics we might say that things are “true” if they can be derived, and are “false” if they lead to an “explosion”. But let’s say we’re given some statement. How can we tell if it’s true or false? One thing we can do to find out if it’s true is to construct an entailment cone from our axioms and see if the statement appears anywhere in it. Of course, given computational irreducibility there’s in general no upper bound on how far we’ll need to go to determine this. But now to find out if a statement is false we can imagine introducing the statement as an additional axiom, and then seeing if the entailment cone that’s now produced contains an explosion—though once again there’ll in general be no upper bound on how far we’ll have to go to guarantee that we have a “genuine explosion” on our hands.</p>
<p>So is there any alternative procedure? Potentially the answer is yes: we can just try to see if our statement is somehow equivalent to “true” or “false”. But in our model of mathematics where we’re just talking about transformations on symbolic expressions, there’s no immediate built-in notion of “true” and “false”. To talk about these we have to add something. And for example what we can do is to say that “true” is equivalent to what seems like an “obvious tautology” such as <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img6A.png" width= '35' height='19' align='absmiddle'></span>, or in our computational notation, <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img7A.png" width= '65' height='19' align='absmiddle'></span>, while “false” is equivalent to something “obviously explosive”, like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img8A.png" width= '65' height='21' align='absmiddle'></span> (or in our particular setup something more like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img9A.png" width= '101' height='21' align='absmiddle'></span>). </p>
<p>But even though something like “Can we find a way to reach <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img10A.png" width= '65' height='19' align='absmiddle'></span> from a given statement?” seems like a much more practical question for an actual theorem-proving system than “Can we fish our statement out of a whole entailment cone?”, it runs into many of the same issues—in particular that there’s no upper limit on the length of path that might be needed.</p>
<p>Soon we’ll return to the question of how all this relates to our interpretation of mathematics as a slice of the ruliad—and to the concept of the entailment fabric perceived by a mathematical observer. But to further set the context for what we’re doing let’s explore how what we’ve discussed so far relates to things like <a href='https://www.wolframscience.com/nks/notes-12-9--godels-theorem/'>Gödel’s theorem</a>, and to phenomena like incompleteness. </p>
<p>From the setup of basic logic we might assume that we could consider any statement to be either true or false. Or, more precisely, we might think that given a particular axiom system, we should be able to determine whether any statement that can be syntactically constructed with the primitives of that axiom system is true or false. We could explore this by asking whether every statement is either derivable or leads to an explosion—or can be proved equivalent to an “obvious tautology” or to an “obvious explosion”. </p>
<p>But as a simple “approximation” to this, let’s consider a string rewriting system in which we define a “<a href='https://www.wolframscience.com/nks/p780--implications-for-mathematics-and-its-foundations/'>local negation operation</a>”. In particular, let’s assume that given a statement like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img11A.png" width= '82' height='19' align='absmiddle'></span> the “negation” of this statement just exchanges A and B, in this case yielding <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img12A.png" width= '83' height='19' align='absmiddle'></span>.</p>
<p>Now let’s ask what statements are generated from a given axiom system. Say we start with <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img13A.png" width= '60' height='19' align='absmiddle'></span>. After one step of possible substitutions we get</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img14A.png" alt='' title='' width='564' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/22sw0227img14X_copy.txt">
					<span class='close' id='14-22_out'>&amp;#10005</span></p>
<pre class='text' id='14-22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>while after 2 steps we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img15A.png" alt='' title='' width='574' height='18' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/22sw0227img15Z_copy.txt">
					<span class='close' id='15-22_out'>&amp;#10005</span></p>
<pre class='text' id='15-22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And in our setup we’re effectively asserting that these are “true” statements. But now let’s “negate” the statements, by exchanging A and B. And if we do this, we’ll see that there’s never a statement where both it and its negation occur. In other words, there’s no obvious inconsistency being generated within this axiom system.</p>
<p>But if we consider instead the axiom <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img16A.png" width= '72' height='19' align='absmiddle'></span> then this gives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img17A.png" alt='' title='' width='564' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/22sw0227img17Z_copy.txt">
					<span class='close' id='17-22_out'>&amp;#10005</span></p>
<pre class='text' id='17-22_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And since this includes both <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img18A.png" width= '71' height='19' align='absmiddle'></span> and its “negation” <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/22sw0227img19A.png" width= '73' height='19' align='absmiddle'></span>, by our criteria we must consider this axiom system to be inconsistent. </p>
<p>In addition to inconsistency, we can also ask about incompleteness. For all possible statements, does the axiom system eventually generate either the statement or its negation? Or, in other words, can we always decide from the axiom system whether any given statement is true or false?</p>
<p>With our simple assumption about negation, questions of inconsistency and incompleteness become at least in principle very simple to explore. Starting from a given axiom system, we generate its entailment cone, then we ask within this cone what fraction of possible statements, say of a given length, occur.</p>
<p>If the answer is more than 50% we know there’s inconsistency, while if the answer is less than 50% that’s evidence of incompleteness. So what happens with different possible axiom systems?</p>
<p>Here are some <a href='https://www.wolframscience.com/nks/p798--implications-for-mathematics-and-its-foundations/'>results from <em>A New Kind of Science</em></a>, in each case showing both what amounts to the raw entailment cone (or, in this case, multiway system evolution from “true”), and the number of statements of a given length reached after progressively more steps:</p>
<p><a href='https://www.wolframscience.com/nks/p798--implications-for-mathematics-and-its-foundations/'><img class='' src='https://content.wolfram.com/uploads/sites/43/2022/08/22-nks-p798-implications-for-mathematics-2A.png' alt='Page 798' title='Page 798' width='620' height=' '/></a></p>
<p>At some level this is all rather straightforward. But from the pictures above we can already get a sense that there’s a problem. For most axiom systems the fraction of statements reached of a given length changes as we increase the number of steps in the entailment cone. Sometimes it’s straightforward to see what fraction will be achieved even after an infinite number of steps. But often it’s not.</p>
<p>And in general we’ll run into computational irreducibility—so that in effect the only way to determine whether some particular statement is generated is just to go to ever more steps in the entailment cone and see what happens. In other words, there’s no guaranteed-finite way to decide what the ultimate fraction will be—and thus whether or not any given axiom system is inconsistent, or incomplete, or neither.</p>
<p>For some axiom systems it may be possible to tell. But for some axiom systems it’s not, in effect because we don’t in general know how far we’ll have to go to determine whether a given statement is true or not. </p>
<p>A certain amount of additional technical detail is required to reach the standard versions of Gödel’s incompleteness theorems. (Note that these theorems were originally stated specifically for the Peano axioms for arithmetic, but the Principle of Computational Equivalence suggests that they’re in some sense much more general, and even ubiquitous.) But the important point here is that given an axiom system there may be statements that either can or cannot be reached—but there’s no upper bound on the length of path that might be needed to reach them even if one can.</p>
<p>OK, so let’s come back to talking about the notion of truth in the context of the ruliad. We’ve discussed axiom systems that might show inconsistency, or incompleteness—and the difficulty of determining if they do. But the ruliad in a sense contains all possible axiom systems—and generates all possible statements.</p>
<p>So how then can we ever expect to identify which statements are “true” and which are not? When we talked about particular axiom systems, we said that any statement that is generated can be considered true (at least with respect to that axiom system). But in the ruliad every statement is generated. So what criterion can we use to determine which we should consider “true”?</p>
<p>The key idea is any computationally bounded observer (like us) can perceive only a tiny slice of the ruliad. And it’s a perfectly meaningful question to ask whether a particular statement occurs within that perceived slice.</p>
<p>One way of picking a “slice” is just to start from a given axiom system, and develop its entailment cone. And with such a slice, the criterion for the truth of a statement is exactly what we discussed above: does the statement occur in the entailment cone?</p>
<p>But how do typical “mathematical observers” actually sample the ruliad? As we discussed in the previous section, it seems to be much more by forming an entailment fabric than by developing a whole entailment cone. And in a sense progress in mathematics can be seen as a process of adding pieces to an entailment fabric: pulling in one mathematical statement after another, and checking that they fit into the fabric.</p>
<p>So what happens if one tries to add a statement that “isn’t true”? The basic answer is that it produces an “explosion” in which the entailment fabric can grow to encompass essentially any statement. From the point of view of underlying rules—or the ruliad—there’s really nothing wrong with this. But the issue is that it’s incompatible with an “observer like us”—or with any realistic idealization of a mathematician. </p>
<p>Our view of a mathematical observer is essentially an entity that accumulates mathematical statements into an entailment fabric. But we assume that the observer is computationally bounded, so in a sense they can only work with a limited collection of statements. So if there’s an explosion in an entailment fabric that means the fabric will expand beyond what a mathematical observer can coherently handle. Or, put another way, the only kind of entailment fabrics that a mathematical observer can reasonably consider are ones that “contain no explosions”. And in such fabrics, it’s reasonable to take the generation or entailment of a statement as a signal that the statement can be considered true.</p>
<p>The ruliad is in a sense a unique and absolute thing. And we might have imagined that it would lead us to a unique and absolute definition of truth in mathematics. But what we’ve seen is that that’s not the case. And instead our notion of truth is something based on how we sample the ruliad as mathematical observers. But now we must explore what this means about what mathematics as we perceive it can be like.</p>
<h2 id='what-can-human-mathematics-be-like'><span>21 | </span>What Can Human Mathematics Be Like?</h2>
<p>The ruliad in a sense contains all structurally possible mathematics—including all mathematical statements, all axiom systems and everything that follows from them. But mathematics as we humans conceive of it is never the whole ruliad; instead it is always just some tiny part that we as mathematical observers sample.</p>
<p>We might imagine, however, that this would mean that there is in a sense a complete arbitrariness to our mathematics—because in a sense we could just pick any part of the ruliad we want. Yes, we might want to start from a specific axiom system. But we might imagine that that axiom system could be chosen arbitrarily, with no further constraint. And that the mathematics we study can therefore be thought of as an essentially arbitrary choice, determined by its detailed history, and perhaps by cognitive or other features of humans.</p>
<p>But there is a crucial additional issue. When we “sample our mathematics” from the ruliad we do it as mathematical observers and ultimately as humans. And it turns out that even very general features of us as mathematical observers turn out to put strong constraints on what we can sample, and how.</p>
<p><a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>When we discussed physics</a>, we said that the central features of observers are their computational boundedness and their assumption of their own persistence through time. In mathematics, observers are again computationally bounded. But now it is not persistence through time that they assume, but rather a certain coherence of accumulated knowledge. </p>
<p>We can think of a mathematical observer as progressively expanding the entailment fabric that they consider to “represent mathematics”. And the question is what they can add to that entailment fabric while still “remaining coherent” as observers. In the previous section, for example, we argued that if the observer adds a statement that can be considered “logically false” then this will lead to an “explosion” in the entailment fabric. </p>
<p>Such a statement is certainly present in the ruliad. But if the observer were to add it, then they wouldn’t be able to maintain their coherence—because, whimsically put, their mind would necessarily explode. </p>
<p>In thinking about axiomatic mathematics it’s been standard to say that any axiom system that’s “reasonable to use” should at least be consistent (even though, yes, for a given axiom system it’s in <a href='https://www.wolframscience.com/nks/notes-12-9--consistency-in-axiom-systems/'>general ultimately undecidable</a> whether this is the case). And certainly consistency is one criterion that we now see is necessary for a “mathematical observer like us”. But one can expect that it’s not the only criterion.</p>
<p>In other words, although it’s perfectly possible to write down any axiom system, and even start generating its entailment cone, only some axiom systems may be compatible with “mathematical observers like us”. </p>
<p>And so, for example, something like the <a href='https://www.wolframscience.com/nks/notes-12-4--continuum-and-cardinality/'>Continuum Hypothesis</a>—which is known to be <a href='https://www.wolframscience.com/nks/notes-12-9--set-theory-and-axioms/'>independent of the “established axioms” of set theory</a>—may well have the feature that, say, it has to be assumed to be true in order to get a metamathematical structure compatible with mathematical observers like us.</p>
<p>In the case of physics, we know that the general characteristics of observers lead to certain key perceived features and laws of physics. In statistical mechanics, we’re dealing with “coarse-grained observers” who don’t trace and decode the paths of individual molecules, and therefore perceive the Second Law of thermodynamics, fluid dynamics, etc. And in our Physics Project we’re also dealing with coarse-grained observers who don’t track all the details of the atoms of space, but instead perceive space as something coherent and effectively continuous. </p>
<p>And it seems as if in metamathematics there’s something very similar going on. As we began to discuss in the <a href='#mathematics-and-physics-have-the-same-foundations'>very first section above</a>, mathematical observers tend to “coarse grain” metamathematical space. In operational terms, one way they do this is by talking about something like the Pythagorean theorem without always going down to the detailed level of axioms, and for example saying just how real numbers should be defined. And something related is that they tend to concentrate more on mathematical statements and theorems than on their proofs. <a href='#going-below-axiomatic-mathematics'>Later we&#8217;ll see</a> how in the context of the ruliad there’s an even deeper level to which one can go. But the point here is that in actually doing mathematics one tends to operate at the “human scale” of talking about mathematical concepts rather than the “molecular-scale details” of axioms.</p>
<p>But why does this work? Why is one not continually “dragged down” to the detailed axiomatic level—or below? How come it’s possible to reason at what we described above as the “fluid dynamics” level, without always having to go down to the detailed “molecular dynamics” level?</p>
<p>The basic claim is that this works for mathematical observers for essentially the same reason as the perception of space works for physical observers. With the “coarse-graining” characteristics of the observer, it’s inevitable that the slice of the ruliad they sample will have the kind of coherence that allows them to operate at a higher level. In other words, mathematics can be done “at a human level” for the same basic reason that we have a “human-level experience” of space in physics.</p>
<p>The fact that it works this way depends both on necessary features of the ruliad—<a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/'>and in general of multicomputation</a>—as well as on characteristics of us as observers. </p>
<p>Needless to say, there are “corner cases” where what we’ve described starts to break down. In physics, for example, the “human-level experience” of space breaks down near <a href='https://www.wolframphysics.org/bulletins/2020/05/event-horizons-singularities-and-other-exotic-spacetime-phenomena/' target=_blank rel=noopener>spacetime singularities</a>. And in mathematics, there are cases where for example <a href='https://www.wolframscience.com/nks/p789--implications-for-mathematics-and-its-foundations/'>undecidability forces one to take a lower-level</a>, more axiomatic and ultimately more metamathematical view. </p>
<p>But the point is that there are large regions of physical space—and metamathematical space—where these kinds of issues don’t come up, and where our assumptions about physical—and mathematical—observers can be maintained. And this is what ultimately allows us to have the “human-scale” views of physics and mathematics that we do.</p>
<h2 id='going-below-axiomatic-mathematics'><span>22 | </span>Going below Axiomatic Mathematics</h2>
<p>In the traditional view of the foundations of mathematics one imagines that axioms—say stated in terms of symbolic expressions—are in some sense the lowest level of mathematics. But thinking in terms of the ruliad suggests that in fact there is a still-lower “ur level”—a kind of analog of machine code in which everything, including axioms, is broken down into ultimate “raw computation”.</p>
<p>Take an axiom like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img1A.png" width= '105' height='21' align='absmiddle'></span>, or, in more precise computational language:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img2A.png" alt='' title='' width='140' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img2_copy.txt">
					<span class='close' id='2-24_out'>&amp;#10005</span></p>
<pre class='text' id='2-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Compared to everything we’re used to seeing in mathematics this looks simple. But actually it’s already got a lot in it. For example, it assumes the notion of a binary operator, which it’s in effect naming “∘”. And for example it also assumes the notion of variables, and has two distinct pattern variables that are in effect “tagged” with the names <em>x</em> and <em>y</em>. </p>
<p>So how can we define what this axiom ultimately “means”? Somehow we have to go from its essentially textual symbolic representation to a piece of actual computation. And, yes, the particular representation we’ve used here can immediately be interpreted as computation in the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>. But the ultimate computational concept we’re dealing with is more general than that. And in particular it can exist in any <a href='https://www.wolframscience.com/nks/p642--the-phenomenon-of-universality/'>universal computational system</a>.</p>
<p>Different universal computational systems (say particular languages or CPUs or Turing machines) may have different ways to represent computations. But ultimately any computation can be represented in any of them—with the differences in representation being like different “coordinatizations of computation”.</p>
<p>And however we represent computations there is one thing we can say for sure: all possible computations are somewhere in the ruliad. Different representations of computations correspond in effect to different coordinatizations of the ruliad. But all computations are ultimately there.</p>
<p>For our Physics Project it’s been convenient use a “parametrization of computation” that can be thought of as being based on rewriting of hypergraphs. The elements in these hypergraphs are ultimately purely abstract, but we tend to talk about them as “atoms of space” to indicate the beginnings of our interpretation.</p>
<p><a name='expression-rewriting'></a>It’s perfectly possible to use hypergraph rewriting as the <a href='https://www.wolframphysics.org/technical-introduction/equivalence-and-computation-in-our-models/' target=_blank rel=noopener>“substrate” for representing axiom systems stated in terms of symbolic expressions</a>. But it’s a bit more convenient (though ultimately equivalent) to instead use systems based on expression rewriting—or in effect tree rewriting.</p>
<p>At the outset, one might imagine that different axiom systems would somehow have to be represented by “different rules” in the ruliad. But as one might expect from the phenomenon of universal computation, it’s actually perfectly possible to think of different axiom systems as just being specified by different “data” operated on by a single set of rules. There are many rules and structures that we could use. But one set that has the benefit of a <a href='https://writings.stephenwolfram.com/2020/12/combinators-and-the-story-of-computation/'>century of history</a> are <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/'>S, K combinators</a>.</p>
<p>The basic concept is to represent everything in terms of “combinator expressions” containing just the two objects S and K. (It’s also possible to have just one fundamental object, and indeed <a href='https://writings.stephenwolfram.com/2021/06/1920-2020-and-a-20000-prize-announcing-the-s-combinator-challenge/'>S alone may be enough</a>.)</p>
<p>It’s worth saying at the outset that when we go this “far down” things get pretty non-human and obscure. Setting things up in terms of axioms may already seem pedantic and low level. But going to a substrate below axioms—that we can think of as getting us to raw “atoms of existence”—will lead us to a whole other level of obscurity and complexity. But if we’re going to understand how mathematics can emerge from the ruliad this is where we have to go. And combinators provide us with a more-or-less-concrete example.</p>
<p>Here’s an example of a small combinator expression</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img3A.png" alt='' title='' width='370' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img3_copy.txt">
					<span class='close' id='3-24_out'>&amp;#10005</span></p>
<pre class='text' id='3-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which corresponds to the “expression tree”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img4A.png" alt='' title='' width='484' height='225' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img4_copy.txt">
					<span class='close' id='4-24_out'>&amp;#10005</span></p>
<pre class='text' id='4-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can write the combinator expression without explicit “function application” <tt>[ ... ]</tt> by using a (left) application operator •</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img5A.png" alt='' title='' width='494' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img5_copy.txt">
					<span class='close' id='5-24_out'>&amp;#10005</span></p>
<pre class='text' id='5-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and it’s always unambiguous to omit this operator, yielding the compact representation:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img6A.png" alt='' title='' width='364' height='22' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img6_copy.txt">
					<span class='close' id='6-24_out'>&amp;#10005</span></p>
<pre class='text' id='6-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By mapping S, K and the application operator to codewords it’s possible to represent this as a simple binary sequence:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img7A.png" alt='' title='' width='475' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img7_copy.txt">
					<span class='close' id='7-24_out'>&amp;#10005</span></p>
<pre class='text' id='7-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But what does our combinator expression mean? The basic combinators are defined to have the rules:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img8A.png" alt='' title='' width='328' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img8_copy.txt">
					<span class='close' id='8-24_out'>&amp;#10005</span></p>
<pre class='text' id='8-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>These rules on their own don’t do anything to our combinator expression. But if we form the expression</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img9A.png" alt='' title='' width='417' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img9_copy.txt">
					<span class='close' id='9-24_out'>&amp;#10005</span></p>
<pre class='text' id='9-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which we can write as</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img10A.png" alt='' title='' width='442' height='25' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img10_copy.txt">
					<span class='close' id='10-24_out'>&amp;#10005</span></p>
<pre class='text' id='10-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>then repeated application of the rules gives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img11A.png" alt='' title='' width='441' height='428' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img11_copy.txt">
					<span class='close' id='11-24_out'>&amp;#10005</span></p>
<pre class='text' id='11-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can think of this as “feeding” <em>c</em>, <em>x</em> and <em>y</em> into our combinator expression, then using the “plumbing” defined by the combinator expression to assemble a particular expression in terms of <em>c</em>, <em>x</em> and <em>y</em>.</p>
<p>But what does this expression now mean? Well, that depends on what we think <em>c</em>, <em>x</em> and <em>y</em> mean. We might notice that <em>c</em> always appears in the configuration <tt>c[_][_]</tt>. And this means we can interpret it as a binary operator, which we could write in infix form as ∘ so that our expression becomes: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img37A.png" alt='' title='' width='89' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img37_copy.txt">
					<span class='close' id='37-v2_out'>&amp;#10005</span></p>
<pre class='text' id='37-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, this is all incredibly low level. But we need to go even further. Right now we’re feeding in names like <em>c</em>, <em>x</em> and <em>y</em>. But in the end we want to represent absolutely everything purely in terms of S and K. So we need to get rid of the “human-readable names” and just replace them with “lumps” of S, K combinators that—like the names—get “carried around” when the combinator rules are applied.</p>
<p>We can think about our ultimate expressions in terms of S and K as being like machine code. “One level up” we have assembly language, with the same basic operations, but explicit names. And the idea is that things like axioms—and the laws of inference that apply to them—can be “compiled down” to this assembly language.</p>
<p>But ultimately we can always go further, to the very lowest-level “machine code”, in which only S and K ever appear. Within the ruliad as “coordinatized” by S, K combinators, there’s an infinite collection of possible combinator expressions. But how do we find ones that “represent something recognizably mathematical”?</p>
<p>As an example let’s consider a possible way in which <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/#computing-with-combinators'>S, K can represent integers, and arithmetic on integers</a>. The basic idea is that an integer <em>n</em> can be input as the combinator expression</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img13A.png" alt='' title='' width='180' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img13_copy.txt">
					<span class='close' id='13-24_out'>&amp;#10005</span></p>
<pre class='text' id='13-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which for <em>n</em>&nbsp;=&nbsp;5 gives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img14A.png" alt='' title='' width='369' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img14_copy.txt">
					<span class='close' id='14-24_out'>&amp;#10005</span></p>
<pre class='text' id='14-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But if we now apply this to <tt>[S][K]</tt> what we get reduces to</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img15A.png" alt='' title='' width='425' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img15_copy.txt">
					<span class='close' id='15-24_out'>&amp;#10005</span></p>
<pre class='text' id='15-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which contains 4 S’s.</p>
<p>But with this representation of integers it’s possible to find combinator expressions that represent arithmetic operations. For example, here’s a representation of an addition operator:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img16A.png" alt='' title='' width='202' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img16_copy.txt">
					<span class='close' id='16-24_out'>&amp;#10005</span></p>
<pre class='text' id='16-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At the “assembly language” level we might call this <tt>plus</tt>, and apply it to integers <em>i</em> and <em>j</em> using:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img17A.png" alt='' title='' width='59' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img17_copy.txt">
					<span class='close' id='17-24_out'>&amp;#10005</span></p>
<pre class='text' id='17-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But at the “pure machine code” level <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img18A.png" width= '33' height='19' align='absmiddle'></span> can be represented simply by</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img19A.png" alt='' title='' width='506' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img19_copy.txt">
					<span class='close' id='19-24_out'>&amp;#10005</span></p>
<pre class='text' id='19-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which when applied to <span style="color:#000000;font-weight:SemiBold;font-size:15px;font-family:Source Sans Pro">[S][K]</span> reduces to the “output representation” of 3:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img20A.png" alt='' title='' width='521' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img20_copy.txt">
					<span class='close' id='20-24_out'>&amp;#10005</span></p>
<pre class='text' id='20-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As a slightly more elaborate example </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img21A.png" alt='' title='' width='114' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/24sw0228img21_copy-2.txt">
					<span class='close' id='21-24_out'>&amp;#10005</span></p>
<pre class='text' id='21-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>represents the operation of raising to a power. Then <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img22A.png" width= '16' height='19' align='absmiddle'></span> becomes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img23A.png" alt='' title='' width='609' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img23_copy.txt">
					<span class='close' id='23-24_out'>&amp;#10005</span></p>
<pre class='text' id='23-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Applying this to <tt>[S][K]</tt> repeated application of the combinator rules gives</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img24-2A.png" alt='' title='' width='580' height='420' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img24_copy.txt">
					<span class='close' id='24-24_out'>&amp;#10005</span></p>
<pre class='text' id='24-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>eventually yielding the output representation of 8:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img25A.png" alt='' title='' width='459' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img25_copy.txt">
					<span class='close' id='25-24_out'>&amp;#10005</span></p>
<pre class='text' id='25-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We could go on and construct any other arithmetic or computational operation we want, all just in terms of the “universal combinators” S and K. </p>
<p>But how should we think about this in terms of our conception of mathematics? Basically what we’re seeing is that in the “raw machine code” of S, K combinators it’s possible to “find” a representation for something we consider to be a piece of mathematics. </p>
<p>Earlier we talked about starting from structures like axiom systems and then “compiling them down” to raw machine code. But what about just “finding mathematics” in a sense “naturally occurring” in “raw machine code”? We can think of the ruliad as containing “all possible machine code”. And somewhere in that machine code must be all the conceivable “structures of mathematics”. But the question is: in the wildness of the raw ruliad, what structures can we as mathematical observers successfully pick out? </p>
<p>The situation is quite directly analogous to what happens at multiple levels in physics. Consider for example a fluid full of molecules bouncing around. As we’ve discussed several times, observers like us usually aren’t sensitive to the detailed dynamics of the molecules. But we can still successfully pick out large-scale structures—like overall fluid motions, vortices, etc. And—much like in mathematics—we can talk about physics just at this higher level. </p>
<p>In our Physics Project all this becomes much more extreme. For example, we imagine that space and everything in it is just a giant network of atoms of space. And now within this network we imagine that there are “repeated patterns”—that correspond to things like electrons and quarks and black holes. </p>
<p>In a sense it is the big achievement of natural science to have managed to find these regularities so that we can describe things in terms of them, without always having to go down to the level of atoms of space. But the fact that these are the kinds of regularities we have found is also a statement about us as physical observers.</p>
<p>And the point is that even at the level of the raw ruliad our characteristics as physical observers will inevitably lead us to such regularities. The fact that we are computationally bounded and assume ourselves to have a certain persistence will lead us to consider things that are localized and persistent—that in physics we <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/elementary-particles/' target=_blank rel=noopener>identify for example as particles</a>.</p>
<p>And it’s very much the same thing in mathematics. As mathematical observers we’re interested in picking out from the raw ruliad “repeated patterns” that are somehow robust. But now instead of identifying them as particles, we’ll identify them as mathematical constructs and definitions. In other words, just as a repeated pattern in the ruliad might in physics be interpreted as an electron, in mathematics a repeated pattern in the ruliad might be interpreted as an integer. </p>
<p>We might think of physics as something “emergent” from the structure of the ruliad, and now we’re thinking of mathematics the same way. And of course not only is the “underlying stuff” of the ruliad the same in both cases, but also in both cases it’s “observers like us” that are sampling and perceiving things.</p>
<p>There are lots of analogies to the process we’re describing of “fishing constructs out of the raw ruliad”. As one example, consider the <a href='https://www.wolframscience.com/nks/p229--the-emergence-of-order/'>evolution of a (“class 4”) cellular automaton</a> in which <a href='https://www.wolframscience.com/nks/p292--structures-in-class-4-systems/'>localized structures</a> emerge:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img26A.png" alt='' title='' width='579' height='356' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img26_copy.txt">
					<span class='close' id='26-24_out'>&amp;#10005</span></p>
<pre class='text' id='26-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Underneath, just as throughout the ruliad, there’s lots of detailed computation going on, with rules repeatedly getting applied to each cell. But out of all this underlying computation we can identify a certain set of persistent structures—which we can use to make a “higher-level description” that may capture the aspects of the behavior that we care about. </p>
<p>Given an “ocean” of S, K combinator expressions, how might we set about “finding mathematics” in them? One straightforward approach is just to identify certain “mathematical properties” we want, and then go searching for S, K combinator expressions that satisfy these.</p>
<p>For example, if we want to “search for (propositional) logic” we first need to pick combinator expressions to symbolically represent “true” and “false”. There are many pairs of expressions that will work. As one example, let’s pick:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img27A.png" alt='' title='' width='527' height='52' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img27_copy.txt">
					<span class='close' id='27-24_out'>&amp;#10005</span></p>
<pre class='text' id='27-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can just search for combinator expressions which, when applied to all possible pairs of “true” and “false” give truth tables corresponding to particular logical functions. And if we do this, here are examples of the smallest combinator expressions we find:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img28A.png" alt='' title='' width='567' height='121' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img28_copy.txt">
					<span class='close' id='28-24_out'>&amp;#10005</span></p>
<pre class='text' id='28-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s how we can then reproduce the truth table for <a href='https://reference.wolfram.com/language/ref/And.html'><tt>And</tt></a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img29A.png" alt='' title='' width='559' height='160' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img29_copy.txt">
					<span class='close' id='29-24_out'>&amp;#10005</span></p>
<pre class='text' id='29-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we just started picking combinator expressions at random, then most of them wouldn’t be “interpretable” in terms of this representation of logic. But if we ran across for example</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img30A.png" alt='' title='' width='563' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img30_copy.txt">
					<span class='close' id='30-24_out'>&amp;#10005</span></p>
<pre class='text' id='30-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>we could recognize in it the combinators for <a href='https://reference.wolfram.com/language/ref/And.html'><tt>And</tt></a>, <a href='https://reference.wolfram.com/language/ref/Or.html'><tt>Or</tt></a>, etc. that we identified above, and in effect “disassemble” it to give:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img31A.png" alt='' title='' width='321' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img31_copy.txt">
					<span class='close' id='31-24_out'>&amp;#10005</span></p>
<pre class='text' id='31-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s worth noting, though, that even with the choices we made above for “true” and “false”, there’s not just a single possible combinator, say for <a href='https://reference.wolfram.com/language/ref/And.html'><tt>And</tt></a>. Here are a few possibilities:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img32A.png" alt='' title='' width='587' height='110' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img32_copy.txt">
					<span class='close' id='32-24_out'>&amp;#10005</span></p>
<pre class='text' id='32-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And there’s also nothing unique about the choices for “true” and “false”. With the alternative choices</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img33A.png" alt='' title='' width='527' height='52' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/02/24sw0228img33_copy.txt">
					<span class='close' id='33-24_out'>&amp;#10005</span></p>
<pre class='text' id='33-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>here are the smallest combinator expressions for a few logical functions:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/24sw0228img34A.png" alt='' title='' width='568' height='121' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/24sw0228img34_copy-2X.txt">
					<span class='close' id='34-24_out'>&amp;#10005</span></p>
<pre class='text' id='34-24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So what can we say in general about the “interpretability” of an arbitrary combinator expression? Obviously any combinator expression does what it does at the level of raw combinators. But the question is whether it can be given a “higher-level”—and potentially “mathematical”—interpretation.</p>
<p>And in a sense this is directly an issue of what a mathematical observer “perceives” in it. Does it contain some kind of robust structure—say a kind of analog for mathematics of a particle in physics? </p>
<p>Axiom systems can be viewed as a particular way to “summarize” certain “raw machine code” in the ruliad. But from the point of a “raw coordinatization of the ruliad” like combinators there doesn’t seem to be anything immediately special about them. At least for us humans, however, they do seem to be an obvious “waypoint”. Because by distinguishing operators and variables, establishing arities for operators and introducing names for things, they reflect the kind of structure that’s familiar from human language.</p>
<p>But now that we think of the ruliad as what’s “underneath” both mathematics and physics there’s a different path that’s suggested. With the axiomatic approach we’re effectively trying to leverage human language as a way of summarizing what’s going on. But an alternative is to leverage our direct experience of the physical world, and our perception and intuition about things like space. And as we’ll discuss later, this is likely in many ways a better “metamodel” of the way pure mathematics is actually practiced by us humans.</p>
<p>In some sense, this goes straight from the “raw machine code” of the ruliad to “human-level mathematics”, sidestepping the axiomatic level. But given how much “reductionist” work has already been done in mathematics to represent its results in axiomatic form, there is definitely still great value in seeing how the whole axiomatic setup can be “fished out” of the “raw ruliad”.</p>
<p>And there’s certainly no lack of complicated technical issues in doing this. As one example, how should one deal with “generated variables”? If one “coordinatizes” the ruliad in terms of something like hypergraph rewriting this is fairly straightforward: it just involves creating new elements or hypergraph nodes (which in physics would be interpreted as atoms of space). But for something like S, K combinators it’s a bit more subtle. In the examples we’ve given above, we have combinators that, when “run”, eventually reach a fixed point. But to deal with generated variables we probably also need combinators <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/#combinators-in-the-wild-some-zoology'>that never reach fixed points</a>, making it considerably more complicated to identify correspondences with definite symbolic expressions.</p>
<p>Another issue involves rules of entailment, or, in effect, the metalogic of an axiom system. In the full axiomatic setup we want to do things like create <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#the-formal-structure-of-multicomputation'>token-event graphs</a>, where each event corresponds to an entailment. But what rule of entailment should be used? The underlying rules for S, K combinators, for example, define a particular choice—though they can be used to emulate others. But the ruliad in a sense contains all choices. And, once again, it’s up to the observer to “fish out” of the raw ruliad a particular “slice”—which captures not only the axiom system but also the rules of entailment used.</p>
<p>It may be worth mentioning a slightly different existing “reductionist” approach to mathematics: the idea of describing things in terms of <a href='https://reference.wolfram.com/language/ref/Typed.html'>types</a>. A type is in effect an equivalence class that characterizes, say, all integers, or all functions from tuples of reals to truth values. But in our terms we can interpret a type as a kind of “template” for our underlying “machine code”: we can say that some piece of machine code represents something of a particular type if the machine code matches a particular pattern of some kind. And the issue is then whether that pattern is somehow robust “like a particle” in the raw ruliad.</p>
<p>An important part of what made our Physics Project possible is the idea of going “underneath” space and time and other traditional concepts of physics. And in a sense what we’re doing here is something very similar, though for mathematics. We want to go “underneath” concepts like functions and variables, and even the very idea of symbolic expressions. In our Physics Project a convenient “parametrization” of what’s “underneath” is a hypergraph made up of elements that we often refer to as “atoms of space”. In mathematics we’ve discussed using combinators as our “parametrization” of what’s “underneath”.</p>
<p>But what are these “made of”? We can think of them as corresponding to raw elements of metamathematics, or raw elements of computation. But in the end, they’re “made of” whatever the ruliad is “made of”. And perhaps the best description of the elements of the ruliad is that they are “atoms of existence”—the smallest units of anything, from which everything, in mathematics and physics and elsewhere, must be made. </p>
<p><a name='eme'></a>The atoms of existence aren’t bits or points or anything like that. They’re something fundamentally lower level that’s come into focus only with our Physics Project, and particularly with the identification of the ruliad. And for our purposes here I’ll call such atoms of existence “emes” (pronounced “eemes”, like phonemes etc.). </p>
<p>Everything in the ruliad is made of emes. The atoms of space in our Physics Project are emes. The nodes in our combinator trees are emes. An eme is a deeply abstract thing. And in a sense all it has is an identity. Every eme is distinct. We could give it a name if we wanted to, but it doesn’t intrinsically have one. And in the end the structure of everything is built up simply from relations between emes. </p>
<h2 id='the-physicalized-laws-of-mathematics'><span>23 | </span>The Physicalized Laws of Mathematics</h2>
<p>The concept of the ruliad suggests there is a deep connection between the foundations of mathematics and physics. And now that we have discussed how some of the familiar formalism of mathematics can “fit into” the ruliad, we are ready to use the “bridge” provided by the ruliad to start exploring how to apply some of the successes and intuitions of physics to mathematics.</p>
<p>A foundational part of our everyday experience of physics is our perception that we live in continuous space. But our Physics Project implies that at sufficiently small scales <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#what-is-space'>space is actually made of discrete elements</a>—and it is only because of the coarse-grained way in which we experience it that we perceive it as continuous.</p>
<p>In mathematics—unlike physics—we’ve long thought of the foundations as being based on things like symbolic expressions that have a fundamentally discrete structure. Normally, though, the elements of those expressions are, for example, given human-recognizable names (like 2 or <tt><a href='https://reference.wolfram.com/language/ref/Plus.html'>Plus</a></tt>). But what we saw in the previous section is that these recognizable forms can be thought of as existing in an “anonymous” lower-level substrate made of what we can call atoms of existence or emes.</p>
<p>But the crucial point is that this substrate is directly based on the ruliad. And its structure is identical between the foundations of mathematics and physics. In mathematics the emes aggregate up to give us our universe of mathematical statements. In physics they aggregate up to give us our physical universe.</p>
<p>But now the commonality of underlying “substrate” makes us realize that we should be able to take our experience of physics, and apply it to mathematics. So what is the analog in mathematics of our perception of the continuity of space in physics? We’ve discussed the idea that we can think of mathematical statements as being laid out in a metamathematical space—or, more specifically, in what we’ve called an <a href='#time-timelessness-and-entailment-fabrics'>entailment fabric</a>. We initially talked about “coordinatizing” this using axioms, but in the previous section we saw how to go “below axioms” to the level of “pure emes”. </p>
<p>When we do mathematics, though, we’re sampling this on a much higher level. And just like as physical observers we coarse grain the emes (that we usually call “atoms of space”) that make up physical space, so too as “mathematical observers” we coarse grain the emes that make up metamathematical space.</p>
<p>Foundational approaches to mathematics—particularly over the past century or so—have almost always been based on axioms and on their fundamentally discrete symbolic structure. But by going to a lower level and seeing the correspondence with physics we are led to consider what we might think of as a higher-level “experience” of mathematics—operating not at the “molecular dynamics” level of specific axioms and entailments, but rather at what one might call the “fluid dynamics” level of larger-scale concepts.</p>
<p>At the outset one might not have any reason to think that this higher-level approach could consistently be applied. But this is the first big place where ideas from physics can be used. If both physics and mathematics are based on the ruliad, and if our general characteristics as observers apply in both physics and mathematics, then we can expect that similar features will emerge. And in particular, we can expect that our everyday perception of physical space as continuous will carry over to mathematics, or, more accurately, to metamathematical space.</p>
<p>The picture is that we as mathematical observers have a certain <a href='#counting-the-emes-of-mathematics-and-physics'>“size” in metamathematical space</a>. We identify concepts—like integers or the Pythagorean theorem—as “regions” in the space of possible configurations of emes (and ultimately of slices of the ruliad). At an axiomatic level we might think of ways to capture what a typical mathematician might consider “the same concept” with slightly different formalism (say, different large cardinal axioms or different models of real numbers). But when we get down to the level of emes there’ll be vastly more freedom in how we capture a given concept—so that we’re in effect using a whole region of “emic space” to do so. </p>
<p>But now the question is what happens if we try to make use of the concept defined by this “region”? Will the “points in the region” behave coherently, or will everything be “shredded”, with different specific representations in terms of emes leading to different conclusions?</p>
<p>The expectation is that in most cases it will work much like physical space, and that what we as observers perceive will be quite independent of the detailed underlying behavior at the level of emes. Which is why we can expect to do “higher-level mathematics”, without always having to descend to the level of emes, or even axioms.</p>
<p>And this we can consider as the first great “physicalized law of mathematics”: that coherent higher-level mathematics is possible for us for the same reason that physical space seems coherent to observers like us. </p>
<p>We’ve discussed several times before the analogy to the Second Law of thermodynamics—and the way it makes possible a higher-level description of things like fluids for “observers like us”. There are certainly cases where the higher-level description breaks down. Some of them may involve specific probes of molecular structure (like Brownian motion). Others may be slightly more “unwitting” (like hypersonic flow). </p>
<p>In our Physics Project we’re very interested in where similar breakdowns might occur—because they’d allow us to “see below” the traditional continuum description of space. Potential targets involve various extreme or singular configurations of spacetime, where in effect the “coherent observer” gets “shredded”, because different atoms of space “within the observer” do different things. </p>
<p><a name='shredding-of-observers'></a>In mathematics, this kind of “shredding” of the observer will tend to be manifest in the need to “drop below” higher-level mathematical concepts, and go down to a very detailed axiomatic, metamathematical or even eme level—where computational irreducibility and phenomena like undecidability are rampant.</p>
<p>It’s worth emphasizing that from the point of view of pure axiomatic mathematics it’s not at all obvious that higher-level mathematics should be possible. It could be that there’d be no choice but to work through every axiomatic detail to have any chance of making conclusions in mathematics. </p>
<p>But the point is that we now know there could be exactly the same issue in physics. Because our Physics Project implies that at the lowest level our universe is effectively made of emes that have all sorts of complicated—and computationally irreducible—behavior. Yet we know that we don’t have to trace through all the details of this to make conclusions about what will happen in the universe—at least at the level we normally perceive it. </p>
<p>In other words, the fact that we can successfully have a “high-level view” of what happens in physics is something that fundamentally has the same origin as the fact that we can successfully have a high-level view of what happens in mathematics. Both are just features of how observers like us sample the ruliad that underlies both physics and mathematics.</p>
<h2 id='uniformity-and-motion-in-metamathematical-space'><span>24 | </span>Uniformity and Motion in Metamathematical Space</h2>
<p>We’ve discussed how the basic concept of space as we experience it in physics leads us to our first great physicalized law of mathematics—and how this provides for the very possibility of higher-level mathematics. But this is just the beginning of what we can learn from thinking about the correspondences between physical and metamathematical space implied by their common origin in the structure of the ruliad.</p>
<p>A key idea is to think of a limit of mathematics in which one is dealing with so many mathematical statements that one can treat them “in bulk”—as forming something we could consider a continuous metamathematical space. But what might this space be like?</p>
<p>Our experience of physical space is that at our scale and with our means of perception it seems to us for the most part quite simple and uniform. And this is deeply connected to the concept that pure motion is possible in physical space—or, in other words, that it’s possible for things to move around in physical space without fundamentally changing their character.</p>
<p>Looked at from the point of view of the atoms of space it’s not at all obvious that this should be possible. After all, whenever we move we’ll almost inevitably be made up of different atoms of space. But it’s fundamental to our character as observers that the features we end up perceiving are ones that have a certain persistence—so that we can imagine that we, and objects around us, can just “move unchanged”, at least with respect to those aspects of the objects that we perceive. And this is why, for example, we can discuss laws of mechanics without having to “drop down” to the level of the atoms of space.</p>
<p>So what’s the analog of all this in metamathematical space? At the present stage of our physical universe, we seem to be able to experience physical space as having features like being basically three-dimensional. Metamathematical space probably doesn’t have such familiar mathematical characterizations. But it seems very likely (and we’ll see some evidence of this from <a href='#empirical-metamathematics'>empirical metamathematics below</a>) that at the very least we’ll perceive metamathematical space as having a certain uniformity or homogeneity.</p>
<p>In our Physics Project we imagine that we can think of physical space as <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/cosmology-expansion-and-singularities/' target=_blank rel=noopener>beginning “at the Big Bang”</a> with what amounts to some small collection of atoms of space, but then growing to the vast number of atoms in our current universe through the repeated application of particular rules. But with a small set of rules being applied a vast number of times, it seems almost inevitable that some kind of uniformity must result.</p>
<p>But then the same kind of thing can be expected in metamathematics. In axiomatic mathematics one imagines the mathematical analog of the Big Bang: everything starts from a small collection of axioms, and then expands to a huge number of mathematical statements through repeated application of laws of inference. And from this picture (which gets a bit more elaborate when one considers emes and the full ruliad) one can expect that at least after it’s “developed for a while” metamathematical space, like physical space, will have a certain uniformity.</p>
<p>The idea that physical space is somehow uniform is something we take very much for granted, not least because that’s our lifelong experience. But the analog of this idea for metamathematical space is something we don’t have immediate everyday intuition about—and that in fact may at first seem surprising or even bizarre. But actually what it implies is something that increasingly rings true from modern experience in pure mathematics. Because by saying that metamathematical space is in a sense uniform, we’re saying that different parts of it somehow seem similar—or in other words that there’s parallelism between what we see in different areas of mathematics, even if they’re not “nearby” in terms of entailments.</p>
<p>But this is exactly what, for example, the success of <a href='https://www.wolframscience.com/nks/notes-12-9--category-theory/'>category theory</a> implies. Because it shows us that even in completely different areas of mathematics it makes sense to set up the same basic structures of objects, morphisms and so on. As such, though, category theory defines only the barest outlines of mathematical structure. But what our concept of perceived uniformity in metamathematical space suggests is that there should in fact be closer correspondences between different areas of mathematics.</p>
<p>We can view this as another fundamental “physicalized law of mathematics”: that different areas of mathematics should ultimately have structures that are in some deep sense “perceived the same” by mathematical observers. For several centuries we’ve known there’s a certain correspondence between, for example, geometry and algebra. But it’s been a major achievement of recent mathematics to identify more and more such correspondences or “dualities”. </p>
<p>Often the existence of these has seemed remarkable, and surprising. But what our view of metamathematics here suggests is that this is actually a general physicalized law of mathematics—and that in the end essentially all different areas of mathematics must share a deep structure, at least in some appropriate “bulk metamathematical limit” when enough statements are considered.</p>
<p>But it’s one thing to say that two places in metamathematical space are “similar”; it’s another to say that “motion between them” is possible. Once again we can make an analogy with physical space. We’re used to the idea that we can move around in space, maintaining our identity and structure. But this in a sense requires that we can maintain some kind of continuity of existence on our path between two positions.</p>
<p>In principle it could have been that we would have to be “atomized” at one end, then “reconstituted” at the other end. But our actual experience is that we perceive ourselves to continually exist all the way along the path. In a sense this is just an assumption about how things work that physical observers like us make; but what’s nontrivial is that the underlying structure of the ruliad implies that this will always be consistent.</p>
<p>And so we expect it will be in metamathematics. Like a physical observer, the way a mathematical observer operates, it’ll be possible to “move” from one area of mathematics to another “at a high level”, without being “atomized” along the way. Or, in other words, that a mathematical observer will be able to make correspondences between different areas of mathematics without having to go down to the level of emes to do so.</p>
<p>It’s worth realizing that as soon as there’s a way of representing mathematics in computational terms the concept of universal computation (and, more tightly, the Principle of Computational Equivalence) implies that at some level there must always be a way to translate between any two mathematical theories, or any two areas of mathematics. But the question is whether it’s possible to do this in “high-level mathematical terms” or only at the level of the underlying “computational substrate”. And what we’re saying is that there’s a general physicalized law of mathematics that implies that higher-level translation should be possible.</p>
<p>Thinking about mathematics at a traditional axiomatic level can sometimes obscure this, however. For example, in axiomatic terms we usually think of Peano arithmetic as not being as powerful as ZFC set theory (for example, it lacks <a href='https://www.wolframscience.com/nks/notes-12-9--universality-of-set-theory/'>transfinite induction</a>)—and so nothing like “dual” to it. But Peano arithmetic can perfectly well support universal computation, so inevitably a “formal emulator” for ZFC set theory can be built in it. But the issue is that to do this essentially requires going down to the “atomic” level and operating not in terms of mathematical constructs but instead directly in terms of “metamathematical” symbolic structure (and, for example, explicitly emulating things like equality predicates).</p>
<p>But the issue, it seems, is that if we think at the traditional axiomatic level, we’re not dealing with a “mathematical observer like us”. In the analogy we’ve used above, we’re operating at the “molecular dynamics” level, not at the human-scale “fluid dynamics” level. And so we see all sorts of details and issues that ultimately won’t be relevant in typical approaches to actually doing pure mathematics. </p>
<p>It’s somewhat ironic that our physicalized approach shows this by going below the axiomatic level—to the level of emes and the raw ruliad. But in a sense it’s only at this level that there’s the uniformity and coherence to conveniently construct a general picture that can encompass observers like us.</p>
<p>Much as with ordinary matter we can say that “everything is made of atoms”, we’re now saying that everything is “made of computation” (and its structure and behavior is ultimately described by the ruliad). But the crucial idea that emerged from our Physics Project—and that is at the core of what I’m calling the <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/'>multicomputational paradigm</a>—is that when we ask what observers perceive there is a whole additional level of inexorable structure. And this is what makes it possible to do both human-scale physics and higher-level mathematics—and for there to be what amounts to “pure motion”, whether in physical or metamathematical space.</p>
<p>There’s another way to think about this, that we alluded to earlier. A key feature of an observer is to have a coherent identity. In physics, that involves having a consistent thread of experience in time. In mathematics, it involves bringing together a consistent view of “what’s true” in the space of mathematical statements. </p>
<p>In both cases the observer will in effect involve many separate underlying elements (ultimately, emes). But in order to maintain the observer’s view of having a coherent identity, the observer must somehow conflate all these elements, effectively treating them as “the same”. In physics, this means “coarse-graining” across physical or branchial (or, in fact, rulial) space. In mathematics, this means “coarse-graining” across metamathematical space—or in effect treating different mathematical statements as “the same”.</p>
<p>In practice, there are several ways this happens. First of all, one tends to be more concerned about mathematical results than their proofs, so two statements that have the same form can be considered the same even if the proofs (or other processes) that generated them are different (and indeed this is something we have routinely done in constructing entailment cones here). But there’s more. One can also imagine that any statements that entail each other can be considered “the same”. </p>
<p>In a simple case, this means that if <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/26sw0219img1A.png" width= '37' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/26sw0219img2A.png" width= '35' height='19' align='absmiddle'></span> then one can always assume <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/26sw0219img3A.png" width= '35' height='19' align='absmiddle'></span>. But there’s a much more general version of this embodied in the <a href='https://www.ams.org/journals/notices/201309/rnoti-p1164.pdf?trk=2013091164&#038;cat=collection' target=_blank rel=noopener>univalence axiom of homotopy type theory</a>—that in our terms can be interpreted as saying that mathematical observers consider equivalent things the same.</p>
<p>There’s another way that mathematical observers conflate different statements—that’s in many ways more important, but less formal. As we mentioned above, when mathematicians talk, say, about the Pythagorean theorem, they typically think they have a definite concept in mind. But at the axiomatic level—and even more so at the level of emes—there are a huge number of different “metamathematical configurations” that are all “considered the same” by the typical working mathematician, or by our “mathematical observer”. (At the level of axioms, there might be different axiom systems for real numbers; at the level of emes there might be different ways of representing concepts like addition or equality.)</p>
<p>In a sense we can think of mathematical observers as having a certain <a href='#counting-the-emes-of-mathematics-and-physics'>“extent” in metamathematical space</a>. And much like human-scale physical observers see only the aggregate effects of huge numbers of atoms of space, so also mathematical observers see only the “aggregate effects” of huge numbers of emes of metamathematical space.</p>
<p>But now the key question is whether a “whole mathematical observer” can “move in metamathematical space” as a single “rigid” entity, or whether it will inevitably be distorted—or shredded—by the structure of metamathematical space. In the next section we’ll discuss the analog of gravity—and curvature—in metamathematical space. But our physicalized approach tends to suggest that in “most” of metamathematical space, a typical mathematical observer will be able to “move around freely”, implying that there will indeed be paths or “bridges” between different areas of mathematics, that involve only higher-level mathematical constructs, and don’t require dropping down to the level of emes and the raw ruliad.</p>
<h2 id='gravitational-and-relativistic-effects-in-metamathematics'><span>25 | </span>Gravitational and Relativistic Effects in Metamathematics</h2>
<p>If metamathematical space is like physical space, does that mean that it has <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#general-relativity-and-gravity'>analogs of gravity</a>, and <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#deriving-special-relativity'>relativity</a>? The answer seems to be “yes”—and these provide our next examples of physicalized laws of mathematics. </p>
<p>In the end, we’re going to be able to talk about at least gravity in a largely “static” way, referring mostly to the “instantaneous state of metamathematics”, captured as an entailment fabric. But in leveraging ideas from physics, it’s important to start off formulating things in terms of the analog of time for metamathematics—which is entailment.</p>
<p>As we’ve discussed above, the entailment cone is the direct analog of the light cone in physics. Starting with some mathematical statement (or, more accurately, some event that transforms it) the forward entailment cone contains all statements (or, more accurately, events) that follow from it. Any possible “instantaneous state of metamathematics” then corresponds to a “transverse slice” through this entailment cone—with the slice in effect being laid out in metamathematical space.</p>
<p>An individual entailment of one statement by another corresponds to a path in the entailment cone, and this path (or, more accurately for accumulative evolution, subgraph) can be thought of as a proof of one statement given another. And in these terms the shortest proof can be thought of as a geodesic in the entailment cone. (In practical mathematics, it’s very unlikely one will find—or care about—the strictly shortest proof. But even having a “fairly short proof” will be enough to give the general conclusions we’ll discuss here.)</p>
<p>Given a path in the entailment cone, we can imagine projecting it onto a transverse slice, i.e. onto an entailment fabric. Being able to consistently do this depends on having a certain uniformity in the entailment cone, and in the sequence of “metamathematical hypersurfaces” that are defined by whatever “metamathematical reference frame” we’re using. But assuming, for example, that underlying computational irreducibility successfully generates a kind of “statistical uniformity” that cannot be “decoded” by the observer, we can expect to have meaningful paths—and geodesics—on entailment fabrics.</p>
<p>But what these geodesics are like then depends on the emergent geometry of entailment fabrics. In physics, the <a href='https://www.wolframphysics.org/technical-introduction/limiting-behavior-and-emergent-geometry/' target=_blank rel=noopener>limiting geometry</a> of the analog of this for physical space is presumably a fairly simple 3D manifold. For <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/typical-forms-of-branchial-graphs/' target=_blank rel=noopener>branchial space, it&#8217;s more complicated</a>, probably for example being “exponential dimensional”. And for metamathematics, the limiting geometry is also undoubtedly more complicated—and almost certainly exponential dimensional. </p>
<p>We’ve <a href='#uniformity-and-motion-in-metamathematical-space'>argued that we expect</a> metamathematical space to have a certain perceived uniformity. But what will affect this, and therefore potentially modify the local geometry of the space? The basic answer is exactly the same as in our Physics Project. If there’s “more activity” somewhere in an entailment fabric, this will in effect lead to “more local connections”, and thus effective “positive local curvature” in the emergent geometry of the network. Needless to say, exactly what “more activity” means is somewhat subtle, especially given that the fabric in which one is looking for this is itself defining the ambient geometry, measures of “area”, etc.</p>
<p>In our Physics Project we make things more precise by associating <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/matter-energy-and-gravitation/' target=_blank rel=noopener>“activity” with energy density</a>, and saying that energy effectively corresponds to the flux of causal edges through spacelike hypersurfaces. So this suggests that we think about an analog of energy in metamathematics: essentially defining it to be the density of update events in the entailment fabric. Or, put another way, energy in metamathematics depends on the “density of proofs” going through a region of metamathematical space, i.e. involving particular “nearby” mathematical statements.</p>
<p>There are lots of caveats, subtleties and details. But the notion that “activity AKA energy” leads to increasing curvature in an emergent geometry is a general feature of the whole <a href='https://writings.stephenwolfram.com/2021/09/multicomputation-a-fourth-paradigm-for-theoretical-science/'>multicomputational paradigm</a> that the ruliad captures. And in fact we expect a quantitative relationship between energy density (or, strictly, energy-momentum) and induced curvature of the “transversal space”—that corresponds exactly to <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/the-vacuum-einstein-equations/' target=_blank rel=noopener>Einstein&#8217;s equations in general relativity</a>. It’ll be more difficult to see this in the metamathematical case because metamathematical space is geometrically more complicated—and less familiar—than physical space.</p>
<p>But even at a qualitative level, it seems very helpful to think in terms of physics and spacetime analogies. The basic phenomenon is that geodesics are deflected by the presence of “energy”, in effect being “attracted to it”. And this is why we can think of regions of higher energy (or energy-momentum/mass)—in physics and in metamathematics—as “generating gravity”, and deflecting geodesics towards them. (Needless to say, in metamathematics, as in physics, the vast majority of overall activity is just devoted to knitting together the structure of space, and when gravity is produced, it’s from slightly increased activity in a particular region.)</p>
<p>(In our Physics Project, a key result is that the same kind of dependence of “spatial” structure on energy happens not only in physical space, but also in branchial space—where there’s a direct analog of <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#general-relativity-and-quantum-mechanics-are-the-same-idea'>general relativity that basically yields the path integral</a> of quantum mechanics.)</p>
<p>What does this mean in metamathematics? Qualitatively, the implication is that “proofs will tend to go through where there’s a higher density of proofs”. Or, in an analogy, if you want to drive from one place to another, it’ll be more efficient if you can do at least part of your journey on a freeway.</p>
<p>One question to ask about metamathematical space is whether one can always get from any place to any other. In other words, starting from one area of mathematics, can one somehow derive all others? A key issue here is whether the area one starts from is computation universal. Propositional logic is not, for example. So if one starts from it, one is essentially trapped, and cannot reach other areas.</p>
<p>But results in mathematical logic have established that most traditional areas of axiomatic mathematics are in fact computation universal (and the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a> suggests that this will be ubiquitous). And given computation universality there will at least be some “proof path”. (In a sense this is a reflection of the fact that the ruliad is unique, so everything is connected in “the same ruliad”.)</p>
<p>But a big question is whether the “proof path” is “big enough” to be appropriate for a “mathematical observer like us”. Can we expect to get from one part of metamathematical space to another without the observer being “shredded”? Will we be able to start from any of a whole collection of places in metamathematical space that are considered “indistinguishably nearby” to a mathematical observer and have all of them “move together” to reach our destination? Or will different specific starting points follow quite different paths—preventing us from having a high-level (“fluid dynamics”) description of what’s going on, and instead forcing us to drop down to the “molecular dynamics” level?</p>
<p>In practical pure mathematics, this tends to be an <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>issue of whether there is an “elegant proof using high-level concepts”</a>, or whether one has to drop down to a very detailed level that’s more like low-level computer code, or the output of an automated theorem proving system. And indeed there’s a very visceral sense of “shredding” in cases where one’s confronted with a proof that consists of page after page of “machine-like details”. </p>
<p>But there’s another point here as well. If one looks at an individual proof path, it can be computationally irreducible to find out where the path goes, and the question of whether it ever reaches a particular destination can be undecidable. But in most of the current practice of pure mathematics, one’s interested in “higher-level conclusions”, that are “visible” to a mathematical observer who doesn’t resolve individual proof paths. </p>
<p>Later we’ll discuss the dichotomy between explorations of computational systems that routinely run into undecidability—and the typical experience of pure mathematics, where undecidability is rarely encountered in practice. But the basic point is that what a typical mathematical observer sees is at the “fluid dynamics level”, where the potentially circuitous path of some individual molecule is not relevant.</p>
<p>Of course, by asking specific questions—about metamathematics, or, say, about <a href='https://www.wolframscience.com/nks/p787--implications-for-mathematics-and-its-foundations/'>very specific equations</a>—it’s still perfectly possible to force tracing of individual “low-level” proof paths. But this isn’t what’s typical in current pure mathematical practice. And in a sense we can see this as an extension of our first physicalized law of mathematics: not only is higher-level mathematics possible, but it’s ubiquitously so, with the result that, at least in terms of the questions a mathematical observer would readily formulate, phenomena like undecidability are not generically seen.</p>
<p>But even though undecidability may not be directly visible to a mathematical observer, its underlying presence is still crucial in coherently “knitting together” metamathematical space. Because without undecidability, we won’t have computation universality and computational irreducibility. But—just like in our Physics Project—computational irreducibility is crucial in producing the low-level apparent randomness that is needed to support any kind of “continuum limit” that allows us to think of large collections of what are ultimately discrete emes as building up some kind of coherent geometrical space. </p>
<p>And when undecidability is not present, one will typically not end up with anything like this kind of coherent space. An extreme example occurs in rewrite systems that eventually terminate—in the sense that they reach a “fixed-point” (or “normal form”) state where no more transformations can be applied.</p>
<p>In our Physics Project, this kind of termination can be <a href='https://www.wolframphysics.org/bulletins/2020/05/event-horizons-singularities-and-other-exotic-spacetime-phenomena/' target=_blank rel=noopener>interpreted as a spacelike singularity</a> at which “time stops” (as at the center of a non-rotating black hole). But in general decidability is associated with “limits on how far paths can go”—just like the limits on causal paths associated with event horizons in physics.</p>
<p>There are many details to work out, but the qualitative picture can be developed further. In physics, the singularity theorems imply that in essence the eventual formation of spacetime singularities is inevitable. And there should be a direct analog in our context that implies the eventual formation of “metamathematical singularities”. In qualitative terms, we can expect that the presence of proof density (which is the analog of energy) will “pull in” more proofs until eventually there are so many proofs that one has decidability and a “proof event horizon” is formed.</p>
<p>In a sense this implies that the long-term future of mathematics is strangely similar to the long-term future of our physical universe. In our physical universe, we expect that while the expansion of space may continue, many parts of the universe will form black holes and essentially be “closed off”. (At least ignoring expansion in branchial space, and quantum effects in general.)</p>
<p>The analog of this in mathematics is that while there can be continued overall expansion in metamathematical space, more and more parts of it will “burn out” because they’ve become decidable. In other words, as more work and more proofs get done in a particular area, that area will eventually be “finished”—and there will be no more “open-ended” questions associated with it.</p>
<p>In physics there’s sometimes discussion of white holes, which are imagined to effectively be time-reversed black holes, spewing out all possible material that could be captured in a black hole. In metamathematics, a white hole is like a statement that is false and therefore “leads to an explosion”. The presence of such an object in metamathematical space will in effect cause observers to be shredded—making it inconsistent with the coherent construction of higher-level mathematics. </p>
<p>We’ve talked at some length about the “gravitational” structure of metamathematical space. But what about seemingly simpler things like special relativity? In physics, there’s a notion of basic, flat spacetime, for which it’s easy to construct families of reference frames, and in which parallel trajectories stay parallel. In metamathematics, the analog is presumably metamathematical space in which “parallel proof geodesics” remain “parallel”—so that in effect one can continue “making progress in mathematics” by just “keeping on doing what you’ve been doing”.</p>
<p>And somehow relativistic invariance is associated with the idea that there are many ways to do math, but in the end they’re all able to reach the same conclusions. Ultimately this is something one expects as a consequence of fundamental features of the ruliad—and the <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/multiway-systems-in-the-space-of-all-possible-rules/#p-474' target=_blank rel=noopener>inevitability of causal invariance</a> in it resulting from the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a>. It’s also something that might seem quite familiar from practical mathematics and, say, from the ability to do derivations using different methods—like from either geometry or algebra—and yet still end up with the same conclusions. </p>
<p>So if there’s an analog of relativistic invariance, what about analogs of phenomena like time dilation? In our Physics Project <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/motion-and-special-relativity/' target=_blank rel=noopener>time dilation has a rather direct interpretation</a>. To “progress in time” takes a certain amount of computational work. But motion in effect also takes a certain amount of computational work—in essence to continually recreate versions of something in different places. But from the ruliad on up there is ultimately only a certain amount of computational work that can be done—and if computational work is being “used up” on motion, there is less available to devote to progress in time, and so time will effectively run more slowly, leading to the experience of time dilation.</p>
<p>So what is the metamathematical analog of this? Presumably it’s that when you do derivations in math you can either stay in one area and directly make progress in that area, or you can “base yourself in some other area” and make progress only by continually translating back and forth. But ultimately that translation process will take computational work, and so will slow down your progress—leading to an analog of time dilation. </p>
<p>In physics, the speed of light defines the maximum amount of motion in space that can occur in a certain amount of time. In metamathematics, the analog is that there’s a maximum “translation distance” in metamathematical space that can be “bridged” with a certain amount of derivation. In physics we’re used to measuring spatial distance in meters—and time in seconds. In metamathematics we don’t yet have familiar units in which to measure, say, distance between mathematical concepts—or, for that matter, “amount of derivation” being done. But with the empirical metamathematics we’ll discuss in the next section we actually have the beginnings of a way to define such things, and to use what’s been achieved in the history of human mathematics to at least imagine “empirically measuring” what we might call “maximum metamathematical speed”.</p>
<p>It should be emphasized that we are only at the very beginning of exploring things like the analogs of relativity in metamathematics. One important piece of formal structure that we haven’t really discussed here is causal dependence, and <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#the-graph-of-causal-relationships'>causal graphs</a>. We’ve talked at length about statements entailing other statements. But we haven’t talked about questions like which part of which statement is needed for some event to occur that will entail some other statement. And—while there’s no fundamental difficulty in doing it—we haven’t concerned ourselves with <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/#causal-graphs-and-the-physicalization-of-combinators'>constructing causal graphs</a> to represent causal relationships and causal dependencies between events. </p>
<p>When it comes to physical observers, there is a very direct interpretation of causal graphs that relates to what a physical observer can experience. But for mathematical observers—where the notion of time is less central—it’s less clear just what the interpretation of causal graphs should be. But one certainly expects that they will enter in the construction of any general “observer theory” that characterizes “observers like us” across both physics and mathematics. </p>
<h2 id='empirical-metamathematics'><span>26 | </span>Empirical Metamathematics</h2>
<p>We’ve discussed the overall structure of metamathematical space, and the general kind of sampling that we humans do of it (as “mathematical observers”) when we do mathematics. But what can we learn from the specifics of human mathematics, and the actual mathematical statements that humans have published over the centuries?</p>
<p>We might imagine that these statements are just ones that—as “accidents of history”—humans have “happened to find interesting”. But there’s definitely more to it—and potentially what’s there is a rich source of “empirical data” relevant to our physicalized laws of mathematics, and to what amounts to their “experimental validation”.</p>
<p>The situation with “human settlements” in metamathematical space is in a sense rather similar to the situation with human settlements in physical space. If we look at where humans have chosen to live and build cities, we’ll find a bunch of locations in 3D space. The details of where these are depend on history and many factors. But there’s a clear overarching theme, that’s in a sense a direct reflection of underlying physics: all the locations lie on the more-or-less spherical surface of the Earth.</p>
<p>It’s not so straightforward to see what’s going on in the metamathematical case, not least because any notion of coordinatization seems to be much more complicated for metamathematical space than for physical space. But we can still begin by <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>doing “empirical metamathematics”</a> and asking questions about for example what amounts to where in metamathematical space we humans have so far established ourselves. And as a first example, let’s <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/#all-possible-theorems'>consider Boolean algebra</a>. </p>
<p>Even to talk about something called “Boolean algebra” we have to be operating at a level far above the raw ruliad—where we’ve already implicitly aggregated vast numbers of emes to form notions of, for example, variables and logical operations. </p>
<p>But once we&#8217;re at this level we can “survey” metamathematical space just by enumerating possible symbolic statements that can be created using the operations we&#8217;ve set up for Boolean algebra (here <tt><a href='https://reference.wolfram.com/language/ref/And.html'>And</a></tt> ∧, <tt><a href='https://reference.wolfram.com/language/ref/Or.html'>Or</a></tt> ∨ and <tt><a href='https://reference.wolfram.com/language/ref/Not.html'>Not</a></tt> <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img1A.png" width= '10' height='19' align='absmiddle'></span>):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img2-2A.png" alt='' title='' width='620' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img2_copy.txt">
					<span class='close' id='2-28_out'>&amp;#10005</span></p>
<pre class='text' id='2-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But so far these are just raw, structural statements. To connect with actual Boolean algebra we must pick out which of these can be derived from the axioms of Boolean algebra, or, put another way, which of them are in the entailment cone of these axioms: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img3-2A.png" alt='' title='' width='620' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img3_copy.txt">
					<span class='close' id='3-28_out'>&amp;#10005</span></p>
<pre class='text' id='3-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Of all possible statements, it’s only an exponentially small fraction that turn out to be derivable:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img38A.png" alt='' title='' width='563' height='137' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img38_copy.txt">
					<span class='close' id='38-v2_out'>&amp;#10005</span></p>
<pre class='text' id='38-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But in the case of Boolean algebra, we can <a href='https://reference.wolfram.com/language/ref/TautologyQ.html'>readily collect</a> such statements:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img5-2A.png" alt='' title='' width='620' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img5_copy.txt">
					<span class='close' id='5-28_out'>&amp;#10005</span></p>
<pre class='text' id='5-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We’ve typically explored entailment cones by looking at slices consisting of collections of theorems generated after a specified number of proof steps. But here we’re making a very different sampling of the entailment cone—looking in effect instead at theorems in order of their structural complexity as symbolic expressions. </p>
<p>In doing this kind of systematic enumeration we’re in a sense operating at a “finer level of granularity” than typical human mathematics. Yes, these are all “true theorems”. But mostly they’re not theorems that a human mathematician would ever write down, or specifically “consider interesting”. And for example only a small fraction of them have historically been given names—and are <a href='https://www.wolframscience.com/nks/p817--implications-for-mathematics-and-its-foundations/'>called out in typical logic textbooks</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img39A.png" alt='' title='' width='562' height='640' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img39_copy.txt">
					<span class='close' id='39-v2_out'>&amp;#10005</span></p>
<pre class='text' id='39-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The reduction from all “structurally possible” theorems to just “ones we consider interesting” can be thought of as a form of coarse graining. And it could well be that this coarse graining would depend on all sorts of accidents of human mathematical history. But at least in the case of Boolean algebra there seems to be a surprisingly simple and “mechanical” procedure that can reproduce it.</p>
<p>Go through all theorems in order of increasing structural complexity, in each case seeing whether a given theorem can be proved from ones earlier in the list: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img7A.png" alt='' title='' width='620' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/28sw0301img7X_copy.txt">
					<span class='close' id='7-28_out'>&amp;#10005</span></p>
<pre class='text' id='7-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><a href='https://www.wolframscience.com/nks/p817--implications-for-mathematics-and-its-foundations/'>It turns out that</a> the theorems identified by humans as “interesting” coincide almost exactly with “root theorems” that cannot be proved from earlier theorems in the list. Or, put another way, the “coarse graining” that human mathematicians do seems (at least in this case) to essentially consist of picking out only those theorems that represent “minimal statements” of new information—and eliding away those that involve “extra ornamentation”. </p>
<p>But how are these “notable theorems” laid out in metamathematical space? Earlier we saw how the simplest of them can be reached after just a few steps in the entailment cone of a typical textbook axiom system for Boolean algebra. The full entailment cone rapidly gets unmanageably large but we can get a first approximation to it by generating individual proofs (using automated theorem proving) of our notable theorems, and then seeing how these “knit together” through shared intermediate lemmas in a token-event graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img8A.png" alt='' title='' width='564' height='563' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img8_copy.txt">
					<span class='close' id='8-28_out'>&amp;#10005</span></p>
<pre class='text' id='8-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Looking at this picture we see at least a hint that clumps of notable theorems are spread out across the entailment cone, only modestly building on each other—and in effect “staking out separated territories” in the entailment cone. But of the 11 notable theorems shown here, 7 depend on all 6 axioms, while 4 depend only on various different sets of 3 axioms—suggesting at least a certain amount of fundamental interdependence or coherence.</p>
<p>From the token-event graph we can derive a branchial graph that represents a very rough approximation to how the theorems are “laid out in metamathematical space”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img9A.png" alt='' title='' width='567' height='564' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/28sw0301img9X_copy.txt">
					<span class='close' id='9-28_out'>&amp;#10005</span></p>
<pre class='text' id='9-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can get a potentially slightly better approximation by including proofs not just of notable theorems, but of all theorems up to a certain structural complexity. The result shows separation of notable theorems both in the multiway graph </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img10A.png" alt='' title='' width='564' height='561' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img10_copy.txt">
					<span class='close' id='10-28_out'>&amp;#10005</span></p>
<pre class='text' id='10-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and in the branchial graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img11A.png" alt='' title='' width='569' height='566' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img11_copy.txt">
					<span class='close' id='11-28_out'>&amp;#10005</span></p>
<pre class='text' id='11-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In doing this empirical metamathematics we’re including only specific proofs rather than enumerating the whole entailment cone. We’re also using only a specific axiom system. And even beyond this, we’re using specific operators to write our statements in Boolean algebra.</p>
<p>In a sense each of these choices represents a particular “metamathematical coordinatization”—or particular reference frame or slice that we’re sampling in the ruliad. </p>
<p>For example, in what we’ve done above we’ve built up statements from <tt><a href='https://reference.wolfram.com/language/ref/And.html'>And</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/Or.html'>Or</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Not.html'>Not</a></tt>. But we can just as well use any other <a href='https://www.wolframscience.com/nks/p807--implications-for-mathematics-and-its-foundations/'>functionally complete sets of operators</a>, such as the following (here each shown representing a few specific Boolean expressions):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img12A.png" alt='' title='' width='572' height='257' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img12_copy.txt">
					<span class='close' id='12-28_out'>&amp;#10005</span></p>
<pre class='text' id='12-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For each set of operators, there are <a href='https://reference.wolfram.com/language/ref/AxiomaticTheory.html'>different axiom systems</a> that can be used. And for each axiom system there will be different proofs. Here are a few examples of axiom systems with a few different sets of operators—in each case giving a proof of the law of double negation (which has to be stated differently for different operators):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img13A.png" alt='' title='' width='562' height='609' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img13_copy.txt">
					<span class='close' id='13-28_out'>&amp;#10005</span></p>
<pre class='text' id='13-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Boolean algebra (or, equivalently, propositional logic) is a somewhat desiccated and thin example of mathematics. So what do we find if we do empirical metamathematics on other areas?</p>
<p>Let’s talk first about geometry—for which <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>Euclid’s <em>Elements</em></a> provided the very first large-scale historical example of an axiomatic mathematical system. The <em>Elements</em> started from 10 axioms (5 “postulates” and 5 “common notions”), then gave 465 theorems.</p>
<p>Each theorem was proved from previous ones, and ultimately from the axioms. Thus, for example, the “proof graph” (or “<a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/#the-interdependence-of-theorems'>theorem dependency graph</a>”) for Book 1, Proposition 5 (which says that angles at the base of an isosceles triangle are equal) is: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img14A.png" alt='' title='' width='522' height='240' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img14_copy.txt">
					<span class='close' id='14-28_out'>&amp;#10005</span></p>
<pre class='text' id='14-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One can think of this as a coarse-grained version of the proof graphs we’ve used before (which are themselves in turn “slices” of the entailment graph)—in which each node shows how a collection of “input” theorems (or axioms) entails a new theorem.</p>
<p>Here’s a slightly more complicated example (Book 1, Proposition 48) that ultimately depends on all 10 of the original axioms:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img15A.png" alt='' title='' width='562' height='308' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img15_copy.txt">
					<span class='close' id='15-28_out'>&amp;#10005</span></p>
<pre class='text' id='15-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s the <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/#the-graph-of-all-theorems'>full graph for all the theorems in Euclid&#8217;s <em>Elements</a></em>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img16A.png" alt='' title='' width='564' height='319' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img16_copy.txt">
					<span class='close' id='16-28_out'>&amp;#10005</span></p>
<pre class='text' id='16-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Of the 465 theorems here, 255 (i.e. 55%) depend on all 10 axioms. (For the much smaller number of notable theorems of Boolean algebra above we found that 64% depended on all 6 of our stated axioms.) And the general connectedness of this graph in effect reflects the idea that Euclid’s theorems represent a coherent body of connected mathematical knowledge.</p>
<p>The branchial graph gives us an idea of how the theorems are “laid out in metamathematical space”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img17A.png" alt='' title='' width='564' height='469' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img17_copy.txt">
					<span class='close' id='17-28_out'>&amp;#10005</span></p>
<pre class='text' id='17-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One thing we notice is that theorems about different areas—shown here in different colors—tend to be separated in metamathematical space. And in a sense the seeds of this separation are already evident if we look <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/#the-interdependence-of-theorems'>“textually” at how theorems in different books</a> of Euclid’s <em>Elements</em> refer to each other: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img18A.png" alt='' title='' width='563' height='341' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img18_copy.txt">
					<span class='close' id='18-28_out'>&amp;#10005</span></p>
<pre class='text' id='18-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Looking at the overall dependence of one theorem on others in effect shows us a very coarse form of entailment. But can we go to a finer level—as we did above for Boolean algebra? As a first step, we have to have an explicit symbolic representation for our theorems. And beyond that, we have to have a formal axiom system that describes possible transformations between these.</p>
<p>At the level of “whole theorem dependency” we can represent the entailment of Euclid’s Book 1, Proposition 1 from axioms as: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img19A.png" alt='' title='' width='564' height='100' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img19_copy.txt">
					<span class='close' id='19-28_out'>&amp;#10005</span></p>
<pre class='text' id='19-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But if we now use the full, formal axiom system for geometry that we <a href='#going-below-axiomatic-mathematics'>discussed in a previous section</a> we can use automated theorem proving to get a full proof of Book 1, Proposition 1:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img20A.png" alt='' title='' width='562' height='202' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img20_copy-2.txt">
					<span class='close' id='20-28_out'>&amp;#10005</span></p>
<pre class='text' id='20-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In a sense this is “going inside” the theorem dependency graph to look explicitly at how the dependencies in it work. And in doing this we see that what Euclid might have stated in words in a sentence or two is represented formally in terms of hundreds of detailed intermediate lemmas. (It’s also notable that whereas in Euclid’s version, the theorem depends only on 3 out of 10 axioms, in the formal version the theorem depends on 18 out of 20 axioms.)</p>
<p>How about for other theorems? Here is the theorem dependency graph from Euclid’s <em>Elements</em> for the Pythagorean theorem (which Euclid gives as Book 1, Proposition 47):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img21A.png" alt='' title='' width='563' height='371' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img21_copy.txt">
					<span class='close' id='21-28_out'>&amp;#10005</span></p>
<pre class='text' id='21-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The theorem depends on all 10 axioms, and its stated proof goes through 28 intermediate theorems (i.e. about 6% of all theorems in the <em>Elements</em>). In principle we can “unroll” the proof dependency graph to see directly how the theorem can be “built up” just from copies of the original axioms. Doing a first step of unrolling we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img22A.png" alt='' title='' width='559' height='410' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img22_copy.txt">
					<span class='close' id='22-28_out'>&amp;#10005</span></p>
<pre class='text' id='22-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And “flattening everything out” so that we don’t use any intermediate lemmas but just go back to the axioms to “re-prove” everything we can derive the theorem from a “proof tree” with the following <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/#the-machine-code-of-euclid-all-the-way-down-to-axioms'>number of copies of each axiom</a> (and a certain “depth” to reach that axiom):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img23A.png" alt='' title='' width='565' height='75' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img23_copy.txt">
					<span class='close' id='23-28_out'>&amp;#10005</span></p>
<pre class='text' id='23-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So how about a more detailed and formal proof? We could certainly in principle construct this using the axiom system we discussed above.</p>
<p>But an important general point is that the thing we in practice call “the Pythagorean theorem” can actually be set up in all sorts of different axiom systems. And as an example let’s consider setting it up in the main actual axiom system that working mathematicians typically imagine they’re (usually implicitly) using, namely ZFC set theory. </p>
<p>Conveniently, the <a href='https://us.metamath.org/index.html' target=_blank rel=noopener>Metamath formalized math system</a> has accumulated about <a href='https://us.metamath.org/mpeuni/mmtheorems.html' target=_blank rel=noopener>40,000 theorems</a> across mathematics, all with hand-constructed proofs based ultimately on ZFC set theory. And within this system we can find the theorem dependency graph for the <a href='https://us.metamath.org/mpeuni/pythag.html' target=_blank rel=noopener>Pythagorean theorem</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img40A.png" alt='' title='' width='564' height='324' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img40-2_copy.txt">
					<span class='close' id='40-v2_out'>&amp;#10005</span></p>
<pre class='text' id='40-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Altogether it involves 6970 intermediate theorems, or about 18% of all theorems in Metamath—including ones from many different areas of mathematics. But how does it ultimately depend on the axioms? First, we need to talk about what the axioms actually are. In addition to “pure ZFC set theory”, we need axioms for (predicate) logic, as well as ones that define real and complex numbers. And the way things are set up in Metamath’s “set.mm” there are <a href='https://us.metamath.org/mpeuni/mmset.html#staxioms' target=_blank rel=noopener>(essentially) 49 basic axioms</a> (9 for pure set theory, 15 for logic and 25 related to numbers). And much as in Euclid’s <em>Elements</em> we found that the Pythagorean theorem depended on all the axioms, so now here we find that the Pythagorean theorem depends on 48 of the 49 axioms—with the only missing axiom being the Axiom of Choice. </p>
<p>Just like in the Euclid’s <em>Elements</em> case, we can imagine “unrolling” things to see how many copies of each axiom are used. Here are the results—together with the “depth” to reach each axiom:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img25A.png" alt='' title='' width='573' height='481' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/28sw0301img25X_copy.txt">
					<span class='close' id='25-28_out'>&amp;#10005</span></p>
<pre class='text' id='25-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, the numbers of copies of most of the axioms required to establish the Pythagorean theorem are extremely large.</p>
<p>There are several additional wrinkles that we should discuss. First, we’ve so far only considered overall theorem dependency—or in effect “coarse-grained entailment”. But the Metamath system ultimately gives complete proofs in terms of explicit substitutions (or, effectively, bisubstitutions) on symbolic expressions. So, for example, while the first-level “whole-theorem-dependency” graph for the Pythagorean theorem is</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img26A.png" alt='' title='' width='564' height='87' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img26_copy.txt">
					<span class='close' id='26-28_out'>&amp;#10005</span></p>
<pre class='text' id='26-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>the full first-level entailment structure based on the detailed proof is (where the black vertices indicate “internal structural elements” in the proof—such as variables, class specifications and “inputs”):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img27A.png" alt='' title='' width='555' height='178' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img27_copy-2.txt">
					<span class='close' id='27-28_out'>&amp;#10005</span></p>
<pre class='text' id='27-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another important wrinkle has to do with the concept of definitions. The Pythagorean theorem, for example, refers to squaring numbers. But what is squaring? What are numbers? Ultimately all these things have to be defined in terms of the “raw data structures” we’re using. </p>
<p>In the case of Boolean algebra, for example, we could <a href='https://www.wolframscience.com/nks/p807--implications-for-mathematics-and-its-foundations/'>set things up just using <tt>Nand</tt></a> (say denoted&nbsp;∘), but then we could define <tt><a href='https://reference.wolfram.com/language/ref/And.html'>And</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Or.html'>Or</a></tt> in terms of <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt> (say as <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img28A.png" width= '89' height='21' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img29A.png" width= '89' height='21' align='absmiddle'></span> respectively). We could still write expressions using <tt><a href='https://reference.wolfram.com/language/ref/And.html'>And</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/Or.html'>Or</a></tt>—but with our definitions we’d immediately be able to convert these to pure <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt>s. Axioms—say about <tt><a href='https://reference.wolfram.com/language/ref/Nand.html'>Nand</a></tt>—give us transformations we can use repeatedly to make derivations. But definitions are transformations we use “just once” (like macro expansion in programming) to reduce things to the point where they involve only constructs that appear in the axioms.</p>
<p>In Metamath’s “set.mm” there are about <a href='https://us.metamath.org/mpeuni/mmdefinitions.html' target=_blank rel=noopener>1700 definitions</a> that effectively build up from “pure set theory” (as well as logic, structural elements and various axioms about numbers) to give the mathematical constructs one needs. So, for example, here is the definition dependency graph for addition (“+” or <tt><a href='https://reference.wolfram.com/language/ref/Plus.html'>Plus</a></tt>):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img30A.png" alt='' title='' width='576' height='379' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img30_copy.txt">
					<span class='close' id='30-28_out'>&amp;#10005</span></p>
<pre class='text' id='30-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At the bottom are the basic constructs of logic and set theory—in terms of which things like order relations, complex numbers and finally addition are defined. The definition dependency graph for GCD, for example, is somewhat larger, though has considerable overlap at lower levels:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img31A.png" alt='' title='' width='578' height='375' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img31_copy.txt">
					<span class='close' id='31-28_out'>&amp;#10005</span></p>
<pre class='text' id='31-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Different constructs have definition dependency graphs of different sizes—in effect reflecting their “definitional distance” from set theory and the underlying axioms being used:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img32A.png" alt='' title='' width='565' height='233' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img32_copy.txt">
					<span class='close' id='32-28_out'>&amp;#10005</span></p>
<pre class='text' id='32-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In our physicalized approach to metamathematics, though, something like set theory is not our ultimate foundation. Instead, we imagine that everything is eventually built up from the raw ruliad, and that all the constructs we’re considering are formed from what amount to configurations of emes in the ruliad. We <a href='#going-below-axiomatic-mathematics'>discussed above</a> how constructs like numbers and logic can be obtained from a combinator representation of the ruliad. </p>
<p>We can view the definition dependency graph above as being an empirical example of how somewhat higher-level definitions can be built up. From a computer science perspective, we can think of it as being like a type hierarchy. From a physics perspective, it’s as if we’re starting from atoms, then building up to molecules and beyond. </p>
<p>It&#8217;s worth pointing out, however, that even the top of the definition hierarchy in something like Metamath is still operating very much at an axiomatic kind of level. In the analogy we&#8217;ve been using, it&#8217;s still for the most part “formulating math at the molecular dynamics level” not at the more human “fluid dynamics” level. </p>
<p>We’ve been talking about “the Pythagorean theorem”. But even on the basis of set theory there are many different possible formulations one can give. In Metamath, for example, there is the <a href='https://us.metamath.org/mpeuni/pythag.html' target=_blank rel=noopener>pythag version</a> (which is what we’ve been using), and there is also a (somewhat more general) <a href='https://us.metamath.org/mpeuni/pythi.html' target=_blank rel=noopener>pythi version</a>. So how are these related? Here’s their combined theorem dependency graph (or at least the first two levels in it)—with red indicating theorems used only in deriving pythag, blue indicating ones used only in deriving pythi, and purple indicating ones used in both: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img33A.png" alt='' title='' width='564' height='282' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/28sw0301img33X_copy.txt">
					<span class='close' id='33-28_out'>&amp;#10005</span></p>
<pre class='text' id='33-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And what we see is there’s a certain amount of “lower-level overlap” between the derivations of these variants of the Pythagorean theorem, but also some discrepancy—indicating a certain separation between these variants in metamathematical space.</p>
<p>So what about other theorems? Here’s a table of some <a href='https://www.cs.ru.nl/~freek/100/' target=_blank rel=noopener>famous theorems from all over mathematics</a>, sorted by the total number of theorems on which <a href='https://us.metamath.org/mm_100.html' target=_blank rel=noopener>proofs of them formulated in Metamath</a> depend—giving also the number of axioms and definitions used in each case: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img34A.png" alt='' title='' width='568' height='646' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img34_copy.txt">
					<span class='close' id='34-28_out'>&amp;#10005</span></p>
<pre class='text' id='34-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The Pythagorean theorem (here the pythi formulation) occurs solidly in the second half. Some of the theorems with the fewest dependencies are in a sense very structural theorems. But it&#8217;s interesting to see that theorems from all sorts of different areas soon start appearing, and then are very much mixed together in the remainder of the list. One might have thought that theorems involving &#8220;more sophisticated concepts&#8221; (like <a href='https://www.wolframscience.com/nks/notes-10-3--inevitable-regularities-and-ramsey-theory/'>Ramsey&#8217;s theorem</a>) would appear later than &#8220;more elementary&#8221; ones (like the sum of angles of a triangle). But this doesn&#8217;t seem to be true. </p>
<p>There’s a distribution of what amount to “proof sizes” (or, more strictly, theorem dependency sizes)—from the Schröder–Bernstein theorem which relies on less than 4% of all theorems, to Dirichlet&#8217;s theorem that relies on 25%:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img35A.png" alt='' title='' width='516' height='113' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/28sw0301img35X_copy.txt">
					<span class='close' id='35-28_out'>&amp;#10005</span></p>
<pre class='text' id='35-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If we look not at “famous” theorems, but at all theorems covered by Metamath, the distribution becomes broader, with many short-to-prove “glue” or essentially “definitional” lemmas appearing:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img36A.png" alt='' title='' width='552' height='110' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/09/28sw0301img36X_copy.txt">
					<span class='close' id='36-28_out'>&amp;#10005</span></p>
<pre class='text' id='36-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But using the list of famous theorems as an indication of the “math that mathematicians care about” we can conclude that there is a kind of “metamathematical floor” of results that one needs to reach before “things that we care about” start appearing. It’s a bit like the situation in our Physics Project—where the vast majority of microscopic events that happen in the universe seem to be devoted merely to knitting together the structure of space, and only “on top of that” can events which can be identified with things like particles and motion appear. </p>
<p>And indeed if we look at the “prerequisites” for different famous theorems, we indeed find that there is a large overlap (indicated by lighter colors)—supporting the impression that in a sense one first has “knit together metamathematical space” and only then can one start generating “interesting theorems”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img37A.png" alt='' title='' width='577' height='429' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img37_copy.txt">
					<span class='close' id='37-28_out'>&amp;#10005</span></p>
<pre class='text' id='37-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another way to see “underlying overlap” is to look at what axioms different theorems ultimately depend on (the colors indicate the “depth” at which the axioms are reached): </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img38A.png" alt='' title='' width='562' height='805' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img38_copy.txt">
					<span class='close' id='38-28_out'>&amp;#10005</span></p>
<pre class='text' id='38-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The theorems here are again sorted in order of “dependency size”. The “very-set-theoretic” ones at the top don’t depend on any of the various number-related axioms. And quite a few “integer-related theorems” don’t depend on complex number axioms. But otherwise, we see that (at least according to the proofs in set.mm) most of the “famous theorems” depend on almost all the axioms. The only axiom that’s rarely used is the Axiom of Choice—on which only things like “analysis-related theorems” such as the Fundamental Theorem of Calculus depend. </p>
<p>If we look at the “depth of proof” at which axioms are reached, there’s a definite distribution:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img39A.png" alt='' title='' width='548' height='115' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img39_copy.txt">
					<span class='close' id='39-28_out'>&amp;#10005</span></p>
<pre class='text' id='39-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And this may be about as robust as any a “statistical characteristic” of the sampling of metamathematical space corresponding to mathematics that is “important to humans”. If we were, for example, to consider all possible theorems in the entailment cone we’d get a very different picture. But potentially what we see here may be a characteristic signature of what’s important to a “mathematical observer like us”. </p>
<p>Going beyond “famous theorems” we can ask, for example, about all the 42,000 or so identified theorems in the <a href='https://github.com/metamath/set.mm' target=_blank rel=noopener>Metamath set.mm collection</a>. Here’s a rough rendering of their theorem dependency graph, with different colors indicating theorems in different fields of math (and with explicit edges removed): </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img41A.png" alt='' title='' width='524' height='404' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img41_copy.txt">
					<span class='close' id='41-v2_out'>&amp;#10005</span></p>
<pre class='text' id='41-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There’s some evidence of a certain overall uniformity, but we can see definite “patches of metamathematical space” dominated by different areas of mathematics. And here’s what happens if we zoom in on the central region, and show where famous theorems lie:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img41A.png" alt='' title='' width='564' height='406' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img41_copy.txt">
					<span class='close' id='41-28_out'>&amp;#10005</span></p>
<pre class='text' id='41-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A bit like we saw for the named theorems of Boolean algebra clumps of famous theorems appear to somehow “stake out their own separate metamathematical territory”. But notably the famous theorems seem to show some tendency to congregate near “borders” between different areas of mathematics.</p>
<p>To get more of a sense of the relation between these different areas, we can make what amounts to a highly coarsened branchial graph, effectively laying out whole areas of mathematics in metamathematical space, and indicating their cross-connections:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img42A.png" alt='' title='' width='575' height='350' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img42_copy.txt">
					<span class='close' id='42-28_out'>&amp;#10005</span></p>
<pre class='text' id='42-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can see “highways” between certain areas. But there’s also a definite “background entanglement” between areas, reflecting at least a certain background uniformity in metamathematical space, as sampled with the theorems identified in Metamath. </p>
<p>It’s not the case that all these areas of math “look the same”—and for example there are differences in their distributions of theorem dependency sizes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/28sw0301img43A.png" alt='' title='' width='574' height='213' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/28sw0301img43_copy.txt">
					<span class='close' id='43-28_out'>&amp;#10005</span></p>
<pre class='text' id='43-28_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In areas like algebra and number theory, most proofs are fairly long, as revealed by the fact that they have many dependencies. But in set theory there are plenty of short proofs, and in logic all the proofs of theorems that have been included in Metamath are short. </p>
<p>What if we look at the overall dependency graph for all theorems in Metamath? Here&#8217;s the adjacency matrix we get: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' style='margin-left:5px' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2022/08/v2sw0305img42A.png" alt='' title='' width='577' height='323' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2022/03/v2sw0305img42_copy.txt">
					<span class='close' id='42-v2_out'>&amp;#10005</span></p>
<pre class='text' id='42-v2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The results are triangular because theorems in the Metamath database are arranged so that later ones only depend on earlier ones. And while there’s considerable patchiness visible, there still seems to be a certain overall background level of uniformity.</p>
<p>In doing this empirical metamathematics we’re sampling metamathematical space just through particular “human mathematical settlements” in it. But even from the distribution of these “settlements” we potentially begin to see evidence of a certain background uniformity in metamathematical space.</p>
<p>Perhaps in time as more connections between different areas of mathematics are found human mathematics will gradually become more “uniformly settled” in metamathematical space—and closer to what we might expect from entailment cones and ultimately from the raw ruliad. But it’s interesting to see that even with fairly basic empirical metamathematics—operating on a current corpus of human mathematical knowledge—it may already be possible to see signs of some features of physicalized metamathematics. </p>
<p>One day, no doubt, we’ll be able do experiments in physics that take our “parsing” of the physical universe in terms of things like space and time and quantum mechanics—and reveal “slices” of the raw ruliad underneath. But perhaps something similar will also be possible in empirical metamathematics: to construct what amounts to a metamathematical microscope (or telescope) through which we can see aspects of the ruliad. </p>
<h2 id='invented-or-discovered-how-mathematics-relates-to-humans'><span>27 | </span>Invented or Discovered? How Mathematics Relates to Humans</h2>
<p>It’s an old and oft-asked question: is mathematics ultimately something that is invented, or something that is discovered? Or, put another way: is mathematics something arbitrarily set up by us humans, or something inevitable and fundamental and in a sense “preexisting”, that we merely get to explore? In the past it’s seemed as if these were two fundamentally incompatible possibilities. But the framework we’ve built here in a sense blends them both into a rather unexpected synthesis.</p>
<p>The starting point is the idea that mathematics—like physics—is rooted in the ruliad, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>which is a representation of formal necessity</a>. Actual mathematics as we “experience” it is—like physics—based on the particular sampling we make of the ruliad. But then the crucial point is that very basic characteristics of us as “observers” are sufficient to constrain that experience to be our general mathematics—or our physics.</p>
<p>At some level we can say that “mathematics is always there”—because every aspect of it is ultimately encoded in the ruliad. But in another sense we can say that the mathematics we have is all “up to us”—because it’s based on how we sample the ruliad. But the point is that that sampling is not somehow “arbitrary”: if we’re talking about mathematics for us humans then it’s us ultimately doing the sampling, and the sampling is inevitably constrained by general features of our nature.</p>
<p>A major discovery from our Physics Project is that it doesn’t take much in the way of constraints on the observer to deeply constrain the laws of physics they will perceive. And similarly we posit here that for “observers like us” there will inevitably be general (“physicalized”) laws of mathematics, that make mathematics inevitably have the general kinds of characteristics we perceive it to have (such as the possibility of doing mathematics at a high level, without always having to drop down to an “atomic” level).</p>
<p>Particularly over the past century there’s been the idea that mathematics can be specified in terms of axiom systems, and that these axiom systems can somehow be “invented at will”. But our framework does two things. First, it says that “far below” axiom systems is the raw ruliad, which in a sense represents all possible axiom systems. And second, it says that whatever axiom systems we perceive to be “operating” will be ones that we as observers can pick out from the underlying structure of the ruliad.</p>
<p>At a formal level we can “invent” an arbitrary axiom system (and it’ll be somewhere in the ruliad), but only certain axiom systems will be ones that describe what we as “mathematical observers” can perceive. In a physics setting we might construct some formal physical theory that talks about detailed patterns in the atoms of space (or molecules in a gas), but the kind of “coarse-grained” observations that we can make won’t capture these. Put another way, observers like us can perceive certain kinds of things, and can describe things in terms of these perceptions. But with the wrong kind of theory—or “axioms”—these descriptions won’t be sufficient—and only an observer who’s “shredded” down to a more “atomic” level will be able to track what’s going on.</p>
<p>There’s lots of different possible math—and physics—in the ruliad. But observers like us can only “access” a certain type. Some putative alien not like us might access a different type—and might end up with both a different math and a different physics. Deep underneath they—like us—would be talking about the ruliad. But they’d be taking different samples of it, and describing different aspects of it.</p>
<p>For much of the history of mathematics there was a close alignment between the mathematics that was done and what we perceive in the world. For example, Euclidean geometry—with its whole axiomatic structure—was originally conceived just as an idealization of geometrical things that we observe about the world. But by the late 1800s the idea had emerged that one could create “disembodied” axiomatic systems with no particular grounding in our experience in the world. </p>
<p>And, yes, there are many possible <a href='https://www.wolframscience.com/nks/p804--implications-for-mathematics-and-its-foundations/'>disembodied axiom systems that one can set up</a>. And in doing <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#the-pure-basic-science-of-ruliology'>ruliology</a> and generally <a href='https://www.wolframscience.com/nks/'>exploring the computational universe</a> it’s interesting to investigate what they do. But the point is that this is something quite different from mathematics as mathematics is normally conceived. Because in a sense mathematics—like physics—is a “more human” activity that’s based on what “observers like us” make of the raw formal structure that is ultimately embodied in the ruliad.</p>
<p>When it comes to physics there are, it seems, two crucial features of “observers like us”. First, that we’re computationally bounded. And second, that we have the perception that we’re persistent—and have a definite and continuous thread of experience. At the level of atoms of space, we’re in a sense constantly being “remade”. But we nevertheless perceive it as always being the “same us”.</p>
<p>This single seemingly simple assumption <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>has far-reaching consequences</a>. For example, it leads us to experience a single thread of time. And from the notion that we maintain a continuity of experience from every successive moment to the next we are inexorably led to the idea of a perceived continuum—not only in time, but also for motion and in space. And when combined with intrinsic features of the ruliad and of multicomputation in general, what comes out in the end is a surprisingly precise description of how we’ll perceive our universe to operate—that seems to correspond exactly with known core laws of physics.</p>
<p>What does that kind of thinking tell us about mathematics? The basic point is that—since in the end both relate to humans—there is necessarily a close correspondence between physical and mathematical observers. Both are computationally bounded. And the assumption of persistence in time for physical observers becomes for mathematical observers the concept of maintaining coherence as more statements are accumulated. And when combined with intrinsic features of the ruliad and multicomputation this then turns out to imply the kind of physicalized laws of mathematics that we’ve discussed.</p>
<p>In a formal axiomatic view of mathematics one just imagines that one invents axioms and sees their consequences. But what we’re describing here is a view of mathematics that is ultimately just about the ways that we as mathematical observers sample and experience the ruliad. And if we use axiom systems it has to be as a kind of “intermediate language” that helps us make a slightly higher-level description of some corner of the raw ruliad. But actual “human-level” mathematics—like human-level physics—operates at a higher level.</p>
<p>Our everyday experience of the physical world gives us the impression that we have a kind of “direct access” to many foundational features of physics, like the existence of space and the phenomenon of motion. But our Physics Project implies that these are not concepts that are in any sense “already there”; they are just things that emerge from the raw ruliad when you “parse” it in the kinds of ways observers like us do. </p>
<p>In mathematics it’s less obvious (at least to all but perhaps experienced pure mathematicians) that there’s “direct access” to anything. But in our view of mathematics here, it’s ultimately just like physics—and ultimately also rooted in the ruliad, but sampled not by physical observers but by mathematical ones. </p>
<p>So from this point view there’s <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-relation-to-mathematics'>just as much that&#8217;s “real” underneath mathematics as there is underneath physics</a>. The mathematics is sampled slightly differently (though very similarly)—but we should not in any sense consider it “fundamentally more abstract”. </p>
<p>When we think of ourselves as entities within the ruliad, we can build up what we might consider a “fully abstract” description of how we get our “experience” of physics. And we can basically do the same thing for mathematics. So if we take the commonsense point of view that physics fundamentally exists “for real”, we’re <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-relation-to-mathematics'>forced into the same point of view for mathematics</a>. In other words, if we say that the physical universe exists, so must we also say that in some fundamental sense, mathematics also exists.</p>
<p>It’s not something we as humans “just make”, but it is something that is made through our particular way of observing the ruliad, that is ultimately defined by our particular characteristics as observers, with our particular core assumptions about the world, our particular kinds of sensory experience, and so on.</p>
<p>So what can we say in the end about whether mathematics is “invented” or “discovered”? It is neither. Its underpinnings are the ruliad, whose structure is a matter of formal necessity. But its perceived form for us is determined by our intrinsic characteristics as observers. We neither get to “arbitrarily invent” what’s underneath, nor do we get to “arbitrarily discover” what’s already there. The mathematics we see is the result of a combination of formal necessity in the underlying ruliad, and the particular forms of perception that we—as entities like us—have. Putative aliens could have quite different mathematics, but not because the underlying ruliad is any different for them, but because their forms of perception might be different. And it’s the same with physics: even though they “live in the same physical universe” their perception of the laws of physics could be quite different.</p>
<h2 id='what-axioms-can-there-be-for-human-mathematics'><span>28 | </span>What Axioms Can There Be for Human Mathematics?</h2>
<p>When they were first developed in antiquity the axioms of Euclidean geometry were presumably intended basically as a kind of “tightening” of our everyday impressions of geometry—that would aid in being able to deduce what was true in geometry. But by the mid-1800s—between non-Euclidean geometry, group theory, Boolean algebra and quaternions—it had become clear that there was a range of abstract axiom systems one could in principle consider. And by the time of Hilbert’s program around 1900 the pure process of deduction was in effect being viewed as an end in itself—and indeed the core of mathematics—with axiom systems being seen as “starter material” pretty much just “determined by convention”.</p>
<p>In practice even today very few different axiom systems are ever commonly used—and indeed in <em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em> I was able to <a href='https://www.wolframscience.com/nks/p773--implications-for-mathematics-and-its-foundations/'>list essentially all of them comfortably on a couple of pages</a>. But why these axiom systems and not others? Despite the idea that axiom systems could ultimately be arbitrary, the concept was still that in studying some particular area of mathematics one should basically have an axiom system that would provide a “tight specification” of whatever mathematical object or structure one was trying to talk about. And so, for example, the Peano axioms are what became used for talking about arithmetic-style operations on integers.</p>
<p>In 1931, however, Gödel’s theorem showed that actually these axioms weren’t strong enough to <a href='https://www.wolframscience.com/nks/p800--implications-for-mathematics-and-its-foundations/'>constrain one to be talking only about integers</a>: there were also other possible models of the axiom system, involving all sorts of exotic “<a href='https://www.wolframscience.com/nks/notes-12-9--non-standard-arithmetic/'>non-standard arithmetic</a>”. (And moreover, there was no finite way to “patch” this issue.) In other words, even though the Peano axioms had been invented—like Euclid’s axioms for geometry—as a way to describe a definite “intuitive” mathematical thing (in this case, integers) their formal axiomatic structure “had a life of its own” that extended (in some sense, infinitely) beyond its original intended purpose.</p>
<p>Both geometry and arithmetic in a sense had foundations in everyday experience. But for <a href='https://www.wolframscience.com/nks/notes-12-9--set-theory-and-axioms/'>set theory dealing with infinite sets</a> there was never an obvious intuitive base rooted in everyday experience. Some extrapolations from finite sets were clear. But in covering infinite sets various axioms (like the Axiom of Choice) were gradually added to capture what seemed like “reasonable” mathematical assertions.</p>
<p>But one example whose status for a long time wasn’t clear was the Continuum Hypothesis—which asserts that the “next distinct possible cardinality” <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/30sw0223img1A.png" width= '17' height='19' align='absmiddle'></span> after the cardinality <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/30sw0223img2A.png" width= '19' height='21' align='absmiddle'></span> of the integers is <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/30sw0223img3A.png" width= '25' height='21' align='absmiddle'></span>: the cardinality of real numbers (i.e. of “the continuum”). Was this something that followed from previously accepted axioms of set theory? And if it was added, would it even be consistent with them? In the early 1960s it was established that actually the Continuum Hypothesis is independent of the other axioms.</p>
<p>With the axiomatic view of the foundations of mathematics that’s been popular for the past century or so it seems as if one could, for example, just choose at will whether to include the Continuum Hypothesis (or its negation) as an axiom in set theory. But with the approach to the foundations of mathematics that we’ve developed here, this is no longer so clear.</p>
<p>Recall that in our approach, everything is ultimately rooted in the ruliad—with whatever mathematics observers like us “experience” just being the result of the particular sampling we do of the ruliad. And in this picture, axiom systems are a particular representation of fairly low-level features of the sampling we do of the raw ruliad. </p>
<p>If we could do any kind of sampling we want of the ruliad, then we’d presumably be able to get all possible axiom systems—as intermediate-level “waypoints” representing different kinds of slices of the ruliad. But in fact by our nature we are observers capable of only certain kinds of sampling of the ruliad.</p>
<p>We could imagine “alien observers” not like us who could for example make whatever choice they want about the Continuum Hypothesis. But given our general characteristics as observers, we may be forced into a particular choice. Operationally, as we’ve discussed above, the wrong choice could, for example, be incompatible with an observer who “maintains coherence” in metamathematical space.</p>
<p>Let’s say we have a particular axiom stated in standard symbolic form. “Underneath” this axiom there will typically be at the level of the raw ruliad a huge cloud of possible configurations of emes that can represent the axiom. But an “observer like us” can only deal with a coarse-grained version in which all these different configurations are somehow considered equivalent. And if the entailments from “nearby configurations” remain nearby, then everything will work out, and the observer can maintain a coherent view of what’s going, for example just in terms of symbolic statements about axioms.</p>
<p>But if instead different entailments of raw configurations of emes lead to very different places, the observer will in effect be “shredded”—and instead of having definite coherent “single-minded” things to say about what happens, they’ll have to separate everything into all the different cases for different configurations of emes. Or, as we’ve said it before, the observer will inevitably end up getting “shredded”—and not be able to come up with definite mathematical conclusions.</p>
<p>So what specifically can we say about the Continuum Hypothesis? It’s not clear. But conceivably we can start by thinking of <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/30sw0223img4A.png" width= '19' height='21' align='absmiddle'></span> as characterizing the “base cardinality” of the ruliad, while <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/30sw0223img5A.png" width= '25' height='21' align='absmiddle'></span> characterizes the base cardinality of a first-level <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#whats-beyond-the-ruliad?'>hyperruliad</a> that could for example be based on Turing machines with oracles for their halting problems. And it could be that for us to conclude that the Continuum Hypothesis is false, we’d have to somehow be straddling the ruliad and the hyperruliad, which would be inconsistent with us maintaining a coherent view of mathematics. In other words, the Continuum Hypothesis might somehow be equivalent to what we’ve argued before is in a sense the <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#is-this-the-only-universe?'>most fundamental “contingent fact”</a>—that just as we live in a particular location in physical space—so also we live in the ruliad and not the hyperruliad. </p>
<p>We might have thought that whatever we might see—or construct—in mathematics would in effect be “entirely abstract” and independent of anything about physics, or our experience in the physical world. But particularly insofar as we’re thinking about mathematics as done by humans we’re dealing with “mathematical observers” that are “made of the same stuff” as physical observers. And this means that whatever general constraints or features exist for physical observers we can expect these to carry over to mathematical observers—so it’s no coincidence that both physical and mathematical observers have the same core characteristics, of computational boundedness and “assumption of coherence”. </p>
<p>And what this means is that there’ll be a fundamental correlation between things familiar from our experience in the physical world and what shows up in our mathematics. We might have thought that the fact that Euclid’s original axioms were based on our human perceptions of physical space would be a sign that in some “overall picture” of mathematics they should be considered arbitrary and not in any way central. But the point is that in fact our notions of space are central to our characteristics as observers. And so it’s inevitable that “physical-experience-informed” axioms like those for Euclidean geometry will be what appear in mathematics for “observers like us”. </p>
<h2 id='counting-the-emes-of-mathematics-and-physics'><span>29 | </span>Counting the Emes of Mathematics and Physics</h2>
<p>How does the “size of mathematics” compare to the size of our physical universe? In the past this might have seemed like an absurd question, that tries to compare something abstract and arbitrary with something real and physical. But with the idea that both mathematics and physics as we experience them emerge from our sampling of the ruliad, it begins to seem less absurd.</p>
<p>At the lowest level the ruliad can be thought of as being made up of atoms of existence that we call emes. As physical observers we interpret these emes as atoms of space, or in effect the ultimate raw material of the physical universe. And as mathematical observers we interpret them as the ultimate elements from which the constructs of mathematics are built. </p>
<p>As the entangled limit of all possible computations, the whole ruliad is infinite. But we as physical or mathematical observers sample only limited parts of it. And that means we can meaningfully ask questions like how the number of emes in these parts compare—or, in effect, how big is physics as we experience it compared to mathematics.</p>
<p>In some ways an eme is like a bit. But the concept of emes is that they’re “actual atoms of existence”—from which “actual stuff” like the physical universe and its history are made—rather than just “static informational representations” of it. As soon as we imagine that everything is ultimately computational we are immediately led to start thinking of representing it in terms of bits. But the ruliad is not just a representation. It’s in some way something lower level. It’s the “actual stuff” that everything is made of. And what defines our particular experience of physics or of mathematics is the particular samples we as observers take of what’s in the ruliad.</p>
<p>So the question is now how many emes there are in those samples. Or, more specifically, how many emes “matter to us” in building up our experience. </p>
<p>Let’s return to an analogy we’ve used several times before: a gas made of molecules. In the volume of a room there might be <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img1A.png" width= '30' height='19' align='absmiddle' style='margin-bottom:4px'></span> individual molecules, each on average colliding every <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img2A.png" width= '37' height='19' align='absmiddle' style='margin-bottom:4px'></span> seconds. So that means that our “experience of the room” over the course of a minute or so might sample <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img3A.png" width= '31' height='19' align='absmiddle' style='margin-bottom:4px'></span> collisions. Or, in terms closer to our Physics Project, we might say that there are perhaps <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img4A.png" width= '31' height='19' align='absmiddle' style='margin-bottom:4px'></span> “collision events” in the causal graph that defines what we experience.</p>
<p>But these “collision events” aren’t something fundamental; they have what amounts to “internal structure” with many associated parameters about location, time, molecular configuration, etc. </p>
<p>Our Physics Project, however, suggests that—far below for example our usual notions of space and time—we can in fact have a truly fundamental definition of what’s happening in the universe, ultimately in terms of emes. We don’t yet know the “physical scale” for this—and in the end we presumably need experiments to determine that. But <a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/units-and-scales/' target=_blank rel=noopener>rather rickety estimates</a> based on a variety of assumptions suggest that the elementary length might be around <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img5A.png" width= '38' height='19' align='absmiddle' style='margin-bottom:4px'></span> meters, with the elementary time being around <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img6A.png" width= '44' height='19' align='absmiddle' style='margin-bottom:4px'></span> seconds.</p>
<p>And with these estimates we might conclude that our “experience of a room for a minute” would involve sampling perhaps <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img7A.png" width= '37' height='19' align='absmiddle' style='margin-bottom:4px'></span> update events, that create about this number of atoms of space.</p>
<p>But it’s immediately clear that this is in a sense a gross underestimate of the total number of emes that we’re sampling. And the reason is that we’re not accounting for quantum mechanics, and for the multiway nature of the evolution of the universe. We’ve so far only considered one “thread of time” at one “position in branchial space”. But in fact there are many threads of time, constantly branching and merging. So how many of these do we experience?</p>
<p>In effect that depends on our size in branchial space. In physical space “human scale” is of order a meter—or perhaps <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img8A.png" width= '31' height='19' align='absmiddle' style='margin-bottom:4px'></span> elementary lengths. But how big is it in branchial space? </p>
<p>The fact that we’re so large compared to the elementary length is the reason that we consistently experience space as something continuous. And the analog in branchial space is that if we’re big compared to the “elementary branchial distance between branches” then we won’t experience the different individual histories of these branches, but only an aggregate “objective reality” in which we conflate together what happens on all the branches. Or, put another way, being large in branchial space is what makes us experience classical physics rather than quantum mechanics.</p>
<p>Our estimates for branchial space are even more rickety than for physical space. But conceivably there are on the order of <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img9A.png" width= '36' height='19' align='absmiddle' style='margin-bottom:4px'></span> “instantaneous parallel threads of time” in the universe, and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img10A.png" width= '31' height='19' align='absmiddle' style='margin-bottom:4px'></span> encompassed by our instantaneous experience—implying that in our minute-long experience we might sample a total of on the order of close to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img11A.png" width= '38' height='19' align='absmiddle' style='margin-bottom:4px'></span> emes.</p>
<p>But even this is a vast underestimate. Yes, it tries to account for our extent in physical space and in branchial space. But then <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/#the-emerging-picture-of-rulial-space' target=_blank rel=noopener>there&#8217;s also rulial space</a>—which in effect is what “fills out” the whole ruliad. So how big are we in that space? In essence that’s like asking how many different possible sequences of rules there are that are consistent with our experience. </p>
<p>The total conceivable number of sequences associated with <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img12A.png" width= '38' height='19' align='absmiddle' style='margin-bottom:4px'></span> emes is roughly the number of possible hypergraphs with <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img13A.png" width= '38' height='19' align='absmiddle' style='margin-bottom:4px'></span> nodes—or around <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img14A.png" width= '78' height='22' align='absmiddle' style='margin-bottom:4px'></span>. But the actual number consistent with our experience is smaller, in particular as reflected by the fact that we attribute specific laws to our universe. But when we say “specific laws” we have to recognize that there is a <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#living-in-rulial-space'>finiteness to our efforts at inductive inference</a> which inevitably makes these laws at least somewhat uncertain to us. And in a sense that uncertainty is what represents our “extent in rulial space”. </p>
<p>But if we want to count the emes that we “absorb” as physical observers, it’s still going to be a huge number. Perhaps the base may be lower—say <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img15A.png" width= '30' height='19' align='absmiddle' style='margin-bottom:4px'></span>—but there’s still a vast exponent, suggesting that if we include our extent in rulial space, we as physical observers may experience numbers of emes like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img16A.png" width= '70' height='22' align='absmiddle' style='margin-bottom:4px'></span>.</p>
<p>But let’s say we go beyond our “everyday human-scale experience”. For example, let’s ask about “experiencing” our whole universe. In physical space, the volume of our current universe is about <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img17A.png" width= '30' height='20' align='absmiddle' style='margin-bottom:4px'></span> times larger than “human scale” (while human scale is perhaps <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img18A.png" width= '37' height='19' align='absmiddle' style='margin-bottom:4px'></span> times larger than the “scale of the atoms of space”). In branchial space, conceivably our current universe is <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img19A.png" width= '37' height='19' align='absmiddle' style='margin-bottom:4px'></span> times larger than “human scale”. But these differences absolutely pale in comparison to the sizes associated with rulial space. </p>
<p>We might try to go beyond “ordinary human experience” and for example measure things using tools from science and technology. And, yes, we could then think about “experiencing” lengths down to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img20A.png" width= '38' height='19' align='absmiddle' style='margin-bottom:4px'></span> meters, or something close to “single threads” of quantum histories. But in the end, it’s still the rulial size that dominates, and that’s where we can expect most of the vast number of emes that form of our experience of the physical universe to come from.</p>
<p>OK, so what about mathematics? When we think about what we might call human-scale mathematics, and talk about things like the Pythagorean theorem, how many emes are there “underneath”? “Compiling” our theorem down to typical traditional mathematical axioms, we’ve seen that we’ll routinely end up with expressions containing, say, <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img21A.png" width= '31' height='19' align='absmiddle' style='margin-bottom:4px'></span> symbolic elements. But what happens if we go “below that”, compiling these symbolic elements—which might include things like variables and operators—into “pure computational elements” that we can think of as emes? We’ve seen a few examples, say with combinators, that suggest that for the traditional axiomatic structures of mathematics, we might need another factor of maybe roughly <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img22A.png" width= '30' height='19' align='absmiddle' style='margin-bottom:4px'></span>.</p>
<p>These are incredibly rough estimates, but perhaps there’s a hint that there’s “further to go” to get from human-scale for a physical observer down to atoms of space that correspond to emes, than there is to get from human-scale for a mathematical observer down to emes.</p>
<p>Just like in physics, however, this kind of “static drill-down” isn’t the whole story for mathematics. When we talk about something like the Pythagorean theorem, we’re really referring to a whole cloud of “human-equivalent” points in metamathematical space. The total number of “possible points” is basically the size of the entailment cone that contains something like the Pythagorean theorem. The “height” of the entailment cone is related to typical lengths of proofs—which for current human mathematics might be perhaps hundreds of steps. </p>
<p>And this would lead to overall sizes of <a href='#empirical-metamathematics'>entailment cones</a> of very roughly <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img23A.png" width= '37' height='19' align='absmiddle' style='margin-bottom:4px'></span> theorems. But within this “how big” is the cloud of variants corresponding to particular “human-recognized” theorems? Empirical metamathematics could provide additional data on this question. But if we very roughly imagine that half of every proof is “flexible”, we’d end up with things like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img24A.png" width= '31' height='19' align='absmiddle' style='margin-bottom:4px'></span> variants. So if we asked how many emes correspond to the “experience” of the Pythagorean theorem, it might be, say, <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img25A.png" width= '32' height='20' align='absmiddle' style='margin-bottom:4px'></span>. </p>
<p>To give an analogy of “everyday physical experience” we might consider a mathematician thinking about mathematical concepts, and maybe in effect pondering a few tens of theorems per minute—implying according to our extremely rough and speculative estimates that while typical “specific human-scale physics experience” might involve <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img26A.png" width= '38' height='19' align='absmiddle' style='margin-bottom:4px'></span> emes, specific human-scale mathematics experience might involve <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img27A.png" width= '32' height='20' align='absmiddle' style='margin-bottom:4px'></span> emes (a number comparable, for example, to the number of physical atoms in our universe). </p>
<p>What if instead of considering “everyday mathematical experience” we consider <a href='https://writings.stephenwolfram.com/2014/08/computational-knowledge-and-the-future-of-pure-mathematics/'>all humanly explored mathematics</a>? On the scales we’re describing, the factors are not large. In the history of human mathematics, only a few million theorems have been published. If we think about all the computations that have been done in the service of mathematics, it’s a somewhat larger factor. I suspect <a href='https://www.wolfram.com/mathematica'>Mathematica</a> is the dominant contributor here—and we can estimate that the total number of <a href='https://www.wolfram.com/language'>Wolfram Language</a> operations corresponding to “human-level mathematics” done so far is perhaps <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/31sw0223img28A.png" width= '31' height='19' align='absmiddle' style='margin-bottom:4px'></span>.</p>
<p>But just like for physics, all these numbers pale in comparison with those introduced by rulial sizes. We’ve talked essentially about a particular path from emes through specific axioms to theorems. But the ruliad in effect contains all possible axiom systems. And if we start thinking about enumerating these—and effectively “populating all of rulial space”—we’ll end up with exponentially more emes. </p>
<p>But as with the perceived laws of physics, in mathematics as done by humans it’s actually just a narrow slice of rulial space that we’re sampling. It’s like a generalization of the idea that something like arithmetic as we imagine it can be derived from a whole cloud of possible axiom systems. It’s not just one axiom system; but it’s also not all possible axiom systems. </p>
<p>One can imagine doing some combination of ruliology and empirical metamathematics to get an estimate of “how broad” human-equivalent axiom systems (and their construction from emes) might be. But the answer seems likely to be much smaller than the kinds of sizes we have been estimating for physics.</p>
<p>It’s important to emphasize that what we’ve discussed here is extremely rough—and speculative. And indeed I view its main value as being to provide an example of how to imagine thinking through things in the context of the ruliad and the framework around it. But on the basis of what we’ve discussed, we might make the very tentative conclusion that “human-experienced physics” is bigger than “human-experienced mathematics”. Both involve vast numbers of emes. But physics seems to involve a lot more. In a sense—even with all its abstraction—the suspicion is that there’s “less ultimately in mathematics” as far as we’re concerned than there is in physics. Though by any ordinary human standards, mathematics still involves absolutely vast numbers of emes. </p>
<h2 id='some-historical-and-philosophical-background'><span>30 | </span>Some Historical (and Philosophical) Background</h2>
<p>The human activity that we now call “mathematics” can presumably trace its origins into prehistory. What might have started as “a single goat”, “a pair of goats”, etc. became a <a href='https://writings.stephenwolfram.com/2021/05/how-inevitable-is-the-concept-of-numbers/'>story of abstract numbers</a> that could be indicated purely by things like tally marks. In Babylonian times the practicalities of a city-based society led to all sorts of calculations involving arithmetic and geometry—and basically everything we now call “mathematics” <a href='https://www.wolframscience.com/nks/p792--implications-for-mathematics-and-its-foundations/'>can ultimately be thought of as a generalization of these ideas</a>.</p>
<p>The tradition of philosophy that emerged in Greek times saw mathematics as a kind of reasoning. But while much of arithmetic (apart from issues of infinity and infinitesimals) could be thought of in explicit calculational ways, precise geometry immediately required an idealization—specifically the concept of a point having no extent, or equivalently, the continuity of space. And in an effort to reason on top of this idealization, there emerged the idea of defining axioms and making abstract deductions from them.</p>
<p>But what kind of a thing actually was mathematics? Plato talked about things we sense in the external world, and things we conceptualize in our internal thoughts. But he considered mathematics to be at its core an example of a third kind of thing: something from an abstract world of ideal forms. And with our current thinking, there is an immediate resonance between this concept of ideal forms and the concept of the ruliad. </p>
<p>But for most of the past two millennia of the actual development of mathematics, questions about what it ultimately was lay in the background. An important step was taken in the late 1600s when Newton and others “mathematicized” mechanics, at first presenting what they did in the form of axioms similar to Euclid’s. Through the 1700s mathematics as a practical field was viewed as some kind of precise idealization of features of the world—though with an increasingly elaborate tower of formal derivations constructed in it. Philosophy, meanwhile, typically viewed mathematics—like logic—mostly as an example of a system in which there was a formal process of derivation with a “necessary” structure not requiring reference to the real world.</p>
<p>But in the first half of the 1800s there arose several examples of systems where axioms—while inspired by features of the world—ultimately seemed to be <a href='https://www.wolframscience.com/nks/notes-12-9--history-of-concept-of-mathematics/'>“just invented” (e.g. group theory, curved space, quaternions, Boolean algebra, &#8230;)</a>. A push towards increasing rigor (especially for calculus and the nature of real numbers) led to more focus on axiomatization and formalization—which was still further emphasized by the appearance of a few non-constructive “purely formal” proofs.</p>
<p>But if mathematics was to be formalized, what should its underlying primitives be? One obvious choice seemed to be logic, which had originally been developed by Aristotle as a kind of catalog of human arguments, but two thousand years later felt basic and inevitable. And so it was that Frege, followed by Whitehead and Russell, tried to start “constructing mathematics” from “pure logic” (along with set theory). Logic was in a sense a rather low-level “machine code”, and it took hundreds of pages of unreadable (if impressive-looking) “code” for Whitehead and Russell, in their <a href='https://writings.stephenwolfram.com/2010/11/100-years-since-principia-mathematica/'>1910 <em>Principia Mathematica</em></a>, to get to 1&nbsp;+&nbsp;1&nbsp;=&nbsp;2. </p>
<p><a href='https://archive.org/details/principiamathema01anwh/page/366/mode/2up' target=_blank rel=noopener><img class='' src='https://content.wolfram.com/uploads/sites/43/2022/08/32-principia-mathematica-1910A.png' alt='Pages 366–367' title='Pages 366–367' width='620' height=' '/></a></p>
<p>Meanwhile, starting around 1900, Hilbert took a slightly different path, essentially representing everything with what we would now call symbolic expressions, and setting up axioms as relations between these. But what axioms should be used? Hilbert seemed to feel that the core of mathematics lay not in any “external meaning” but in the pure formal structure built up from whatever axioms were used. And he imagined that somehow all the truths of mathematics could be “mechanically derived” from axioms, a bit, as he said in a certain resonance with our current views, <a href='https://writings.stephenwolfram.com/2020/12/where-did-combinators-come-from-hunting-the-story-of-moses-schonfinkel/#gottingen,-center-of-the-mathematical-universe'>like the “great calculating machine, Nature”</a> does it for physics. </p>
<p>Not all mathematicians, however, bought into this “formalist” view of what mathematics is. And in 1931 Gödel managed to prove from inside the formal axiom system traditionally used for arithmetic that this system had a fundamental incompleteness that prevented it from ever having anything to say about certain mathematical statements. But Gödel seems to have maintained a more Platonic belief about mathematics: that even though the axiomatic method falls short, the truths of mathematics are in some sense still “all there”, and it’s potentially possible for the human mind to have “direct access” to them. And while this is not quite the same as our picture of the mathematical observer accessing the ruliad, there’s again some definite resonance here.</p>
<p>But, OK, so how has mathematics actually conducted itself over the past century? Typically there’s at least lip service paid to the idea that there are “axioms underneath”—usually assumed to be those from set theory. There’s been significant emphasis placed on the idea of formal deduction and proof—but not so much in terms of formally building up from axioms as in terms of giving narrative expositions that help humans understand why some theorem might follow from other things they know.</p>
<p>There’s been a field of “mathematical logic” concerned with using mathematics-like methods to explore mathematics-like aspects of formal axiomatic systems. But (at least until very recently) there’s been rather little interaction between this and the “mainstream” study of mathematics. And for example phenomena like undecidability that are central to mathematical logic have seemed rather remote from typical pure mathematics—even though many actual long-unsolved problems in mathematics do seem likely to run into it.</p>
<p>But even if formal axiomatization may have been something of a sideshow for mathematics, its ideas have brought us what is without much doubt the single most important intellectual breakthrough of the twentieth century: the abstract concept of computation. And what’s now become clear is that computation is in some fundamental sense much more general than mathematics.</p>
<p>At a philosophical level one can view the ruliad as containing all computation. But mathematics (at least as it’s done by humans) is defined by what a “mathematical observer like us” samples and perceives in the ruliad.</p>
<p>The most common “core workflow” for mathematicians doing pure mathematics is first to imagine what might be true (usually through a process of intuition that feels a bit like making “direct access to the truths of mathematics”)—and then to “work backwards” to try to construct a proof. As a practical matter, though, the vast majority of “mathematics done in the world” doesn’t follow this workflow, and instead just “runs forward”—doing computation. And there’s no reason for at least the innards of that computation to have any “humanized character” to it; it can just involve the raw processes of computation.</p>
<p>But the traditional pure mathematics workflow in effect depends on <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>using “human-level” steps</a>. Or if, as we described earlier, we think of low-level axiomatic operations as being like molecular dynamics, then it involves operating at a “fluid dynamics” level. </p>
<p>A century ago efforts to “globally understand mathematics” centered on trying to find common axiomatic foundations for everything. But as different areas of mathematics were explored (and particularly ones like algebraic topology that cut across existing disciplines) it began to seem as if there might also be “top-down” commonalities in mathematics, in effect directly at the “fluid dynamics” level. And within the last few decades, it’s become increasingly common to use ideas from category theory as a general framework for thinking about mathematics at a high level.</p>
<p>But there’s also been an effort to progressively build up—as an abstract matter—formal “higher category theory”. A notable feature of this has been the appearance of connections to both geometry and mathematical logic—and for us a <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#the-view-from-mathematics'>connection to the ruliad</a> and its features. </p>
<p>The success of category theory has led in the past decade or so to interest in other high-level structural approaches to mathematics. A notable example is homotopy type theory. The basic concept is to characterize mathematical objects not by using axioms to describe properties they should have, but instead to use “types” to say “what the objects are” (for example, “mapping from reals to integers”). Such type theory has the feature that it tends to look much more “immediately computational” than traditional mathematical structures and notation—as well as making explicit proofs and other metamathematical concepts. And in fact questions about types and their equivalences wind up <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#the-view-from-mathematics'>being very much like</a> the questions we’ve discussed for the multiway systems we’re using as metamodels for mathematics.</p>
<p>Homotopy type theory can itself be set up as a formal axiomatic system—but with axioms that include what amount to metamathematical statements. A key example is the univalence axiom which essentially states that things that are equivalent can be treated as the same. And now from our point of view here we can see this being essentially a statement of metamathematical coarse graining—and a piece of defining what should be considered “mathematics” on the basis of properties assumed for a mathematical observer.</p>
<p>When Plato introduced ideal forms and their distinction from the external and internal world the understanding of even the fundamental concept of computation—let alone <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/'>multicomputation</a> and the ruliad—was still more than two millennia in the future. But now our picture is that everything can in a sense be viewed as part of the world of ideal forms that is the ruliad—and that not only mathematics but also physical reality are in effect just manifestations of these ideal forms.</p>
<p>But a crucial aspect is how we sample the “ideal forms” of the ruliad. And this is where the “contingent facts” about us as human “observers” enter. The formal axiomatic view of mathematics can be viewed as providing one kind of low-level description of the ruliad. But the point is that this description isn’t aligned with what observers like us perceive—or with what we will successfully be able to view as human-level mathematics. </p>
<p>A century ago there was a movement to take mathematics (as well, as it happens, as other fields) beyond its origins in what amount to human perceptions of the world. But what we now see is that while there is an underlying “world of ideal forms” embodied in the ruliad that has nothing to do with us humans, mathematics as we humans do it must be associated with the particular sampling we make of that underlying structure.</p>
<p>And it’s not as if we get to pick that sampling “at will”; the sampling we do is the result of <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>fundamental features of us as humans</a>. And an important point is that those fundamental features determine our characteristics both as mathematical observers and as physical observers. And this fact leads to a deep connection between our experience of physics and our definition of mathematics. </p>
<p>Mathematics historically began as a formal idealization of our human perception of the physical world. Along the way, though, it began to think of itself as a more purely abstract pursuit, separated from both human perception and the physical world. But now, with the general idea of computation, and more specifically with the concept of the ruliad, we can in a sense see what the limit of such abstraction would be. And interesting though it is, what we’re now discovering is that it’s not the thing we call mathematics. And instead, what we call mathematics is something that is subtly but deeply determined by general features of human perception—in fact, essentially the same features that also determine our perception of the physical world.</p>
<p>The intellectual foundations and justification are different now. But in a sense our view of mathematics has come full circle. And we can now see that mathematics is in fact deeply connected to the physical world and our particular perception of it. And we as humans can do what we call mathematics for basically the same reason that we as humans manage to parse the physical world to the point where we can do science about it.</p>
<h2 id='implications-for-the-future-of-mathematics'><span>31 | </span>Implications for the Future of Mathematics</h2>
<p>Having talked a bit about historical context let’s now talk about what the things we’ve discussed here mean for the future of mathematics—both in theory and in practice. </p>
<p>At a theoretical level we’ve characterized the story of mathematics as being the story of a particular way of exploring the <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>ruliad</a>. And from this we might think that in some sense the ultimate limit of mathematics would be to just deal with the ruliad as a whole. But observers like us—at least doing mathematics the way we normally do it—simply can’t do that. And in fact, with the limitations we have as mathematical observers we can inevitably sample only tiny slices of the ruliad.</p>
<p>But as we’ve discussed, it is exactly this that leads us to experience the kinds of “general laws of mathematics” that we’ve talked about. And it is from these laws that we get a picture of the “large-scale structure of mathematics”—that turns out to be in many ways similar to the picture of the large-scale structure of our physical universe that we get from physics.</p>
<p>As we’ve discussed, what corresponds to the coherent structure of physical space is the possibility of doing mathematics in terms of high-level concepts—without always having to drop down to the “atomic” level. Effective uniformity of metamathematical space then leads to the idea of “pure metamathematical motion”, and in effect the possibility of translating at a high level between different areas of mathematics. And what this suggests is that in some sense “all high-level areas of mathematics” should ultimately be connected by “high-level dualities”—some of which have already been seen, but many of which remain to be discovered.</p>
<p>Thinking about metamathematics in physicalized terms also suggests another phenomenon: essentially an <a href='#gravitational-and-relativistic-effects-in-metamathematics'>analog of gravity for metamathematics</a>. As we discussed earlier, in direct analogy to the way that &#8220;larger densities of activity&#8221; in the spatial hypergraph for physics lead to a deflection in geodesic paths in physical space, so also larger &#8220;entailment density&#8221; in metamathematical space will lead to deflection in geodesic paths in metamathematical space. And when the entailment density gets sufficiently high, it presumably becomes inevitable that these paths will all converge, leading to what one might think of as a &#8220;metamathematical singularity&#8221;.</p>
<p>In the spacetime case, a typical analog would be a place where all geodesics have finite length, or in effect “time stops”. In our view of metamathematics, it corresponds to a situation where “all proofs are finite”—or, in other words, where everything is decidable, and there is no more “fundamental difficulty” left. </p>
<p>Absent other effects we might imagine that in the physical universe the effects of gravity would eventually lead everything to collapse into black holes. And the analog in metamathematics would be that everything in mathematics would “collapse” into decidable theories. But among the effects not accounted for is continued expansion—or in effect the creation of new physical or metamathematical space, formed in a sense by underlying raw computational processes.</p>
<p>What will observers like us make of this, though? In statistical mechanics an observer who does coarse graining might perceive the “heat death of the universe”. But at a molecular level there is all sorts of detailed motion that reflects a continued irreducible process of computation. And inevitably there will be an infinite collection of possible “slices of reducibility” to be found in this—just not necessarily ones that align with any of our current capabilities as observers. </p>
<p>What does this mean for mathematics? Conceivably it might suggest that there’s only so much that can fundamentally be discovered in “high-level mathematics” without in effect “expanding our scope as observers”—or in essence changing our definition of what it is we humans mean by doing mathematics. </p>
<p>But underneath all this is still raw computation—and the ruliad. And this we know goes on forever, in effect continually generating “irreducible surprises”. But how should we study “raw computation”?</p>
<p>In essence we want to do unfettered exploration of the computational universe, of the kind I did in <em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em>, and that we now call the science of <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#the-pure-basic-science-of-ruliology'>ruliology</a>. It’s something we can view as more abstract and more fundamental than mathematics—and indeed, as we’ve argued, it’s for example what’s underneath not only mathematics but also physics.</p>
<p>Ruliology is a rich intellectual activity, important for example as a source of models for many processes in nature and elsewhere. But it’s one where computational irreducibility and undecidability are seen at almost every turn—and it’s not one where we can readily expect “general laws” accessible to observers like us, of the kind we’ve seen in physics, and now see in mathematics.</p>
<p>We’ve argued that with its foundation in the ruliad mathematics is ultimately based on structures lower level than axiom systems. But given their familiarity from the history of mathematics, it’s convenient to use axiom systems—as we have done here—as a kind of “intermediate-scale metamodel” for mathematics.</p>
<p>But what is the “workflow” for using axiom systems? One possibility in effect inspired by ruliology is just to systematically construct the entailment cone for an axiom system, progressively generating all possible theorems that the axiom system implies. But while doing this is of great theoretical interest, it typically isn’t something that will in practice reach much in the way of (currently) familiar mathematical results.</p>
<p>But let’s say one’s thinking about a particular result. A proof of this would correspond to a path within the entailment cone. And the idea of <a href='#relations-to-automated-theorem-proving'>automated theorem proving</a> is to systematically find such a path—which, with a variety of tricks, can usually be done vastly more efficiently than just by enumerating everything in the entailment cone. In practice, though, despite half a century of history, automated theorem proving has seen very little use in mainstream mathematics. Of course it doesn’t help that in typical mathematical work a proof is seen as part of the high-level exposition of ideas—but automated proofs tend to operate at the level of <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>“axiomatic machine code”</a> without any connection to human-level narrative.</p>
<p>But if one doesn’t already know the result one’s trying to prove? Part of the intuition that comes from <em>A New Kind of Science</em> is that there can be “interesting results” that are still simple enough that they can conceivably be found by some kind of explicit search—and then verified by automated theorem proving. But so far as I know, only one significant unexpected result has so far ever been found in this way with automated theorem proving: <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>my 2000 result on the simplest axiom system for Boolean algebra</a>.</p>
<p>And the fact is that when it comes to using computers for mathematics, the overwhelming fraction of the time they’re used not to construct proofs, but instead to do “forward computations” and “get results” (yes, often with <a href='https://www.wolfram.com/mathematica/'>Mathematica</a>). Of course, within those forward computations, there are many operations—like <tt><a href='https://reference.wolfram.com/language/ref/Reduce.html'>Reduce</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/SatisfiableQ.html'>SatisfiableQ</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/PrimeQ.html'>PrimeQ</a></tt>, etc.—that essentially work by internally finding proofs, but their output is “just results” not “why-it’s-true explanations”. (<tt><a href='https://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt>—as its name suggests—is a case where an actual proof is generated.)</p>
<p>Whether one’s thinking in terms of axioms and proofs, or just in terms of “getting results”, one’s ultimately always dealing with computation. But the key question is how that computation is “packaged”. Is one dealing with arbitrary, raw, low-level constructs, or with something higher level and more “humanized”?</p>
<p>As we’ve discussed, at the lowest level, everything can be represented in terms of the ruliad. But when we do both mathematics and physics what we’re perceiving is not the raw ruliad, but rather just certain high-level features of it. But how should these be represented? Ultimately we need a language that we humans understand, that captures the particular features of the underlying raw computation that we’re interested in.</p>
<p>From our computational point of view, mathematical notation can be thought of as a rough attempt at this. But the most complete and systematic effort in this direction is the one I’ve worked towards for the past several decades: what’s now the <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>full-scale computational language</a> that is the Wolfram Language (and Mathematica).</p>
<p>Ultimately the Wolfram Language can represent any computation. But the point is to make it easy to represent the computations that people care about: to capture the high-level constructs (whether they’re polynomials, geometrical objects or chemicals) that are part of modern human thinking. </p>
<p>The <a href='https://livestreams.stephenwolfram.com/category/live-ceoing/'>process of language design</a> (on which, yes, I’ve spent immense amounts of time) is a curious mixture of art and science, that requires both drilling down to the essence of things, and creatively devising ways to make those things accessible and cognitively convenient for humans. At some level it’s a bit like deciding on words as they might appear in a human language—but it’s something more structured and demanding.</p>
<p>And it’s our best way of <a href='https://writings.stephenwolfram.com/2014/08/computational-knowledge-and-the-future-of-pure-mathematics/'>representing “high-level” mathematics</a>: mathematics not at the axiomatic (or below) “machine code” level, but instead at the level human mathematicians typically think about it. </p>
<p>We’ve definitely not “finished the job”, though. Wolfram Language currently has around 7000 built-in primitive constructs, of which at least a <a href='https://reference.wolfram.com/language/#HigherMathematicalComputation'>couple of thousand can be considered “primarily mathematical”</a>. But while the language has long contained constructs for <a href='https://reference.wolfram.com/language/guide/AlgebraicNumbers.html'>algebraic numbers</a>, <a href='https://reference.wolfram.com/language/guide/RandomProcesses.html'>random walks</a> and <a href='https://reference.wolfram.com/language/guide/GroupTheory.html'>finite groups</a>, it doesn’t (yet) have built-in constructs for algebraic topology or K-theory. In recent years we’ve been <a href='https://blog.wolfram.com/2016/12/22/the-semantic-representation-of-pure-mathematics/'>slowly adding more kinds of pure-mathematical constructs</a>—but to reach the frontiers of modern human mathematics might require <a href='https://writings.stephenwolfram.com/2014/08/computational-knowledge-and-the-future-of-pure-mathematics/'>perhaps a thousand more</a>. And to make them useful all of them will have to be carefully and coherently designed.</p>
<p>The great power of the Wolfram Language comes not only from being able to represent things computationally, but also being able to compute with things, and get results. And it’s one thing to be able to represent some pure mathematical construct—but quite another to be able to broadly compute with it.</p>
<p>The Wolfram Language in a sense emphasizes the “forward computation” workflow. Another workflow that’s achieved some popularity in recent years is the <a href='https://arxiv.org/abs/2101.07758' target=_blank rel=noopener>proof assistant</a> one—in which one defines a result and then as a human one tries to fill in the steps to create a proof of it, with the computer verifying that the steps correctly fit together. If the steps are low level then what one has is something like typical automated theorem proving—though now being attempted with human effort rather than being done automatically. </p>
<p>In principle one can build up to much higher-level “steps” in a modular way. But now the problem is essentially the same as in computational language design: to create primitives that are both precise enough to be immediately handled computationally, and “cognitively convenient” enough to be usefully understood by humans. And realistically once one’s done the design (which, after decades of <a href='https://livestreams.stephenwolfram.com/category/live-ceoing/'>working on such things, I can say is hard</a>), there’s likely to be much more “leverage” to be had by letting the computer just do computations than by expending human effort (even with computer assistance) to put together proofs.</p>
<p>One might think that a proof would be important in being sure one’s got the right answer. But as we’ve discussed, that’s a complicated concept when one’s dealing with human-level mathematics. If we go to a full axiomatic level it’s very typical that there will be all sorts of pedantic conditions involved. Do we have the “right answer” if underneath we assume that 1/0=0? Or does this not matter at the “fluid dynamics” level of human mathematics? </p>
<p>One of the great things about <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>computational language</a> is that—at least if it’s written well—it provides a <a href='https://writings.stephenwolfram.com/2017/11/what-is-a-computational-essay/'>clear and succinct specification of things</a>, just like a good “human proof” is supposed to. But computational language has the great advantage that it can be run to create new results—rather than just being used to check something.</p>
<p>It’s worth mentioning that there’s another potential workflow beyond “compute a result” and “find a proof”. It’s “here’s an object or a set of constraints for creating one; now find interesting facts about this”. Type into <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a> something like <a href='https://www.wolframalpha.com/input?i=sin%5E4%28x%29'>sin^4(x)</a> (and, yes, there’s “natural math understanding” needed to translate something like this to precise Wolfram Language). There’s nothing obvious to “compute” here. But instead what Wolfram|Alpha does is to “say interesting things” about this—like what its maximum or its integral over a period is.</p>
<p>In principle this is a bit like exploring the entailment cone—but with the crucial additional piece of picking out which entailments will be “interesting to humans”. (And implementationally it’s a very deeply constrained exploration.) </p>
<p>It’s interesting to compare these various workflows with what one can call <a href='https://www.wolframscience.com/nks/notes-3-12--history-of-experimental-mathematics/'>experimental mathematics</a>. Sometimes this term is basically just applied to studying explicit examples of known mathematical results. But the much more powerful concept is to imagine discovering new mathematical results by “<a href='https://writings.stephenwolfram.com/2017/03/two-hours-of-experimental-mathematics/'>doing experiments</a>”.</p>
<p>Usually these experiments are not done at the level of axioms, but rather at a considerably higher level (e.g. with things specified using the primitives of Wolfram Language). But the typical pattern is to enumerate a large number of cases and to see what happens—with the most exciting result being the discovery of some unexpected phenomenon, regularity or irregularity. </p>
<p>This type of approach is in a sense much more general than mathematics: it can be applied to anything computational, or anything described by rules. And indeed it is the core methodology of <a href='https://writings.stephenwolfram.com/2021/09/charting-a-course-for-complexity-metamodeling-ruliology-and-more/#the-pure-basic-science-of-ruliology'>ruliology</a>, and what it does to explore the computational universe—and the ruliad.</p>
<p>One can think of the typical approach in pure mathematics as representing a gradual expansion of the entailment fabric, with humans checking (perhaps with a computer) statements they consider adding. Experimental mathematics effectively strikes out in some “direction” in metamathematical space, potentially jumping far away from the entailment fabric currently within the purview of some mathematical observer.</p>
<p>And one feature of this—very common in ruliology—is that one may <a href='https://www.wolframscience.com/nks/p753--undecidability-and-intractability/'>run into undecidability</a>. The “nearby” entailment fabric of the mathematical observer is in a sense “filled in enough” that it doesn’t typically have infinite proof paths of the kind associated with undecidability. But something reached by experimental mathematics has no such guarantee. </p>
<p>What’s good of course is that experimental mathematics can discover phenomena that are “far away” from existing mathematics. But (like in automated theorem proving) there isn’t necessarily any human-accessible “narrative explanation” (and if there’s undecidability there may be no “finite explanation” at all).</p>
<p>So how does this all relate to our whole discussion of new ideas about the foundations of mathematics? In the past we might have thought that mathematics must ultimately progress just by working out more and more consequences of particular axioms. But what we’ve argued is that there’s a fundamental infrastructure even far below axiom systems—whose low-level exploration is the subject of ruliology. But the thing we call mathematics is really something higher level. </p>
<p>Axiom systems are some kind of intermediate modeling layer—a kind of “assembly language” that can be used as a wrapper above the “raw ruliad”. In the end, we’ve argued, the details of this language won’t matter for typical things we call mathematics. But in a sense the situation is very much like in practical computing: we want an “assembly language” that makes it easiest to do the typical high-level things we want. In practical computing that’s often achieved with RISC instruction sets. In mathematics we typically imagine using axiom systems like ZFC. But—as reverse mathematics has tended to indicate—there are probably much more accessible axiom systems that could be used to reach the mathematics we want. (And ultimately even <a href='https://www.wolframscience.com/nks/notes-12-9--set-theory-and-axioms/'>ZFC is limited</a> in what it can reach.)</p>
<p>But if we could find such a “RISC” axiom system for mathematics it has the potential to make practical more extensive exploration of the entailment cone. It’s also conceivable—though not guaranteed—that it could be “designed” to be more readily understood by humans. But in the end actual human-level mathematics will typically operate at a level far above it. </p>
<p>And now the question is whether the “physicalized general laws of mathematics” that we’ve discussed can be used to make conclusions directly about human-level mathematics. We’ve identified a few features—like the very possibility of high-level mathematics, and the expectation of extensive dualities between mathematical fields. And we know that basic commonalities in structural features can be captured by things like category theory. But the question is what kinds of deeper general features can be found, and used.</p>
<p>In physics our everyday experience immediately makes us think about “large-scale features” far above the level of atoms of space. In mathematics our typical experience so far has been at a lower level. So now the challenge is to think more globally, more metamathematically and, in effect, more like in physics.</p>
<p>In the end, though, what we call mathematics is what mathematical observers perceive. So if we ask about the future of mathematics we must also ask about the future of mathematical observers.</p>
<p>If one looks at the history of physics there was already much to understand just on the basis of what we humans could “observe” with our unaided senses. But gradually as more kinds of detectors became available—from microscopes to telescopes to amplifiers and so on—the domain of the physical observer was expanded, and the perceived laws of physics with it. And today, as the practical computational capability of observers increases, we can expect that we’ll gradually see new kinds of physical laws (say associated with hitherto “it’s just random” molecular motion or other features of systems). </p>
<p>As we’ve discussed above, we can see our characteristics as physical observers as being associated with “experiencing” the ruliad from one particular “vantage point” in rulial space (just as we “experience” physical space from one particular vantage point in physical space). Putative “aliens” might experience the ruliad from a different vantage point in rulial space—leading them to have laws of physics utterly incoherent with our own. But as our technology and ways of thinking progress, we can expect that we’ll gradually be able to expand our “presence” in rulial space (just as we do with spacecraft and telescopes in physical space). And so we’ll be able to “experience” different laws of physics.</p>
<p><a name='paramathematics'></a>We can expect the story to be very similar for mathematics. We have “experienced” mathematics from a certain vantage point in the ruliad. Putative aliens might experience it from another point, and build their own “paramathematics” utterly incoherent with our mathematics. The “natural evolution” of our mathematics corresponds to a gradual expansion in the entailment fabric, and in a sense a gradual spreading in rulial space. Experimental mathematics has the potential to launch a kind of “metamathematical space probe” which can discover quite different mathematics. At first, though, this will tend to be a piece of “raw ruliology”. But, if pursued, it potentially points the way to a kind of “colonization of rulial space” that will gradually expand the domain of the mathematical observer.</p>
<p>The physicalized general laws of mathematics we’ve discussed here are based on features of current mathematical observers (which in turn are highly based on current physical observers). What these laws would be like with “enhanced” mathematical observers we don’t yet know. </p>
<p>Mathematics as it is today is a great example of the “humanization of raw computation”. Two other examples are theoretical physics and computational language. And in all cases there is the potential to gradually expand our scope as observers. It’ll no doubt be a mixture of technology and methods along with expanded cognitive frameworks and understanding. We can use ruliology—or experimental mathematics—to “jump out” into the raw ruliad. But most of what we’ll see is “non-humanized” computational irreducibility. </p>
<p>But perhaps somewhere there’ll be another slice of computational reducibility: a different “island” on which “alien” general laws can be built. But for now we exist on our current “island” of reducibility. And on this island we see the particular kinds of general laws that we’ve discussed. We saw them first in physics. But there <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>we discovered that they could emerge</a> quite generically from a <a href='https://www.wolframphysics.org/bulletins/2021/10/multicomputation-with-numbers-the-case-of-simple-multiway-systems' target=_blank rel=noopener>lower-level computational structure</a>—and ultimately from the very general structure that we call the ruliad. And now, as we’ve discussed here, we realize that the thing we call mathematics is actually based on exactly the same foundations—with the result that it should show the same kinds of general laws.</p>
<p>It’s a rather different view of mathematics—and its foundations—than we’ve been able to form before. But the deep connection with physics that we’ve discussed allows us to now have a physicalized view of metamathematics, which informs both what mathematics really is now, and what the future can hold for the remarkable pursuit that we call mathematics. </p>
<style type='text/css'>
	#blog #content .post_content h2#some-personal-history-the-evolution-of-these-ideas {
    border-top: solid 1px #ccc;
    padding-top: 35px;
    margin-top: 25px;
</style>
<h2 id='some-personal-history-the-evolution-of-these-ideas'>Some Personal History: The Evolution of These Ideas</h2>
<p>It’s been a long personal journey to get to the ideas described here—stretching back nearly 45 years. Parts have been quite direct, steadily building over the course of time. But other parts have been surprising—even shocking. And to get to where we are now has required me to rethink some very long-held assumptions, and adopt what I had believed was a rather different way of thinking—even though, ironically, I’ve realized in the end that many aspects of this way of thinking pretty much mirror what I’ve done all along at a practical and technological level.</p>
<p>Back in the late 1970s as a young theoretical physicist I had discovered the “secret weapon” of using computers to do mathematical calculations. By 1979 I had outgrown existing systems and <a href='https://writings.stephenwolfram.com/2013/06/there-was-a-time-before-mathematica/'>decided to build my own</a>. But what should its foundations be? A key goal was to represent the processes of mathematics in a computational way. I thought about the methods I’d found effective in practice. I studied the history of mathematical logic. And in the end I came up with what seemed to me at the time the most obvious and direct approach: that everything should be based on transformations for symbolic expressions.</p>
<p>I was pretty sure this was actually a good general approach to computation of all kinds—and the system we released in 1981 was named <a href='https://content.wolfram.com/uploads/sites/34/2020/07/smp-reference-manual.pdf' target=_blank rel=noopener>SMP (“Symbolic Manipulation Program”)</a> to reflect this generality. History has indeed borne out the strength of the symbolic expression paradigm—and it’s from that we’ve been able to build the huge tower of technology that is the <a href='https://writings.stephenwolfram.com/2019/05/what-weve-built-is-a-computational-language-and-thats-very-important/'>modern Wolfram Language</a>. But all along mathematics has been an important use case—and in effect we’ve now seen four decades of validation that the core idea of transformations on symbolic expressions is a good metamodel of mathematics.</p>
<p>When <a href='https://www.wolfram.com/mathematica/scrapbook/'>Mathematica was first released in 1988</a> we called it “A System for Doing Mathematics by Computer”, where by “doing mathematics” we meant doing computations in mathematics and getting results. People soon did all sorts of experiments on using Mathematica to create and present proofs. But the overwhelming majority of actual usage was for directly computing results—and almost nobody seemed interested in seeing the inner workings, presented as a proof or otherwise. </p>
<p>But in the 1980s I had <a href='https://www.wolframscience.com/nks/p17--the-personal-story-of-the-science-in-this-book/'>started my work on exploring the computational universe of simple programs</a> like cellular automata. And doing this was all about looking at the ongoing behavior of systems—or in effect the (often computationally irreducible) history of computations. And even though I sometimes talked about using my computational methods to do “experimental mathematics”, I don’t think I particularly thought about the actual progress of the computations I was studying as being like mathematical processes or proofs.</p>
<p>In 1991 I started working on what became <em><a href='https://www.wolframscience.com/nks/'>A New Kind of Science</a></em>, and in doing so I tried to systematically study possible forms of computational processes—and I was soon led to <a href='https://www.wolframscience.com/nks/p88--sequential-substitution-systems/'>substitution systems</a> and <a href='https://www.wolframscience.com/nks/p102--symbolic-systems/'>symbolic systems</a> which I viewed in their different ways as being minimal idealizations of what would become Wolfram Language, as well as to <a href='https://www.wolframscience.com/nks/p204--multiway-systems/'>multiway systems</a>. There were some areas to which I was pretty sure the methods of <em>A New Kind of Science</em> would apply. Three that I wasn’t sure about were biology, physics and mathematics.</p>
<p>But by the late 1990s I had worked out quite a bit about the first two, and started looking at mathematics. I knew that Mathematica and what would become Wolfram Language were good representations of “practical mathematics”. But I assumed that to understand the foundations of mathematics I should look at the traditional low-level representation of mathematics: axiom systems. </p>
<p>And in doing this I was soon able to simplify to multiway systems—with proofs being paths:</p>
<p><a alt="Page 775" title="Page 775" href="https://wolframscience.com/nks/p775--implications-for-mathematics-and-its-foundations/"><img alt="Page 775—click to enlarge" title="Page 775" src="https://content.wolfram.com/uploads/sites/43/2022/08/nks-775-2xA.png" style="width:100%;max-width: 309px;height:auto;"></a><a alt="Page 777" title="Page 777" href="https://wolframscience.com/nks/p777--implications-for-mathematics-and-its-foundations/"><img alt="Page 777—click to enlarge" title="Page 777" src="https://content.wolfram.com/uploads/sites/43/2022/08/nks-777-2xA.png" style="width:100%;max-width: 311px;height:auto;"></a></p>
<p>I had long wondered what the detailed relationships between things like my idea of <a href='https://www.wolframscience.com/nks/p737--computational-irreducibility/'>computational irreducibility</a> and earlier results in mathematical logic were. And I was pleased at how well many things could be clarified—and explicitly illustrated—by thinking in terms of multiway systems. </p>
<p>My experience in exploring simple programs in general had led to the conclusion that computational irreducibility and therefore undecidability were quite ubiquitous. So I <a href='https://www.wolframscience.com/nks/p793--implications-for-mathematics-and-its-foundations/'>considered it quite a mystery</a> why undecidability seemed so rare in the mathematics that mathematicians typically did. I suspected that in fact undecidability was lurking close at hand—and I got some evidence of that by doing experimental mathematics. But why weren’t mathematicians running into this more? I came to suspect that it had something to do with the history of mathematics, and with the idea that mathematics had tended to expand its subject matter by asking “How can this be generalized while still having such-and-such a theorem be true?”</p>
<p>But I also wondered about the particular axiom systems that had historically been used for mathematics. They all fit easily on a couple of pages. But why these and not others? Following my general “ruliological” approach of exploring all possible systems I started just <a href='https://www.wolframscience.com/nks/p804--implications-for-mathematics-and-its-foundations/'>enumerating possible axiom systems</a>—and soon found out that many of them had rich and complicated implications. </p>
<p>But where among these possible systems did the axiom systems historically used in mathematics lie? I did searches, and at about the 50,000th axiom was able to <a href='https://www.wolframscience.com/nks/notes-12-9--searching-for-logic-axioms/'>find the simplest axiom system for Boolean algebra</a>. Proving that it was correct gave me my first serious <a href='https://www.wolframscience.com/nks/p811--implications-for-mathematics-and-its-foundations/'>experience with automated theorem proving</a>.</p>
<p>But what kind of a thing was the proof? I made some attempt to understand it, but it was clear that it <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>wasn&#8217;t something a human could readily understand</a>—and reading it felt a bit like trying to read machine code. I recognized that the problem was in a sense a lack of “human connection points”—for example of intermediate lemmas that (like words in a human language) had a contextualized significance. I wondered about how one could find lemmas that “humans would care about”? And I was surprised to discover that at least for the “named theorems” of Boolean algebra a <a href='https://www.wolframscience.com/nks/p817--implications-for-mathematics-and-its-foundations/'>simple criterion could reproduce them</a>. </p>
<p>Quite a few years went by. Off and on I thought about two ultimately related issues. One was how to represent the <a href='https://reference.wolfram.com/language/ref/Trace.html'>execution histories</a> of Wolfram Language programs. And the other was how to represent proofs. In both cases there seemed to be all sorts of detail, and it seemed difficult to have a structure that would capture what would be needed for further computation—or any kind of general understanding.</p>
<p>Meanwhile, in 2009, we released <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a>. One of its features was that it had <a href='https://www.wolframalpha.com/examples/pro-features/step-by-step-solutions/'>“step-by-step” math computations</a>. But these weren’t “general proofs”: rather they were narratives synthesized in very specific ways for human readers. Still, a core concept in Wolfram|Alpha—and the Wolfram Language—is the idea of integrating in knowledge about as many things as possible in the world. We’d done this for cities and movies and lattices and animals and much more. And I thought about doing it for mathematical theorems as well.</p>
<p>We did a <a href='https://www.wolframfoundation.org/programs/FinalReport.pdf' target=_blank rel=noopener>pilot project</a>—on theorems about continued fractions. We trawled through the mathematical literature assessing the difficulty of extending the “natural math understanding” we’d built for Wolfram|Alpha. I <a href='https://writings.stephenwolfram.com/2014/08/computational-knowledge-and-the-future-of-pure-mathematics/'>imagined a workflow</a> which would mix automated theorem generation with theorem search—in which one would define a mathematical scenario, then say “tell me interesting facts about this”. And in 2014 we set about engaging the mathematical community in a <a href='https://www.wolframfoundation.org/programs/computable-archive-of-mathematics.html' target=_blank rel=noopener>large-scale curation effort</a> to formalize the theorems of mathematics. But try as we might, only people already involved in math formalization seemed to care; with few exceptions working mathematicians just didn’t seem to consider it relevant to what they did.</p>
<p>We continued, however, to push slowly forward. We worked with proof assistant developers. We curated various kinds of mathematical structures (like <a href='https://reference.wolfram.com/language/ref/entity/FunctionSpace.html'>function spaces</a>). I had estimated that we’d need more than a thousand new Wolfram Language functions to cover “modern pure mathematics”, but without a clear market we couldn’t motivate the huge design (let alone implementation) effort that would be needed—though, partly in a nod to the intellectual origins of mathematics, we did for example do a project that has succeeded in finally <a href='https://www.wolfram.com/language/12/plane-geometry/euclids-elements.html'>making Euclid-style geometry computable</a>.</p>
<p>Then in the latter part of the 2010s a couple more “proof-related” things happened. Back in 2002 we’d started using equational logic automated theorem proving to get results in functions like <tt><a href='https://reference.wolfram.com/language/ref/FullSimplify.html'>FullSimplify</a></tt>. But we hadn’t figured out how to present the proofs that were generated. In 2018 we finally introduced <tt><a href='https://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt>—allowing programmatic access to proofs, and making it feasible for me to explore collections of proofs in bulk.</p>
<p>I had for decades been interested in what I’ve called “<a href='https://writings.stephenwolfram.com/2016/10/computational-law-symbolic-discourse-and-the-ai-constitution/'>symbolic discourse language</a>”: the extension of the idea of computational language to “everyday discourse”—and to the kind of thing one might want for example to express in legal contracts. And between this and our involvement in the idea of computational contracts, and things like <a href='https://wolframblockchainlabs.com/'>blockchain technology</a>, I started exploring questions of <a href='https://writings.stephenwolfram.com/2016/10/a-short-talk-on-ai-ethics/'>AI ethics</a> and “constitutions”. At this point we’d also started to introduce <a href='https://www.wolfram.com/featureset/machine-learning/'>machine-learning-based functions</a> into the Wolfram Language. And—with my <a href='https://www.wolframscience.com/nks/p810--implications-for-mathematics-and-its-foundations/'>“human incomprehensible” Boolean algebra proof</a> as “empirical data”—I started <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>exploring general questions of explainability</a>, and in effect proof.</p>
<p>And not long after that came the <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/'>surprise breakthrough of our Physics Project</a>. Extending my ideas from the 1990s about computational foundations for fundamental physics it suddenly became possible finally to understand the underlying origins of the main known laws of physics. And core to this effort—and particularly to the <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#the-inevitability-of-quantum-mechanics'>understanding of quantum mechanics</a>—were <a href='https://www.wolframscience.com/nks/p204--multiway-systems/'>multiway systems</a>.</p>
<p>At first we just used the knowledge that multiway systems <a href='https://www.wolframscience.com/nks/p777--implications-for-mathematics-and-its-foundations/'>could also represent axiomatic mathematics</a> and proofs to provide analogies for our thinking about physics (“quantum observers might in effect be doing critical-pair completions”, “causal graphs are like higher categories”, etc.) But then we started wondering whether the phenomenon of the emergence that we’d seen for the familiar laws of physics might also affect mathematics—and whether it could give us something like a “bulk” version of metamathematics.</p>
<p>I had long studied the transition from discrete “computational” elements to “bulk” behavior, first following my interest in the Second Law of thermodynamics, which stretched <a href='https://www.wolframscience.com/nks/p17--the-personal-story-of-the-science-in-this-book/'>all the way back to age 12 in 1972</a>, then following my work on <a href='https://www.wolframscience.com/nks/notes-8-4--history-of-cellular-automaton-fluids/'>cellular automaton fluids in the mid-1980s</a>, and now with the emergence of physical space from underlying hypergraphs in our Physics Project. But what might “bulk” metamathematics be like? </p>
<p>One feature of our Physics Project—in fact shared with thermodynamics—is that certain aspects of its observed behavior depend very little on the details of its components. But what did they depend on? We realized that it all had to do with the observer—and their interaction (according to what <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/'>I&#8217;ve described as the 4th paradigm for science</a>) with the general “multicomputational” processes going on underneath. For physics we had some idea what characteristics an “observer like us” might have (and actually they seemed to be <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>closely related to our notion of consciousness</a>). But what might a “mathematical observer” be like?</p>
<p>In its original framing we talked about our Physics Project as being about “finding the rule for the universe”. But right around the time we launched the project we realized that that wasn’t really the right characterization. And we started talking about <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/' target=_blank rel=noopener>rulial multiway systems</a> that instead “run every rule”—but in which an observer perceives only some small slice, that in particular can show emergent laws of physics.</p>
<p>But what is this “run every rule” structure? In the end it’s something very fundamental: the entangled limit of all possible computations—that I call <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/'>the ruliad</a>. The ruliad basically depends on nothing: it’s unique and its structure is a matter of formal necessity. So in a sense the ruliad “necessarily exists”—and, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>I argued, so must our universe</a>. </p>
<p>But we can think of the ruliad not only as the foundation for physics, but also as the foundation for mathematics. And so, I concluded, if we believe that the physical universe exists, then we must <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-relation-to-mathematics'>conclude—a bit like Plato—that mathematics exists too</a>.</p>
<p>But how did all this relate to axiom systems and ideas about metamathematics? I had two additional pieces of input from the latter half of 2020. First, following up on a note in <em>A New Kind of Science</em>, I had done an <a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>extensive study of the “empirical metamathematics”</a> of the network of the theorems in Euclid, and in a couple of math formalization systems. And second, in celebration of the 100th anniversary of their invention essentially as “primitives for mathematics”, I had done an extensive ruliological and other <a href='https://writings.stephenwolfram.com/2020/12/combinators-a-centennial-view/'>study of combinators</a>.</p>
<p>I <a href='https://livestreams.stephenwolfram.com/category/physics-project-working-sessions'>began to work</a> on this current piece in the fall of 2020, but felt there was something I was missing. Yes, I could study axiom systems using the formalism of our Physics Project. But was this really getting at the essence of mathematics? I had long assumed that axiom systems really were the “raw material” of mathematics—even though I’d long gotten signals they weren’t really a good representation of how serious, aesthetically oriented pure mathematicians thought about things.</p>
<p>In our Physics Project we’d always had as a target to reproduce the known laws of physics. But what should the target be in understanding the foundations of mathematics? It always seemed like it had to revolve around axiom systems and processes of proof. And it felt like validation when it became clear that the same concepts of “substitution rules applied to expressions” seemed to span my earliest efforts to make math computational, the underlying structure of our Physics Project, and “metamodels” of axiom systems. </p>
<p>But somehow the ruliad—and the idea that if physics exists so must math—made me realize that this wasn’t ultimately the right level of description. And that axioms were some kind of intermediate level, between the “raw ruliad”, and the “humanized” level at which pure mathematics is normally done. At first I found this hard to accept; not only had axiom systems dominated thinking about the foundations of mathematics for more than a century, but they also seemed to fit so perfectly into my personal “symbolic rules” paradigm.</p>
<p>But gradually I got convinced that, yes, I had been wrong all this time—and that axiom systems were in many respects missing the point. The true foundation is the ruliad, and axiom systems are a rather-hard-to-work-with “machine-code-like” description below the inevitable general “physicalized laws of metamathematics” that emerge—and that imply that for observers like us there’s a fundamentally higher-level approach to mathematics. </p>
<p>At first I thought this was incompatible with my general computational view of things. But then I realized: “No, quite the opposite!” All these years I’ve been building the Wolfram Language precisely to connect “at a human level” with computational processes—and with mathematics. Yes, it can represent and deal with axiom systems. But it’s never felt particularly natural. And it’s because they’re at an awkward level—neither at the level of the raw ruliad and raw computation, nor at the level where we as humans define mathematics.</p>
<p>But now, I think, we begin to get some clarity on just what this thing we call mathematics really is. What I’ve done here is just a beginning. But between its explicit computational examples and its conceptual arguments I feel it’s pointing the way to a broad and incredibly fertile new understanding that—even though I didn’t see it coming—I’m very excited is now here. </p>
<h2 id='notes-and-thanks' style='font-size:1.2rem'>Notes &#038; Thanks</h2>
<p style='font-size:90%'>For more than 25 years Elise Cawley has been telling me her thematic (and rather Platonic) view of the foundations of mathematics—and that basing everything on constructed axiom systems is a piece of modernism that misses the point. From what’s described here, I now finally realize that, yes, despite my repeated insistence to the contrary, what she’s been telling me has been on the right track all along!</p>
<p style='font-size:90%'>I’m grateful for extensive help on this project from James Boyd and Nik Murzin, with additional contributions by Brad Klee and Mano Namuduri. Some of the early core technical ideas here arose from discussions with Jonathan Gorard, with additional input from Xerxes Arsiwalla and Hatem Elshatlawy. (Xerxes and Jonathan have now also been <a href='https://arxiv.org/abs/2111.03460' target=_blank rel=noopener>developing connections with homotopy type theory</a>.)</p>
<p style='font-size:90%'>I’ve had helpful background discussions (some recently and some longer ago) with many people, including Richard Assar, Jeremy Avigad, Andrej Bauer, Kevin Buzzard, Mario Carneiro, Greg Chaitin, Harvey Friedman, Tim Gowers, Tom Hales, Lou Kauffman, Maryanthe Malliaris, Norm Megill, Assaf Peretz, Dana Scott, Matthew Szudzik, Michael Trott and Vladimir Voevodsky.</p>
<p style='font-size:90%'>I’d like to recognize <a href='https://www.youtube.com/watch?v=zpDvP47Ppjs' target=_blank rel=noopener>Norm Megill</a>, creator of the <a href='https://us.metamath.org/mm.html' target=_blank rel=noopener>Metamath system</a> used for some of the empirical metamathematics here, who died in December 2021. (Shortly before his death he was also <a href='http://us2.metamath.org/other/wba/mmtheorems.html' target=_blank rel=noopener>working on simplifying the proof</a> of my <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>axiom for Boolean algebra</a>.)</p>
<p style='font-size:90%'>Most of the specific development of this report has been <a href='https://livestreams.stephenwolfram.com/category/physics-project-working-sessions'>livestreamed</a> or <a href='https://livestreams.stephenwolfram.com/category/personal-video-worklogs'>otherwise recorded</a>, and is available—along with <a href='https://www.wolframphysics.org/archives/index/' target=_blank rel=noopener>archives of working notebooks</a>—at the <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Wolfram Physics Project website</a>.</p>
<p style='font-size:90%'>The Wolfram Language code to produce all the images here is directly available by clicking each image. And I should add that this project would have been impossible without the Wolfram Language, both its practical manifestation, and the ideas that it has inspired and clarified. So thanks to everyone involved in the 40+ years of its development and gestation!</p>
<h2 id='graphical-key' style='font-size:1.2rem'>Graphical Key</h2>
<p>	<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/08/36sw0228img1A.png" usemap="#image-map2" alt='Graphical Key' title='Graphical Key' width='564' height='391' /></p>
<map name="image-map2">
<area target="" alt="state/expression" title="state/expression" href="#the-metamodeling-of-axiomatic-mathematics" coords="5,6,345,29" shape="rect">
<area target="" alt="axiom" title="axiom" href="#accumulative-evolution" coords="5,38,348,62" shape="rect">
<area target="" alt="statement/theorem" title="statement/theorem" href="#accumulative-evolution" coords="4,69,347,94" shape="rect">
<area target="" alt="notable theorem" title="notable theorem" href="#empirical-metamathematics" coords="5,101,346,127" shape="rect">
<area target="" alt="hypothesis" title="hypothesis" href="#relations-to-automated-theorem-proving" coords="4,133,350,161" shape="rect">
<area target="" alt="substitution event" title="substitution event" href="#accumulative-evolution" coords="4,165,348,190" shape="rect">
<area target="" alt="cosubstitution event" title="cosubstitution event" href="#beyond-substitution-cosubstitution-and-bisubstitution" coords="4,196,348,225" shape="rect">
<area target="" alt="bisubstitution event" title="bisubstitution event" href="#beyond-substitution-cosubstitution-and-bisubstitution" coords="3,230,347,258" shape="rect">
<area target="" alt="multiway/entailment graph" title="multiway/entailment graph" href="#the-metamodeling-of-axiomatic-mathematics" coords="5,262,348,289" shape="rect">
<area target="" alt="accumulative evolution graph" title="accumulative evolution graph" href="#accumulative-evolution" coords="3,293,348,321" shape="rect">
<area target="" alt="branchial/metamethemaical graph" title="branchial/metamethemaical graph" href="#metamathematical-space" coords="3,358,348,387" shape="rect">
</map>
<style type='text/css'>
#content .post_content #glossarycontainer h3 {
        padding-bottom: 0px;
        margin-bottom: 0px;
        font-weight: 600;
        font-size: 1.05rem;
}#content .post_content #glossarycontainer p {
        padding-top: 0px;
        margin-top: 0px;
        font-size: 90%;
}</style>
<div id="glossarycontainer">
<h2 id='glossary' style='font-size:1.2rem'>Glossary</h2>
<p><em>A glossary of terms that are either new, or used in unfamiliar ways</em></p>
<h3><a href='#proofs-in-accumulative-systems'>accumulative system</a></h3>
<p>A system in which states are rules and rules update rules. Successive steps in the evolution of such a system are collections of rules that can be applied to each other.</p>
<h3><a href='#axiomatic-level'>axiomatic level</a></h3>
<p>The traditional foundational way to represent mathematics using axioms, viewed here as being intermediate between the raw ruliad and human-scale mathematics.</p>
<h3><a href='#beyond-substitution-cosubstitution-and-bisubstitution'>bisubstitution</a></h3>
<p>The combination of substitution and cosubstitution that corresponds to the complete set of possible transformations to make on expressions containing patterns.</p>
<h3><a href='#branchial-space'>branchial space</a></h3>
<p>Space corresponding to the limit of a branchial graph that provides a map of common ancestry (or entanglement) in a multiway graph.</p>
<h3><a href='#beyond-substitution-cosubstitution-and-bisubstitution'>cosubstitution</a></h3>
<p>The dual operation to substitution, in which a pattern expression that is to be transformed is specialized to allow a given rule to match it.</p>
<h3><a href='#eme'>eme</a></h3>
<p>The smallest element of existence according to our framework. In physics it can be identified as an “atom of space”, but in general it is an entity whose only internal attribute is that it is distinct from others.</p>
<h3><a href='#entailment-cone'>entailment cone</a></h3>
<p>The expanding region of a multiway graph or token-event graph affected by a particular node. The entailment cone is the analog in metamathematical space of a light cone in physical space.</p>
<h3><a href='#entailment-fabric'>entailment fabric</a></h3>
<p>A piece of metamathematical space constructed by knitting together many small entailment cones. An entailment fabric is a rough model for what a mathematical observer might effectively perceive. </p>
<h3><a href='#entailment-graph'>entailment graph</a></h3>
<p>A combination of entailment cones starting from a collection of initial nodes.</p>
<h3><a href='#expression-rewriting'>expression rewriting</a></h3>
<p>The process of rewriting (tree-structured) symbolic expressions according to rules for symbolic patterns. (Called “operator systems” in <em>A New Kind of Science</em>. Combinators are a special case.)</p>
<h3><a href='#mathematical-observer'>mathematical observer</a></h3>
<p>An entity sampling the ruliad as a mathematician might effectively do it. Mathematical observers are expected to have certain core human-derived characteristics in common with physical observers. </p>
<h3><a href='#metamathematical-space'>metamathematical space</a></h3>
<p>The space in which mathematical expressions or mathematical statements can be considered to lie. The space can potentially acquire a geometry as a limit of its construction through a branchial graph.</p>
<h3><a href='#multiway-graph'>multiway graph</a></h3>
<p>A graph that represents an evolution process in which there are multiple outcomes from a given state at each step. Multiway graphs are central to our Physics Project and to the multicomputational paradigm in general.</p>
<h3><a href='#paramathematics'>paramathematics</a></h3>
<p>Parallel analogs of mathematics corresponding to different samplings of the ruliad by putative aliens or others.</p>
<h3><a href='#pattern-expression'>pattern expression</a></h3>
<p>A symbolic expression that involves pattern variables (<em>x</em>_ etc. in Wolfram Language, or ∀ quantifiers in mathematical logic).</p>
<h3><a href='#physicalization-of-metamathematics'>physicalization of metamathematics</a></h3>
<p>The concept of treating metamathematical constructs like elements of the physical universe. </p>
<h3><a href='#entailment-cone'>proof cone</a></h3>
<p>Another term for the entailment cone.</p>
<h3><a href='#proof-graph'>proof graph</a></h3>
<p>The subgraph in a token-event graph that leads from axioms to a given statement.</p>
<h3><a href='#proof-path'>proof path</a></h3>
<p>The path in a multiway graph that shows equivalence between expressions, or the subgraph in a token-event graph that shows the constructibility of a given statement.</p>
<h3><a href='#ruliad'>ruliad</a></h3>
<p>The entangled limit of all possible computational processes, that is posited to be the ultimate foundation of both physics and mathematics.</p>
<h3><a href='#rulial-space'>rulial space</a></h3>
<p>The limit of rulelike slices taken from a foliation of the ruliad in time. The analog in the rulelike “direction” of branchial space or physical space.</p>
<h3><a href='#shredding-of-observers'>shredding of observers</a></h3>
<p>The process by which an observer who has aggregated statements in a localized region of metamathematical space is effectively pulled apart by trying to cover consequences of these statements.</p>
<h3><a href='#the-underlying-structure-of-mathematics-and-physics'>statement</a></h3>
<p>A symbolic expression, often containing a two-way rule, and often derivable from axioms, and thus representing a lemma or theorem.</p>
<h3><a href='#substitution-event'>substitution event</a></h3>
<p>An update event in which a symbolic expression (which may be a rule) is transformed by substitution according to a given rule.</p>
<h3><a href='#token-event-graph'>token-event graph</a></h3>
<p>A graph indicating the transformation of expressions or statements (“tokens”) through updating events.</p>
<h3><a href='#two-way-rule'>two-way rule</a></h3>
<p>A transformation rule for pattern expressions that can be applied in both directions (indicated with <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/double-arrowA.png" style='margin-bottom:4px' width='20' height='22' align='absmiddle'></span>). </p>
<h3><a href='#uniquification'>uniquification</a></h3>
<p>The process of giving different names to variables generated through different events.</p>
</div>
<h2 id='annotated-bibliography'><img src="https://content.wolfram.com/uploads/sites/43/2022/08/biblio-icon2A.png" width='164' style="float:left; margin-right:5px; margin-top:-7px; margin-bottom:30px;"><a href="https://www.wolframcloud.com/obj/sw-blog/Metamathematics/bibliography.pdf">Annotated Bibliography &#187;</a></h2>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2022/03/the-physicalization-of-metamathematics-and-its-implications-for-the-foundations-of-mathematics/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Launching Version 13.0 of Wolfram Language + Mathematica</title>
		<link>https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/</link>
		<comments>https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/#comments</comments>
		<pubDate>Mon, 13 Dec 2021 20:19:32 +0000</pubDate>
		<dc:creator><![CDATA[Stephen Wolfram]]></dc:creator>
				<category><![CDATA[Mathematica]]></category>
		<category><![CDATA[New Technology]]></category>
		<category><![CDATA[Wolfram Language]]></category>
		<category><![CDATA[Recent Release]]></category>
		<category><![CDATA[Version Release]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=33886</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2021/11/version-13-icon.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>ImageStitch RegionFit TimeSystemConvert TrainImageContentDetector EdgeChromaticNumber ChemicalFormula BioSequencePlot GeoGraphValuePlot TrainTextContentDetector ConcaveHullMesh SpatialEstimate SnippetsVideo ChemicalReaction DominatorTreeGraph $ContextAliases FindRegionTransform WebItem FindEdgeColoring CenteredInterval OverlayVideo ListVectorDisplacementPlot FindSubgraphIsomorphism TourVideo CSGRegion ListVectorDisplacementPlot3D DrazinInverse DualPlanarGraph VariogramModel VectorDisplacementPlot CSGRegionTree CoulombH1 VectorDisplacementPlot3D NetUnfold PointLight CoulombH2 CompleteIntegral FlightData BilateralZTransform AttachedCell GridVideo Torus RegionSimilar FindIsomorphicSubgraph GradientFittedMesh TreeMapAt DirectionalLight FindVertexColoring VertexChromaticNumber RegionCongruent Adjugate CoulombG FindIsomers SequenceIndicesLayer FunctionPoles EstimatedVariogramModel [&#8230;]]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2021/11/version-13-icon.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><style type='text/css'>
@keyframes fadein {from {opacity: 0;} to {opacity: 1;}}
.initial_hidden {opacity: 0;}
.fade_this_in {animation: fadein 1s;opacity:1;}
div#wordcloud {transform-origin: top left;}
@media (max-width: 750px) {div#wordcloud{transform: scale(.9);}}
@media (max-width: 650px) {div#wordcloud{transform: scale(.82);}}
@media (max-width: 560px) {div#wordcloud{transform: scale(.7);}}
@media (max-width: 480px) {div#wordcloud{transform: scale(.6);}}
@media (max-width: 400px) {div#wordcloud{transform: scale(.55);}}
@media (max-width: 359px) {div#wordcloud{transform: scale(.5);}}
#wordcloud a{text-decoration:none;
	-webkit-transition-duration: 1s;-moz-transition-duration: 1s;-o-transition-duration: 1s;transition-duration: 1s;
	-webkit-transition-property: color;-moz-transition-property: color;-o-transition-property: color;transition-property: color;
}
#wordcloud a:hover {
	-webkit-transition-duration: 0s;-moz-transition-duration: 0s;-o-transition-duration: 0s;transition-duration: 0s;
	-webkit-transition-property: color;-moz-transition-property: color;-o-transition-property: color;transition-property: color;}
#ImageStitch {z-index:5235; transform: translate(-50%, -50%); position:absolute; left:360.0px; top:178.524px;font-size:3.43091em;} #ImageStitch a, #ImageStitch a:link, #ImageStitch a:active, #ImageStitch a:visited {color:#20A1A3;}  #ImageStitch a:hover {opacity:.7;}
#RegionFit {z-index:5364; transform: translate(-50%, -50%); position:absolute; left:510.47px; top:176.555px;font-size:3.33792em;} #RegionFit a, #RegionFit a:link, #RegionFit a:active, #RegionFit a:visited {color:#A16BBA;}  #RegionFit a:hover {opacity:.7;}
#TimeSystemConvert {z-index:6293; transform: translate(-50%, -50%); position:absolute; left:360.0px; top:108.1px;font-size:2.66921em;} #TimeSystemConvert a, #TimeSystemConvert a:link, #TimeSystemConvert a:active, #TimeSystemConvert a:visited {color:#FF9B00;}  #TimeSystemConvert a:hover {opacity:.7;}
#TrainImageContentDetector {z-index:6331; transform: translate(-50%, -50%); position:absolute; left:360.0px; top:131.0px;font-size:2.64136em;} #TrainImageContentDetector a, #TrainImageContentDetector a:link, #TrainImageContentDetector a:active, #TrainImageContentDetector a:visited {color:#A16BBA;}  #TrainImageContentDetector a:hover {opacity:.7;}
#EdgeChromaticNumber {z-index:6335; transform: translate(-50%, -50%); position:absolute; left:358.53px; top:153.408px;font-size:2.63894em;} #EdgeChromaticNumber a, #EdgeChromaticNumber a:link, #EdgeChromaticNumber a:active, #EdgeChromaticNumber a:visited {color:#CA3300;}  #EdgeChromaticNumber a:hover {opacity:.7;}
#ChemicalFormula {z-index:6338; transform: translate(-50%, -50%); position:absolute; left:164.438px; top:200.194px;font-size:2.63686em;} #ChemicalFormula a, #ChemicalFormula a:link, #ChemicalFormula a:active, #ChemicalFormula a:visited {color:#5787CE;}  #ChemicalFormula a:hover {opacity:.7;}
#BioSequencePlot {z-index:6384; transform: translate(-50%, -50%); position:absolute; left:354.609px; top:205.118px;font-size:2.6037em;} #BioSequencePlot a, #BioSequencePlot a:link, #BioSequencePlot a:active, #BioSequencePlot a:visited {color:#20A1A3;}  #BioSequencePlot a:hover {opacity:.7;}
#GeoGraphValuePlot {z-index:6409; transform: translate(-50%, -50%); position:absolute; left:356.079px; top:86.9229px;font-size:2.58535em;} #GeoGraphValuePlot a, #GeoGraphValuePlot a:link, #GeoGraphValuePlot a:active, #GeoGraphValuePlot a:visited {color:#CA3300;}  #GeoGraphValuePlot a:hover {opacity:.7;}
#TrainTextContentDetector {z-index:6410; transform: translate(-50%, -50%); position:absolute; left:360.0px; top:64.7613px;font-size:2.58462em;} #TrainTextContentDetector a, #TrainTextContentDetector a:link, #TrainTextContentDetector a:active, #TrainTextContentDetector a:visited {color:#CA3300;}  #TrainTextContentDetector a:hover {opacity:.7;}
#ConcaveHullMesh {z-index:6453; transform: translate(-50%, -50%); position:absolute; left:154.146px; top:87.9079px;font-size:2.55349em;} #ConcaveHullMesh a, #ConcaveHullMesh a:link, #ConcaveHullMesh a:active, #ConcaveHullMesh a:visited {color:#FF9B00;}  #ConcaveHullMesh a:hover {opacity:.7;}
#SpatialEstimate {z-index:6456; transform: translate(-50%, -50%); position:absolute; left:189.435px; top:178.032px;font-size:2.5519em;} #SpatialEstimate a, #SpatialEstimate a:link, #SpatialEstimate a:active, #SpatialEstimate a:visited {color:#CA3300;}  #SpatialEstimate a:hover {opacity:.7;}
#SnippetsVideo {z-index:6568; transform: translate(-50%, -50%); position:absolute; left:538.897px; top:88.8929px;font-size:2.47125em;} #SnippetsVideo a, #SnippetsVideo a:link, #SnippetsVideo a:active, #SnippetsVideo a:visited {color:#20A1A3;}  #SnippetsVideo a:hover {opacity:.7;}
#ChemicalReaction {z-index:7213; transform: translate(-50%, -50%); position:absolute; left:569.775px; top:50.4793px;font-size:2.00689em;} #ChemicalReaction a, #ChemicalReaction a:link, #ChemicalReaction a:active, #ChemicalReaction a:visited {color:#CA3300;}  #ChemicalReaction a:hover {opacity:.7;}
#DominatorTreeGraph {z-index:7235; transform: translate(-50%, -50%); position:absolute; left:538.407px; top:206.596px;font-size:1.99056em;} #DominatorTreeGraph a, #DominatorTreeGraph a:link, #DominatorTreeGraph a:active, #DominatorTreeGraph a:visited {color:#63B300;}  #DominatorTreeGraph a:hover {opacity:.7;}
#_ContextAliases {z-index:7245; transform: translate(-50%, -50%); position:absolute; left:155.616px; top:68.7011px;font-size:1.98393em;} #_ContextAliases a, #_ContextAliases a:link, #_ContextAliases a:active, #_ContextAliases a:visited {color:#FF6D22;}  #_ContextAliases a:hover {opacity:.7;}
#FindRegionTransform {z-index:7279; transform: translate(-50%, -50%); position:absolute; left:162.478px; top:112.039px;font-size:1.95886em;} #FindRegionTransform a, #FindRegionTransform a:link, #FindRegionTransform a:active, #FindRegionTransform a:visited {color:#FF9B00;}  #FindRegionTransform a:hover {opacity:.7;}
#WebItem {z-index:7291; transform: translate(-50%, -50%); position:absolute; left:378.135px; top:12.0658px;font-size:1.95049em;} #WebItem a, #WebItem a:link, #WebItem a:active, #WebItem a:visited {color:#CA3300;}  #WebItem a:hover {opacity:.7;}
#FindEdgeColoring {z-index:7346; transform: translate(-50%, -50%); position:absolute; left:545.759px; top:114.009px;font-size:1.91124em;} #FindEdgeColoring a, #FindEdgeColoring a:link, #FindEdgeColoring a:active, #FindEdgeColoring a:visited {color:#63B300;}  #FindEdgeColoring a:hover {opacity:.7;}
#CenteredInterval {z-index:7366; transform: translate(-50%, -50%); position:absolute; left:124.248px; top:132.724px;font-size:1.8967em;} #CenteredInterval a, #CenteredInterval a:link, #CenteredInterval a:active, #CenteredInterval a:visited {color:#A16BBA;}  #CenteredInterval a:hover {opacity:.7;}
#OverlayVideo {z-index:7374; transform: translate(-50%, -50%); position:absolute; left:164.929px; top:48.5094px;font-size:1.89107em;} #OverlayVideo a, #OverlayVideo a:link, #OverlayVideo a:active, #OverlayVideo a:visited {color:#A16BBA;}  #OverlayVideo a:hover {opacity:.7;}
#ListVectorDisplacementPlot {z-index:7377; transform: translate(-50%, -50%); position:absolute; left:221.784px; top:225.31px;font-size:1.88838em;} #ListVectorDisplacementPlot a, #ListVectorDisplacementPlot a:link, #ListVectorDisplacementPlot a:active, #ListVectorDisplacementPlot a:visited {color:#5787CE;}  #ListVectorDisplacementPlot a:hover {opacity:.7;}
#FindSubgraphIsomorphism {z-index:7381; transform: translate(-50%, -50%); position:absolute; left:444.792px; top:224.818px;font-size:1.88561em;} #FindSubgraphIsomorphism a, #FindSubgraphIsomorphism a:link, #FindSubgraphIsomorphism a:active, #FindSubgraphIsomorphism a:visited {color:#63B300;}  #FindSubgraphIsomorphism a:hover {opacity:.7;}
#TourVideo {z-index:7394; transform: translate(-50%, -50%); position:absolute; left:655.548px; top:113.024px;font-size:1.87616em;} #TourVideo a, #TourVideo a:link, #TourVideo a:active, #TourVideo a:visited {color:#63B300;}  #TourVideo a:hover {opacity:.7;}
#CSGRegion {z-index:7407; transform: translate(-50%, -50%); position:absolute; left:621.239px; top:165.72px;font-size:1.86688em;} #CSGRegion a, #CSGRegion a:link, #CSGRegion a:active, #CSGRegion a:visited {color:#A16BBA;}  #CSGRegion a:hover {opacity:.7;}
#ListVectorDisplacementPlot3D {z-index:7423; transform: translate(-50%, -50%); position:absolute; left:362.941px; top:46.047px;font-size:1.85563em;} #ListVectorDisplacementPlot3D a, #ListVectorDisplacementPlot3D a:link, #ListVectorDisplacementPlot3D a:active, #ListVectorDisplacementPlot3D a:visited {color:#5787CE;}  #ListVectorDisplacementPlot3D a:hover {opacity:.7;}
#DrazinInverse {z-index:7991; transform: translate(-50%, -50%); position:absolute; left:71.8039px; top:35.7049px;font-size:1.44621em;} #DrazinInverse a, #DrazinInverse a:link, #DrazinInverse a:active, #DrazinInverse a:visited {color:#A16BBA;}  #DrazinInverse a:hover {opacity:.7;}
#DualPlanarGraph {z-index:7995; transform: translate(-50%, -50%); position:absolute; left:630.551px; top:182.464px;font-size:1.44335em;} #DualPlanarGraph a, #DualPlanarGraph a:link, #DualPlanarGraph a:active, #DualPlanarGraph a:visited {color:#FF9B00;}  #DualPlanarGraph a:hover {opacity:.7;}
#VariogramModel {z-index:7996; transform: translate(-50%, -50%); position:absolute; left:290.892px; top:17.9756px;font-size:1.4428em;} #VariogramModel a, #VariogramModel a:link, #VariogramModel a:active, #VariogramModel a:visited {color:#5787CE;}  #VariogramModel a:hover {opacity:.7;}
#VectorDisplacementPlot {z-index:7996; transform: translate(-50%, -50%); position:absolute; left:154.146px; top:148.976px;font-size:1.44274em;} #VectorDisplacementPlot a, #VectorDisplacementPlot a:link, #VectorDisplacementPlot a:active, #VectorDisplacementPlot a:visited {color:#5787CE;}  #VectorDisplacementPlot a:hover {opacity:.7;}
#CSGRegionTree {z-index:8000; transform: translate(-50%, -50%); position:absolute; left:190.415px; top:17.9756px;font-size:1.44em;} #CSGRegionTree a, #CSGRegionTree a:link, #CSGRegionTree a:active, #CSGRegionTree a:visited {color:#A16BBA;}  #CSGRegionTree a:hover {opacity:.7;}
#CoulombH1 {z-index:8001; transform: translate(-50%, -50%); position:absolute; left:63.4717px; top:232.697px;font-size:1.43918em;} #CoulombH1 a, #CoulombH1 a:link, #CoulombH1 a:active, #CoulombH1 a:visited {color:#FF6D22;}  #CoulombH1 a:hover {opacity:.7;}
#VectorDisplacementPlot3D {z-index:8013; transform: translate(-50%, -50%); position:absolute; left:362.941px; top:30.7801px;font-size:1.43058em;} #VectorDisplacementPlot3D a, #VectorDisplacementPlot3D a:link, #VectorDisplacementPlot3D a:active, #VectorDisplacementPlot3D a:visited {color:#A16BBA;}  #VectorDisplacementPlot3D a:hover {opacity:.7;}
#NetUnfold {z-index:8014; transform: translate(-50%, -50%); position:absolute; left:674.663px; top:148.483px;font-size:1.42965em;} #NetUnfold a, #NetUnfold a:link, #NetUnfold a:active, #NetUnfold a:visited {color:#FF6D22;}  #NetUnfold a:hover {opacity:.7;}
#PointLight {z-index:8016; transform: translate(-50%, -50%); position:absolute; left:72.7842px; top:174.585px;font-size:1.4284em;} #PointLight a, #PointLight a:link, #PointLight a:active, #PointLight a:visited {color:#CA3300;}  #PointLight a:hover {opacity:.7;}
#CoulombH2 {z-index:8018; transform: translate(-50%, -50%); position:absolute; left:52.1988px; top:71.1635px;font-size:1.42681em;} #CoulombH2 a, #CoulombH2 a:link, #CoulombH2 a:active, #CoulombH2 a:visited {color:#63B300;}  #CoulombH2 a:hover {opacity:.7;}
#CompleteIntegral {z-index:8021; transform: translate(-50%, -50%); position:absolute; left:616.338px; top:237.13px;font-size:1.42454em;} #CompleteIntegral a, #CompleteIntegral a:link, #CompleteIntegral a:active, #CompleteIntegral a:visited {color:#20A1A3;}  #CompleteIntegral a:hover {opacity:.7;}
#FlightData {z-index:8023; transform: translate(-50%, -50%); position:absolute; left:81.1164px; top:218.415px;font-size:1.42311em;} #FlightData a, #FlightData a:link, #FlightData a:active, #FlightData a:visited {color:#63B300;}  #FlightData a:hover {opacity:.7;}
#BilateralZTransform {z-index:8036; transform: translate(-50%, -50%); position:absolute; left:576.147px; top:250.919px;font-size:1.41388em;} #BilateralZTransform a, #BilateralZTransform a:link, #BilateralZTransform a:active, #BilateralZTransform a:visited {color:#CA3300;}  #BilateralZTransform a:hover {opacity:.7;}
#AttachedCell {z-index:8038; transform: translate(-50%, -50%); position:absolute; left:473.22px; top:254.367px;font-size:1.41282em;} #AttachedCell a, #AttachedCell a:link, #AttachedCell a:active, #AttachedCell a:visited {color:#CA3300;}  #AttachedCell a:hover {opacity:.7;}
#GridVideo {z-index:8041; transform: translate(-50%, -50%); position:absolute; left:43.3764px; top:105.637px;font-size:1.41019em;} #GridVideo a, #GridVideo a:link, #GridVideo a:active, #GridVideo a:visited {color:#FF9B00;}  #GridVideo a:hover {opacity:.7;}
#Torus {z-index:8045; transform: translate(-50%, -50%); position:absolute; left:679.564px; top:161.288px;font-size:1.40726em;} #Torus a, #Torus a:link, #Torus a:active, #Torus a:visited {color:#63B300;}  #Torus a:hover {opacity:.7;}
#RegionSimilar {z-index:8047; transform: translate(-50%, -50%); position:absolute; left:636.433px; top:33.2425px;font-size:1.4065em;} #RegionSimilar a, #RegionSimilar a:link, #RegionSimilar a:active, #RegionSimilar a:visited {color:#5787CE;}  #RegionSimilar a:hover {opacity:.7;}
#FindIsomorphicSubgraph {z-index:8051; transform: translate(-50%, -50%); position:absolute; left:519.292px; top:31.765px;font-size:1.40318em;} #FindIsomorphicSubgraph a, #FindIsomorphicSubgraph a:link, #FindIsomorphicSubgraph a:active, #FindIsomorphicSubgraph a:visited {color:#5787CE;}  #FindIsomorphicSubgraph a:hover {opacity:.7;}
#GradientFittedMesh {z-index:8052; transform: translate(-50%, -50%); position:absolute; left:360.0px; top:253.874px;font-size:1.40267em;} #GradientFittedMesh a, #GradientFittedMesh a:link, #GradientFittedMesh a:active, #GradientFittedMesh a:visited {color:#63B300;}  #GradientFittedMesh a:hover {opacity:.7;}
#TreeMapAt {z-index:8054; transform: translate(-50%, -50%); position:absolute; left:78.6658px; top:49.9868px;font-size:1.40093em;} #TreeMapAt a, #TreeMapAt a:link, #TreeMapAt a:active, #TreeMapAt a:visited {color:#FF9B00;}  #TreeMapAt a:hover {opacity:.7;}
#DirectionalLight {z-index:8056; transform: translate(-50%, -50%); position:absolute; left:462.927px; top:17.9756px;font-size:1.39938em;} #DirectionalLight a, #DirectionalLight a:link, #DirectionalLight a:active, #DirectionalLight a:visited {color:#FF6D22;}  #DirectionalLight a:hover {opacity:.7;}
#FindVertexColoring {z-index:8057; transform: translate(-50%, -50%); position:absolute; left:594.772px; top:132.724px;font-size:1.39905em;} #FindVertexColoring a, #FindVertexColoring a:link, #FindVertexColoring a:active, #FindVertexColoring a:visited {color:#5787CE;}  #FindVertexColoring a:hover {opacity:.7;}
#VertexChromaticNumber {z-index:8057; transform: translate(-50%, -50%); position:absolute; left:174.731px; top:240.577px;font-size:1.39892em;} #VertexChromaticNumber a, #VertexChromaticNumber a:link, #VertexChromaticNumber a:active, #VertexChromaticNumber a:visited {color:#20A1A3;}  #VertexChromaticNumber a:hover {opacity:.7;}
#RegionCongruent {z-index:8066; transform: translate(-50%, -50%); position:absolute; left:463.907px; top:240.577px;font-size:1.39244em;} #RegionCongruent a, #RegionCongruent a:link, #RegionCongruent a:active, #RegionCongruent a:visited {color:#5787CE;}  #RegionCongruent a:hover {opacity:.7;}
#Adjugate {z-index:8070; transform: translate(-50%, -50%); position:absolute; left:657.999px; top:70.6711px;font-size:1.38959em;} #Adjugate a, #Adjugate a:link, #Adjugate a:active, #Adjugate a:visited {color:#A16BBA;}  #Adjugate a:hover {opacity:.7;}
#CoulombG {z-index:8080; transform: translate(-50%, -50%); position:absolute; left:42.3962px; top:118.934px;font-size:1.3827em;} #CoulombG a, #CoulombG a:link, #CoulombG a:active, #CoulombG a:visited {color:#CA3300;}  #CoulombG a:hover {opacity:.7;}
#FindIsomers {z-index:8088; transform: translate(-50%, -50%); position:absolute; left:649.176px; top:7.63346px;font-size:1.37644em;} #FindIsomers a, #FindIsomers a:link, #FindIsomers a:active, #FindIsomers a:visited {color:#5787CE;}  #FindIsomers a:hover {opacity:.7;}
#SequenceIndicesLayer {z-index:8093; transform: translate(-50%, -50%); position:absolute; left:564.384px; top:72.1485px;font-size:1.37329em;} #SequenceIndicesLayer a, #SequenceIndicesLayer a:link, #SequenceIndicesLayer a:active, #SequenceIndicesLayer a:visited {color:#5787CE;}  #SequenceIndicesLayer a:hover {opacity:.7;}
#FunctionPoles {z-index:8103; transform: translate(-50%, -50%); position:absolute; left:658.489px; top:85.938px;font-size:1.36601em;} #FunctionPoles a, #FunctionPoles a:link, #FunctionPoles a:active, #FunctionPoles a:visited {color:#63B300;}  #FunctionPoles a:hover {opacity:.7;}
#EstimatedVariogramModel {z-index:8110; transform: translate(-50%, -50%); position:absolute; left:566.835px; top:147.991px;font-size:1.36076em;} #EstimatedVariogramModel a, #EstimatedVariogramModel a:link, #EstimatedVariogramModel a:active, #EstimatedVariogramModel a:visited {color:#FF6D22;}  #EstimatedVariogramModel a:hover {opacity:.7;}
#InverseBilateralZTransform {z-index:8123; transform: translate(-50%, -50%); position:absolute; left:326.671px; top:240.577px;font-size:1.35158em;} #InverseBilateralZTransform a, #InverseBilateralZTransform a:link, #InverseBilateralZTransform a:active, #InverseBilateralZTransform a:visited {color:#FF6D22;}  #InverseBilateralZTransform a:hover {opacity:.7;}
#FilledTorus {z-index:8125; transform: translate(-50%, -50%); position:absolute; left:47.2975px; top:149.961px;font-size:1.35006em;} #FilledTorus a, #FilledTorus a:link, #FilledTorus a:active, #FilledTorus a:visited {color:#FF9B00;}  #FilledTorus a:hover {opacity:.7;}
#CoulombF {z-index:8126; transform: translate(-50%, -50%); position:absolute; left:62.4915px; top:246.487px;font-size:1.34949em;} #CoulombF a, #CoulombF a:link, #CoulombF a:active, #CoulombF a:visited {color:#63B300;}  #CoulombF a:hover {opacity:.7;}
#FindPlanarColoring {z-index:8127; transform: translate(-50%, -50%); position:absolute; left:608.005px; top:223.34px;font-size:1.34855em;} #FindPlanarColoring a, #FindPlanarColoring a:link, #FindPlanarColoring a:active, #FindPlanarColoring a:visited {color:#CA3300;}  #FindPlanarColoring a:hover {opacity:.7;}
#CoreNilpotentDecomposition {z-index:8128; transform: translate(-50%, -50%); position:absolute; left:197.767px; top:31.765px;font-size:1.348em;} #CoreNilpotentDecomposition a, #CoreNilpotentDecomposition a:link, #CoreNilpotentDecomposition a:active, #CoreNilpotentDecomposition a:visited {color:#CA3300;}  #CoreNilpotentDecomposition a:hover {opacity:.7;}
#SpotLight {z-index:8132; transform: translate(-50%, -50%); position:absolute; left:655.548px; top:196.254px;font-size:1.34478em;} #SpotLight a, #SpotLight a:link, #SpotLight a:active, #SpotLight a:visited {color:#20A1A3;}  #SpotLight a:hover {opacity:.7;}
#QuestionInterface {z-index:8136; transform: translate(-50%, -50%); position:absolute; left:91.4091px; top:19.9455px;font-size:1.34178em;} #QuestionInterface a, #QuestionInterface a:link, #QuestionInterface a:active, #QuestionInterface a:visited {color:#FF9B00;}  #QuestionInterface a:hover {opacity:.7;}
#SetFileFormatProperties {z-index:8591; transform: translate(-50%, -50%); position:absolute; left:247.76px; top:252.397px;font-size:1.0146em;} #SetFileFormatProperties a, #SetFileFormatProperties a:link, #SetFileFormatProperties a:active, #SetFileFormatProperties a:visited {color:#FF6D22;}  #SetFileFormatProperties a:hover {opacity:.7;}
#FileFormatProperties {z-index:8592; transform: translate(-50%, -50%); position:absolute; left:659.959px; top:97.265px;font-size:1.01373em;} #FileFormatProperties a, #FileFormatProperties a:link, #FileFormatProperties a:active, #FileFormatProperties a:visited {color:#A16BBA;}  #FileFormatProperties a:hover {opacity:.7;}
#MIMETypeToFormatList {z-index:8598; transform: translate(-50%, -50%); position:absolute; left:143.363px; top:252.397px;font-size:1.0092em;} #MIMETypeToFormatList a, #MIMETypeToFormatList a:link, #MIMETypeToFormatList a:active, #MIMETypeToFormatList a:visited {color:#FF6D22;}  #MIMETypeToFormatList a:hover {opacity:.7;}
#TreeScan {z-index:8606; transform: translate(-50%, -50%); position:absolute; left:36.5146px; top:130.754px;font-size:1.00388em;} #TreeScan a, #TreeScan a:link, #TreeScan a:active, #TreeScan a:visited {color:#20A1A3;}  #TreeScan a:hover {opacity:.7;}
#BinnedVariogramList {z-index:8637; transform: translate(-50%, -50%); position:absolute; left:90.4289px; top:8.12594px;font-size:0.981157em;} #BinnedVariogramList a, #BinnedVariogramList a:link, #BinnedVariogramList a:active, #BinnedVariogramList a:visited {color:#FF9B00;}  #BinnedVariogramList a:hover {opacity:.7;}
#SolidBoundaryLoadValue {z-index:8647; transform: translate(-50%, -50%); position:absolute; left:560.463px; top:8.12594px;font-size:0.973967em;} #SolidBoundaryLoadValue a, #SolidBoundaryLoadValue a:link, #SolidBoundaryLoadValue a:active, #SolidBoundaryLoadValue a:visited {color:#63B300;}  #SolidBoundaryLoadValue a:hover {opacity:.7;}
#FileNameToFormatList {z-index:8651; transform: translate(-50%, -50%); position:absolute; left:197.277px; top:6.6485px;font-size:0.971225em;} #FileNameToFormatList a, #FileNameToFormatList a:link, #FileNameToFormatList a:active, #FileNameToFormatList a:visited {color:#FF6D22;}  #FileNameToFormatList a:hover {opacity:.7;}
#SolidFixedCondition {z-index:8658; transform: translate(-50%, -50%); position:absolute; left:456.555px; top:6.6485px;font-size:0.966412em;} #SolidFixedCondition a, #SolidFixedCondition a:link, #SolidFixedCondition a:active, #SolidFixedCondition a:visited {color:#FF9B00;}  #SolidFixedCondition a:hover {opacity:.7;}
#SolidDisplacementCondition {z-index:8662; transform: translate(-50%, -50%); position:absolute; left:89.4486px; top:162.273px;font-size:0.963576em;} #SolidDisplacementCondition a, #SolidDisplacementCondition a:link, #SolidDisplacementCondition a:active, #SolidDisplacementCondition a:visited {color:#A16BBA;}  #SolidDisplacementCondition a:hover {opacity:.7;}
#PolynomialSumOfSquaresList {z-index:8663; transform: translate(-50%, -50%); position:absolute; left:572.226px; top:18.468px;font-size:0.9629em;} #PolynomialSumOfSquaresList a, #PolynomialSumOfSquaresList a:link, #PolynomialSumOfSquaresList a:active, #PolynomialSumOfSquaresList a:visited {color:#FF9B00;}  #PolynomialSumOfSquaresList a:hover {opacity:.7;}
#FoxHReduce {z-index:8667; transform: translate(-50%, -50%); position:absolute; left:662.41px; top:251.904px;font-size:0.959602em;} #FoxHReduce a, #FoxHReduce a:link, #FoxHReduce a:active, #FoxHReduce a:visited {color:#FF6D22;}  #FoxHReduce a:hover {opacity:.7;}
#SpatialEstimatorFunction {z-index:9023; transform: translate(-50%, -50%); position:absolute; left:190.415px; top:159.81px;font-size:0.70326em;} #SpatialEstimatorFunction a, #SpatialEstimatorFunction a:link, #SpatialEstimatorFunction a:active, #SpatialEstimatorFunction a:visited {color:#20A1A3;}  #SpatialEstimatorFunction a:hover {opacity:.7;}
#ReactionBalancedQ {z-index:9025; transform: translate(-50%, -50%); position:absolute; left:682.015px; top:130.754px;font-size:0.702332em;} #ReactionBalancedQ a, #ReactionBalancedQ a:link, #ReactionBalancedQ a:active, #ReactionBalancedQ a:visited {color:#CA3300;}  #ReactionBalancedQ a:hover {opacity:.7;}
#ReactionBalance {z-index:9025; transform: translate(-50%, -50%); position:absolute; left:66.4125px; top:257.321px;font-size:0.702083em;} #ReactionBalance a, #ReactionBalance a:link, #ReactionBalance a:active, #ReactionBalance a:visited {color:#FF6D22;}  #ReactionBalance a:hover {opacity:.7;}
#SolidMechanicsStress {z-index:9026; transform: translate(-50%, -50%); position:absolute; left:679.074px; top:50.9718px;font-size:0.701589em;} #SolidMechanicsStress a, #SolidMechanicsStress a:link, #SolidMechanicsStress a:active, #SolidMechanicsStress a:visited {color:#5787CE;}  #SolidMechanicsStress a:hover {opacity:.7;}
#ExpressionUUID {z-index:9026; transform: translate(-50%, -50%); position:absolute; left:521.743px; top:193.299px;font-size:0.70121em;} #ExpressionUUID a, #ExpressionUUID a:link, #ExpressionUUID a:active, #ExpressionUUID a:visited {color:#20A1A3;}  #ExpressionUUID a:hover {opacity:.7;}
#VariogramFunction {z-index:9027; transform: translate(-50%, -50%); position:absolute; left:527.624px; top:158.825px;font-size:0.700717em;} #VariogramFunction a, #VariogramFunction a:link, #VariogramFunction a:active, #VariogramFunction a:visited {color:#FF9B00;}  #VariogramFunction a:hover {opacity:.7;}
#SolidMechanicsPDEComponent {z-index:9029; transform: translate(-50%, -50%); position:absolute; left:292.362px; top:6.6485px;font-size:0.699433em;} #SolidMechanicsPDEComponent a, #SolidMechanicsPDEComponent a:link, #SolidMechanicsPDEComponent a:active, #SolidMechanicsPDEComponent a:visited {color:#5787CE;}  #SolidMechanicsPDEComponent a:hover {opacity:.7;}
#DateScale {z-index:9032; transform: translate(-50%, -50%); position:absolute; left:196.787px; top:103.667px;font-size:0.696851em;} #DateScale a, #DateScale a:link, #DateScale a:active, #DateScale a:visited {color:#CA3300;}  #DateScale a:hover {opacity:.7;}
#_RequesterCloudUserID {z-index:9033; transform: translate(-50%, -50%); position:absolute; left:46.3172px; top:185.419px;font-size:0.69641em;} #_RequesterCloudUserID a, #_RequesterCloudUserID a:link, #_RequesterCloudUserID a:active, #_RequesterCloudUserID a:visited {color:#63B300;}  #_RequesterCloudUserID a:hover {opacity:.7;}
#SparseArrayQ {z-index:9036; transform: translate(-50%, -50%); position:absolute; left:528.114px; top:63.7763px;font-size:0.693761em;} #SparseArrayQ a, #SparseArrayQ a:link, #SparseArrayQ a:active, #SparseArrayQ a:visited {color:#FF9B00;}  #SparseArrayQ a:hover {opacity:.7;}
#SpatialTrendFunction {z-index:9039; transform: translate(-50%, -50%); position:absolute; left:678.584px; top:59.344px;font-size:0.692036em;} #SpatialTrendFunction a, #SpatialTrendFunction a:link, #SpatialTrendFunction a:active, #SpatialTrendFunction a:visited {color:#A16BBA;}  #SpatialTrendFunction a:hover {opacity:.7;}
#WebColumn {z-index:9040; transform: translate(-50%, -50%); position:absolute; left:698.189px; top:36.6898px;font-size:0.691501em;} #WebColumn a, #WebColumn a:link, #WebColumn a:active, #WebColumn a:visited {color:#FF9B00;}  #WebColumn a:hover {opacity:.7;}
#IsomorphicSubgraphQ {z-index:9042; transform: translate(-50%, -50%); position:absolute; left:667.311px; top:22.4079px;font-size:0.690093em;} #IsomorphicSubgraphQ a, #IsomorphicSubgraphQ a:link, #IsomorphicSubgraphQ a:active, #IsomorphicSubgraphQ a:visited {color:#CA3300;}  #IsomorphicSubgraphQ a:hover {opacity:.7;}
#MoleculeMatchQ {z-index:9044; transform: translate(-50%, -50%); position:absolute; left:41.4159px; top:203.641px;font-size:0.688258em;} #MoleculeMatchQ a, #MoleculeMatchQ a:link, #MoleculeMatchQ a:active, #MoleculeMatchQ a:visited {color:#FF9B00;}  #MoleculeMatchQ a:hover {opacity:.7;}
#SolidMechanicsStrain {z-index:9046; transform: translate(-50%, -50%); position:absolute; left:34.5541px; top:194.776px;font-size:0.68705em;} #SolidMechanicsStrain a, #SolidMechanicsStrain a:link, #SolidMechanicsStrain a:active, #SolidMechanicsStrain a:visited {color:#FF6D22;}  #SolidMechanicsStrain a:hover {opacity:.7;}
#_RequesterCloudUserUUID {z-index:9048; transform: translate(-50%, -50%); position:absolute; left:667.311px; top:210.043px;font-size:0.685711em;} #_RequesterCloudUserUUID a, #_RequesterCloudUserUUID a:link, #_RequesterCloudUserUUID a:active, #_RequesterCloudUserUUID a:visited {color:#CA3300;}  #_RequesterCloudUserUUID a:hover {opacity:.7;}
#DefaultValues {z-index:9049; transform: translate(-50%, -50%); position:absolute; left:689.367px; top:234.667px;font-size:0.684442em;} #DefaultValues a, #DefaultValues a:link, #DefaultValues a:active, #DefaultValues a:visited {color:#FF6D22;}  #DefaultValues a:hover {opacity:.7;}
#WebRow {z-index:9051; transform: translate(-50%, -50%); position:absolute; left:698.189px; top:76.0883px;font-size:0.683221em;} #WebRow a, #WebRow a:link, #WebRow a:active, #WebRow a:visited {color:#63B300;}  #WebRow a:hover {opacity:.7;}
#MoleculeFreeQ {z-index:9051; transform: translate(-50%, -50%); position:absolute; left:537.917px; top:237.13px;font-size:0.683168em;} #MoleculeFreeQ a, #MoleculeFreeQ a:link, #MoleculeFreeQ a:active, #MoleculeFreeQ a:visited {color:#63B300;}  #MoleculeFreeQ a:hover {opacity:.7;}
#PlanarFaceList {z-index:9055; transform: translate(-50%, -50%); position:absolute; left:27.6923px; top:212.506px;font-size:0.680201em;} #PlanarFaceList a, #PlanarFaceList a:link, #PlanarFaceList a:active, #PlanarFaceList a:visited {color:#20A1A3;}  #PlanarFaceList a:hover {opacity:.7;}
#SpatialNoiseLevel {z-index:9276; transform: translate(-50%, -50%); position:absolute; left:685.446px; top:217.923px;font-size:0.521426em;} #SpatialNoiseLevel a, #SpatialNoiseLevel a:link, #SpatialNoiseLevel a:active, #SpatialNoiseLevel a:visited {color:#63B300;}  #SpatialNoiseLevel a:hover {opacity:.7;}
#TimeSystem {z-index:9276; transform: translate(-50%, -50%); position:absolute; left:238.938px; top:167.69px;font-size:0.520999em;} #TimeSystem a, #TimeSystem a:link, #TimeSystem a:active, #TimeSystem a:visited {color:#5787CE;}  #TimeSystem a:hover {opacity:.7;}
#TreeLayout {z-index:9277; transform: translate(-50%, -50%); position:absolute; left:247.76px; top:214.968px;font-size:0.520896em;} #TreeLayout a, #TreeLayout a:link, #TreeLayout a:active, #TreeLayout a:visited {color:#A16BBA;}  #TreeLayout a:hover {opacity:.7;}
#ContentDetectorFunction {z-index:9277; transform: translate(-50%, -50%); position:absolute; left:37.0048px; top:60.8214px;font-size:0.520211em;} #ContentDetectorFunction a, #ContentDetectorFunction a:link, #ContentDetectorFunction a:active, #ContentDetectorFunction a:visited {color:#FF9B00;}  #ContentDetectorFunction a:hover {opacity:.7;}
#ResolveContextAliases {z-index:9278; transform: translate(-50%, -50%); position:absolute; left:690.837px; top:226.295px;font-size:0.520004em;} #ResolveContextAliases a, #ResolveContextAliases a:link, #ResolveContextAliases a:active, #ResolveContextAliases a:visited {color:#FF6D22;}  #ResolveContextAliases a:hover {opacity:.7;}
#InitializationObject {z-index:9278; transform: translate(-50%, -50%); position:absolute; left:36.5146px; top:86.9229px;font-size:0.519715em;} #InitializationObject a, #InitializationObject a:link, #InitializationObject a:active, #InitializationObject a:visited {color:#FF6D22;}  #InitializationObject a:hover {opacity:.7;}
#DominatorVertexList {z-index:9278; transform: translate(-50%, -50%); position:absolute; left:26.2219px; top:220.385px;font-size:0.519494em;} #DominatorVertexList a, #DominatorVertexList a:link, #DominatorVertexList a:active, #DominatorVertexList a:visited {color:#CA3300;}  #DominatorVertexList a:hover {opacity:.7;}
#EdgeValueSizes {z-index:9279; transform: translate(-50%, -50%); position:absolute; left:701.13px; top:180.002px;font-size:0.519133em;} #EdgeValueSizes a, #EdgeValueSizes a:link, #EdgeValueSizes a:active, #EdgeValueSizes a:visited {color:#FF9B00;}  #EdgeValueSizes a:hover {opacity:.7;}
#BondLabelStyle {z-index:9280; transform: translate(-50%, -50%); position:absolute; left:695.248px; top:43.5846px;font-size:0.518687em;} #BondLabelStyle a, #BondLabelStyle a:link, #BondLabelStyle a:active, #BondLabelStyle a:visited {color:#FF6D22;}  #BondLabelStyle a:hover {opacity:.7;}
#InterfaceSwitched {z-index:9280; transform: translate(-50%, -50%); position:absolute; left:690.837px; top:242.547px;font-size:0.51858em;} #InterfaceSwitched a, #InterfaceSwitched a:link, #InterfaceSwitched a:active, #InterfaceSwitched a:visited {color:#A16BBA;}  #InterfaceSwitched a:hover {opacity:.7;}
#EdgeValueRange {z-index:9280; transform: translate(-50%, -50%); position:absolute; left:29.1627px; top:53.4342px;font-size:0.518539em;} #EdgeValueRange a, #EdgeValueRange a:link, #EdgeValueRange a:active, #EdgeValueRange a:visited {color:#FF6D22;}  #EdgeValueRange a:hover {opacity:.7;}
#ConformationMethod {z-index:9280; transform: translate(-50%, -50%); position:absolute; left:606.535px; top:63.7763px;font-size:0.518261em;} #ConformationMethod a, #ConformationMethod a:link, #ConformationMethod a:active, #ConformationMethod a:visited {color:#63B300;}  #ConformationMethod a:hover {opacity:.7;}
#AtomLabels {z-index:9280; transform: translate(-50%, -50%); position:absolute; left:171.79px; top:125.336px;font-size:0.51817em;} #AtomLabels a, #AtomLabels a:link, #AtomLabels a:active, #AtomLabels a:visited {color:#FF9B00;}  #AtomLabels a:hover {opacity:.7;}
#TreeElementStyle {z-index:9281; transform: translate(-50%, -50%); position:absolute; left:693.778px; top:171.63px;font-size:0.517625em;} #TreeElementStyle a, #TreeElementStyle a:link, #TreeElementStyle a:active, #TreeElementStyle a:visited {color:#FF9B00;}  #TreeElementStyle a:hover {opacity:.7;}
#CSGRegionQ {z-index:9282; transform: translate(-50%, -50%); position:absolute; left:460.477px; top:193.791px;font-size:0.517042em;} #CSGRegionQ a, #CSGRegionQ a:link, #CSGRegionQ a:active, #CSGRegionQ a:visited {color:#FF9B00;}  #CSGRegionQ a:hover {opacity:.7;}
#AtomLabelStyle {z-index:9282; transform: translate(-50%, -50%); position:absolute; left:23.2811px; top:171.137px;font-size:0.516876em;} #AtomLabelStyle a, #AtomLabelStyle a:link, #AtomLabelStyle a:active, #AtomLabelStyle a:visited {color:#FF9B00;}  #AtomLabelStyle a:hover {opacity:.7;}
#BondLabels {z-index:9283; transform: translate(-50%, -50%); position:absolute; left:111.504px; top:125.336px;font-size:0.516464em;} #BondLabels a, #BondLabels a:link, #BondLabels a:active, #BondLabels a:visited {color:#FF9B00;}  #BondLabels a:hover {opacity:.7;}
#TreeTraversalOrder {z-index:9284; transform: translate(-50%, -50%); position:absolute; left:23.2811px; top:47.032px;font-size:0.51523em;} #TreeTraversalOrder a, #TreeTraversalOrder a:link, #TreeTraversalOrder a:active, #TreeTraversalOrder a:visited {color:#63B300;}  #TreeTraversalOrder a:hover {opacity:.7;}
#IgnoreIsotopes {z-index:9285; transform: translate(-50%, -50%); position:absolute; left:700.64px; top:187.389px;font-size:0.515072em;} #IgnoreIsotopes a, #IgnoreIsotopes a:link, #IgnoreIsotopes a:active, #IgnoreIsotopes a:visited {color:#CA3300;}  #IgnoreIsotopes a:hover {opacity:.7;}
#MinPointSeparation {z-index:9285; transform: translate(-50%, -50%); position:absolute; left:36.0245px; top:94.3102px;font-size:0.51486em;} #MinPointSeparation a, #MinPointSeparation a:link, #MinPointSeparation a:active, #MinPointSeparation a:visited {color:#63B300;}  #MinPointSeparation a:hover {opacity:.7;}
#TreeElementLabel {z-index:9285; transform: translate(-50%, -50%); position:absolute; left:25.7318px; top:10.5883px;font-size:0.514783em;} #TreeElementLabel a, #TreeElementLabel a:link, #TreeElementLabel a:active, #TreeElementLabel a:visited {color:#5787CE;}  #TreeElementLabel a:hover {opacity:.7;}
#IgnoreStereochemistry {z-index:9285; transform: translate(-50%, -50%); position:absolute; left:572.716px; top:193.299px;font-size:0.514636em;} #IgnoreStereochemistry a, #IgnoreStereochemistry a:link, #IgnoreStereochemistry a:active, #IgnoreStereochemistry a:visited {color:#63B300;}  #IgnoreStereochemistry a:hover {opacity:.7;}
</style>
<div id="wordcloud" class="initial_hidden fade_this_in" style="font-family:'Source Sans Pro';font-size: 10px;position:relative;margin:auto;text-align:center;width:720px;height: 262px;line-height: 0px;">
<div  class='initial_hidden' id='ImageStitch'><a href='https://reference.wolfram.com/language/ref/ImageStitch.html'>ImageStitch</a></div>
<div  class='initial_hidden' id='RegionFit'><a href='https://reference.wolfram.com/language/ref/RegionFit.html'>RegionFit</a></div>
<div  class='initial_hidden' id='TimeSystemConvert'><a href='https://reference.wolfram.com/language/ref/TimeSystemConvert.html'>TimeSystemConvert</a></div>
<div  class='initial_hidden' id='TrainImageContentDetector'><a href='https://reference.wolfram.com/language/ref/TrainImageContentDetector.html'>TrainImageContentDetector</a></div>
<div  class='initial_hidden' id='EdgeChromaticNumber'><a href='https://reference.wolfram.com/language/ref/EdgeChromaticNumber.html'>EdgeChromaticNumber</a></div>
<div  class='initial_hidden' id='ChemicalFormula'><a href='https://reference.wolfram.com/language/ref/ChemicalFormula.html'>ChemicalFormula</a></div>
<div  class='initial_hidden' id='BioSequencePlot'><a href='https://reference.wolfram.com/language/ref/BioSequencePlot.html'>BioSequencePlot</a></div>
<div  class='initial_hidden' id='GeoGraphValuePlot'><a href='https://reference.wolfram.com/language/ref/GeoGraphValuePlot.html'>GeoGraphValuePlot</a></div>
<div  class='initial_hidden' id='TrainTextContentDetector'><a href='https://reference.wolfram.com/language/ref/TrainTextContentDetector.html'>TrainTextContentDetector</a></div>
<div  class='initial_hidden' id='ConcaveHullMesh'><a href='https://reference.wolfram.com/language/ref/ConcaveHullMesh.html'>ConcaveHullMesh</a></div>
<div  class='initial_hidden' id='SpatialEstimate'><a href='https://reference.wolfram.com/language/ref/SpatialEstimate.html'>SpatialEstimate</a></div>
<div  class='initial_hidden' id='SnippetsVideo'><a href='https://reference.wolfram.com/language/ref/SnippetsVideo.html'>SnippetsVideo</a></div>
<div  class='initial_hidden' id='ChemicalReaction'><a href='https://reference.wolfram.com/language/ref/ChemicalReaction.html'>ChemicalReaction</a></div>
<div  class='initial_hidden' id='DominatorTreeGraph'><a href='https://reference.wolfram.com/language/ref/DominatorTreeGraph.html'>DominatorTreeGraph</a></div>
<div  class='initial_hidden' id='_ContextAliases'><a href='https://reference.wolfram.com/language/ref/$ContextAliases.html'>$ContextAliases</a></div>
<div  class='initial_hidden' id='FindRegionTransform'><a href='https://reference.wolfram.com/language/ref/FindRegionTransform.html'>FindRegionTransform</a></div>
<div  class='initial_hidden' id='WebItem'><a href='https://reference.wolfram.com/language/ref/WebItem.html'>WebItem</a></div>
<div  class='initial_hidden' id='FindEdgeColoring'><a href='https://reference.wolfram.com/language/ref/FindEdgeColoring.html'>FindEdgeColoring</a></div>
<div  class='initial_hidden' id='CenteredInterval'><a href='https://reference.wolfram.com/language/ref/CenteredInterval.html'>CenteredInterval</a></div>
<div  class='initial_hidden' id='OverlayVideo'><a href='https://reference.wolfram.com/language/ref/OverlayVideo.html'>OverlayVideo</a></div>
<div  class='initial_hidden' id='ListVectorDisplacementPlot'><a href='https://reference.wolfram.com/language/ref/ListVectorDisplacementPlot.html'>ListVectorDisplacementPlot</a></div>
<div  class='initial_hidden' id='FindSubgraphIsomorphism'><a href='https://reference.wolfram.com/language/ref/FindSubgraphIsomorphism.html'>FindSubgraphIsomorphism</a></div>
<div  class='initial_hidden' id='TourVideo'><a href='https://reference.wolfram.com/language/ref/TourVideo.html'>TourVideo</a></div>
<div  class='initial_hidden' id='CSGRegion'><a href='https://reference.wolfram.com/language/ref/CSGRegion.html'>CSGRegion</a></div>
<div  class='initial_hidden' id='ListVectorDisplacementPlot3D'><a href='https://reference.wolfram.com/language/ref/ListVectorDisplacementPlot3D.html'>ListVectorDisplacementPlot3D</a></div>
<div  class='initial_hidden' id='DrazinInverse'><a href='https://reference.wolfram.com/language/ref/DrazinInverse.html'>DrazinInverse</a></div>
<div  class='initial_hidden' id='DualPlanarGraph'><a href='https://reference.wolfram.com/language/ref/DualPlanarGraph.html'>DualPlanarGraph</a></div>
<div  class='initial_hidden' id='VariogramModel'><a href='https://reference.wolfram.com/language/ref/VariogramModel.html'>VariogramModel</a></div>
<div  class='initial_hidden' id='VectorDisplacementPlot'><a href='https://reference.wolfram.com/language/ref/VectorDisplacementPlot.html'>VectorDisplacementPlot</a></div>
<div  class='initial_hidden' id='CSGRegionTree'><a href='https://reference.wolfram.com/language/ref/CSGRegionTree.html'>CSGRegionTree</a></div>
<div  class='initial_hidden' id='CoulombH1'><a href='https://reference.wolfram.com/language/ref/CoulombH1.html'>CoulombH1</a></div>
<div  class='initial_hidden' id='VectorDisplacementPlot3D'><a href='https://reference.wolfram.com/language/ref/VectorDisplacementPlot3D.html'>VectorDisplacementPlot3D</a></div>
<div  class='initial_hidden' id='NetUnfold'><a href='https://reference.wolfram.com/language/ref/NetUnfold.html'>NetUnfold</a></div>
<div  class='initial_hidden' id='PointLight'><a href='https://reference.wolfram.com/language/ref/PointLight.html'>PointLight</a></div>
<div  class='initial_hidden' id='CoulombH2'><a href='https://reference.wolfram.com/language/ref/CoulombH2.html'>CoulombH2</a></div>
<div  class='initial_hidden' id='CompleteIntegral'><a href='https://reference.wolfram.com/language/ref/CompleteIntegral.html'>CompleteIntegral</a></div>
<div  class='initial_hidden' id='FlightData'><a href='https://reference.wolfram.com/language/ref/FlightData.html'>FlightData</a></div>
<div  class='initial_hidden' id='BilateralZTransform'><a href='https://reference.wolfram.com/language/ref/BilateralZTransform.html'>BilateralZTransform</a></div>
<div  class='initial_hidden' id='AttachedCell'><a href='https://reference.wolfram.com/language/ref/AttachedCell.html'>AttachedCell</a></div>
<div  class='initial_hidden' id='GridVideo'><a href='https://reference.wolfram.com/language/ref/GridVideo.html'>GridVideo</a></div>
<div  class='initial_hidden' id='Torus'><a href='https://reference.wolfram.com/language/ref/Torus.html'>Torus</a></div>
<div  class='initial_hidden' id='RegionSimilar'><a href='https://reference.wolfram.com/language/ref/RegionSimilar.html'>RegionSimilar</a></div>
<div  class='initial_hidden' id='FindIsomorphicSubgraph'><a href='https://reference.wolfram.com/language/ref/FindIsomorphicSubgraph.html'>FindIsomorphicSubgraph</a></div>
<div  class='initial_hidden' id='GradientFittedMesh'><a href='https://reference.wolfram.com/language/ref/GradientFittedMesh.html'>GradientFittedMesh</a></div>
<div  class='initial_hidden' id='TreeMapAt'><a href='https://reference.wolfram.com/language/ref/TreeMapAt.html'>TreeMapAt</a></div>
<div  class='initial_hidden' id='DirectionalLight'><a href='https://reference.wolfram.com/language/ref/DirectionalLight.html'>DirectionalLight</a></div>
<div  class='initial_hidden' id='FindVertexColoring'><a href='https://reference.wolfram.com/language/ref/FindVertexColoring.html'>FindVertexColoring</a></div>
<div  class='initial_hidden' id='VertexChromaticNumber'><a href='https://reference.wolfram.com/language/ref/VertexChromaticNumber.html'>VertexChromaticNumber</a></div>
<div  class='initial_hidden' id='RegionCongruent'><a href='https://reference.wolfram.com/language/ref/RegionCongruent.html'>RegionCongruent</a></div>
<div  class='initial_hidden' id='Adjugate'><a href='https://reference.wolfram.com/language/ref/Adjugate.html'>Adjugate</a></div>
<div  class='initial_hidden' id='CoulombG'><a href='https://reference.wolfram.com/language/ref/CoulombG.html'>CoulombG</a></div>
<div  class='initial_hidden' id='FindIsomers'><a href='https://reference.wolfram.com/language/ref/FindIsomers.html'>FindIsomers</a></div>
<div  class='initial_hidden' id='SequenceIndicesLayer'><a href='https://reference.wolfram.com/language/ref/SequenceIndicesLayer.html'>SequenceIndicesLayer</a></div>
<div  class='initial_hidden' id='FunctionPoles'><a href='https://reference.wolfram.com/language/ref/FunctionPoles.html'>FunctionPoles</a></div>
<div  class='initial_hidden' id='EstimatedVariogramModel'><a href='https://reference.wolfram.com/language/ref/EstimatedVariogramModel.html'>EstimatedVariogramModel</a></div>
<div  class='initial_hidden' id='InverseBilateralZTransform'><a href='https://reference.wolfram.com/language/ref/InverseBilateralZTransform.html'>InverseBilateralZTransform</a></div>
<div  class='initial_hidden' id='FilledTorus'><a href='https://reference.wolfram.com/language/ref/FilledTorus.html'>FilledTorus</a></div>
<div  class='initial_hidden' id='CoulombF'><a href='https://reference.wolfram.com/language/ref/CoulombF.html'>CoulombF</a></div>
<div  class='initial_hidden' id='FindPlanarColoring'><a href='https://reference.wolfram.com/language/ref/FindPlanarColoring.html'>FindPlanarColoring</a></div>
<div  class='initial_hidden' id='CoreNilpotentDecomposition'><a href='https://reference.wolfram.com/language/ref/CoreNilpotentDecomposition.html'>CoreNilpotentDecomposition</a></div>
<div  class='initial_hidden' id='SpotLight'><a href='https://reference.wolfram.com/language/ref/SpotLight.html'>SpotLight</a></div>
<div  class='initial_hidden' id='QuestionInterface'><a href='https://reference.wolfram.com/language/ref/QuestionInterface.html'>QuestionInterface</a></div>
<div  class='initial_hidden' id='SetFileFormatProperties'><a href='https://reference.wolfram.com/language/ref/SetFileFormatProperties.html'>SetFileFormatProperties</a></div>
<div  class='initial_hidden' id='FileFormatProperties'><a href='https://reference.wolfram.com/language/ref/FileFormatProperties.html'>FileFormatProperties</a></div>
<div  class='initial_hidden' id='MIMETypeToFormatList'><a href='https://reference.wolfram.com/language/ref/MIMETypeToFormatList.html'>MIMETypeToFormatList</a></div>
<div  class='initial_hidden' id='TreeScan'><a href='https://reference.wolfram.com/language/ref/TreeScan.html'>TreeScan</a></div>
<div  class='initial_hidden' id='BinnedVariogramList'><a href='https://reference.wolfram.com/language/ref/BinnedVariogramList.html'>BinnedVariogramList</a></div>
<div  class='initial_hidden' id='SolidBoundaryLoadValue'><a href='https://reference.wolfram.com/language/ref/SolidBoundaryLoadValue.html'>SolidBoundaryLoadValue</a></div>
<div  class='initial_hidden' id='FileNameToFormatList'><a href='https://reference.wolfram.com/language/ref/FileNameToFormatList.html'>FileNameToFormatList</a></div>
<div  class='initial_hidden' id='SolidFixedCondition'><a href='https://reference.wolfram.com/language/ref/SolidFixedCondition.html'>SolidFixedCondition</a></div>
<div  class='initial_hidden' id='SolidDisplacementCondition'><a href='https://reference.wolfram.com/language/ref/SolidDisplacementCondition.html'>SolidDisplacementCondition</a></div>
<div  class='initial_hidden' id='PolynomialSumOfSquaresList'><a href='https://reference.wolfram.com/language/ref/PolynomialSumOfSquaresList.html'>PolynomialSumOfSquaresList</a></div>
<div  class='initial_hidden' id='FoxHReduce'><a href='https://reference.wolfram.com/language/ref/FoxHReduce.html'>FoxHReduce</a></div>
<div  class='initial_hidden' id='SpatialEstimatorFunction'><a href='https://reference.wolfram.com/language/ref/SpatialEstimatorFunction.html'>SpatialEstimatorFunction</a></div>
<div  class='initial_hidden' id='ReactionBalancedQ'><a href='https://reference.wolfram.com/language/ref/ReactionBalancedQ.html'>ReactionBalancedQ</a></div>
<div  class='initial_hidden' id='ReactionBalance'><a href='https://reference.wolfram.com/language/ref/ReactionBalance.html'>ReactionBalance</a></div>
<div  class='initial_hidden' id='SolidMechanicsStress'><a href='https://reference.wolfram.com/language/ref/SolidMechanicsStress.html'>SolidMechanicsStress</a></div>
<div  class='initial_hidden' id='ExpressionUUID'><a href='https://reference.wolfram.com/language/ref/ExpressionUUID.html'>ExpressionUUID</a></div>
<div  class='initial_hidden' id='VariogramFunction'><a href='https://reference.wolfram.com/language/ref/VariogramFunction.html'>VariogramFunction</a></div>
<div  class='initial_hidden' id='SolidMechanicsPDEComponent'><a href='https://reference.wolfram.com/language/ref/SolidMechanicsPDEComponent.html'>SolidMechanicsPDEComponent</a></div>
<div  class='initial_hidden' id='DateScale'><a href='https://reference.wolfram.com/language/ref/DateScale.html'>DateScale</a></div>
<div  class='initial_hidden' id='_RequesterCloudUserID'><a href='https://reference.wolfram.com/language/ref/$RequesterCloudUserID.html'>$RequesterCloudUserID</a></div>
<div  class='initial_hidden' id='SparseArrayQ'><a href='https://reference.wolfram.com/language/ref/SparseArrayQ.html'>SparseArrayQ</a></div>
<div  class='initial_hidden' id='SpatialTrendFunction'><a href='https://reference.wolfram.com/language/ref/SpatialTrendFunction.html'>SpatialTrendFunction</a></div>
<div  class='initial_hidden' id='WebColumn'><a href='https://reference.wolfram.com/language/ref/WebColumn.html'>WebColumn</a></div>
<div  class='initial_hidden' id='IsomorphicSubgraphQ'><a href='https://reference.wolfram.com/language/ref/IsomorphicSubgraphQ.html'>IsomorphicSubgraphQ</a></div>
<div  class='initial_hidden' id='MoleculeMatchQ'><a href='https://reference.wolfram.com/language/ref/MoleculeMatchQ.html'>MoleculeMatchQ</a></div>
<div  class='initial_hidden' id='SolidMechanicsStrain'><a href='https://reference.wolfram.com/language/ref/SolidMechanicsStrain.html'>SolidMechanicsStrain</a></div>
<div  class='initial_hidden' id='_RequesterCloudUserUUID'><a href='https://reference.wolfram.com/language/ref/$RequesterCloudUserUUID.html'>$RequesterCloudUserUUID</a></div>
<div  class='initial_hidden' id='DefaultValues'><a href='https://reference.wolfram.com/language/ref/DefaultValues.html'>DefaultValues</a></div>
<div  class='initial_hidden' id='WebRow'><a href='https://reference.wolfram.com/language/ref/WebRow.html'>WebRow</a></div>
<div  class='initial_hidden' id='MoleculeFreeQ'><a href='https://reference.wolfram.com/language/ref/MoleculeFreeQ.html'>MoleculeFreeQ</a></div>
<div  class='initial_hidden' id='PlanarFaceList'><a href='https://reference.wolfram.com/language/ref/PlanarFaceList.html'>PlanarFaceList</a></div>
<div  class='initial_hidden' id='SpatialNoiseLevel'><a href='https://reference.wolfram.com/language/ref/SpatialNoiseLevel.html'>SpatialNoiseLevel</a></div>
<div  class='initial_hidden' id='TimeSystem'><a href='https://reference.wolfram.com/language/ref/TimeSystem.html'>TimeSystem</a></div>
<div  class='initial_hidden' id='TreeLayout'><a href='https://reference.wolfram.com/language/ref/TreeLayout.html'>TreeLayout</a></div>
<div  class='initial_hidden' id='ContentDetectorFunction'><a href='https://reference.wolfram.com/language/ref/ContentDetectorFunction.html'>ContentDetectorFunction</a></div>
<div  class='initial_hidden' id='ResolveContextAliases'><a href='https://reference.wolfram.com/language/ref/ResolveContextAliases.html'>ResolveContextAliases</a></div>
<div  class='initial_hidden' id='InitializationObject'><a href='https://reference.wolfram.com/language/ref/InitializationObject.html'>InitializationObject</a></div>
<div  class='initial_hidden' id='DominatorVertexList'><a href='https://reference.wolfram.com/language/ref/DominatorVertexList.html'>DominatorVertexList</a></div>
<div  class='initial_hidden' id='EdgeValueSizes'><a href='https://reference.wolfram.com/language/ref/EdgeValueSizes.html'>EdgeValueSizes</a></div>
<div  class='initial_hidden' id='BondLabelStyle'><a href='https://reference.wolfram.com/language/ref/BondLabelStyle.html'>BondLabelStyle</a></div>
<div  class='initial_hidden' id='InterfaceSwitched'><a href='https://reference.wolfram.com/language/ref/InterfaceSwitched.html'>InterfaceSwitched</a></div>
<div  class='initial_hidden' id='EdgeValueRange'><a href='https://reference.wolfram.com/language/ref/EdgeValueRange.html'>EdgeValueRange</a></div>
<div  class='initial_hidden' id='ConformationMethod'><a href='https://reference.wolfram.com/language/ref/ConformationMethod.html'>ConformationMethod</a></div>
<div  class='initial_hidden' id='AtomLabels'><a href='https://reference.wolfram.com/language/ref/AtomLabels.html'>AtomLabels</a></div>
<div  class='initial_hidden' id='TreeElementStyle'><a href='https://reference.wolfram.com/language/ref/TreeElementStyle.html'>TreeElementStyle</a></div>
<div  class='initial_hidden' id='CSGRegionQ'><a href='https://reference.wolfram.com/language/ref/CSGRegionQ.html'>CSGRegionQ</a></div>
<div  class='initial_hidden' id='AtomLabelStyle'><a href='https://reference.wolfram.com/language/ref/AtomLabelStyle.html'>AtomLabelStyle</a></div>
<div  class='initial_hidden' id='BondLabels'><a href='https://reference.wolfram.com/language/ref/BondLabels.html'>BondLabels</a></div>
<div  class='initial_hidden' id='TreeTraversalOrder'><a href='https://reference.wolfram.com/language/ref/TreeTraversalOrder.html'>TreeTraversalOrder</a></div>
<div  class='initial_hidden' id='IgnoreIsotopes'><a href='https://reference.wolfram.com/language/ref/IgnoreIsotopes.html'>IgnoreIsotopes</a></div>
<div  class='initial_hidden' id='MinPointSeparation'><a href='https://reference.wolfram.com/language/ref/MinPointSeparation.html'>MinPointSeparation</a></div>
<div  class='initial_hidden' id='TreeElementLabel'><a href='https://reference.wolfram.com/language/ref/TreeElementLabel.html'>TreeElementLabel</a></div>
<div  class='initial_hidden' id='IgnoreStereochemistry'><a href='https://reference.wolfram.com/language/ref/IgnoreStereochemistry.html'>IgnoreStereochemistry</a></div>
</div>
<p><script  type='text/javascript'>
$('.initial_hidden').each(function(i){
	var $fader = $(this);
	    setTimeout(function() {
	      $fader.addClass('fade_this_in');
	    }, i*25+150);
		});
</script></p>
<h2 id='the-march-of-innovation-continues'>The March of Innovation Continues</h2>
<p>Just a few weeks ago it was <a href='https://writings.stephenwolfram.com/2021/10/celebrating-a-third-of-a-century-of-mathematica-and-looking-forward/'>1/3 of a century since Mathematica 1.0 was released</a>. Today I’m excited to announce the latest results of our long-running R&#038;D pipeline: Version 13 of <a href='https://www.wolfram.com/language/'>Wolfram Language</a> and <a href='https://www.wolfram.com/mathematica/'>Mathematica</a>. (Yes, the <a href='https://blog.wolfram.com/2021/11/09/13-ways-of-looking-at-the-number-13/'>1, 3 theme</a>—complete with the fact that it’s the 13th of the month today—is amusing, if coincidental.)</p>
<p>It’s 207 days—or a little over 6 months—since we released <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/'>Version 12.3</a>. And I’m pleased to say that in that short time an impressive amount of R&#038;D has come to fruition: not only a total of <a href='https://reference.wolfram.com/language/guide/SummaryOfNewFeaturesIn130.html'>117 completely new functions</a>, but also many hundreds of updated and upgraded functions, several thousand bug fixes and small enhancements, and a host of new ideas to make the system ever easier and smoother to use.</p>
<p>Every day, every week, every month for the past third of a century we’ve been pushing hard to add more to the vast integrated framework that is Mathematica and the Wolfram Language. And now we can see the results of all those individual ideas and projects and pieces of work: a steady drumbeat of innovation sustained now over the course of more than a third of a century:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/1sw1213img1.png" alt='' title='' width='623' height='319' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/1sw1213img1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><span id="more-33886"></span></p>
<p>This plot reflects lots of hard work. But it also reflects something else: the success of the <a href='https://www.wolfram.com/language/principles/'>core design principles</a> of the Wolfram Language. Because those are what have allowed what is now a huge system to maintain its coherence and consistency—and to grow ever stronger. What we build today is not built from scratch; it is built on top of the <a href='https://reference.wolfram.com/language/'>huge tower of capabilities</a> that we have built before. And that is why we’re able to reach so far, automate so much—and invent so much. </p>
<p>In <a href='https://www.wolfram.com/mathematica/scrapbook/'>Version 1.0</a> there were a total of <a href='https://reference.wolfram.com/legacy/v1/'>554 functions</a> altogether. Yet between Version 12.0 and Version 13.0 we’ve now added a <a href='https://reference.wolfram.com/language/guide/SummaryOfNewFeaturesIn130.html'>total of 635 new functions</a> (in addition to the 702 functions that have been updated and upgraded). And it’s actually even more impressive than that. Because when we add a function today the expectations are so much higher than in 1988—because there’s so much more automation we can do, and so much more in the whole system that we have to connect to and integrate with. And, of course, today we can and do write perhaps a hundred times more extensive and detailed <a href='https://reference.wolfram.com/language/'>documentation</a> than would have ever fit in the (printed) <em><a href='https://www.stephenwolfram.com/publications/mathematica-book/'>Mathematica Book</a></em> of 1988.</p>
<p>The complete span of what’s <a href='https://www.wolfram.com/mathematica/new-in-13/'>new in Version 13</a> relative to <a href='https://writings.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/'>Version 12</a> is very large and impressive. But here I’ll just concentrate on what’s new in Version 13.0 relative to Version 12.3; I’ve written before about <a href='https://writings.stephenwolfram.com/2020/03/in-less-than-a-year-so-much-new-launching-version-12-1-of-wolfram-language-mathematica/'>Version 12.1</a>, <a href='https://writings.stephenwolfram.com/2020/12/launching-version-12-2-of-wolfram-language-mathematica-228-new-functions-and-much-more/'>Version 12.2</a> and <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/'>Version 12.3</a>.</p>
<h2 id='dont-forget-integrals'>Don&rsquo;t Forget Integrals!</h2>
<p>Back in 1988 one of the features of <a href='https://reference.wolfram.com/legacy/v1/'>Mathematica 1.0</a> that people really liked was the ability to do integrals symbolically. Over the years, we’ve gradually increased the range of integrals that can be done. And a third of a century later—in Version 13.0—we’re delivering another jump forward. </p>
<p>Here’s an integral that couldn’t be done “in <a href='https://www.wolframscience.com/nks/notes-12-6--history-of-exact-solutions/'>closed form</a>” before, but in Version 13.0 it can: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/02sw1213img1.png" alt='' title='' width='620' height='287' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/02sw1213img1_copy.txt">
					<span class='close' id='02-1_out'>&amp;#10005</span></p>
<pre class='text' id='02-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Any integral of an algebraic function can in principle be done in terms of our general <tt><a href='https://reference.wolfram.com/language/ref/DifferentialRoot.html'>DifferentialRoot</a></tt> objects. But the bigger algorithmic challenge is to get a “human-friendly answer” in terms of familiar functions. It’s a fragile business, where a small change in a coefficient can have a large effect on what reductions are possible. But in Version 13.0 there are now many integrals that could previously be done only in terms of special functions, but now give results in elementary functions. Here’s an example:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/02sw1213img2.png" alt='' title='' width='392' height='130' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/02sw1213img2_copy.txt">
					<span class='close' id='02-2_out'>&amp;#10005</span></p>
<pre class='text' id='02-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Version 12.3 the same integral could still be done, but only in terms of <a href='https://reference.wolfram.com/language/guide/EllipticIntegrals.html'>elliptic integrals</a>:</p>
<p><img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/02sw1213img03.png" alt='Elliptic integrals' title='Elliptic integrals' width='620' height='' /></p>
<h2 id='mathematical-functions-a-milestone-is-reached'>Mathematical Functions: A Milestone Is Reached</h2>
<p>Back when one still had to do integrals and the like by hand, it was always a thrill when one discovered that one’s problem could be solved in terms of some exotic “<a href='https://reference.wolfram.com/language/guide/SpecialFunctions.html'>special function</a>” that one hadn’t even heard of before. Special functions are in a sense a way of <a href='https://www.stephenwolfram.com/publications/history-future-special-functions/'>packaging mathematical knowledge</a>: once you know that the solution to your equation is a <a href='https://reference.wolfram.com/language/guide/HeunAndRelatedFunctions.html#471725295'>Lamé function</a>, that immediately tells you lots of mathematical things about it.</p>
<p>In the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>, we’ve always taken special functions very seriously, not only supporting a vast collection of them, but also making it possible to evaluate them to <a href='https://reference.wolfram.com/language/howto/ControlThePrecisionAndAccuracyOfNumericalResults.html'>any numerical precision</a>, and to have them participate in a full range of symbolic mathematical operations. </p>
<p>When I first started using special functions about 45 years ago, the book that was the standard reference was <em><a href='https://en.wikipedia.org/wiki/Abramowitz_and_Stegun' target=_blank rel=noopener>Abramowitz &#038; Stegun’s 1964 Handbook of Mathematical Functions</a></em>. It listed hundreds of functions, some widely used, others less so. And over the years in the development of Wolfram Language we’ve steadily been checking off <a href='https://reference.wolfram.com/language/guide/MathematicalFunctions.html'>more functions</a> from <em>Abramowitz &#038; Stegun</em>. </p>
<p>And in Version 13.0 we’re finally done! All the functions in <em>Abramowitz &#038; Stegun</em> are now fully computable in the Wolfram Language. The last functions to be added were the <a href='https://reference.wolfram.com/language/guide/SpecialFunctions.html#10588913'>Coulomb wavefunctions</a> (relevant for studying quantum scattering processes). Here they are in <em>Abramowitz &#038; Stegun</em>:</p>
<p><img class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/12/03sw1213-abramiwitz-stegun-book.png' alt='Abramowitz &#038; Stegun' title='Abramowitz &#038; Stegun' width='620' height=' '></p>
<p>And here’s—as of Version 13—how to get that first picture in Wolfram Language: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/03sw1213img1.png" alt='' title='' width='580' height='230' />
				</div>
<div class='IFL'
					<span class='close' id='03-1_out'>&amp;#10005</span></p>
<pre class='text' id='03-1_out_text'>Plot[{CoulombF[l,1,10],CoulombG[l,1,10]},{l,0,15},PlotRange->{-1.2,1.8}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Of course there’s more to the story, as we can now see:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/03sw1213img2.png" alt='' title='' width='413' height='233' />
				</div>
<div class='IFL'
					<span class='close' id='03-2_out'>&amp;#10005</span></p>
<pre class='text' id='03-2_out_text'>Plot[{CoulombF[l,1,10],CoulombG[l,1,10]},{l,0,15}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='another-kind-of-number'>Another Kind of Number</h2>
<p>One might think that a number is just a number. And that’s basically true for integers. But when a number is a real number the story is more complicated. Sometimes you can “name” a real number symbolically, say <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img1.png" width= '16' height='19' align='absmiddle'></span>. But most real numbers don’t have “symbolic names”. And to specify them exactly you’d have to give an infinite number of digits, or the equivalent. And the result is that one ends up wanting to have approximate real numbers that one can think of as representing certain whole collections of actual real numbers.</p>
<p>A straightforward way of doing this is to use finite-precision numbers, as in:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img2.png" alt='' title='' width='435' height='54' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img2_copy.txt">
					<span class='close' id='04-2_out'>&amp;#10005</span></p>
<pre class='text' id='04-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another approach—introduced in Version 12.0—is <tt><a href='https://reference.wolfram.com/language/ref/Around.html'>Around</a></tt>, which in effect represents a distribution of numbers “randomly distributed” around a given number:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img3.png" alt='' title='' width='166' height='54' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img3_copy.txt">
					<span class='close' id='04-3_out'>&amp;#10005</span></p>
<pre class='text' id='04-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>When you do operations on <tt><a href='https://reference.wolfram.com/language/ref/Around.html'>Around</a></tt> numbers the “errors” are combined using a <a href='https://writings.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/#calculus-of-uncertainty'>certain calculus of errors</a> that’s effectively based on Gaussian distributions—and the results you get are always in some sense statistical.</p>
<p>But what if you want to use approximate numbers, but still get provable results? One approach is to use <tt><a href='https://reference.wolfram.com/language/ref/Interval.html'>Interval</a></tt>. But a more streamlined approach now available in Version 13.0 is to use <tt><a href='https://reference.wolfram.com/language/ref/CenteredInterval.html'>CenteredInterval</a></tt>. Here’s a <tt><a href='https://reference.wolfram.com/language/ref/CenteredInterval.html'>CenteredInterval</a></tt> used as input to a <a href='https://reference.wolfram.com/language/guide/BesselRelatedFunctions.html'>Bessel function</a>: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img4.png" alt='' title='' width='308' height='64' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img4_copy.txt">
					<span class='close' id='04-4_out'>&amp;#10005</span></p>
<pre class='text' id='04-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can prove things in the Wolfram Language in many ways. You can use <tt><a href='https://reference.wolfram.com/language/ref/Reduce.html'>Reduce</a></tt>. You can use <tt><a href='https://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt>. And you can use <tt><a href='https://reference.wolfram.com/language/ref/CenteredInterval.html'>CenteredInterval</a></tt>—which in effect leverages numerical evaluation. Here’s a function that has complicated transcendental roots:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img5.png" alt='' title='' width='278' height='184' />
				</div>
<div class='IFL'
					<span class='close' id='04-5_out'>&amp;#10005</span></p>
<pre class='text' id='04-5_out_text'>Plot[Gamma[x]-Sin[x],{x,1,4}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Can we prove that the function is above 0 between 3 and 4? Let’s evaluate the function over a centered interval there:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img6.png" alt='' title='' width='431' height='57' />
				</div>
<div class='IFL'
					<span class='close' id='04-6_out'>&amp;#10005</span></p>
<pre class='text' id='04-6_out_text'>With[{x=CenteredInterval[7/2,1/2]},Gamma[x]-Sin[x]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can check that indeed “all of this interval” is greater than 0:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/04sw1213img7.png" alt='' title='' width='79' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='04-7_out'>&amp;#10005</span></p>
<pre class='text' id='04-7_out_text'>%>0</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And from the “worst-case” way the interval was computed this now provides a definite theorem.</p>
<h2 id='as-well-as-lots-of-other-math'>As Well As Lots of Other Math&#8230;</h2>
<p>As in every new version of the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>, Version 13.0 has lots of specific mathematical enhancements. An example is a new, convenient way to get the <a href='https://reference.wolfram.com/language/ref/FunctionPoles.html'>poles of a function</a>. Here’s a particular function plotted in the complex plane:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img1.png" alt='' title='' width='301' height='218' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img1_copy.txt">
					<span class='close' id='05-1_out'>&amp;#10005</span></p>
<pre class='text' id='05-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here are the exact poles (and their multiplicities) for this function within the unit circle:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img2.png" alt='' title='' width='608' height='114' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img2_copy.txt">
					<span class='close' id='05-2_out'>&amp;#10005</span></p>
<pre class='text' id='05-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can sum the residues at these poles and use <a href='https://mathworld.wolfram.com/CauchyIntegralTheorem.html'>Cauchy’s theorem</a> to get a contour integral:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img3.png" alt='' title='' width='533' height='80' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img3_copy.txt">
					<span class='close' id='05-3_out'>&amp;#10005</span></p>
<pre class='text' id='05-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Also in the area of calculus we’ve added various conveniences to the handling of differential equations. For example, we now directly support <a href='https://reference.wolfram.com/language/ref/DSolveValue.html'>vector variables in ODEs</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img4.png" alt='' title='' width='550' height='90' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img4_copy.txt">
					<span class='close' id='05-4_out'>&amp;#10005</span></p>
<pre class='text' id='05-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Using our graph theory capabilities we’ve also been able to greatly enhance our handling of systems of ODEs, finding ways to “untangle” them into block-diagonal forms that allow us to find symbolic solutions in much more complex cases than before.</p>
<p>For PDEs it’s typically not possible to get general “closed-form” solutions for nonlinear PDEs. But sometimes one can get particular solutions known as <a href='https://reference.wolfram.com/language/ref/CompleteIntegral.html'>complete integrals</a> (in which there are just arbitrary constants, not “whole” arbitrary functions). And now we have an explicit function for finding these:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img5.png" alt='' title='' width='621' height='61' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img5_copy.txt">
					<span class='close' id='05-5_out'>&amp;#10005</span></p>
<pre class='text' id='05-5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Turning from calculus to algebra, we’ve added the function <tt><a href='https://reference.wolfram.com/language/ref/PolynomialSumOfSquaresList.html'>PolynomialSumOfSquaresList</a></tt> that provides a kind of “certificate of positivity” for a multivariate polynomial. The idea is that if a polynomial can be decomposed into a sum of squares (and most, but not all, that are never negative can) then this proves that the polynomial is indeed always non-negative: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img6.png" alt='' title='' width='486' height='89' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img6_copy.txt">
					<span class='close' id='05-6_out'>&amp;#10005</span></p>
<pre class='text' id='05-6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, summing the squares gives the original polynomial again:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/05sw1213img7.png" alt='' title='' width='212' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='05-7_out'>&amp;#10005</span></p>
<pre class='text' id='05-7_out_text'>%.%//Expand</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Version 13.0 we’ve also added a couple of new matrix functions. There’s <tt><a href='https://reference.wolfram.com/language/ref/Adjugate.html'>Adjugate</a></tt>, which is essentially a matrix inverse, but without dividing by the determinant. And there’s <tt><a href='https://reference.wolfram.com/language/ref/DrazinInverse.html'>DrazinInverse</a></tt> which gives the inverse of the nonsingular part of a matrix—as used particularly in solving differential-algebraic equations. </p>
<h2 id='more-pde-modeling-solid-structural-mechanics'>More PDE Modeling: Solid &#038; Structural Mechanics</h2>
<p>PDEs are both difficult to solve and difficult to set up for particular situations. Over the course of many years we’ve built state-of-the-art finite-element solution capabilities for PDEs. We’ve also built our groundbreaking <a href='https://reference.wolfram.com/language/guide/GeometricComputation.html'>symbolic computational geometry system</a> that lets us flexibly describe regions for PDEs. But starting in <a href='https://writings.stephenwolfram.com/2020/12/launching-version-12-2-of-wolfram-language-mathematica-228-new-functions-and-much-more/'>Version 12.2</a> we’ve done something else too: we’ve started creating explicit symbolic modeling frameworks for particular kinds of physical systems that can be modeled with PDEs. We’ve already got <a href='https://reference.wolfram.com/language/PDEModels/tutorial/HeatTransfer/HeatTransfer.html'>heat transfer</a>, <a href='https://reference.wolfram.com/language/PDEModels/tutorial/MassTransport/MassTransport.html'>mass transport</a> and <a href='https://reference.wolframcloud.com/language/PDEModels/tutorial/PDEModelsOverview.html' target=_blank rel=noopener>acoustics</a>. Now in Version 13.0 we’re adding solid and structural mechanics.</p>
<p>For us a <a href='https://writings.stephenwolfram.com/2020/12/launching-version-12-2-of-wolfram-language-mathematica-228-new-functions-and-much-more/#convenient-real-world-pdes'>“classic test problem” has been the deflection of a teaspoon</a>. Here’s how we can now set that up. First we need to define our variables: the displacements of the spoon in each direction at each <em>x</em>, <em>y</em>, <em>z</em> point:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img1.png" alt='' title='' width='359' height='21' />
				</div>
<div class='IFL'
					<span class='close' id='06-1_out'>&amp;#10005</span></p>
<pre class='text' id='06-1_out_text'>vars={{u[x,y,z],v[x,y,z],w[x,y,z]},{x,y,z}};</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then we need to say what the material parameters of our spoon are. And here we get to make use of our whole knowledgebase, which contains detailed information on many kinds of materials:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img2.png" alt='' title='' width='366' height='27' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img2_copy.txt">
					<span class='close' id='06-2_out'>&amp;#10005</span></p>
<pre class='text' id='06-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we’re ready to actually set up and solve the PDE problem:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img3.png" alt='' title='' width='559' height='384' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img3_copy.txt">
					<span class='close' id='06-3_out'>&amp;#10005</span></p>
<pre class='text' id='06-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The result is given as a list of <a href='https://reference.wolfram.com/language/ref/InterpolatingFunction.html'>interpolating functions</a> for the <em>x</em>, <em>y</em>, <em>z</em> displacements. Now we can use a new Version 13.0 graphics function to immediately visualize this result:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img4.png" alt='' title='' width='493' height='303' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img4_copy.txt">
					<span class='close' id='06-4_out'>&amp;#10005</span></p>
<pre class='text' id='06-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But conveniently packaged in those interpolation functions is also lots more detail about the solution we got. For example, here’s the strain tensor for the spoon, given as a symmetrized array of interpolating functions:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img5.png" alt='' title='' width='426' height='106' />
				</div>
<div class='IFL'
					<span class='close' id='06-5_out'>&amp;#10005</span></p>
<pre class='text' id='06-5_out_text'>strains=SolidMechanicsStrain[vars,pars,displacement]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now we can for example find the maximum 3, 3 component of the strain tensor and the position where it’s achieved:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img6.png" alt='' title='' width='476' height='76' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img6_copy.txt">
					<span class='close' id='06-6_out'>&amp;#10005</span></p>
<pre class='text' id='06-6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>How about finding the distribution of values of the strain over the spoon? One easy way to do that is just to sample random points in the spoon</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img7.png" alt='' title='' width='581' height='102' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img7_copy.txt">
					<span class='close' id='06-7_out'>&amp;#10005</span></p>
<pre class='text' id='06-7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and then to make a smoothed histogram of the strains at those points:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img8.png" alt='' title='' width='500' height='329' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/06sw1213img8_copy.txt">
					<span class='close' id='06-8_out'>&amp;#10005</span></p>
<pre class='text' id='06-8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(The maximum we saw before is in the tail on the right.)</p>
<p>Solid mechanics is a complicated area, and what we have in Version 13 is good, industrial-grade technology for handling it. And in fact we have a whole monograph titled <a href='https://reference.wolfram.com/language/PDEModels/tutorial/StructuralMechanics/SolidMechanicsVerificationTests.html'>&#8220;Solid Mechanics Model Verification&#8221;</a> that describes how we’ve validated our results. We are also providing a general monograph on solid mechanics that describes how to take particular problems and solve them with our technology stack.</p>
<h2 id='making-videos-from-images-videos'>Making Videos from Images &#038; Videos</h2>
<p>In <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/'>Version 12.3</a> we released functions like <tt><a href='https://reference.wolfram.com/language/ref/AnimationVideo.html'>AnimationVideo</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/SlideShowVideo.html'>SlideShowVideo</a></tt> which make it easy to produce videos from generated content. In Version 13.0 we now also have a collection of functions for creating videos from existing images, and videos.</p>
<p>By the way, before we even get to making videos, another important new feature in Version 13.0 is that it’s now possible to play videos directly in a notebook:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img1.png" alt='' title='' width='303' height='27' /><br />
					<video loading='lazy' height="auto" width="360" style="margin-left:0px" muted="" alt="" title="" src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-video01.mp4" autoplay="" loop="" playsinline><br />
</video>
				</div>
<div class='IFL'
					<span class='close' id='07-1_out'>&amp;#10005</span></p>
<pre class='text' id='07-1_out_text'>Video["ExampleData/Caminandes.mp4"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This works both on the desktop and in the cloud, and you get all the standard video controls right in the notebook, but you can also pop out the video to view it with an external (say, full-screen) viewer. (You can also now just wrap a video with <tt><a href='https://reference.wolfram.com/language/ref/AnimatedImage.html'>AnimatedImage</a></tt> to make it into a “GIF-like” frame-based animation.)</p>
<p>OK, so back to making videos from images. Let’s say you have a large image:</p>
<p><img loading='lazy' class='' src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-tour-video-image.png' alt='Tour video image' title='Tour video image' width='358' height=' '/></p>
<p>A good way to “experience” an image like this can be through a “tour video” that visits different parts of the image in turn. Here’s an example of how to do that:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img2.png" alt='' title='' width='620' height='255' /><br />
					<img src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-video2.gif' alt=' ' width='292' height=' '>
				</div>
<div class='IFL'
					<span class='close' id='07-2_out'>&amp;#10005</span></p>
<pre class='text' id='07-2_out_text'>TourVideo[CloudGet["https://wolfr.am/10Dku2BIV"],<|"Position"->{Scaled[{.1,.5}],Scaled[{.9,.5}]},"Width"->2000|>,RasterSize->250]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can zoom as well as pan:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img3.png" alt='' title='' width='617' height='264' /><br />
						<img src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-video03.gif' alt=' ' width='292' height=' '>
				</div>
<div class='IFL'
					<span class='close' id='07-3_out'>&amp;#10005</span></p>
<pre class='text' id='07-3_out_text'>TourVideo[CloudGet["https://wolfr.am/10Dku2BIV"],<|"Position"->{{5000,2000},{2700,1800}},"Width"->{3000,200}|>,RasterSize->250]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As a more sophisticated example, let’s take a classic “physics image”:</p>
<p><img loading='lazy' class='' src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-physics-image.png' alt='Physics image' title='Physics image' width='390' height=' '/></p>
<p>This finds the positions of all the faces, then computes a shortest tour visiting each of them:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img4.png" alt='' title='' width='348' height='84' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img4_copy.txt">
					<span class='close' id='07-4_out'>&amp;#10005</span></p>
<pre class='text' id='07-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can create a “face tour” of the image:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img5.png" alt='' title='' width='608' height='235' /><br />
					<img src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-video4.gif' alt=' ' width='263' height=' '><br />
</video>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img5_copy.txt">
					<span class='close' id='07-5_out'>&amp;#10005</span></p>
<pre class='text' id='07-5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In addition to going from images to videos, we can also go from videos to videos. <tt><a href='https://reference.wolfram.com/language/ref/GridVideo.html'>GridVideo</a></tt> takes multiple videos, arranges them in a grid, and creates a combined new video:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img6.png" alt='' title='' width='607' height='610' /><br />
					<img src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-video5.gif' alt=' ' width='329' height=' '>
				</div>
<div class='IFL' data-src="">
					<span class='close' id='07-6_out'>&amp;#10005</span></p>
<pre class='text' id='07-6_out_text'>GridVideo[{Video[
   URLDownload[
    "https://www.wolframcloud.com/obj/sw-writings/Version-13/Video1.\
mp4"]], Video[
   URLDownload[
    "https://www.wolframcloud.com/obj/sw-writings/Version-13/Video2.\
mp4"]], Video[
   URLDownload[
    "https://www.wolframcloud.com/obj/sw-writings/Version-13/Video3.\
mp4"]], Video[
   URLDownload[
    "https://www.wolframcloud.com/obj/sw-writings/Version-13/Video4.\
mp4"]]}, Spacings -> 2]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can also take a single video and “summarize” it as a series of video + audio snippets, chosen for example equally spaced in the video. Think of it as a video version of <tt><a href='https://reference.wolfram.com/language/ref/VideoFrameList.html'>VideoFrameList</a></tt>. Here’s an example “summarizing” a 75-minute video: </p>
<p><img src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-video006.gif' alt=' ' width='426' height=' '></p>
<p>There are some practical conveniences for handling videos that have been added in Version 13.0. One is <tt><a href='https://reference.wolfram.com/language/ref/OverlayVideo.html'>OverlayVideo</a></tt> which allows you to “watermark” a video with an image, or insert what amounts to a “picture-in-picture” video:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-video7.gif' alt=' ' width='542' height=' '>
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img009_copy.txt">
					<span class='close' id='07-9_out'>&amp;#10005</span></p>
<pre class='text' id='07-9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We’ve also made many image operations directly work on videos. So, for example, to crop a video, you just need to use <tt><a href='https://reference.wolfram.com/language/ref/ImageCrop.html'>ImageCrop</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213img11.png" alt='' title='' width='272' height='199' /><br />
					<img src='https://content.wolfram.com/uploads/sites/43/2021/12/07sw1213-video8.gif' alt=' ' width='284' height=' '>
				</div>
<div class='IFL'
					<span class='close' id='07-11_out'>&amp;#10005</span></p>
<pre class='text' id='07-11_out_text'>ImageCrop[%,200]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='image-stitching'>Image Stitching</h2>
<p>Let’s say you’ve taken a bunch of pictures at different angles—and now you want to stitch them together. In Version 13.0 we’ve made that very easy—with the function <tt><a href='https://reference.wolfram.com/language/ref/ImageStitch.html'>ImageStitch</a></tt>:</p>
<p><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/08sw1213img1.png" alt='' title='' width='642' height='' /></p>
<p>Part of what’s under the hood in image stitching is finding key points in images. And in Version 13.0 we’ve added two further methods (SIFT and RootSIFT) for <tt><a href='https://reference.wolfram.com/language/ref/ImageKeypoints.html'>ImageKeypoints</a></tt>. But aligning key points isn’t the only thing we’re doing in image stitching. We’re also doing things like brightness equalization and lens correction, as well as blending images across seams. </p>
<p>Image stitching can be refined using options like <tt><a href='https://reference.wolfram.com/language/ref/TransformationClass.html'>TransformationClass</a></tt>—which specify what transformations should be allowed when the separate images are assembled.</p>
<h2 id='trees-continue-to-grow'>Trees Continue to Grow</h2>
<p>We introduced <tt><a href='https://reference.wolfram.com/language/ref/Tree.html'>Tree</a></tt> as a basic construct in <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/'>Version 12.3</a>. In 13.0 we’re extending <tt><a href='https://reference.wolfram.com/language/ref/Tree.html'>Tree</a></tt> and adding some enhancements. First of all, there are now options for tree layout and visualization. </p>
<p>For example, this lays out a tree radially (note that knowing it’s a tree rather than a general graph makes it possible to do much more systematic embeddings):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img1.png" alt='' title='' width='509' height='336' />
				</div>
<div class='IFL'
					<span class='close' id='09-1_out'>&amp;#10005</span></p>
<pre class='text' id='09-1_out_text'>GraphTree[CompleteKaryTree[5],TreeLayout->"RadialEmbedding"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This adds options for styling elements, with one particular element specified by its tree position being singled out as blue:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img2.png" alt='' title='' width='610' height='334' />
				</div>
<div class='IFL'
					<span class='close' id='09-2_out'>&amp;#10005</span></p>
<pre class='text' id='09-2_out_text'>GraphTree[CompleteKaryTree[5],TreeLayout->"RadialEmbedding",TreeElementLabel->(All->None),TreeElementStyle->{{1,1,1}->Blue,All->Red}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One of the more sophisticated new “tree concepts” is <tt><a href='https://reference.wolfram.com/language/ref/TreeTraversalOrder.html'>TreeTraversalOrder</a></tt>. Imagine you’re going to “map across” a tree. In what order should you visit the nodes? Here’s the default behavior. Set up a tree:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img3.png" alt='' title='' width='286' height='148' />
				</div>
<div class='IFL'
					<span class='close' id='09-3_out'>&amp;#10005</span></p>
<pre class='text' id='09-3_out_text'>GraphTree[KaryTree[10,3]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now show in which order the nodes are visited by <tt><a href='https://reference.wolfram.com/language/ref/TreeScan.html'>TreeScan</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img4.png" alt='' title='' width='179' height='271' />
				</div>
<div class='IFL'
					<span class='close' id='09-4_out'>&amp;#10005</span></p>
<pre class='text' id='09-4_out_text'>TreeScan[Echo,%]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This explicitly labels the nodes in the order they are visited:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img5.png" alt='' title='' width='418' height='251' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img5_copy.txt">
					<span class='close' id='09-5_out'>&amp;#10005</span></p>
<pre class='text' id='09-5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This order is by default depth first. But now <tt><a href='https://reference.wolfram.com/language/ref/TreeTraversalOrder.html'>TreeTraversalOrder</a></tt> allows you to ask for other orderings. Here’s breadth-first order:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img6.png" alt='' title='' width='616' height='227' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img6_copy.txt">
					<span class='close' id='09-6_out'>&amp;#10005</span></p>
<pre class='text' id='09-6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a slightly more ornate ordering:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img07.png" alt='' title='' width='703' height='254' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/09sw1213img7_copy.txt">
					<span class='close' id='09-7_out'>&amp;#10005</span></p>
<pre class='text' id='09-7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Why does this matter? “Traversal order” turns out to be related to deep questions about evaluation processes and what I now call <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/'>multicomputation</a>. In a sense a traversal order defines the “reference frame” through which an “observer” of the tree samples it. And, yes, that language sounds like physics, and for a good reason: this is all deeply related to a bunch of concepts about fundamental physics that arise in our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a>. And the parametrization of traversal order—apart from being useful for a bunch of existing algorithms—begins to open the door to connecting computational processes to ideas from physics, and new notions about what I’m calling <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/'>multicomputation</a>.</p>
<h2 id='graph-coloring'>Graph Coloring</h2>
<p>The graph theory capabilities of <a href='https://www.wolfram.com/language/'>Wolfram Language</a> have been very impressive for a long time (and were critical, for example, in making possible our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a>). But in Version 13.0 we’re adding still more.</p>
<p>A commonly requested set of capabilities revolve around <a href='https://reference.wolfram.com/language/guide/GraphPropertiesAndMeasurements.html#1047298221'>graph coloring</a>. For example, given a graph, how can one assign “colors” to its vertices so that no pair of adjacent vertices have the same color? In Version 13.0 there’s a function <tt><a href='https://reference.wolfram.com/language/ref/FindVertexColoring.html'>FindVertexColoring</a></tt> that does that:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img1.png" alt='' title='' width='276' height='122' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img1_copy.txt">
					<span class='close' id='10-1_out'>&amp;#10005</span></p>
<pre class='text' id='10-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now we can “highlight” the graph with those colors: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img2.png" alt='' title='' width='503' height='151' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img2_copy.txt">
					<span class='close' id='10-2_out'>&amp;#10005</span></p>
<pre class='text' id='10-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The classic “graph coloring” problem involves coloring geographic maps. So here, for example, is the graph representing the bordering relations for US states:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img3.png" alt='' title='' width='470' height='226' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img3_copy.txt">
					<span class='close' id='10-3_out'>&amp;#10005</span></p>
<pre class='text' id='10-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now it’s an easy matter to find a 4-coloring of US states:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img4.png" alt='' title='' width='536' height='341' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img4_copy.txt">
					<span class='close' id='10-4_out'>&amp;#10005</span></p>
<pre class='text' id='10-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are actually a remarkable range of problems that can be reduced to graph coloring. Another example has to do with scheduling a “tournament” in which all pairs of people “play” each other, but everyone plays only one match at a time. The collection of matches needed is just the complete graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img5.png" alt='' title='' width='179' height='165' />
				</div>
<div class='IFL'
					<span class='close' id='10-5_out'>&amp;#10005</span></p>
<pre class='text' id='10-5_out_text'>CompleteGraph[8]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Each match corresponds to an edge in the graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img6.png" alt='' title='' width='637' height='81' />
				</div>
<div class='IFL'
					<span class='close' id='10-6_out'>&amp;#10005</span></p>
<pre class='text' id='10-6_out_text'>EdgeList[CompleteGraph[8]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now by finding an “edge coloring” we have a list of possible “time slots” in which each match can be played:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img7.png" alt='' title='' width='483' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='10-7_out'>&amp;#10005</span></p>
<pre class='text' id='10-7_out_text'>FindEdgeColoring[CompleteGraph[8]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/EdgeChromaticNumber.html'>EdgeChromaticNumber</a></tt> tells one the total number of matches needed:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img8.png" alt='' title='' width='337' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='10-8_out'>&amp;#10005</span></p>
<pre class='text' id='10-8_out_text'>EdgeChromaticNumber[CompleteGraph[8]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Map coloring brings up the subject of planar graphs. Version 13.0 introduces new functions for working with planar graphs. <tt><a href='https://reference.wolfram.com/language/ref/PlanarFaceList.html'>PlanarFaceList</a></tt> takes a planar graph and tells us how the graph can be decomposed into “faces”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img9.png" alt='' title='' width='594' height='154' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img9_copy.txt">
					<span class='close' id='10-9_out'>&amp;#10005</span></p>
<pre class='text' id='10-9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/FindPlanarColoring.html'>FindPlanarColoring</a></tt> directly computes a coloring for these planar faces. Meanwhile, <tt><a href='https://reference.wolfram.com/language/ref/DualPlanarGraph.html'>DualPlanarGraph</a></tt> makes a graph in which each face is a vertex:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img10.png" alt='' title='' width='263' height='306' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/10sw1213img10_copy.txt">
					<span class='close' id='10-10_out'>&amp;#10005</span></p>
<pre class='text' id='10-10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='subgraph-isomorphism-more'>Subgraph Isomorphism &#038; More</h2>
<p>It comes up all over the place. (In fact, in our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> it’s even something the universe is effectively doing throughout the network that represents space.) Where does a given <a href='https://reference.wolfram.com/language/ref/FindIsomorphicSubgraph.html'>graph contain a certain subgraph</a>? In Version 13.0 there’s a function to determine that (the <tt><a href='https://reference.wolfram.com/language/ref/All.html'>All</a></tt> says to give all instances): </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/11sw1213img1.png" alt='' title='' width='514' height='155' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/11sw1213img1_copy.txt">
					<span class='close' id='11-1_out'>&amp;#10005</span></p>
<pre class='text' id='11-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A typical area where this kind of subgraph isomorphism comes up is in chemistry. Here is the graph structure for a molecule:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/11sw1213img2.png" alt='' title='' width='450' height='302' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/11sw1213img2_copy.txt">
					<span class='close' id='11-2_out'>&amp;#10005</span></p>
<pre class='text' id='11-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can find a 6-cycle:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/11sw1213img03.png" alt='' title='' width='341' height='135' />
				</div>
<div class='IFL'
					<span class='close' id='11-3_out'>&amp;#10005</span></p>
<pre class='text' id='11-3_out_text'>FindIsomorphicSubgraph[%,CycleGraph[6]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another new capability in Version 13.0 has to do with <a href='https://reference.wolfram.com/language/guide/GraphModifications.html#2145780989'>handling flow graphs</a>. The basic question is: in “flowing” through the graph, what vertices are critical, in the sense that they “have to be visited” if one’s going to get to all future vertices? Here’s an example of a directed graph (yes, made from a <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-in-our-models/multiway-systems-for-our-models/' target=_blank rel=noopener>multiway system</a>):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/11sw1213img4.png" alt='' title='' width='617' height='400' />
				</div>
<div class='IFL'
					<span class='close' id='11-4_out'>&amp;#10005</span></p>
<pre class='text' id='11-4_out_text'>ResourceFunction["MultiwaySystem"][{"A"->"BBB","BB"->"A"},"A",6,"StatesGraph"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can ask for the <a href='https://reference.wolfram.com/language/ref/DominatorTreeGraph.html'><tt>DominatorTreeGraph</tt></a>, which shows us a map of what vertices are critical to reach where, starting from A: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/11sw1213img5.png" alt='' title='' width='418' height='277' />
				</div>
<div class='IFL'
					<span class='close' id='11-5_out'>&amp;#10005</span></p>
<pre class='text' id='11-5_out_text'>DominatorTreeGraph[%,"A"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This now says for each vertex what its “dominator” is, i.e. what the nearest critical vertex to it is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/11sw1213img6.png" alt='' title='' width='607' height='59' />
				</div>
<div class='IFL'
					<span class='close' id='11-6_out'>&amp;#10005</span></p>
<pre class='text' id='11- 6_out_text'>DominatorVertexList[%%,"A"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>If the graph represents causal or other dependency of one “event” on others, the dominators are effectively synchronization points, where everything has to proceed through one “thread of history”.</p>
<h2 id='estimations-of-spatial-fields'>Estimations of Spatial Fields</h2>
<p>Imagine you’ve got data sampled at certain points in space, say on the surface of the Earth. The data might be from weather stations, soil samples, mineral drilling, or many other things. In Version 13.0 we’ve added a collection of functions for <a href='https://reference.wolfram.com/language/guide/SpatialStatistics.html#914095272'>estimating “spatial fields”</a> from samples (or what’s sometimes known as “<a href='https://en.wikipedia.org/wiki/Kriging' target=_blank rel=noopener>kriging</a>”).</p>
<p>Let’s take some sample data, and plot it:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/12sw1213img1.png" alt='' title='' width='478' height='293' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/12sw1213img1_copy.txt">
					<span class='close' id='12-1_out'>&amp;#10005</span></p>
<pre class='text' id='12-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now let’s make a “spatial estimate” of the data:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/12sw1213img2.png" alt='' title='' width='518' height='151' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/12sw1213img2_copy.txt">
					<span class='close' id='12-2_out'>&amp;#10005</span></p>
<pre class='text' id='12-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This behaves much like an <tt><a href='https://reference.wolfram.com/language/ref/InterpolatingFunction.html'>InterpolatingFunction</a></tt>, which we can sample anywhere we want:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/12sw1213img3.png" alt='' title='' width='315' height='248' />
				</div>
<div class='IFL'
					<span class='close' id='12-3_out'>&amp;#10005</span></p>
<pre class='text' id='12-3_out_text'>Plot3D[est[{x,y}],{x,0,3},{y,0,2}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>To create this estimate, we’ve inevitably used a model. We can change the model when we create the spatial estimate:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/12sw1213img4.png" alt='' title='' width='601' height='125' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/12sw1213img4_copy.txt">
					<span class='close' id='12-4_out'>&amp;#10005</span></p>
<pre class='text' id='12-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now the results will be different:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/12sw1213img5.png" alt='' title='' width='275' height='212' />
				</div>
<div class='IFL'
					<span class='close' id='12-5_out'>&amp;#10005</span></p>
<pre class='text' id='12-5_out_text'>Plot3D[%[{x,y}],{x,0,3},{y,0,2}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In Version 13.0 you can get detailed control of the model by using options like <tt><a href='https://reference.wolfram.com/language/ref/SpatialTrendFunction.html'>SpatialTrendFunction</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/SpatialNoiseLevel.html'>SpatialNoiseLevel</a></tt>. A key issue is what to assume about local variations in the spatial field—which you can specify in symbolic form using <tt><a href='https://reference.wolfram.com/language/ref/VariogramModel.html'>VariogramModel</a></tt>.</p>
<h2 id='getting-time-right-leap-seconds-more'>Getting Time Right: Leap Seconds &#038; More</h2>
<p>There are supposed to be exactly 24 hours in a day. Except that the Earth doesn’t know that. And in fact its rotation period varies slightly with time (generally its rotation is slowing down). So to keep the “time of day” aligned with where the Sun is in the sky the “hack” was invented of adding or subtracting “<a href='https://www.wolframalpha.com/input/?i=leap+second'>leap seconds</a>”.</p>
<p>In a sense, the problem of describing a moment in time is a bit like the problem of geo location. In geo location there’s the question of describing a position in space. Knowing latitude-longitude on the Earth isn’t enough; one has to also have a “geo model” (defined by the <tt><a href='https://reference.wolfram.com/language/ref/GeoModel.html'>GeoModel</a></tt> option) that describes what shape to assume for the Earth, and thus how lat-long should map to actual spatial position.</p>
<p>In describing a moment of time we similarly have to say how our “clock time” maps onto actual “physical time”. And to do that we’ve introduced in Version 13.0 the notion of a time system, defined by the <tt><a href='https://reference.wolfram.com/language/ref/TimeSystem.html'>TimeSystem</a></tt> option.</p>
<p>This defines the first moment of December 2021 in the UT1 time system:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img1.png" alt='' title='' width='518' height='57' />
				</div>
<div class='IFL'
					<span class='close' id='13-1_out'>&amp;#10005</span></p>
<pre class='text' id='13-1_out_text'>DateObject[{2021,12,1,0,0,0},TimeSystem->"UT1",TimeZone->0]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the first moment of December 2021 in the TAI time system:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img2.png" alt='' title='' width='513' height='57' />
				</div>
<div class='IFL'
					<span class='close' id='13-2_out'>&amp;#10005</span></p>
<pre class='text' id='13-2_out_text'>DateObject[{2021,12,1,0,0,0},TimeSystem->"TAI",TimeZone->0]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But even though these are both associated with the same “clock description”, they correspond to different actual moments in time. And subtracting them we get a nonzero value: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img3.png" alt='' title='' width='403' height='57' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img3_copy.txt">
					<span class='close' id='13-3_out'>&amp;#10005</span></p>
<pre class='text' id='13-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>What’s going on here? Well, TAI is a time system based on atomic clocks in which each day is taken to be precisely 24 hours long, and the “zero” of the time system was set in the late 1950s. UT1, on the other, is a time system in which each day has a length defined by the actual rotation of the Earth. And what this is showing is that in the time since TAI and UT1 were synchronized in the late 1950s the Earth’s actual rotation has slowed down to the point where it is now about 37 seconds behind where it would be with a precise 24-hour day.</p>
<p>An important time system is UTC—which is standard “civil time”, and the de facto standard time of the internet. UTC doesn’t track the precise rotation speed of the Earth; instead it adds or subtracts discrete leap seconds when UT1 is about to accumulate another second of discrepancy from TAI—so that right now UTC is exactly 37 seconds behind TAI:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img4.png" alt='' title='' width='404' height='57' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img4_copy.txt">
					<span class='close' id='13-4_out'>&amp;#10005</span></p>
<pre class='text' id='13-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/'>Version 12.3</a> we introduced <tt><a href='https://reference.wolfram.com/language/ref/GeoOrientationData.html'>GeoOrientationData</a></tt> which is based on a feed of data on the measured rotation speed of the Earth. Based on this, here’s the deviation from 24 hours in the length of day for the past decade:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img5.png" alt='' title='' width='616' height='275' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img5_copy.txt">
					<span class='close' id='13-5_out'>&amp;#10005</span></p>
<pre class='text' id='13-5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(And, yes, this shows that—for the first time since measurements were started in the late 1950s—the Earth’s rotation is slightly speeding up.)</p>
<p>Can we see the leap seconds that have been added to account for these changes? Let’s look at a few seconds right at the beginning of 2017 in the TAI time system: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img6.png" alt='' title='' width='499' height='100' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img6_copy.txt">
					<span class='close' id='13-6_out'>&amp;#10005</span></p>
<pre class='text' id='13-6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now let’s convert these moments in time into their UTC representation—using the new <tt><a href='https://reference.wolfram.com/language/ref/TimeSystemConvert.html'>TimeSystemConvert</a></tt> function:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img7.png" alt='' title='' width='422' height='91' />
				</div>
<div class='IFL'
					<span class='close' id='13-7_out'>&amp;#10005</span></p>
<pre class='text' id='13-7_out_text'>TimeSystemConvert[#,"UTC"]&/@%</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Look carefully at this. First, when 2016 ends and 2017 begins is slightly different in UTC than in TAI. But there’s something even weirder going on. At the very end of 2016, UTC shows a time 23:59:60. Why didn’t that “wrap around” in “clock arithmetic” style to the next day? Answer: because there’s a leap second being inserted. (Which makes me wonder just when the New Year was celebrated in time zone 0 that year&#8230;.)</p>
<p>If you think this is subtle, consider another point. Inside your computer there are lots of timers that control system operations—and that are based on “global time”. And bad things could happen with these timers if global time “glitched”. So how can we address this? What we do in Wolfram Language is to use “smeared UTC”, and effectively smear out the leap second over the course of a day—essentially by making each individual “second” not exactly a “physical second” long.</p>
<p>Here’s the beginning of the last second of 2016 in UTC:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img8.png" alt='' title='' width='501' height='58' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img8_copy.txt">
					<span class='close' id='13-8_out'>&amp;#10005</span></p>
<pre class='text' id='13-8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But here it is in smeared UTC:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img9.png" alt='' title='' width='571' height='60' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, you can derive that number from the number of seconds in a “leap-second day”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/13sw1213img10.png" alt='' title='' width='167' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='13-10_out'>&amp;#10005</span></p>
<pre class='text' id='13-10_out_text'>1/(24 60 60+1.)</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By the way, you might be wondering why one should care about all this complexity. In everyday life leap seconds are a detail. But if you’re doing astronomy they can really matter. After all, in one (leap) second, light goes about 186,000 miles&#8230;.</p>
<h2 id='new-crisper-geographic-maps'>New, Crisper Geographic Maps</h2>
<p>Maps involve a lot of data, and efficiently delivering them and rendering them (in appropriate projections, etc.) is a difficult matter. In Version 13.0 we’re greatly “crispening” maps, by using vector fonts for all labeling:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/14sw1213img1.png" alt='' title='' width='481' height='286' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/14sw1213img1_copy.txt">
					<span class='close' id='14-1_out'>&amp;#10005</span></p>
<pre class='text' id='14-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At least for right now, by default the background is still a bitmap. You can use “crispened” vector graphics for the background as well—but it will take longer to render:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/14sw1213img2.png" alt='' title='' width='520' height='286' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/14sw1213img2_copy.txt">
					<span class='close' id='14-2_out'>&amp;#10005</span></p>
<pre class='text' id='14-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One advantage of using vector labels is that they can work in all geo projections (note that in Version 13 if you don’t specify the region for <tt><a href='https://reference.wolfram.com/language/ref/GeoGraphics.html'>GeoGraphics</a></tt>, it’ll default to the whole world):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/14sw1213img3.png" alt='' title='' width='481' height='433' />
				</div>
<div class='IFL'
					<span class='close' id='14-3_out'>&amp;#10005</span></p>
<pre class='text' id='14-3_out_text'>GeoGraphics[GeoProjection->"Bonne"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another addition in Version 13 is the ability to mix multiple background layers. Here’s an example that includes a street map with a translucent relief map on top (and labels on top of that):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/14sw1213img4.png" alt='' title='' width='520' height='469' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/14sw1213img4_copy.txt">
					<span class='close' id='14-4_out'>&amp;#10005</span></p>
<pre class='text' id='14-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='geometric-regions-fitting-and-building'>Geometric Regions: Fitting and Building</h2>
<p>Given a bunch of points on a circle, what is the circle they are on?</p>
<p>Here are random points selected around a circle:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img1.png" alt='' title='' width='612' height='110' />
				</div>
<div class='IFL'
					<span class='close' id='15-1_out'>&amp;#10005</span></p>
<pre class='text' id='15-1_out_text'>pts=RandomPoint[Circle[{0,0},2],10]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The new function <tt><a href='https://reference.wolfram.com/language/ref/RegionFit.html'>RegionFit</a></tt> can figure out what circle the points are on:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img2.png" alt='' title='' width='201' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='15-2_out'>&amp;#10005</span></p>
<pre class='text' id='15-2_out_text'>RegionFit[pts,"Circle"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a collection of points in 3D:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img3.png" alt='' title='' width='237' height='222' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img3_copy.txt">
					<span class='close' id='15-3_out'>&amp;#10005</span></p>
<pre class='text' id='15-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This fits a cylinder to these points:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img4.png" alt='' title='' width='474' height='228' />
				</div>
<div class='IFL'
					<span class='close' id='15-4_out'>&amp;#10005</span></p>
<pre class='text' id='15-4_out_text'>Graphics3D[{pts,Style[RegionFit[pts,"Cylinder"],Opacity[.5]]}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another very useful new function in Version 13.0 is <tt><a href='https://reference.wolfram.com/language/ref/ConcaveHullMesh.html'>ConcaveHullMesh</a></tt>—which attempts to reconstruct a surface from a collection of 3D points. Here are 1000 points:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img5.png" alt='' title='' width='287' height='300' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img5_copy.txt">
					<span class='close' id='15-5_out'>&amp;#10005</span></p>
<pre class='text' id='15-5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The convex hull will put “shrinkwrap” around everything:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img6.png" alt='' title='' width='209' height='235' />
				</div>
<div class='IFL'
					<span class='close' id='15-6_out'>&amp;#10005</span></p>
<pre class='text' id='15-6_out_text'>ConvexHullMesh[pts]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But the concave hull will make the surface “go into the concavities”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img7.png" alt='' title='' width='260' height='299' />
				</div>
<div class='IFL'
					<span class='close' id='15-7_out'>&amp;#10005</span></p>
<pre class='text' id='15-7_out_text'>ConcaveHullMesh[pts]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There’s a lot of freedom in how one can reconstruct the surface. Another function in Version 13 is <tt><a href='https://reference.wolfram.com/language/ref/GradientFittedMesh.html'>GradientFittedMesh</a></tt>, which forms the surface from a collection of inferred surface normals:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img8.png" alt='' title='' width='251' height='273' />
				</div>
<div class='IFL'
					<span class='close' id='15-8_out'>&amp;#10005</span></p>
<pre class='text' id='15-8_out_text'>GradientFittedMesh[pts]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We’ve just talked about finding geometric regions from “point data”. Another new capability in Version 13.0 is <a href='https://reference.wolfram.com/language/guide/SolidGeometry.html#1393753078'>constructive solid geometry (CSG)</a>, which explicitly builds up regions from geometric primitives. The main function is <tt><a href='https://reference.wolfram.com/language/ref/CSGRegion.html'>CSGRegion</a></tt>, which allows a variety of operations to be done on primitives. Here’s a region formed from an intersection of primitives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img9.png" alt='' title='' width='345' height='250' />
				</div>
<div class='IFL'
					<span class='close' id='15-9_out'>&amp;#10005</span></p>
<pre class='text' id='15-9_out_text'>CSGRegion["Intersection",{Ball[],Cuboid[]}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Note that this is an “exact” region—no numerical approximation is involved. So when we ask for its volume, we get an exact result:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img10.png" alt='' title='' width='117' height='69' />
				</div>
<div class='IFL'
					<span class='close' id='15-10_out'>&amp;#10005</span></p>
<pre class='text' id='15-10_out_text'>Volume[%]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One can build up more complicated structures hierarchically:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img11.png" alt='' title='' width='575' height='290' />
				</div>
<div class='IFL'
					<span class='close' id='15-11_out'>&amp;#10005</span></p>
<pre class='text' id='15-11_out_text'>reg=CSGRegion["Difference",{CSGRegion["Intersection",{Ball[],Cube[3/2]}],Cylinder[{{0,0,-1},{0,0,1}},1/2]}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Though the integrals get difficult, it’s still often possible to get exact results for things like volume:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img12.png" alt='' title='' width='126' height='71' />
				</div>
<div class='IFL'
					<span class='close' id='15-12_out'>&amp;#10005</span></p>
<pre class='text' id='15-12_out_text'>Volume[reg]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Given a hierarchically constructed geometric region, it’s possible to “tree it out” with <tt><a href='https://reference.wolfram.com/language/ref/CSGRegionTree.html'>CSGRegionTree</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img13.png" alt='' title='' width='180' height='164' />
				</div>
<div class='IFL'
					<span class='close' id='15-13_out'>&amp;#10005</span></p>
<pre class='text' id='15-13_out_text'>CSGRegionTree[reg]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In doing mechanical engineering, it’s very common to make parts by physically performing various operations that can easily be represented in CSG form. So here for example is a slightly more complicated CSG tree </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img14.png" alt='' title='' width='376' height='149' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img14_copy.txt">
					<span class='close' id='15-14_out'>&amp;#10005</span></p>
<pre class='text' id='15-14_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which can be “assembled” into an actual CSG region for a typical engineering part:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img0015.png" alt='' title='' width='321' height='275' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img015_copy.txt">
					<span class='close' id='15-15_out'>&amp;#10005</span></p>
<pre class='text' id='15-15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Thinking about CSG highlights the question of determining when two regions are “the same”. For example, even though a region might be represented as a general <tt><a href='https://reference.wolfram.com/language/ref/Polygon.html'>Polygon</a></tt>, it may actually also be a pure <tt><a href='https://reference.wolfram.com/language/ref/Rectangle.html'>Rectangle</a></tt>. And more than that, the region might be at a different place in space, with a different orientation. </p>
<p>In Version 13.0 the function <tt><a href='https://reference.wolfram.com/language/ref/RegionCongruent.html'>RegionCongruent</a></tt> tests for this: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img16.png" alt='' title='' width='593' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='15-16_out'>&amp;#10005</span></p>
<pre class='text' id='15-16_out_text'>RegionCongruent[Rotate[Rectangle[],Pi/3],Polygon[{{0,0},{1,0},{1,1},{0,1}}]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/RegionSimilar.html'>RegionSimilar</a></tt> also allows regions to change size:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img17.png" alt='' title='' width='600' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='15-17_out'>&amp;#10005</span></p>
<pre class='text' id='15-17_out_text'>RegionSimilar[Rotate[Rectangle[],Pi/3],Polygon[{{0,0},{10,0},{10,10},{0,10}}]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But knowing that two regions are similar, the next question might be: What transformation is needed to get from one to the other? In Version 13.0, <tt><a href='https://reference.wolfram.com/language/ref/FindRegionTransform.html'>FindRegionTransform</a></tt> tries to determine this:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/15sw1213img18.png" alt='' title='' width='614' height='101' />
				</div>
<div class='IFL'
					<span class='close' id='15-18_out'>&amp;#10005</span></p>
<pre class='text' id='15-18_out_text'>FindRegionTransform[Rotate[Rectangle[],Pi/3],Polygon[{{0,0},{1,0},{1,1},{0,1}}]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='chemical-formulas-chemical-reactions'>Chemical Formulas &#038; Chemical Reactions</h2>
<p>In <a href='https://writings.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/'>Version 12</a> we introduced <tt><a href='https://reference.wolfram.com/language/ref/Molecule.html'>Molecule</a></tt> as a symbolic representation of a molecule in chemistry. In successive versions we’ve steadily been adding more capabilities around <tt><a href='https://reference.wolfram.com/language/ref/Molecule.html'>Molecule</a></tt>. In Version 13.0 we’re adding things like the capability to annotate 2D and 3D molecule plots with additional information:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img1.png" alt='' title='' width='440' height='181' />
				</div>
<div class='IFL'
					<span class='close' id='16-1_out'>&amp;#10005</span></p>
<pre class='text' id='16-1_out_text'>MoleculePlot["D-glucose",AtomLabels->"AtomChirality"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img2.png" alt='' title='' width='506' height='283' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img2_copy.txt">
					<span class='close' id='16-2_out'>&amp;#10005</span></p>
<pre class='text' id='16-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/Molecule.html'>Molecule</a></tt> provides a representation for a specific type of molecule, with a specific arrangement of atoms in 3D space. In Version 13.0, however, we’re generalizing to arbitrary chemical formulas, in which one describes the number of each type of atom, without giving information on bonds or 3D arrangement. One can enter a chemical formula just as a string:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img3.png" alt='' title='' width='276' height='59' />
				</div>
<div class='IFL'
					<span class='close' id='16-3_out'>&amp;#10005</span></p>
<pre class='text' id='16-3_out_text'>ChemicalFormula["C12H16O2NS"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>From the formula alone it’s possible to compute a few properties, like molecular mass:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img4.png" alt='' title='' width='261' height='61' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img4_copy.txt">
					<span class='close' id='16-4_out'>&amp;#10005</span></p>
<pre class='text' id='16-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Given the chemical formula, one can ask for specific “known” molecules that have that formula:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213-findisomers.png" alt='' title='' width='648' height='247' />
				</div>
<div class='IFL'
					<span class='close' id='16-5_out'>&amp;#10005</span></p>
<pre class='text' id='16-5_out_text'>FindIsomers[ChemicalFormula["C12H16O2NS"]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Often there will be many such molecules, and for example one could see how they’re arranged in “chemical feature space”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img6.png" alt='' title='' width='281' height='269' />
				</div>
<div class='IFL'
					<span class='close' id='16-6_out'>&amp;#10005</span></p>
<pre class='text' id='16-6_out_text'>FeatureSpacePlot[%]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now that we can handle both molecules and chemical formulas, the next big step is chemical reactions. And in Version 13.0 the beginning of that is the ability to represent a chemical reaction symbolically. </p>
<p>You can enter a reaction as a string: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img7.png" alt='' title='' width='431' height='69' />
				</div>
<div class='IFL'
					<span class='close' id='16-7_out'>&amp;#10005</span></p>
<pre class='text' id='16-7_out_text'>ChemicalReaction["C8H10N4O2 + O2 -> CO2 + H2O + N4"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s the reaction represented in terms of explicit rules:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img8.png" alt='' title='' width='503' height='59' />
				</div>
<div class='IFL'
					<span class='close' id='16-8_out'>&amp;#10005</span></p>
<pre class='text' id='16-8_out_text'>%["ReactionRule"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But this is not yet a balanced reaction. To balance it, we can use <tt><a href='https://reference.wolfram.com/language/ref/ReactionBalance.html'>ReactionBalance</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img9.png" alt='' title='' width='521' height='86' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img9_copy.txt">
					<span class='close' id='16-9_out'>&amp;#10005</span></p>
<pre class='text' id='16-9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, needless to say, <tt><a href='https://reference.wolfram.com/language/ref/ReactionBalance.html'>ReactionBalance</a></tt> is quite general, so it can deal with reactions whose balancing requires solving slightly nontrivial <a href='https://reference.wolfram.com/language/guide/DiophantineEquations.html'>Diophantine equations</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img10.png" alt='' title='' width='604' height='118' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/16sw1213img10_copy.txt">
					<span class='close' id='16-10_out'>&amp;#10005</span></p>
<pre class='text' id='16-10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='bio-sequences-plots-secondary-bonds-and-more'>Bio Sequences: Plots, Secondary Bonds and More</h2>
<p>In <a href='https://writings.stephenwolfram.com/2020/12/launching-version-12-2-of-wolfram-language-mathematica-228-new-functions-and-much-more/#biomolecular-sequences-symbolic-dna-proteins-etc'>Version 12.2</a> we introduced the concept of <tt><a href='https://reference.wolfram.com/language/ref/BioSequence.html'>BioSequence</a></tt>, to represent molecules like DNA, RNA and proteins that consist of sequences of discrete units. In Version 13.0 we’re adding a variety of new <tt><a href='https://reference.wolfram.com/language/ref/BioSequence.html'>BioSequence</a></tt> capabilities. One is <tt><a href='https://reference.wolfram.com/language/ref/BioSequencePlot.html'>BioSequencePlot</a></tt>, which provides an immediate visual representation of bio sequences:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/17sw1213img1.png" alt='' title='' width='444' height='63' />
				</div>
<div class='IFL'
					<span class='close' id='17-1_out'>&amp;#10005</span></p>
<pre class='text' id='17-1_out_text'>BioSequencePlot[BioSequence["DNA", "ATAATCTGT"]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But beyond visualization, Version 13.0 also adds the ability to represent secondary structure in RNA, proteins and single-stranded DNA. Here, for example, is a piece of RNA with additional hydrogen <a href='https://reference.wolfram.com/language/ref/Bond.html'>bonds</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/17sw1213img2.png" alt='' title='' width='568' height='223' />
				</div>
<div class='IFL'
					<span class='close' id='17-2_out'>&amp;#10005</span></p>
<pre class='text' id='17-2_out_text'>BioSequencePlot[BioSequence["RNA", "GCCAGACUGAYAUCUGGA",{Bond[{2,17}],Bond[{3,16}],Bond[{4,15}],Bond[{5,14}],Bond[{6,13}]}]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>You can also specify secondary structure using “dot-bracket” notation:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/17sw1213img3.png" alt='' title='' width='609' height='273' />
				</div>
<div class='IFL'
					<span class='close' id='17-3_out'>&amp;#10005</span></p>
<pre class='text' id='17-3_out_text'>BioSequencePlot[
BioSequence["RNA", "GAUGGCACUCCCAUCAAUUGGAGC","(((((..<<<))))).....>>>."]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/BioSequence.html'>BioSequence</a></tt> also supports hybrid strands, involving for example linking between DNA and RNA:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/17sw1213img4.png" alt='' title='' width='462' height='138' />
				</div>
<div class='IFL'
					<span class='close' id='17-4_out'>&amp;#10005</span></p>
<pre class='text' id='17-4_out_text'>BioSequencePlot[BioSequence["HybridStrand",{BioSequence["DNA","AGG"],BioSequence["AGCUAG"]}]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/Molecule.html'>Molecule</a></tt> converts <tt><a href='https://reference.wolfram.com/language/ref/BioSequence.html'>BioSequence</a></tt> to an explicit collection of atoms:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/17sw1213img5.png" alt='' title='' width='412' height='283' />
				</div>
<div class='IFL'
					<span class='close' id='17-5_out'>&amp;#10005</span></p>
<pre class='text' id='17-5_out_text'>MoleculePlot[Molecule[BioSequence["HybridStrand",{BioSequence["DNA","AGG"],BioSequence["AGCUAG"]}]]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Putting it all together, here’s an example of crosslinking between two peptides (now with disulfide bonds), in this case for insulin:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/17sw1213img06.png" alt='' title='' width='606' height='391' />
				</div>
<div class='IFL'
					<span class='close' id='17-6_out'>&amp;#10005</span></p>
<pre class='text' id='17-6_out_text'>MoleculePlot[BioSequence[{BioSequence["Peptide","FVNQHLCGSHLVEALYLVCGERGFFYTPKT"],BioSequence["Peptide","GIVEQCCTSICSLYQLENYCN"]},{Bond[{{2,1,6},{2,1,11}}],Bond[{{2,1,7},{1,1,7}}],Bond[{{2,1,20},{1,1,19}}]}]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='flight-data'>Flight Data</h2>
<p>One of the goals of the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> is to have as much knowledge about the world as possible. In Version 13.0 we’re adding a new domain: information about current and past airplane flights (for now, just in the US).</p>
<p>Let’s say we want to find out about flights between Boston and San Diego yesterday. We can just ask <tt><a href='https://reference.wolfram.com/language/ref/FlightData.html'>FlightData</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img01.png" alt='' title='' width='616' height='102' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img1_copy.txt">
					<span class='close' id='18-1_out'>&amp;#10005</span></p>
<pre class='text' id='18-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now let’s look at one of those flights. It’s represented as a symbolic entity, with all sorts of properties:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img2.png" alt='' title='' width='579' height='181' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img2_copy.txt">
					<span class='close' id='18-2_out'>&amp;#10005</span></p>
<pre class='text' id='18-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This plots the altitude of the plane as a function of time:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img3.png" alt='' title='' width='620' height='287' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img3_copy.txt">
					<span class='close' id='18-3_out'>&amp;#10005</span></p>
<pre class='text' id='18-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here is the flight path it followed:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img4.png" alt='' title='' width='609' height='355' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img4_copy.txt">
					<span class='close' id='18-4_out'>&amp;#10005</span></p>
<pre class='text' id='18-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p><tt><a href='https://reference.wolfram.com/language/ref/FlightData.html'>FlightData</a></tt> also lets us get aggregated data. For example, this tells where all flights that arrived yesterday in Boston came from:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img5.png" alt='' title='' width='614' height='254' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img5_copy.txt">
					<span class='close' id='18-5_out'>&amp;#10005</span></p>
<pre class='text' id='18-5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And this shows a histogram of when flights departed from Boston yesterday:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img06.png" alt='' title='' width='614' height='235' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img6_copy.txt">
					<span class='close' id='18-6_out'>&amp;#10005</span></p>
<pre class='text' id='18-6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Meanwhile, here are the paths flights arriving in Boston took near the airport:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' loading='lazy' src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img7.png" alt='' title='' width='614' height='468' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/18sw1213img007_copy.txt">
					<span class='close' id='18-7_out'>&amp;#10005</span></p>
<pre class='text' id='18-7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And, yes, now one could start looking at the runway headings, wind directions yesterday, etc.—data for all of which we have in our knowledgebase.</p>
<h2 id='multiaxis-and-multipanel-plots'>Multiaxis and Multipanel Plots</h2>
<p>It’s been requested for ages. And there’ve been many package implementations of it. But now in Version 13.0 we have <a href='https://reference.wolfram.com/language/ref/MultiaxisArrangement.html'>multiaxis plotting</a> directly built into <a href='https://www.wolfram.com/language/'>Wolfram Language</a>. Here’s an example:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/19sw1213img1.png" alt='' title='' width='684' height='278' />
				</div>
<div class='IFL'
					<span class='close' id='19-1_out'>&amp;#10005</span></p>
<pre class='text' id='19-1_out_text'>ListLinePlot[{PrimePi[Range[100]], EulerPhi[Range[100]]},MultiaxisArrangement->All]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As indicated, the scale for the blue curve is on the left, and for the orange one on the right. </p>
<p>You might think this looks straightforward. But it’s not. In effect there are multiple coordinate systems all combined into one plot—and then disambiguated by axes linked by various forms of styling. The final step in the groundwork for this was laid in <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/#yet-more-visualization'>Version 12.3</a>, when we introduced <tt><a href='https://reference.wolfram.com/language/ref/AxisObject.html'>AxisObject</a></tt> and “<a href='https://reference.wolfram.com/language/ref/MultiaxisArrangement.html'>disembodied axes</a>”.</p>
<p>Here’s a more complicated case, now with 5 curves, each with its own axis:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/19sw1213img2.png" alt='' title='' width='543' height='147' />
				</div>
<div class='IFL'
					<span class='close' id='19-2_out'>&amp;#10005</span></p>
<pre class='text' id='19-2_out_text'>ListLinePlot[Table[Table[x^n,{x,40}],{n,5}],MultiaxisArrangement->All]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s what happens if some curves share their axes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/19sw1213img3.png" alt='' title='' width='612' height='249' />
				</div>
<div class='IFL'
					<span class='close' id='19-3_out'>&amp;#10005</span></p>
<pre class='text' id='19-3_out_text'>ListLinePlot[Table[Table[x^n,{x,40}],{n,5}],MultiaxisArrangement->{Left->{{1,2}},Right->{{3,4},{5}}},ScalingFunctions->"Log"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Multiple axes let you pack multiple curves onto a single “plot panel”. Multipanel plots let you put curves into separate, connected panels, with shared axes. The first cases of multipanel plots were already introduced in <a href='https://writings.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/#lots-of-little-visualization-enhancements'>Version 12.0</a>. But now in Version 13.0 we’re expanding multipanel plots to other types of visualizations:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/19sw1213img4.png" alt='' title='' width='583' height='325' />
				</div>
<div class='IFL'
					<span class='close' id='19-4_out'>&amp;#10005</span></p>
<pre class='text' id='19-4_out_text'>DensityPlot[{Sin[x+y],Sin[2 x+y],Sin[x+2y],Sin[2x+2y]},{x,-5,5},{y,-5,5},PlotLayout->{"Row",2}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='dates-and-infinities-in-plot-scales'>Dates, and Infinities, in Plot Scales</h2>
<p>In Version 13.0, the “coordinates” in plots don’t just have to be numbers; they can be dates too. So for example this means that all the usual plotting functions “just work” on things like time series:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/20sw1213img1.png" alt='' title='' width='422' height='256' />
				</div>
<div class='IFL'
					<span class='close' id='20-1_out'>&amp;#10005</span></p>
<pre class='text' id='20-1_out_text'>ListLinePlot[WordFrequencyData["plot","TimeSeries"]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And there’s nothing stopping you having dates on multiple axes. Here’s an example of plotting time of day (a <tt><a href='https://reference.wolfram.com/language/ref/TimeObject.html'>TimeObject</a></tt>) against date, in this case for email timestamps stored in a <a href='https://reference.wolfram.com/language/ref/Databin.html'><tt>Databin</tt></a>: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/20sw1213img2.png" alt='' title='' width='562' height='289' />
				</div>
<div class='IFL'
					<span class='close' id='20-2_out'>&amp;#10005</span></p>
<pre class='text' id='20-2_out_text'>ListPlot[{#,TimeObject[DateObject[#]]}&/@Values[Databin["4UYrgYkd"]],ScalingFunctions->{"Date","Date"},Frame->True]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another thing that’s new with axes—or rather with scales—in Version 13.0 is the ability to have infinite plot ranges:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/20sw1213img3.png" alt='' title='' width='418' height='254' />
				</div>
<div class='IFL'
					<span class='close' id='20-3_out'>&amp;#10005</span></p>
<pre class='text' id='20-3_out_text'>Plot[Sin[x],{x,0,Infinity}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The way this works is that there’s a scaling function that maps the infinite interval to a finite one. You can use this explicitly with <tt><a href='https://reference.wolfram.com/language/ref/ScalingFunctions.html'>ScalingFunctions</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/20sw1213img4.png" alt='' title='' width='522' height='271' />
				</div>
<div class='IFL'
					<span class='close' id='20-4_out'>&amp;#10005</span></p>
<pre class='text' id='20-4_out_text'>ListPlot[Array[Prime,1000],ScalingFunctions->{"Infinite","Infinite"}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a slightly more elaborate example, that includes a doubly infinite interval:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/20sw1213img5.png" alt='' title='' width='606' height='348' />
				</div>
<div class='IFL'
					<span class='close' id='20-5_out'>&amp;#10005</span></p>
<pre class='text' id='20-5_out_text'>Plot[{Sin[x]/x,-1/x,1/x},{x,-Infinity,Infinity},PlotLegends->"Expressions"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='new-visualization-types'>New Visualization Types</h2>
<p>We’re constantly adding new types of built-in visualizations—not least to support new types of functionality. So, for example, in Version 13.0 we’re adding <a href='https://reference.wolfram.com/language/ref/VectorDisplacementPlot.html'>vector displacement plots</a> to support our new capabilities in solid mechanics:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/21sw1213img1.png" alt='' title='' width='488' height='243' />
				</div>
<div class='IFL'
					<span class='close' id='21-1_out'>&amp;#10005</span></p>
<pre class='text' id='21-1_out_text'>VectorDisplacementPlot[{Sin[5x y],x+Cos[2 y]},{x,y}∈Annulus[]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Or in <a href='https://reference.wolfram.com/language/ref/VectorDisplacementPlot3D.html'>3D</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/21sw1213img2.png" alt='' title='' width='541' height='313' />
				</div>
<div class='IFL'
					<span class='close' id='21-2_out'>&amp;#10005</span></p>
<pre class='text' id='21-2_out_text'>VectorDisplacementPlot3D[{Sin[5x],x+Cos[2 y],x-z},{x,y,z}∈Sphere[]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The plot shows how a given region is deformed by a certain displacement field. <tt><a href='https://reference.wolfram.com/language/ref/VectorPoints.html'>VectorPoints</a></tt> lets you include the displacement vectors as well:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/21sw1213img3.png" alt='' title='' width='617' height='232' />
				</div>
<div class='IFL'
					<span class='close' id='21-3_out'>&amp;#10005</span></p>
<pre class='text' id='21-3_out_text'>VectorDisplacementPlot[{Sin[5x y],x+Cos[2 y]},{x,y}∈Annulus[],VectorPoints->Automatic]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/#more-with-graphs'>Version 12.3</a> we introduced the function <tt><a href='https://reference.wolfram.com/language/ref/GeoGraphPlot.html'>GeoGraphPlot</a></tt> for plotting graphs whose vertices are geo positions. In Version 13.0 we’re adding <tt><a href='https://reference.wolfram.com/language/ref/GeoGraphValuePlot.html'>GeoGraphValuePlot</a></tt> which also allows you to visualize “values” on edges of the graph: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/21sw1213img4.png" alt='' title='' width='558' height='361' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/21sw1213img4_copy.txt">
					<span class='close' id='21-4_out'>&amp;#10005</span></p>
<pre class='text' id='21-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='lighting-goes-symbolic'>Lighting Goes Symbolic</h2>
<p><tt><a href='https://reference.wolfram.com/language/ref/Lighting.html'>Lighting</a></tt> is a crucial element in the perception of 3D graphics. We’ve had the basic option <tt><a href='https://reference.wolfram.com/language/ref/Lighting.html'>Lighting</a></tt> for specifying overall lighting in 3D scenes ever since Version 1.0. But in Version 13.0 we’re making it possible to have much finer control of lighting—which has become particularly important now that we support material, surface and shading properties for 3D objects. </p>
<p>The key idea is to make the representation of light sources symbolic. So, for example, this represents a configuration of light sources</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/22sw1213img1.png" alt='' title='' width='571' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/22sw1213img1_copy.txt">
					<span class='close' id='22-1_out'>&amp;#10005</span></p>
<pre class='text' id='22-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>which can immediately be used with the existing <tt><a href='https://reference.wolfram.com/language/ref/Lighting.html'>Lighting</a></tt> option:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/22sw1213img2.png" alt='' title='' width='410' height='281' />
				</div>
<div class='IFL'
					<span class='close' id='22-2_out'>&amp;#10005</span></p>
<pre class='text' id='22-2_out_text'>Plot3D[Sin[x+y^2],{x,-3,3},{y,-2,2},Lighting->%]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But the new possibility is to “separately light” different objects in a scene, by specifying different symbolic “lighting styles” for them:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/22sw1213img3.png" alt='' title='' width='366' height='331' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/22sw1213img3_copy.txt">
					<span class='close' id='22-3_out'>&amp;#10005</span></p>
<pre class='text' id='22-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By the way, another new feature in Version 13.0 is the built-in <tt><a href='https://reference.wolfram.com/language/ref/Torus.html'>Torus</a></tt> primitive:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/22sw1213img4.png" alt='' title='' width='553' height='418' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/22sw1213img4_copy.txt">
					<span class='close' id='22-4_out'>&amp;#10005</span></p>
<pre class='text' id='22-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='content-detectors-for-machine-learning'>Content Detectors for Machine Learning</h2>
<p><tt><a href='https://reference.wolfram.com/language/ref/Classify.html'>Classify</a></tt> lets you train “whole data” classifiers. “Is this a cat?” or “Is this text about movies?” In Version 13.0 we’ve added the capability to <a href='https://reference.wolfram.com/language/ref/TrainTextContentDetector.html?q=TrainTextContentDetector'>train content detectors</a> that serve as classifiers for subparts of data. “What cats are in here?” “Where does it talk about movies here?”</p>
<p>The basic idea is to give examples of whole inputs, in each case saying where in the input corresponds to a particular class. Here’s some basic training for picking out classes of topics in text:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img1.png" alt='' title='' width='434' height='257' />
				</div>
<div class='IFL'
					<span class='close' id='23-1_out'>&amp;#10005</span></p>
<pre class='text' id='23-1_out_text'>detector=TrainTextContentDetector[{
"I like banana"->{{8,13}->"Fruit"},
"I eat apples watching TV"->{{7,12}->"Fruit"},
"I am enjoying raspberries"->{{15,25}->"Fruit"},
"I play soccer"->{{8,13}->"Sport"},
"I watch TV"->{}
}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can use the content detector on specific inputs:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img2.png" alt='' title='' width='314' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='23-2_out'>&amp;#10005</span></p>
<pre class='text' id='23-2_out_text'>detector["I ate cranberries"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img3.png" alt='' title='' width='314' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='23-3_out'>&amp;#10005</span></p>
<pre class='text' id='23-3_out_text'>detector["I like basketball"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>How does this work? Basically what’s happening is that the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> already knows a great deal about text and words and meanings. So you can just give it an example that involves soccer, and it can figure out from its <a href='https://www.wolfram.com/knowledgebase/'>built-in knowledge</a> that basketball is the same kind of thing. </p>
<p>In Version 13.0 you can create content detectors not just for text but also for images. The problem is considerably more complicated for images, so it takes longer to build the content detector. Once built, though, it can run rapidly on any image.</p>
<p>Just like for text, you train an <a href='https://reference.wolfram.com/language/ref/TrainImageContentDetector.html'>image content detector</a> by giving sample images, and saying where in those images the classes of things you want occur:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img4.png" alt='' title='' width='506' height='380' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img4_copy.txt">
					<span class='close' id='23-4_out'>&amp;#10005</span></p>
<pre class='text' id='23-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Having done this training (which, yes, took about 5 minutes on a GPU-enabled machine), we can then apply the detector we just created:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img5.png" alt='' title='' width='601' height='128' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img5_copy.txt">
					<span class='close' id='23-5_out'>&amp;#10005</span></p>
<pre class='text' id='23-5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>When you apply the detector, you can ask it for various kinds of information. Here it’s giving bounding boxes that you can use to annotate the original image:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img6.png" alt='' title='' width='476' height='369' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/23sw1213img6_copy.txt">
					<span class='close' id='23-6_out'>&amp;#10005</span></p>
<pre class='text' id='23-6_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By the way, what’s happening under the hood to make all of this work is quite sophisticated. Ultimately we’re using lots of built-in knowledge about the kinds of images that typically occur. And when you supply sample images we’re augmenting these with all kinds of “typical similar” images derived by transforming your samples. And then we’re effectively retraining our image system to make use of the new information derived from your examples.</p>
<h2 id='new-visualization-diagnostics-for-machine-learning'>New Visualization &#038; Diagnostics for Machine Learning</h2>
<p>One of the machine learning–enabled functions that I, for one, use all the time is <tt><a href='https://reference.wolfram.com/language/ref/FeatureSpacePlot.html'>FeatureSpacePlot</a></tt>. And in Version 13.0 we’re adding a new default method that makes <tt><a href='https://reference.wolfram.com/language/ref/FeatureSpacePlot.html'>FeatureSpacePlot</a></tt> faster and more robust, and makes it often produce more compelling results. Here’s an example of it running on 10,000 images:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/24sw1213img1.png" alt='' title='' width='421' height='406' />
				</div>
<div class='IFL'
					<span class='close' id='24-1_out'>&amp;#10005</span></p>
<pre class='text' id='24-1_out_text'>FeatureSpacePlot[ResourceData["MNIST", "TestData"]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One of the great things about machine learning in the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> is that you can use it in a highly automated way. You just give <tt><a href='https://reference.wolfram.com/language/ref/Classify.html'>Classify</a></tt> a collection of training examples, and it’ll automatically produce a classifier that you can immediately use. But how exactly did it do that? A key part of the pipeline is figuring out how to extract features to turn your data into arrays of numbers. And in Version 13.0 you can now get the explicit <a href='https://reference.wolfram.com/language/ref/FeatureExtractor.html'>feature extractor</a> that’s been constructed for (so you can, for example, use it on other data):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/24sw1213img2.png" alt='' title='' width='580' height='83' />
				</div>
<div class='IFL'
					<span class='close' id='24-2_out'>&amp;#10005</span></p>
<pre class='text' id='24-2_out_text'>cf=Classify[ResourceData["Sample Data: Titanic Survival"]->"SurvivalStatus"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/24sw1213img3.png" alt='' title='' width='542' height='86' />
				</div>
<div class='IFL'
					<span class='close' id='24-3_out'>&amp;#10005</span></p>
<pre class='text' id='24-3_out_text'>fe=Information[cf,"FeatureExtractor"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here are the extracted features for a single piece of data:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/24sw1213img4.png" alt='' title='' width='212' height='55' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/24sw1213img4_copy.txt">
					<span class='close' id='24-4_out'>&amp;#10005</span></p>
<pre class='text' id='24-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This shows some of the innards of what’s happening in <tt><a href='https://reference.wolfram.com/language/ref/Classify.html'>Classify</a></tt>. But another thing you can do is to ask what most affects the output that <tt><a href='https://reference.wolfram.com/language/ref/Classify.html'>Classify</a></tt> gives. And one approach to this is to use SHAP values to determine the impact that each attribute specified in whatever data you supply has on the output. In Version 13.0 we’ve added a <a href='https://reference.wolfram.com/language/ref/ClassifierMeasurements.html'>convenient graphical way</a> to display this for a given input: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/24sw1213img5.png" alt='' title='' width='615' height='240' />
				</div>
<div class='IFL'
					<span class='close' id='24-5_out'>&amp;#10005</span></p>
<pre class='text' id='24-5_out_text'>ClassifierMeasurements[cf,ResourceData["Sample Data: Titanic Survival"],"SHAPPlots"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='automating-the-problem-of-tracking-for-robots-and-more'>Automating the Problem of Tracking for Robots and More</h2>
<p>Designing control systems is a complicated matter. First, you have to have a model for the system you’re trying to control. Then you have to define the objectives for the controller. And then you have to actually construct a controller that achieves those objectives. With the whole stack of technology in <a href='https://www.wolfram.com/language/'>Wolfram Language</a> and <a href='https://www.wolfram.com/system-modeler/'>Wolfram System Modeler</a> we’re getting to the point where we have an unprecedentedly automated pipeline for doing these things.</p>
<p>Version 13.0 specifically adds capabilities for <a href='https://reference.wolfram.com/language/ref/ConnectSystemModelController.html'>designing controllers</a> that make a system track a specified signal—for example having a robot that follows a particular trajectory.</p>
<p>Let’s consider a very simple robot that consists of a moving cart with a pointer attached:</p>
<p><img loading='lazy' src='https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213robot.png' alt='Simple robot' title='Simple robot' width='475' height=' '></p>
<p>First, we need a model for the robot, and this we can create in <a href='https://www.wolfram.com/system-modeler/'>Wolfram System Modeler</a> (or import as a <a href='https://reference.wolfram.com/language/ref/format/MO.html'>Modelica model</a>):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213img1.png" alt='' title='' width='389' height='158' />
				</div>
<div class='IFL'
					<span class='close' id='25-1_out'>&amp;#10005</span></p>
<pre class='text' id='25-1_out_text'>model=Import["ExampleData/DrawingRobot.mo"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Our goal now is to set up a way to “drive” the input variables for the robot (the force moving the cart, and the torque for the pointer)</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213img2.png" alt='' title='' width='209' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='25-2_out'>&amp;#10005</span></p>
<pre class='text' id='25-2_out_text'>model["InputVariables"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>in order to achieve certain behavior for the output variables (the position of the end of the pointer):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213img3.png" alt='' title='' width='221' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='25-3_out'>&amp;#10005</span></p>
<pre class='text' id='25-3_out_text'>model["OutputVariables"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a curve that we want the end of the pointer to follow over time:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213img4.png" alt='' title='' width='436' height='200' />
				</div>
<div class='IFL'
					<span class='close' id='25-4_out'>&amp;#10005</span></p>
<pre class='text' id='25-4_out_text'>ParametricPlot[{1+.5 Sin[2t/5],.5 Cos[3t/5]},{t,0,10Pi}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we want to actually construct the controller—and this is where one needs to know a certain amount about control theory. Here we’re going to use the method of <a href='https://reference.wolfram.com/language/ref/StateFeedbackGains.html'>pole placement</a> to create our controller. And we’re going to use the new capability of Version 13.0 to be able to design a “tracking controller” that tracks specified outputs (yes, to set those numbers you have to know about control theory):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213img05.png" alt='' title='' width='581' height='112' />
				</div>
<div class='IFL'
					<span class='close' id='25-5_out'>&amp;#10005</span></p>
<pre class='text' id='25-5_out_text'>cd=StateFeedbackGains[<|"InputModel"-> model,"TrackedOutputs"->All|>,{-11+0.6 I,-11-0.6 I,-12+0.8 I,-12-0.8 I,-13,-14}, "Data"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we have to make the closed-loop system that includes the robot and its controller:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213img6.png" alt='' title='' width='379' height='158' />
				</div>
<div class='IFL'
					<span class='close' id='25-6_out'>&amp;#10005</span></p>
<pre class='text' id='25-6_out_text'>csys=ConnectSystemModelController[model,cd]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now we can simulate the behavior of this whole system, giving lists of the <em>x</em> and <em>y</em> coordinates of the reference trajectory as input:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213img07.png" alt='' title='' width='544' height='136' />
				</div>
<div class='IFL'
					<span class='close' id='25-7_out'>&amp;#10005</span></p>
<pre class='text' id='25-7_out_text'>sim=SystemModelSimulate[csys,10Pi,
<|"Inputs"->{"ref_x"->Table[{t,1+.5 Sin[2t/5]},{t,0,10Pi,.01}],"ref_y"->Table[{t,.5 Cos[3t/5]},{t,0,10Pi,.01}]}|>]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And based on this simulation here’s a plot of where the end of the pointer goes:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/25sw1213img8.png" alt='' title='' width='463' height='222' />
				</div>
<div class='IFL'
					<span class='close' id='25-8_out'>&amp;#10005</span></p>
<pre class='text' id='25-8_out_text'>ParametricPlot[Evaluate[{sim["x",t],sim["y",t]}],{t,0,10Pi}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After an initial transient, this follows the path we wanted. And, yes, even though this is all a bit complicated, it’s unbelievably simpler than it would be if we were directly using real hardware, rather than doing theoretical “<a href='https://reference.wolfram.com/language/guide/SystemModelAnalyticsDesign.html'>model-based</a>” design.</p>
<h2 id='type-fewer-brackets'>Type Fewer Brackets!</h2>
<p>When you first launch Version 13, and you type something like <tt>f[</tt> you’ll see the following:</p>
<p><img loading='lazy' class='' src='https://content.wolfram.com/uploads/sites/43/2021/12/26sw1213automatching.png' alt='Automatching' title='Automatching' width='448' height=' '/></p>
<p>What Version 13 is now doing is to automatically add matching brackets when it thinks it’s unambiguous to do so. The one thing to learn is that you can then “type through” the bracket; in other words if this case with the cursor right before the auto-added <tt>]</tt> you explicitly type <tt>]</tt> then no new <tt>]</tt> will appear; the system will just “type through” the <tt>]</tt>. </p>
<p>There’s also the alternative of using <span class="kbd"><kbd>ctrl</kbd><kbd>space</kbd></span> to move to the right of the auto-added closing bracket. And, by the way, <span class="kbd"><kbd>ctrl</kbd><kbd>space</kbd></span> also “moves to the right” of the next closing bracket even when your cursor isn&#8217;t immediately next to the bracket; it’ll do this even if the cursor is deep inside a nested structure.</p>
<p>The <a href='https://reference.wolfram.com/language/ref/DelimiterAutoMatching.html'>automatching behavior</a> (which you can turn off in the <span class="computer-voice">Preferences</span> dialog if you really don’t like it) applies not only to <tt>[ ]</tt> but also to <tt>{ }</tt>, <tt>( )</tt>, <tt>[[ ]]</tt>, <tt><| |></tt>, <tt>(* *)</tt> and (importantly) <tt>" "</tt>. And <span class="kbd"><kbd>ctrl</kbd><kbd>space</kbd></span> also works with all these kinds of delimiters.</p>
<p>For serious user-experience aficionados there’s an additional point perhaps of interest. Typing <span class="kbd"><kbd>ctrl</kbd><kbd>space</kbd></span> can potentially move your cursor sufficiently far that your eye loses it. This kind of long-range cursor motion can also happen when you enter math and other 2D material that is being typeset in real time. And in the 1990s we invented a mechanism to avoid people “losing the cursor”. Internally we call it the “incredible shrinking blob”. It’s a big black blob that appears at the new position of the cursor, and shrinks down to the pure cursor in about 160 milliseconds. Think of this as a “vision hack”. Basically we’re plugging into the human pre-attentive vision system, that causes one to automatically shift one’s gaze to the “suddenly appearing object”, but without really noticing one’s done this. </p>
<p>In Version 13 we’re now using this mechanism not just for real-time typesetting, but also for <span class="kbd"><kbd>ctrl</kbd><kbd>space</kbd></span>&mdash;adding the blob whenever the “jump distance” is above a certain threshold.</p>
<p>You’ll probably not even notice that the blob is there (only a small fraction of people seem to “see” it). But if you catch it in time, here’s what you’ll see:</p>
<p><img loading='lazy' class='' src='https://content.wolfram.com/uploads/sites/43/2021/12/26sw1213blobs.png' alt='Blob' title='Blob' width='152' height=' '/></p>
<h2 id='progress-in-seeing-the-progress-of-computations'>Progress in Seeing the Progress of Computations&#8230;</h2>
<p>You’re running a long computation. What’s going on with it? We have a long-term initiative to provide <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/#lots-of-little-new-conveniences'>interactive progress monitoring</a> for as many functions that do long computations as possible.</p>
<p>An example in Version 13.0 is that <tt><a href='https://reference.wolfram.com/language/ref/ParallelMap.html'>ParallelMap</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/ParallelTable.html'>ParallelTable</a></tt>, etc. automatically give you progress monitoring:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/27sw1213img1.png" alt='' title='' width='385' height='21' /><br />
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/27sw1213img2.png" alt='' title='' width='461' height='102' style="margin-left:40px; margin-top:10px"/>
				</div>
<div class='IFL'
					<span class='close' id='27-1_out'>&amp;#10005</span></p>
<pre class='text' id='27-1_out_text'>ParallelTable[Mean[RandomReal[1,10^8]],{i,30}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The display is temporary; it’s only there while the computation is running, and then it goes away.</p>
<p>There are many other examples of this, and more to come. There’s progress monitoring in video, machine learning, knowledgebase access, import/export and various algorithmic functions:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/27sw1213img3.png" alt='' title='' width='530' height='94' />
				</div>
<div class='IFL'
					<span class='close' id='27-3_out'>&amp;#10005</span></p>
<pre class='text' id='27-3_out_text'>VideoFrameMap[ColorNegate,Video["ExampleData/Caminandes.mp4"]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/27sw1213img4.png" alt='' title='' width='501' height='103' style="margin-top:20px" />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/27sw1213img4_copy.txt">
					<span class='close' id='27-4_out'>&amp;#10005</span></p>
<pre class='text' id='27-4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/27sw1213nettrain.png" alt='' title='' width='426' height='182' style="margin-top:20px"/>
				</div>
<div class='IFL'
					<span class='close' id='27-5_out'>&amp;#10005</span></p>
<pre class='text' id='27-5_out_text'>NetTrain["LeNet", "MNIST"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Generally, progress monitoring is just a good thing; it helps you know what’s happening, and allows you to check if things have gone off track. But sometimes it might be confusing, especially if there’s some inner function that you didn’t even know was being called—and you suddenly see progress monitoring for it. For a long time we had thought that this issue would make widespread progress monitoring a bad idea. But the value of seeing what’s going on seems to almost always outweigh the potential confusion of seeing something happening “under the hood” that you didn’t know about. And it really helps that as soon as some operation is over, its progress monitors just disappear, so in your final notebook there’s no sign of them.</p>
<p>By the way, each function with progress monitoring has a <tt><a href='https://reference.wolfram.com/language/ref/ProgressReporting.html'>ProgressReporting</a></tt> option, which you can set to <tt><a href='https://reference.wolfram.com/language/ref/False.html'>False</a></tt>. In addition, there is a global variable <tt><a href='https://reference.wolfram.com/language/ref/$ProgressReporting.html'>$ProgressReporting</a></tt> which specifies the default throughout the system.</p>
<p>It’s worth mentioning that there are different levels of “Are we there yet?” monitoring that can be given. Some functions go through a systematic sequence of steps, say processing each frame in a video. And in such cases it’s possible to show the “fraction complete” as a progress indicator bar. Sometimes it’s also possible to make at least some guess about the “fraction complete” (and therefore the expected completion time) by looking “statistically” at what’s happened in parts of the computation so far. And this is, for example, how <tt><a href='https://reference.wolfram.com/language/ref/ParallelMap.html'>ParallelMap</a></tt> etc. do their progress monitoring. Of course, in general it’s not possible to know how long an arbitrary computation will take; that’s the story of computational irreducibility and things like the undecidability of the halting problem for Turing machines. But with the assumption (that turns out to be pretty good most of the time) that there’s a fairly smooth distribution of running times for different subcomputations, it’s still possible to give reasonable estimates. (And, yes, the “visible sign” of potential undecidability is that a percentage complete might jump down as well as going up with time.)</p>
<h2 id='wolfram-alpha-notebooks'>Wolfram|Alpha Notebooks</h2>
<p>For many years we had <a href='https://www.wolfram.com/mathematica/'>Mathematica</a> + <a href='https://www.wolfram.com/language/'>Wolfram Language</a>, and we had <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a>. Then in late 2019 we introduced <a href='https://www.wolfram.com/wolfram-alpha-notebook-edition/'>Wolfram|Alpha Notebook Edition</a> as a kind of blend between the two. And in fact in standard desktop and cloud deployments of Mathematica and Wolfram|Alpha there’s also now the concept of a Wolfram|Alpha-Mode Notebook, where the basic idea is that you can enter things in free-form natural language, but get the capabilities of Wolfram Language in representing and building up computations:</p>
<p><img loading='lazy' class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/12/28sw1213img1.png' alt='Wolfram|Alpha-Mode Notebook' title='Wolfram|Alpha-Mode Notebook' width='684' height=' '></p>
<p>In Version 13.0 quite a lot has been added to Wolfram|Alpha-Mode Notebooks. First, there are palettes for directly entering 2D math notation:</p>
<p><img loading='lazy' class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/12/28sw1213img2.png' alt='Wolfram|Alpha-Mode Notebook' title='Wolfram|Alpha-Mode Notebook' width='684' height=' '></p>
<p>There’s also now the capability to immediately generate rich dynamic content directly from free-form linguistic input:</p>
<p><img loading='lazy' class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/12/28sw1213img3.png' alt='Wolfram|Alpha-Mode Notebook' title='Wolfram|Alpha-Mode Notebook' width='684' height=' '></p>
<p>In addition to “bespoke” interactive content, in Wolfram|Alpha-Mode Notebooks one can also immediately access interactive content from the 12,000+ Demonstrations in the <a href='https://demonstrations.wolfram.com/'>Wolfram Demonstrations Project</a>:</p>
<p><img loading='lazy' class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/12/28sw1213img4.png' alt='Wolfram|Alpha-Mode Notebook' title='Wolfram|Alpha-Mode Notebook' width='684' height=' '></p>
<p>Wolfram|Alpha Notebook Edition is particularly strong for education. And in Version 13.0 we’re including a first collection of interactive quizzes, specifically about plots:</p>
<p><img loading='lazy' class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/12/28sw1213img5.png' alt='Wolfram|Alpha-Mode Notebook' title='Wolfram|Alpha-Mode Notebook' width='684' height=' '></p>
<h2 id='everything-for-quizzes-right-in-the-language'>Everything for Quizzes Right in the Language</h2>
<p>Version 13.0 introduces the ability to create, deploy and grade quizzes directly in Wolfram Language, both on the desktop and in the cloud. Here’s an example of a <a href='https://www.wolframcloud.com/obj/sw-writings/Quizzes/WolframLanguageQuiz/quiz'>deployed quiz</a>:</p>
<p><img loading='lazy' class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/12/29sw1213img0001.png' alt='Deployed quiz' title='Deployed quiz' width='684' height=' '></p>
<p>How was this made? There&#8217;s an <a href='https://www.wolframcloud.com/download/sw-writings/Quizzes/WolframLanguageQuiz/authoring '>authoring notebook</a>, that looks like this:</p>
<p><img loading='lazy' class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/12/29sw1213img0002.png' alt='Authoring notebook' title='Authoring notebook' width='684' height=' '></p>
<p>It’s all based on the form notebook capabilities that we introduced in <a href='https://writings.stephenwolfram.com/2020/12/launching-version-12-2-of-wolfram-language-mathematica-228-new-functions-and-much-more/#form-notebooks'>Version 12.2</a>. But there’s one additional element: <tt><a href='https://reference.wolfram.com/language/ref/QuestionObject.html'>QuestionObject</a></tt>. A <tt><a href='https://reference.wolfram.com/language/ref/QuestionObject.html'>QuestionObject</a></tt> gives a symbolic representation of a question to ask, together with an <tt><a href='https://reference.wolfram.com/language/ref/AssessmentFunction.html'>AssessmentFunction</a></tt> to apply to the answer that’s provided, to assess, grade or otherwise process it. </p>
<p>In the simplest case, the “question to ask” is just a string. But it can be more sophisticated, and there’s a list of possibilities (that will steadily grow) that you can select in the authoring notebook:</p>
<p><img loading='lazy' src='https://content.wolfram.com/uploads/sites/43/2021/12/29sw1213img3.png' alt='Question types' title='Question types' width='222' height=' '></p>
<p>(The construct <tt><a href='https://reference.wolfram.com/language/ref/QuestionInterface.html'>QuestionInterface</a></tt> lets you control in detail how the “question prompt” is set up.)</p>
<p>Once you’ve created your quiz in the authoring notebook (and of course it doesn’t need to be just a “quiz” in the courseware sense), you need to deploy it. Settings allow you to set various options:</p>
<p><img loading='lazy' src='https://content.wolfram.com/uploads/sites/43/2021/12/29sw1213img4.png' alt='Settings' title='Settings' width='397' height=' '></p>
<p>Then when you press <span class="computer-voice">Generate</span> you immediately get a deployed version of your quiz that can, for example, be accessed directly on the web. You also get a results notebook, that shows you how to retrieve results from people doing the quiz.</p>
<p>So what actually happens when someone does the quiz? Whenever they press <span class="computer-voice">Submit</span> their answer will be assessed and submitted to the destination you’ve specified—which can be a cloud object, a databin, etc. (You can also specify that you want local feedback given to the person who’s doing the quiz.) </p>
<p>So after several people have submitted answers, here’s what the results you get might look like:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/29sw1213img005.png" alt='' title='' width='684' height='193' />
				</div>
<div class='IFL'
					<span class='close' id='29-5_out'>&amp;#10005</span></p>
<pre class='text' id='29-5_out_text'>ResourceFunction["GetQuestionAssessments"][CloudObject["https://www.wolframcloud.com/obj/sw-writings/quizzes/myquiz"]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>All in all, Version 13.0 now provides a streamlined workflow for creating both simple and complex quizzes. The quizzes can involve all sorts of different types of responses—notably including runnable <a href='https://www.wolfram.com/language/'>Wolfram Language</a> code. And the assessments can also be sophisticated—for example including code comparisons. </p>
<p>Just to give a sense of what’s possible, here’s a question that asks for a color to be selected, that will be compared with the correct answer to within some tolerance:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/29sw1213img6.png" alt='' title='' width='618' height='452' />
				</div>
<div class='IFL'
					<span class='close' id='29-6_out'>&amp;#10005</span></p>
<pre class='text' id='29-6_out_text'>With[{p=RandomEntity["Pokemon"]},QuestionObject[QuestionInterface["SelectColor",<|"Prompt" -> Column[{"What color is this pokemon? ", ColorConvert[p["Image"], "Grayscale"]}]|>],AssessmentFunction[DominantColors[p["Image"]], Tolerance->0.3]]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<h2 id='untangling-email-pdfs-and-more'>Untangling Email, PDFs and More</h2>
<p>What do email threads really look like? I’ve wondered this for ages. And now in Version 13.0 we have an easy way to <a href='https://reference.wolfram.com/language/ref/format/MBOX.html'>import MBOX</a> files and see the threading structure of email. Here’s an example from an internal mailing list of ours:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/30sw1213img2.png" alt='' title='' width='357' height='431' />
				</div>
<div class='IFL'
					<span class='close' id='30-2_out'>&amp;#10005</span></p>
<pre class='text' id='30-2_out_text'>Import["https://www.wolframcloud.com/obj/sw-writings/Version-13/Example1.mbox","ThreadGraph"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now we can do standard graph operations on this:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/30sw1213img3.png" alt='' title='' width='421' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='30-3_out'>&amp;#10005</span></p>
<pre class='text' id='30-3_out_text'>VertexCount/@WeaklyConnectedGraphComponents[%]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>An important new feature of <a href='https://writings.stephenwolfram.com/2020/12/launching-version-12-2-of-wolfram-language-mathematica-228-new-functions-and-much-more/#importing-pdf'>Version 12.2</a> was the ability to faithfully import PDFs in a variety of forms—including page images and plain text. In Version 13.0 we’re adding the capability to <a href='https://reference.wolfram.com/language/ref/format/PDF.html'>import PDFs</a> as vector graphics. </p>
<p>Here’s an example of pages imported as images:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/30sw1213img4.png" alt='' title='' width='548' height='258' />
				</div>
<div class='IFL'
					<span class='close' id='30-4_out'>&amp;#10005</span></p>
<pre class='text' id='30-4_out_text'>Import["https://arxiv.org/pdf/2106.13591.pdf",{"PageImages",Range[3]}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now here’s a page imported as vector graphics:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/30sw1213img5.png" alt='' title='' width='501' height='344' />
				</div>
<div class='IFL'
					<span class='close' id='30-5_out'>&amp;#10005</span></p>
<pre class='text' id='30-5_out_text'>Import["https://arxiv.org/pdf/2106.13591.pdf",{"PageGraphics",1}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And now, to prove it’s vector graphics, we can actually go in and modify it, right down to the strokes used in each glyph:</p>
<p><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/30sw1213-pages02.png" alt='Vector graphics' title='Vector graphics' width='600' height='' /></p>
<p>Now that we have <a href='https://reference.wolfram.com/language/ref/Video.html'><tt>Video</tt></a> in <a href='https://www.wolfram.com/language/'>Wolfram Language</a>, we want to be able to import as many videos as possible. We already support a very complete list of video containers and codecs. In Version 13.0 we’re also adding the ability to <a href='https://reference.wolfram.com/language/ref/format/FLV.html'>import .FLV</a> (Flash) videos, giving you the opportunity to convert them to modern formats.</p>
<h2 id='cloudexpression-goes-mainstream'>CloudExpression Goes Mainstream</h2>
<p>You’ve got an expression you want to manipulate across sessions. One way to do this is to make the whole expression persistent using <tt><a href='https://reference.wolfram.com/language/ref/PersistentValue.html'>PersistentValue</a></tt>—or explicitly store it in a file or a cloud object and read it back when you need it. But there’s a much more efficient and seamless way to do this—that doesn’t require you to deal with the whole expression all the time, but instead lets you “poke” and “peek” at individual parts—and that’s to use <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt>.</p>
<p>We first introduced <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt> back in 2016 in <a href='https://reference.wolfram.com/language/guide/SummaryOfNewFeaturesIn104.html'>Version 10.4</a>. At that time it was intended to be a fairly temporary way to store fairly small expressions. But we’ve found that it’s a lot more generally useful than we expected, and so in Version 13.0 it’s getting a major upgrade that makes it more efficient and robust. </p>
<p>It’s worth mentioning that there are several other ways to store things persistently in the Wolfram Language. You can use <tt><a href='https://reference.wolfram.com/language/ref/PersistentValue.html'>PersistentValue</a></tt> to persist whole expressions. You can use <a href='https://datadrop.wolframcloud.com/'>Wolfram Data Drop</a> functionality to let you progressively add to databins. You can use <tt><a href='https://reference.wolfram.com/language/ref/ExternalStorageUpload.html'>ExternalStorageUpload</a></tt> to store things in external storage systems like S3 or IPFS. Or you can set up an external database (like an SQL- or document-based one), and then use <a href='https://www.wolfram.com/language/'>Wolfram Language</a> functions to access and update this. </p>
<p>But <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt> provides a much more lightweight, yet general, way to set up and manipulate persistent expressions. The basic idea is to create a cloud expression that is stored persistently in your <a href='https://www.wolframcloud.com/'>cloud account</a>, and then to be able to do operations on that expression. If the cloud expression consists of lists and associations, then standard Wolfram Language operations let you efficiently read or write parts of the cloud expression without ever having to pull the whole thing into memory in your session. </p>
<p>This creates a cloud expression from a table of, in this case, polynomials:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/31sw1213img1.png" alt='' title='' width='547' height='78' />
				</div>
<div class='IFL'
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'>ce=CreateCloudExpression[Table[1+x^i,{i,10}]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This gives us the 5th part of the table:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/31sw1213img2.png" alt='' title='' width='78' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'>ce[5]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can reset it:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/31sw1213img3.png" alt='' title='' width='123' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'>ce[5]=yyyy</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This gets the whole cloud expression:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/31sw1213img4.png" alt='' title='' width='458' height='54' />
				</div>
<div class='IFL'
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'>Get[ce]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But the important point is that getting and setting parts of the cloud expression don’t require pulling the expression into memory. Each operation is instead done directly in the cloud. </p>
<p>In a traditional relational database system, there’d have to be a certain “rectangularity” to the data. But in a cloud expression (like in a NoSQL database) you can have any nested list and association structure, and, in addition, the elements can be arbitrary symbolic expressions.</p>
<p><tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt> is set up so that operations you use are atomic, so that, for example, you can safely have two different processes concurrently reading and writing to the same cloud expression. The result is that <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt> is a good way to handle data built up by things like <tt><a href='https://reference.wolfram.com/language/ref/APIFunction.html'>APIFunction</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/FormFunction.html'>FormFunction</a></tt>.</p>
<p>By the way, <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt> is ultimately in effect just a cloud object, so it shares permission capabilities with <tt><a href='https://reference.wolfram.com/language/ref/CloudObject.html'>CloudObject</a></tt>. And this means, for example, that you can let other people read—or write—to a cloud expression you created. (The data associated with <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt> is stored in your cloud account, though it uses its own storage quota, separate from the one for <tt><a href='https://reference.wolfram.com/language/ref/CloudObject.html'>CloudObject</a></tt>.)</p>
<p>Let’s say you store lots of important data as a sublist in <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt>. <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt> is so easy to use, you might worry that you’d just type something like <tt>ce["customers"]=7</tt> and suddenly your critical data would be overwritten. To avoid this, <tt><a href='https://reference.wolfram.com/language/ref/CloudExpression.html'>CloudExpression</a></tt> has the option <tt><a href='https://reference.wolfram.com/language/ref/PartProtection.html'>PartProtection</a></tt>, which allows you to specify whether, for example, you want to allow the structure of the expression to be changed, or only its “leaf elements”.</p>
<h2 id='the-advance-of-the-function-repository'>The Advance of the Function Repository</h2>
<p>When we launched the <a href='https://resources.wolframcloud.com/FunctionRepository/'>Wolfram Function Repository</a> in 2019 we didn’t know how rapidly it would grow. But I’m happy to say that it’s been a great success—with perhaps 3 new functions per day being published, giving a total to date of 2259 functions. These are functions which are not part of the core <a href='https://www.wolfram.com/language/'>Wolfram Language</a>, but can immediately be accessed from any Wolfram Language system. </p>
<p>They are functions contributed by members of the community, and reviewed and curated by us. And given all of the capabilities of the core Wolfram Language it’s remarkable what can be achieved in a single contributed function. The functions mostly don’t have the full breadth and robustness that would be needed for integration into the core Wolfram Language (though functions like <tt><a href='https://reference.wolfram.com/language/ref/Adjugate.html'>Adjugate</a></tt> in Version 13.0 were developed from “prototypes” in the Function Repository). But what they have is a greatly accelerated delivery process which allows convenient new functionality in new areas to be made available extremely quickly.</p>
<p>Some of the functions in the Function Repository extend algorithmic capabilities. An example is <tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/FractionalOrderD'>FractionalOrderD</a></tt> for computing fractional derivatives:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img1.png" alt='' title='' width='322' height='94' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img1_copy.txt">
					<span class='close' id='32-1_out'>&amp;#10005</span></p>
<pre class='text' id='32-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There’s a lot in <tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/FractionalOrderD'>FractionalOrderD</a></tt>. But it’s in a way quite specific—in the sense that it’s based on one particular kind of fractional differentiation. In the future we may build into the system full-scale fractional differentiation, but this requires a host of new algorithms. What <tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/FractionalOrderD'>FractionalOrderD</a></tt> in the Function Repository does is to deliver one form of fractional differentiation now.</p>
<p>Here’s another example of a function in the Function Repository, this time one that’s based on capabilities in <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img2.png" alt='' title='' width='625' height='101' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img2_copy.txt">
					<span class='close' id='32-2_out'>&amp;#10005</span></p>
<pre class='text' id='32-2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Another similar example is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img3.png" alt='' title='' width='544' height='355' />
				</div>
<div class='IFL'
					<span class='close' id='32-3_out'>&amp;#10005</span></p>
<pre class='text' id='32-3_out_text'>ResourceFunction["ConstellationChart"][Entity["Constellation","Orion"]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Some functions provide extended visualization capabilities. Here’s <tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/VennDiagram/'>VennDiagram</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img4.png" alt='' title='' width='362' height='216' />
				</div>
<div class='IFL'
					<span class='close' id='32-4_out'>&amp;#10005</span></p>
<pre class='text' id='32-4_out_text'>ResourceFunction["VennDiagram"][(a&&b)||c]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are many ways to imagine handling more complicated cases; this function makes a particular choice:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img5.png" alt='' title='' width='398' height='219' />
				</div>
<div class='IFL'
					<span class='close' id='32-5_out'>&amp;#10005</span></p>
<pre class='text' id='32-5_out_text'>ResourceFunction["VennDiagram"][Xor[a,b,c,d,e]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As another example of a visualization function, here’s <tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/TruthTable/'>TruthTable</a></tt>—built to give a visual display of the results of the core language <tt><a href='https://reference.wolfram.com/language/ref/BooleanTable.html'>BooleanTable</a></tt> function:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img6.png" alt='' title='' width='360' height='187' />
				</div>
<div class='IFL'
					<span class='close' id='32-6_out'>&amp;#10005</span></p>
<pre class='text' id='32-6_out_text'>ResourceFunction["TruthTable"][p&&q,{p,q}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Some functions give convenient—though perhaps not entirely general—extensions to particular features of the language. Here’s <tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/IntegerChop/'>IntegerChop</a></tt> that reduces real numbers “sufficiently close to integers” to exact integers:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img7.png" alt='' title='' width='505' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='32-7_out'>&amp;#10005</span></p>
<pre class='text' id='32-7_out_text'>ResourceFunction["IntegerChop"][7.00000000000000000000000001]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s an example of a function that perhaps one day will be in the core language. But for now the most common cases of it are provided by a Function Repository function:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img8.png" alt='' title='' width='601' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='32-8_out'>&amp;#10005</span></p>
<pre class='text' id='32-8_out_text'>ResourceFunction["PolarDecomposition"][{{2.5,4.5},{5.6,1.2}}]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are lots of functions in the Function Repository that give specific extensions to areas of functionality in the core language. <tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/BootstrappedEstimate/'>BootstrappedEstimate</a></tt>, for example, gives a useful, specific extension to statistics functionality:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img9.png" alt='' title='' width='615' height='419' />
				</div>
<div class='IFL'
					<span class='close' id='32-9_out'>&amp;#10005</span></p>
<pre class='text' id='32-9_out_text'>ResourceFunction["BootstrappedEstimate"][RandomVariate[NormalDistribution[2.1,1.25],100],Mean,1000]//Dataset</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s a function that “remaps” the <a href='https://www.wolframalpha.com/input/?i=Mandelbrot+set'>Mandelbrot set</a>—using <tt><a href='https://reference.wolfram.com/language/ref/FunctionCompile.html'>FunctionCompile</a></tt> to go further than <tt><a href='https://reference.wolfram.com/language/ref/MandelbrotSetPlot.html'>MandelbrotSetPlot</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img10.png" alt='' title='' width='541' height='265' />
				</div>
<div class='IFL'
					<span class='close' id='32-10_out'>&amp;#10005</span></p>
<pre class='text' id='32-10_out_text'>ResourceFunction["MandelbrotSetRemap"][-1.54368901269109,20,"MappingFunction"->"LineOrbitTrap",ColorFunction->"Psychedelic"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are some functions that definitely seem “niche”—but are extremely useful if you need them:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img11.png" alt='' title='' width='418' height='216' />
				</div>
<div class='IFL'
					<span class='close' id='32-11_out'>&amp;#10005</span></p>
<pre class='text' id='32-11_out_text'>ResourceFunction["SportsFieldGraphics"]["Tennis"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Then there are functions that make “current issues” convenient. An example is <tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/MintNFT/'>MintNFT</a></tt>:</p>
<p><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213-wfr-mintnft.png" alt='MintNFT' title='MintNFT' width='684' height='' /></p>
<p>There are also “functions for fun” (that can definitely also be useful):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img12.png" alt='' title='' width='426' height='238' />
				</div>
<div class='IFL'
					<span class='close' id='32-12_out'>&amp;#10005</span></p>
<pre class='text' id='32-12_out_text'>ResourceFunction["XKCDConvert"][Plot[Sin[x],{x,0,5}]]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And there are functions that might be considered “insider” humor:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/32sw1213img13.png" alt='' title='' width='580' height='77' />
				</div>
<div class='IFL'
					<span class='close' id='32-13_out'>&amp;#10005</span></p>
<pre class='text' id='32-13_out_text'>ResourceFunction["RandomPseudoSymbolName"][10]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By the way, it’s not just the Function Repository that’s been growing with all sorts of great contributions: there’s also the <a href='https://datarepository.wolframcloud.com/' target=_blank rel=noopener>Data Repository</a> and <a href='https://resources.wolframcloud.com/NeuralNetRepository/'>Neural Net Repository</a>, which have also been energetically advancing.</p>
<h2 id='introducing-tools-for-the-creation-of-paclets'>Introducing Tools for the Creation of Paclets</h2>
<p>The <a href='https://resources.wolframcloud.com/FunctionRepository/'>Function Repository</a> is all about creating single functions that add functionality. But what if you want to create a whole new world of functionality, with many interlinked functions? And perhaps one that also involves not just functions, but for example changes to elements of your user interface too. For many years we’ve internally built many parts of the <a href='https://www.wolfram.com/language/'>Wolfram Language</a> system using a technology we call <a href='https://reference.wolfram.com/language/guide/Paclets.html'>paclets</a>—that effectively deliver bundles of functionality that can get automatically installed on any given user’s system.</p>
<p>In <a href='https://writings.stephenwolfram.com/2020/03/in-less-than-a-year-so-much-new-launching-version-12-1-of-wolfram-language-mathematica/#paclets-for-all'>Version 12.1</a> we opened up the paclet system, providing specific functions like <tt><a href='https://reference.wolfram.com/language/ref/PacletFind.html'>PacletFind</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/PacletInstall.html'>PacletInstall</a></tt> for using paclets. But creating paclets was still something of a black art. In Version 13.0 we’re now releasing a first round of <a href='https://reference.wolfram.com/language/PacletTools/guide/PacletTools.html'>tools to create paclets</a>, and to allow you to deploy them for distribution as files or through the <a href='https://www.wolfram.com/cloud/'>Wolfram Cloud</a>.</p>
<p>The paclet tools are themselves (needless to say) distributed in a paclet that is now included by default in every Wolfram Language installation. For now, the tools are in a separate package that you have to load: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/33sw1213img1.png" alt='' title='' width='197' height='21' />
				</div>
<div class='IFL'
					<span class='close' id='33-1_out'>&amp;#10005</span></p>
<pre class='text' id='33-1_out_text'>Needs["PacletTools`"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>To begin creating a paclet, you define a “paclet folder” that will contain all the files that make up your paclet:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/33sw1213img2.png" alt='' title='' width='363' height='83' />
				</div>
<div class='IFL'
					<span class='close' id='33-2_out'>&amp;#10005</span></p>
<pre class='text' id='33-2_out_text'>paclet=CreatePaclet["MyPaclet","~/Desktop"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This sets up the basic outline structure of your paclet, which you can then add files to:</p>
<p><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/33sw1213-mypaclet.png" alt='MyPaclet' title='MyPaclet' width='164' height='' /></p>
<p>As an alternative, you could specify some components in your paclet right when you first create the paclet:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/33sw1213img3.png" alt='' title='' width='501' height='247' />
				</div>
<div class='IFL'
					<span class='close' id='33-3_out'>&amp;#10005</span></p>
<pre class='text' id='33-3_out_text'>CreatePaclet[
PacletObject[<|
"Name"->"MyPaclet",
"Extensions"->{
{"Kernel","Root"->"Kernel","Context"->"MyPaclet`"},
{"Documentation"}
}
|>],
CreateDirectory[]
]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>There are all sorts of elements that can exist in paclets, and in future versions there’ll be progressively more tooling to make it easier to create them. In Version 13.0, however, a major piece of tooling that is being delivered is <a href='https://reference.wolfram.com/language/DocumentationTools/tutorial/DocumentationToolsQuickStart.html'><span class="computer-voice">Documentation Tools</span></a>, which provides tools for creating the same kind of documentation that we have for built-in system functions. </p>
<p>You can access these tools directly from the main system <span class="computer-voice">Palettes</span> menu:</p>
<p><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/33sw1213-palettes.png" alt='Palettes' title='Palettes' width='415' height='' /></p>
<p>Now you can create as notebooks in your paclet function reference pages, guide pages, tech notes and other documentation elements. Once you’ve got these, you can build them into finished documentation using <tt><a href='https://reference.wolfram.com/language/PacletTools/ref/PacletDocumentationBuild.html'>PacletDocumentationBuild</a></tt>. Then you can have them as notebook files, standalone HTML files, or deployed material in the cloud.</p>
<p>Coming soon will be additional tools for paclet creation, as well as a public Paclet Repository for user-contributed paclets. An important feature to support the Paclet Repository—and that can already be used with privately deployed paclets—is the new function <tt><a href='https://reference.wolfram.com/language/ref/PacletSymbol.html'>PacletSymbol</a></tt>. </p>
<p>For the Function Repository you can use <tt><a href='https://reference.wolfram.com/language/ref/ResourceFunction.html'>ResourceFunction</a></tt><tt>["name"]</tt> to access any function in the repository. <tt><a href='https://reference.wolfram.com/language/ref/PacletSymbol.html'>PacletSymbol</a></tt> is an analog of this for paclets. One way to use a paclet is to explicitly load all its assets. But <tt><a href='https://reference.wolfram.com/language/ref/PacletSymbol.html'>PacletSymbol</a></tt> allows you to “deep call” into a paclet to access a single function or symbol. Just like with <tt><a href='https://reference.wolfram.com/language/ref/ResourceFunction.html'>ResourceFunction</a></tt>, behind the scenes all sorts of loading of assets will still happen, but in your code you can just use <tt><a href='https://reference.wolfram.com/language/ref/PacletSymbol.html'>PacletSymbol</a></tt> without any visible initialization. And, by the way, an emerging pattern is to “back” a collection of interdependent Function Repository functions with a paclet, accessing the individual functions from the code in the Function Repository using <tt><a href='https://reference.wolfram.com/language/ref/PacletSymbol.html'>PacletSymbol</a></tt>.</p>
<h2 id='introducing-context-aliases'>Introducing Context Aliases</h2>
<p>When you use a name, like <tt>x</tt>, for something, there’s always a question of “which <tt>x</tt>?” From the very beginning in Version 1.0 there’s always been the notion of a context for every symbol. By default you create symbols in the <tt>Global</tt> context, so the full name for the <tt>x</tt> you make is <tt>Global`x</tt>.</p>
<p>When you create packages, you typically want to set them up so the names they introduce don’t interfere with other names you’re using. And to achieve this, it’s typical to have packages define their own contexts. You can then always refer to a symbol within a package by its full name, say <tt>Package`Subpackage`x</tt> etc. </p>
<p>But when you just ask for <tt>x</tt>, what do you get? That’s defined by the setting for <tt><a href='https://reference.wolfram.com/language/ref/$Context.html'>$Context</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/$ContextPath.html'>$ContextPath</a></tt>. </p>
<p>But sometimes you want an intermediate case. Rather than having just <tt>x</tt> represent <tt>Package`x</tt> as it would if <tt>Package`</tt> were on the context path <tt><a href='https://reference.wolfram.com/language/ref/$ContextPath.html'>$ContextPath</a></tt>, you want to be able to refer to <tt>x</tt> “in its package”, but without typing (or having to see) the potential long name of its package.</p>
<p>In Version 13.0 we’re introducing the notion of context aliases to let you do this. The basic idea is extremely simple. When you do <tt><a href='https://reference.wolfram.com/language/ref/Needs.html'>Needs</a></tt><tt>["Context`"]</tt> to load the package defining a particular context, you can add a “context alias”, by doing <tt><a href='https://reference.wolfram.com/language/ref/Needs.html'>Needs</a></tt><tt>["Context`"->"alias`"]</tt>. And the result of this will be that you can refer to any symbol in that context as <tt>alias`name</tt>. If you don’t specify a context alias, <tt><a href='https://reference.wolfram.com/language/ref/Needs.html'>Needs</a></tt> will add the context you ask for to <tt><a href='https://reference.wolfram.com/language/ref/$ContextPath.html'>$ContextPath</a></tt> so its symbols will be available in “just <tt>x</tt>” form. But if you’re working with many different contexts that could have symbols with overlapping names, it’s a better idea to use context aliases for each context. If you define short aliases there won’t be much more typing, but you’ll be sure to always refer to the correct symbol.</p>
<p>This loads a package corresponding to the context <tt>ComputerArithmetic`</tt>, and by default adds that context to <tt><a href='https://reference.wolfram.com/language/ref/$ContextPath.html'>$ContextPath</a></tt>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/34sw1213img1.png" alt='' title='' width='257' height='21' />
				</div>
<div class='IFL'
					<span class='close' id='34-1_out'>&amp;#10005</span></p>
<pre class='text' id='34-1_out_text'>Needs["ComputerArithmetic`"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now symbols with <tt>ComputerArithmetic</tt> can be used without saying anything about their context:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/34sw1213img2.png" alt='' title='' width='139' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='34-2_out'>&amp;#10005</span></p>
<pre class='text' id='34-2_out_text'>Ulp[1000.]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This loads the package defining a context alias for it:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/34sw1213img3.png" alt='' title='' width='314' height='21' />
				</div>
<div class='IFL'
					<span class='close' id='34-3_out'>&amp;#10005</span></p>
<pre class='text' id='34-3_out_text'>Needs["ComputerArithmetic`"->"ca`"]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Now you can refer to its symbols using the alias:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/34sw1213img4.png" alt='' title='' width='139' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='34-4_out'>&amp;#10005</span></p>
<pre class='text' id='34-4_out_text'>ca`Ulp[1000.]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The global symbol <tt><a href='https://reference.wolfram.com/language/ref/$ContextAliases.html'>$ContextAliases</a></tt> specifies all the aliases that you currently have in use:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/34sw1213img5.png" alt='' title='' width='264' height='51' />
				</div>
<div class='IFL'
					<span class='close' id='34-5_out'>&amp;#10005</span></p>
<pre class='text' id='34-5_out_text'>$ContextAliases</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>By the way, just like our convention about symbols having names that start with uppercase letters, it’s been a common general convention to have context names for packages also start with uppercase letters. Now that we have context aliases as well, we’re suggesting the convention of using lowercase letters for these.</p>
<h2 id='symbolic-webpage-construction'>Symbolic Webpage Construction</h2>
<p>If you want to take a notebook and turn it into a webpage, all you need do is <tt><a href='https://reference.wolfram.com/language/ref/CloudPublish.html'>CloudPublish</a></tt> it. Similarly, if you want to create a form on the web, you can just use <tt><a href='https://reference.wolfram.com/language/ref/CloudPublish.html'>CloudPublish</a></tt> with <tt><a href='https://reference.wolfram.com/language/ref/FormFunction.html'>FormFunction</a></tt> (or <tt><a href='https://reference.wolfram.com/language/ref/FormPage.html'>FormPage</a></tt>). And there are a variety of other direct-to-web capabilities that have long been built into the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>.</p>
<p>But what if you want to make a webpage with elaborate web elements? One way is to use <tt><a href='https://reference.wolfram.com/language/ref/XMLTemplate.html'>XMLTemplate</a></tt> to insert Wolfram Language output into a file of HTML etc. But in Version 13.0 we’re beginning the process of setting up symbolic specifications of full webpage structure, that let you get the best of both Wolfram Language and web capabilities and frameworks.</p>
<p>Here’s a very small example:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/35sw1213img1.png" alt='' title='' width='615' height='205' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/35sw1213img1_copy.txt">
					<span class='close' id='35-1_out'>&amp;#10005</span></p>
<pre class='text' id='35-1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here’s the webpage it produces:</p>
<p><a href='https://www.wolframcloud.com/obj/sw-writings/Version-13/WebpageExample'><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/35sw1213-webpage.png" alt='Webpage' title='Webpage' width='481' height='' /></a></p>
<p>The basic idea is to construct webpages using nested combinations of <tt><a href='https://reference.wolfram.com/language/ref/WebColumn.html'>WebColumn</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/WebRow.html'>WebRow</a></tt> and <tt><a href='https://reference.wolfram.com/language/ref/WebItem.html'>WebItem</a></tt>. Each of these have various Wolfram Language options. But they also allow direct access to CSS options. So in addition to a Wolfram Language <a href='https://reference.wolfram.com/language/ref/Background.html'><tt>Background</a>-><a href='https://reference.wolfram.com/language/ref/LightBlue.html'>LightBlue</tt></a> option, you can also use a CSS option like <tt>"border-right"->"1px solid #ddd"</tt>.</p>
<p>There’s one additional critical feature: <tt><a href='https://reference.wolfram.com/language/ref/InterfaceSwitched.html'>InterfaceSwitched</a></tt>. This is the core of being able to create responsive webpages that can change their structure when viewed on different kinds of devices. <tt><a href='https://reference.wolfram.com/language/ref/InterfaceSwitched.html'>InterfaceSwitched</a></tt><a href='https://reference.wolfram.com/language/ref/InterfaceSwitched.html'></a> is a symbolic construct that you can insert anywhere inside <tt><a href='https://reference.wolfram.com/language/ref/WebItem.html'>WebItem</a></tt>, <tt><a href='https://reference.wolfram.com/language/ref/WebColumn.html'>WebColumn</a></tt>, etc. and that can behave differently when accessed with a different interface. So, for example</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/35sw1213img2.png" alt='' title='' width='585' height='21' />
				</div>
<div class='IFL'
					<span class='close' id='35-2_out'>&amp;#10005</span></p>
<pre class='text' id='35-2_out_text'>InterfaceSwitched["Width", <|{0,480}->1, {480,768}->2,{768,Infinity}->3|>]</pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>will behave as 1 if it’s accessed from a device with a width between 0 and 480 pixels, and so on. You can see this in action using <tt><a href='https://reference.wolfram.com/language/ref/CloudPublish.html'>CloudPublish</a></tt></p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/35sw1213img3.png" alt='' title='' width='619' height='147' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/12/35sw1213img3_copy.txt">
					<span class='close' id='35-3_out'>&amp;#10005</span></p>
<pre class='text' id='35-3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and then just resizing the window you use to view the result:</p>
<p><a href='https://www.wolframcloud.com/obj/sw-writings/Version-13/ResizingCats'><img src='https://content.wolfram.com/uploads/sites/43/2021/12/35sw1213responsive-cats.gif' alt='ResizingCats' title='ResizingCats' width=' ' height=' '></a></p>
<h2 id='and-now-nfts'>And Now&#8230; NFTs!</h2>
<p>One of the things that&#8217;s happened in the world since the release of <a href='https://writings.stephenwolfram.com/2021/05/launching-version-12-3-of-wolfram-language-mathematica/'>Version 12.3</a> is the mainstreaming of the idea of NFTs. We&#8217;ve actually had tools for several years for supporting NFTs—and tokens in general—on blockchains. But in Version 13.0 we&#8217;ve added more streamlined NFT tools, particularly in the context of <a href='https://blog.wolfram.com/2021/07/21/liveminting-nfts-with-the-wolfram-language-on-the-cardano-blockchain/'>our connection to the Cardano blockchain</a>.</p>
<p>The basic idea of an NFT (“non-fungible token”) is to have a unique token that can be transferred between users but not replicated. It’s like a coin, but every NFT can be unique. The blockchain provides a permanent ledger of who owns what NFT. When you transfer an NFT what you’re doing is just adding something to the blockchain to record that transaction. </p>
<p>What can NFTs be used for? Lots of things. For example, <a href='https://twitter.com/stephen_wolfram/status/1415501242546204672?s=20' target=_blank rel=noopener>we issued &#8220;NFT certificates&#8221;</a> for people who “graduated” from our <a href='https://education.wolfram.com/summer-school'>Summer School</a> and <a href='https://education.wolfram.com/summer-camp/'>Summer Camp</a> this year. We also issued NFTs to record ownership for some cellular automaton artworks we created in a livestream. And in general NFTs can be used as permanent records for anything: ownership, credentials or just a commemoration of an achievement or event.</p>
<p>In a typical case, there’s a small “payload” for the NFT that goes directly on the blockchain. If there are larger assets—like images—these will get stored on some distributed storage system like IPFS, and the payload on the blockchain will contain a pointer to them. </p>
<p>Here’s an example that uses several of our blockchain functions—as well as the new connection to the Cardano blockchain—to retrieve from IPFS the image associated with an NFT that we minted a few weeks ago:</p>
<p><img loading='lazy' class='' src="https://content.wolfram.com/uploads/sites/43/2021/12/36sw1213img1.png" alt='' title='' width='614' height='454' /></p>
<p>How can you mint such an NFT yourself? The <a href='https://www.wolfram.com/language/'>Wolfram Language</a> has the tools to do it. <tt><a href='https://reference.wolfram.com/language/ref/ResourceFunction.html'>ResourceFunction</a></tt><tt>["</tt><tt><a href='https://resources.wolframcloud.com/FunctionRepository/resources/MintNFT/'>MintNFT</a></tt><tt>"</tt><tt>]</tt> in the <a href='https://resources.wolframcloud.com/FunctionRepository/'>Wolfram Function Repository</a> provides one common workflow (specifically for the CIP 25 Cardano NFT standard)—and there’ll be more coming.</p>
<p>The full story of blockchain below the “pure consumer” level is complicated and technical. But the Wolfram Language provides a uniquely streamlined way to handle it, based on symbolic representations of blockchain constructs, that can directly be manipulated using all the standard functions of the Wolfram Language. There are also many different blockchains, with different setups. But through lots of effort that we’ve made in the past few years, we’ve been able to create a uniform framework that interoperates between different blockchains while still allowing access to all of their special features. So now you just set a different <tt><a href='https://reference.wolfram.com/language/ref/BlockchainBase.html'>BlockchainBase</a></tt> (Bitcoin, Ethereum, Cardano, Tezos, ARK, Bloxberg, &#8230;) and you’re ready to interact with a different blockchain. </p>
<h2 id='sleeker-faster-downloading'>Sleeker, Faster Downloading</h2>
<p>Everything I’ve talked about here is immediately available today in the <a href='https://www.wolfram.com/cloud/'>Wolfram Cloud</a> and on the desktop—for macOS, Windows and Linux (and for the macOS, that’s both Intel and “Apple Silicon” ARM). But when you go to download (at least for macOS and Windows) there’s a new option: download without local documentation.</p>
<p>The actual executable package that is <a href='https://www.wolfram.com/desktop/'>Wolfram Desktop</a> or <a href='https://www.wolfram.com/mathematica/'>Mathematica</a> is about 1.6 GB for Windows and 2.1 GB for macOS (it&#8217;s bigger for macOS because it includes “universal” binaries that cover both Intel and ARM). But then there’s documentation. And there’s a lot of it. And if you download it all, it’s another 4.5 GB to download, and 7.7 GB when deployed on your system.</p>
<p>The fact that all this documentation exists is very important, and we’re proud of the breadth and depth of it. And it’s definitely convenient to have this documentation right on your computer—as notebooks that you can immediately bring up, and edit if you want. But as our documentation has become larger (and we’re working on making it even larger still) it’s sometimes a better optimization to save the local space on your computer, and instead get documentation from the web.</p>
<p>So in Version 13.0 we’re introducing documentationless downloads—which just go to the web and display documentation in your browser. When you first install Mathematica or <a href='https://www.wolfram.com/wolfram-one/'>Wolfram|One</a> you can choose the “full bundle” including local documentation. Or you can choose to install only the executable package, without documentation. If you change your mind later, you can always download and install the documentation using the <span class="computer-voice">Install Local Documentation</span> item in the <span class="computer-voice">Help</span> menu.</p>
<p>(By the way, the <a href='https://www.wolfram.com/engine-technology/'>Wolfram Engine</a> has always been documentationless—and on Linux its download size is just 1.3 GB, which I consider incredibly small given all its functionality.)</p>
<p style="font-style: italic; color: #555;">
<style type="text/css">
div.bottomstripe { 
    max-width:620px; 
    margin-bottom:10px;
    background-color: #fff39a;
    border: solid 2px #ffd400;
    padding: 7px 10px 7px 10px;
        line-height: 1.2;}
#blog .post_content .bottomstripe a,
    #blog .post_content .bottomstripe a:link,
    #blog .post_content .bottomstripe a:visited {
     font-family:"Source Sans Pro",Arial,Sans Serif; 
     font-size:11pt; 
     color:#aa0d00;}
</style>
<div class="bottomstripe">
<a href="https://wolfram.com/get-upgrade/"><strong>Download your 13.0 now! »&nbsp;</strong> (It’s already live in the Wolfram Cloud!)</a>
</div>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2021/12/launching-version-13-0-of-wolfram-language-mathematica/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>The Concept of the Ruliad</title>
		<link>https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/</link>
		<comments>https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#comments</comments>
		<pubDate>Wed, 10 Nov 2021 23:27:58 +0000</pubDate>
		<dc:creator><![CDATA[Stephen Wolfram]]></dc:creator>
				<category><![CDATA[Computational Science]]></category>
		<category><![CDATA[Language and Communication]]></category>
		<category><![CDATA[Mathematics]]></category>
		<category><![CDATA[New Kind of Science]]></category>
		<category><![CDATA[Philosophy]]></category>
		<category><![CDATA[Physics]]></category>

		<guid isPermaLink="false">https://writings.stephenwolfram.com/?p=33541</guid>
		<description><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2021/11/icon-ruliad.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span>The Entangled Limit of Everything I call it the ruliad. Think of it as the entangled limit of everything that is computationally possible: the result of following all possible computational rules in all possible ways. It’s yet another surprising construct that’s arisen from our Physics Project. And it’s one that I think has extremely deep [&#8230;]]]></description>
				<content:encoded><![CDATA[<span class="thumbnail"><img width="128" height="108" src="https://content.wolfram.com/uploads/sites/43/2021/11/icon-ruliad.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="" /></span><style>table.InCell { margin-left: -0.27rem; }</style>
<p><img class='aligncenter' src='https://content.wolfram.com/uploads/sites/43/2021/11/Ruliad-hero3.png' alt='The Concept of the Ruliad' title='The Concept of the Ruliad' width='620' height='auto'></p>
<h2 id='the-entangled-limit-of-everything'>The Entangled Limit of Everything</h2>
<p>I call it the ruliad. Think of it as the entangled limit of everything that is computationally possible: the result of following all possible computational rules in all possible ways. It’s yet another surprising construct that’s arisen from our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a>. And it’s one that I think has extremely deep implications—both in science and beyond.</p>
<p>In many ways, the ruliad is a strange and profoundly abstract thing. But it’s something very universal—a kind of ultimate limit of all abstraction and generalization. And it encapsulates not only all formal possibilities but also everything about our physical universe—and everything we experience can be thought of as sampling that part of the ruliad that corresponds to our particular way of perceiving and interpreting the universe.</p>
<p>We’re going to be able to say many things about the ruliad without engaging in all its technical details. (And—it should be said at the outset—we’re still only at the very beginning of nailing down those technical details and setting up the difficult mathematics and formalism they involve.) But to ground things here, let’s start with a slightly technical discussion of what the ruliad is.<span id="more-33541"></span></p>
<p>In the language of our Physics Project, it’s the ultimate limit of all <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/' target=_blank rel=noopener>rulial multiway systems</a>. And as such, it traces out the entangled consequences of progressively applying all possible computational rules. </p>
<p>Here is an example of an <a href='https://www.wolframscience.com/nks/p204--multiway-systems/'>ordinary multiway system</a> based on the string replacement rules {A&nbsp;→&nbsp;AB,&nbsp;BB&nbsp;→&nbsp;A} (indicated respectively by blueish and reddish edges):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg1.png" alt='' title='' width='529' height='301' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg1_copy.txt">
					<span class='close' id='1_out'>&amp;#10005</span></p>
<pre class='text' id='1_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At each step, the rules are applied in all possible ways to each state. Often this generates multiple new states, leading to branching in the graph. But, importantly, there can also be merging—from multiple states being transformed to the same state.</p>
<p>The idea of a rulial multiway system is not just to apply particular rules in all possible ways, but to apply all possible rules of a given form. For example, if we consider “<a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/typical-multiway-graph-structures/' target=_blank rel=noopener>1&nbsp;→&nbsp;2,&nbsp;2&nbsp;→&nbsp;1&nbsp;A,&nbsp;B string rules</a>”, the possible rules are</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg2.png" alt='' title='' width='345' height='33' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg2_copy.txt">
					<span class='close' id='2_out'>&amp;#10005</span></p>
<pre class='text' id='2_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and the resulting multiway graph is (where now we’re using purple to indicate that there are edges for every possible rule):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg3.png" alt='' title='' width='564' height='207' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg3_copy.txt">
					<span class='close' id='3_out'>&amp;#10005</span></p>
<pre class='text' id='3_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Continuing a little longer, and with a different layout, we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2022/04/1110swimg4B.png" alt='' title='' width='379' height='' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg4_copy.txt">
					<span class='close' id='4_out'>&amp;#10005</span></p>
<pre class='text' id='4_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>This may already look a little complicated. But the ruliad is something in a sense infinitely more complicated. Its concept is to use not just all rules of a given form, but all possible rules. And to apply these rules to all possible initial conditions. And to run the rules for an infinite number of steps. </p>
<p>The pictures above can be thought of as coarse finite approximations to the ruliad. The full ruliad involves taking the infinite limits of all possible rules, all possible initial conditions and all possible steps. Needless to say, this is a complicated thing to do, and there are many subtleties yet to work out about how to do it.</p>
<p>Perhaps the most obviously difficult issue is how conceivably to enumerate “all possible rules”. But here we can use the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a> to tell us that whatever “basis” we use, what comes out will eventually be effectively equivalent. Above we used <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/' target=_blank rel=noopener>string substitution systems</a>. But here, for example, is a <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/' target=_blank rel=noopener>rulial multiway system made with 2-state 2-color Turing machines</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg5v2.png" alt='' title='' width='654' height='292' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg5_copy.txt">
					<span class='close' id='5_out'>&amp;#10005</span></p>
<pre class='text' id='5_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And here is a rulial multiway system made from <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-in-our-models/multiway-systems-for-our-models/' target=_blank rel=noopener>hypergraph rewriting of the kind used in our Physics Project</a>, using <a href='https://www.wolframphysics.org/technical-introduction/typical-behaviors/the-number-of-possible-rules/' target=_blank rel=noopener>all rules with signature</a> <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg6.png" width= '50' height='21' align='absmiddle'></span>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg7.png" alt='' title='' width='561' height='282' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg7_copy.txt">
					<span class='close' id='7_out'>&amp;#10005</span></p>
<pre class='text' id='7_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As another example, consider a <a href='https://www.wolframphysics.org/bulletins/2021/10/multicomputation-with-numbers-the-case-of-simple-multiway-systems' target=_blank rel=noopener>multiway system based on numbers</a>, in which the rules multiply by each possible integer:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg8.png" alt='' title='' width='165' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg8_copy.txt">
					<span class='close' id='8_out'>&amp;#10005</span></p>
<pre class='text' id='8_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here’s what happens starting with 1 (and truncating the graph whenever the value exceeds 100): </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg9.png" alt='' title='' width='575' height='298' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg9_copy.txt">
					<span class='close' id='9_out'>&amp;#10005</span></p>
<pre class='text' id='9_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Even with this simple setup, the results are surprisingly complicated (though it’s possible to give quite a bit of analysis in this particular case, as described in the <a href='https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/#appendix-the-case-of-the-multiplicad'>Appendix</a> at the end of this piece). </p>
<p>The beginning of the multiway graph is nevertheless simple: from 1 we connect to each successive integer. But then things get more complicated. To see what’s going on, let’s look at a fragment of the graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg10.png" alt='' title='' width='559' height='289' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg10_copy.txt">
					<span class='close' id='10_out'>&amp;#10005</span></p>
<pre class='text' id='10_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In a sense, everything would be simple if every path in the graph were separate: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg11.png" alt='' title='' width='556' height='23' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg11_copy.txt">
					<span class='close' id='11_out'>&amp;#10005</span></p>
<pre class='text' id='11_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg12.png" alt='' title='' width='556' height='23' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg12_copy.txt">
					<span class='close' id='12_out'>&amp;#10005</span></p>
<pre class='text' id='12_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But the basic concept of multiway systems is that equivalent states should be merged—so here the “two ways to get 6” (i.e. 1&nbsp;×&nbsp;2&nbsp;×&nbsp;3 and 1&nbsp;×&nbsp;3&nbsp;×&nbsp;2) are combined, and what appears in the multiway graph is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg13.png" alt='' title='' width='556' height='138' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg13_copy.txt">
					<span class='close' id='13_out'>&amp;#10005</span></p>
<pre class='text' id='13_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For integers, the obvious notion of equivalence is numerical equality. For hypergraphs, it’s isomorphism. But the important point is that equivalence is what makes the multiway graph nontrivial. We can think about what it does as being to entangle paths. Without equivalence, different paths in the multiway system—corresponding to different possible histories—would all be separate. But equivalence entangles them.</p>
<p>The full ruliad is in effect a representation of all possible computations. And what gives it structure is the equivalences that exist between states generated by different computations. In a sense, there are two forces at work: the “forward” effect of the progress of computation, and the “sideways” effect of equivalences that entangle different computations. (Mathematically this can be thought of as being like decomposing the ruliad structure in terms of fibrations and foliations.)</p>
<h2 id='experiencing-the-ruliad'>Experiencing the Ruliad</h2>
<p>In thinking about finding a fundamental theory of physics, one thing always bothered me. Imagine we successfully identify a rule that describes everything about our universe. Then the obvious next question will be: “Why this rule, and not another?” Well, how about if actually the universe in effect <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#why-this-universe-the-relativity-of-rules'>just runs every possible rule</a>? What would this mean? It means that in a sense the “full story” of the universe is just the ruliad.</p>
<p>But the ruliad contains everything that is computationally possible. So why then do we have the perception that the universe has specific laws, and that definite things happen in it?</p>
<p>It all has to do with the fact that we are <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>bounded observers</a>, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>embedded within the ruliad</a>. We never get to see the full ruliad; we just sample tiny parts of it, parsing them according to our particular <a href='https://www.wolframscience.com/nks/chap-10--processes-of-perception-and-analysis/'>methods of perception and analysis</a>. And the crucial point is that for coherent observers like us, there are certain robust features that we will inevitably see in the ruliad. And these features turn out to include <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>fundamental laws of our physics</a>, in particular general relativity and quantum mechanics.</p>
<p>One can imagine an observer very different from us (say some kind of alien intelligence) who would sample different aspects of the ruliad, and deduce different laws. But one of the surprising core discoveries of our <a href='https://www.wolframphysics.org/' target=_blank rel=noopener>Physics Project</a> is that even an observer with quite basic features like us will experience laws of physics that precisely correspond to ones we know.</p>
<p>An analogy (that’s actually ultimately the result of the same underlying phenomenon) may help to illustrate what’s going on. Consider molecules in a gas. The molecules bounce around in a complicated pattern that depends on their detailed properties. But an observer like us doesn’t trace this whole pattern. Instead we only observe certain “coarse-grained” features. And the point is that these features are largely independent of the detailed properties of the molecules—and robustly correspond to our standard laws of physics, like the <a href='https://www.wolframscience.com/nks/p441--irreversibility-and-the-second-law-of-thermodynamics/'>Second Law of thermodynamics</a>. But a different kind of observer, sampling and “parsing” the system differently, could in principle identify different features, corresponding to different laws of physics.</p>
<p>One of the conceptual difficulties in thinking about how we perceive the ruliad is that it’s a story of “self-observation”. Essentially by the very definition of the ruliad, we ourselves are part of it. We never get to “see the whole ruliad from the outside”. We only get to “<a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>experience it from the inside</a>”.</p>
<p>In some ways it’s a bit like our efforts to construct the ruliad. In the end, the ruliad involves infinite rules, infinite initial conditions, and infinite time. But any way of assembling the ruliad from pieces effectively involves making particular choices about how we take those infinite limits. And that’s pretty much like the fact that as entities embedded within the ruliad, we have to make particular choices about how to sample it.</p>
<p>One of the remarkable aspects of the ruliad is that it’s in some sense the <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-laws-of-the-rulial-universe'>unique ultimately inevitable and necessary formal object</a>. If one sets up some particular computational system or mathematical theory, there are choices to be made. But in the ruliad there are no choices. Because everything is there. And in a sense every aspect of the structure of the ruliad is just something formally necessary. It requires no outside input; it is just a formal consequence of the meaning of terms, like the abstract fact <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg14.png" width= '59' height='19' align='absmiddle'></span>. </p>
<p>But while the ruliad is unique, the description of it is not. In constructing it, one can imagine using Turing machines or hypergraph rewriting systems or indeed any other kind of computational system. Each will ultimately lead to the same limiting object that is the ruliad, but each of them can be thought of as defining a different coordinate system for describing the ruliad. </p>
<p>The very generality of the ruliad makes it unsurprising that there is vast diversity in how it can be described. And in a sense each possible description is like a possible way of experiencing the ruliad. In analogy to the (deeply related) situation with spacetime in general relativity, we might say that there are many reference frames in which to experience the ruliad—but it’s always the same ruliad underneath.</p>
<p>It’s important to understand that the “ruliad from the outside” could seem very different from any “internal” experience of it by an observer like us. As an example, consider a simple finite approximation to the ruliad, built from string substitution systems. In what we did above, we always started from a specific initial condition. But the full ruliad involves starting from all possible initial conditions. (Of course, one could always just say one starts from a “null” initial condition, then have rules of the form null&nbsp;→&nbsp;everything.) So now let’s consider starting from all possible strings, say of length 4. If we use all possible 2-element-to-2-element rules, the finite approximation to the ruliad that we’ll get will be:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg15.png" alt='' title='' width='546' height='411' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg15_copy.txt">
					<span class='close' id='15_out'>&amp;#10005</span></p>
<pre class='text' id='15_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>At some level this is a simple structure, and—as is inevitable for any finite approximation to the ruliad—its <a href='https://reference.wolfram.com/language/ref/TransitiveClosureGraph.html'>transitive closure</a> is just the <a href='https://reference.wolfram.com/language/ref/CompleteGraph.html'>complete graph</a>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg16.png" alt='' title='' width='546' height='411' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg16_copy.txt">
					<span class='close' id='16_out'>&amp;#10005</span></p>
<pre class='text' id='16_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>So why doesn’t this mean that the ruliad is somehow trivial? A key part of the story is that we never get to “see the ruliad from the outside” like this. We are always part of it, sampling it according to some procedure, or, somewhat equivalently, thinking about constructing it according to some procedure.</p>
<p>As an analogy, consider the real numbers. The whole continuum of all real numbers is “from the outside” in many ways a simple construct. But if we imagine actually trying to construct real numbers, say digit by digit, according to some definite procedure, then we’re dealing precisely with what <a href='https://www.wolframscience.com/nks/notes-12-4--computable-reals/'>Turing machines were originally invented to model</a>, and the whole structure of computation is involved. (As we’ll see, our way of thinking about “observers like us” is ultimately quite related to “Turing machines with bounded descriptions”.)</p>
<p>In a sense, at an outside “holistic” level, the ruliad has a certain simple perfection. But as soon as you try to look at “what’s in the ruliad”, you have to parametrize or coordinatize it, and then you’re inevitably exposed to its intricate internal structure.</p>
<h2 id='observers-like-us'>Observers Like Us</h2>
<p>One could imagine very different ways in which entities embedded within the ruliad could “experience” it. But what’s most relevant for us is how “<a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>observers like us</a>” do it—and how we manage to synthesize from what’s going on in the ruliad our perception of reality, and our view of how our physical universe works.</p>
<p>Let’s start by talking not about the full ruliad but rather about models in our Physics Project based on specific underlying rules. At the lowest level, we have a “machine-code” description of the universe is which everything just consists of a network of “atoms of space” that is continually being updated—and which we can think of as carrying out a giant, if incoherent, computation, full of <a href='https://www.wolframscience.com/nks/p737--computational-irreducibility/'>computational irreducibility</a>. But the remarkable fact is that somehow we, as observers of this, <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/#observers-and-their-physics'>manage to pick out of it a certain slice</a> that ends up showing coherent, computationally reducible features—that for example seem to reproduce our known laws of physics.</p>
<p>How does this work? Partly it has to do with features of us as observers, partly with features of how the universe fundamentally works, and partly with an interplay between these. </p>
<p>The first crucial feature of us as observers is that we’re computationally bounded: the way we “parse” the universe involves doing an amount of computation that’s absolutely tiny compared to all the computation going on in the universe. We sample only a tiny part of what’s “really going on underneath”, and we aggregate many details to get the summary that represents our perception of the universe.</p>
<p>But why should that summary have any coherence? Basically it’s because we impose coherence through our definition of how observers like us work. One part of the universe will be affected by others. But to consider part of the universe as an “observer”, there has to be a certain coherence to it. The behavior of the universe somehow has to imprint itself on a “medium” that has a certain coherence and consistency.</p>
<p>Down at the level of atoms of space, everything is always changing. But we can still identify emergent features that have a certain persistence. And it’s out of those features that what we call observers are built. Given only the atoms of space with all their computationally irreducible behavior, it’s not at the outset obvious that any real persistence could exist or be identified. But in our models we expect that there will, for example, be essentially <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#elementary-particles-old-and-new'>topological features that correspond to particles</a> that persistently maintain their identity. </p>
<p>And the point is that we can expect to “aggregate up” much further and be able to identify something like a human observer—that we can consider to persistently maintain its identity to the point where phenomena from the universe can be “systematically imprinted” on it. </p>
<p>Down at the level of atoms of space, there’s a whole multiway graph of possible sequences of updates that can occur—with each path in effect corresponding to a different “thread of time” for the universe. But it’s a crucial fact about <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>us as observers of the universe</a> that we don’t perceive all those branching and merging threads of time. Instead, we imagine that we have a single, definite thread of experience—in which everything is sequentialized in time. </p>
<p>I’ve <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>argued elsewhere</a> that this sequentialization in time is a defining characteristic of “human-like consciousness”. And it turns out that one of its consequences is that it implies that the particular perception we will have of the universe must be one in which there are laws of physics that correspond to ones we know.</p>
<p>It’s not obvious, by the way, that if we sequentialize time we can form any consistent view of the universe. But the phenomenon of <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-phenomenon-of-causal-invariance' target=_blank rel=noopener>causal invariance</a>—which seems ultimately to be guaranteed by the fundamental structure of the ruliad—turns out to imply that we can expect a certain generalized relativistic invariance that will inevitably lead to eventual consistency. </p>
<p>The notion of sequentialization in time is closely related to the idea that—even though our individual atoms of space are continually changing—we can view ourselves as having a coherent existence through time. And there’s a similar phenomenon for space. At the outset, it’s not obvious that there can be “pure motion”, in which something can move in space without “fundamentally changing”. But it turns out again to be consistent to view this as how things work for us: that even though we’re “made of different atoms of space” when we’re in different places, we can still imagine that in some sense we maintain the “same identity”.</p>
<p>Down at the level of individual atoms of space, there really isn’t any coherent notion of space. And the fact that we form such a notion seems to be intimately connected to what we might think of as details of us. Most important is that we’re in a sense “intermediate in size” in the universe. We’re large relative to the effective distance between atoms of space (<a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/units-and-scales/' target=_blank rel=noopener>which might be <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg17.png" width= '54' height='21' align='absmiddle'></span> m</a>), yet we’re small compared to the size of the whole universe (<span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg18.png" width= '46' height='20' align='absmiddle'></span> m). And the result is that we tend to aggregate the effects of many atoms of space, but still perceive different features of space (say, different gravitational fields) in different parts of the universe.</p>
<p>The fact that we “naturally form a notion of space” also seems to depend on another issue of scale—that for us the speed of light “seems fast”. It takes our brains perhaps milliseconds to process anything we see. But the point is that this is very long compared to the time it takes light to get to us from objects in our typical local environment. And the result is that we tend to perceive there as being an instantaneous configuration of the world laid out in space, that “separately” changes in time. But if, for example, our brains ran much faster, or we were much bigger than we are, then the speed of light would “seem slower” to us, and we wouldn’t tend to form the notion of an “instantaneous state of space”.</p>
<p>OK, so what about quantum mechanics? The most fundamental feature of quantum mechanics is that it implies that things in the universe follow not just one but many possible paths of history—which we only get to make certain kinds of measurements on. And in our <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#the-inevitability-of-quantum-mechanics'>Physics Project this is something natural</a>, and in fact inevitable. Given any particular configuration of the universe, there are many possible updates that can occur. And when we trace out all the possibilities, we get a multiway system, in which different threads of history continually branch and merge.</p>
<p>So how do observers like us fit into this? Being part of the universe, we inevitably branch and merge, just like the rest of the universe. So to understand our experience, what we need to ask is how a <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/#the-quantum-observer'>“branching brain” will perceive a “branching universe”</a>. And the story is remarkably similar to what we discussed above for our experience of space and time: it all has to do with imagining ourselves to have a certain definite persistence.</p>
<p>In other words, even if when “viewed from the outside” our brain might be following many different paths of history, “from the inside” we can still potentially assume that everything is conflated into a single thread of history. But will this ultimately be a consistent thing to do? Once again, causal invariance implies that it will. There are specific “quantum effects” where we can tell that there are multiple branches of history being followed, but in the end it’ll be consistent to imagine an “objective reality” about “what happened”.</p>
<p>In our Physics Project we imagine that there are abstract relations between atoms of space, and in the end the pattern of these relations defines the structure of physical space. But what about different branches of history in the multiway graph? Can we think of these as related? The answer is yes. For example, we can say that at a particular time, states on two branches are “adjacent” if they share an immediate ancestor in the multiway graph. And tracing through such connections we can develop a notion of “<a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-concept-of-branchial-graphs/' target=_blank rel=noopener>branchial space</a>”—a kind of space in which states on different branches of history are laid out:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg19.png" alt='' title='' width='564' height='364' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg19_copy.txt">
					<span class='close' id='19_out'>&amp;#10005</span></p>
<pre class='text' id='19_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>One can think of branchial space as being defined by the pattern of entanglements between different branches of history. And in our Physics Project it turns out that the fundamental <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#general-relativity-and-quantum-mechanics-are-the-same-idea'>laws of quantum mechanics seem to just be a direct translation of the fundamental laws of spacetime</a> into branchial space. And just like the speed of light governs the maximum rate at which effects can propagate in physical space, so similarly in our models there’s a “<a href='https://www.wolframphysics.org/technical-introduction/potential-relation-to-physics/correspondence-between-relativity-and-quantum-mechanics/' target=_blank rel=noopener>maximum entanglement speed</a>” at which effects can propagate in branchial space.</p>
<p>So what are we like as observers in branchial space? Just like in physical space, we can presumably be thought of as having a certain size in branchial space. We don’t yet know quite how to measure this size, but it’s surely related to the effective number of quantum degrees of freedom we involve. </p>
<p>In our everyday experience of things like gases, we’re sufficiently large compared to individual molecules that we normally just perceive the gas as some kind of continuum fluid—and in normal circumstances we can’t even tell that it’s made of molecules. Well, it’s presumably the same kind of thing for physical space—where we’re even much larger compared to the atoms of space, and it’s a major challenge to <a href='https://writings.stephenwolfram.com/2021/04/the-wolfram-physics-project-a-one-year-update/#towards-experimental-implications'>figure out how to detect their presence</a>. What about for branchial space? As the underlying rules for the system get applied, different branches of history will in effect “move around” in branchial space in complex and computationally irreducible ways. And just like when we observe molecules in a gas, we’ll mostly just observe overall aggregate effects analogous to fluid mechanics—and only in special circumstances will we notice “quantum effects” that reveal the presence of multiple independent threads of history.</p>
<h2 id='living-in-rulial-space'>Living in Rulial Space</h2>
<p>We’ve discussed how “observers like us” perceive models of physics of the type that arise in our Physics Project. But how will we perceive the whole ruliad? It begins with a generalization of the story for branchial space. Because now as well as having different branches associated with different updatings according to a particular rule, we have different branches associated with updatings according to different rules.</p>
<p>And just as we can slice an ordinary multiway system at a particular time to get an instantaneous version of branchial space, so now we can slice a rulial multiway system to get an instantaneous version of what we can call rulial space—a space in which different branches can correspond not just to different histories, but to different rules for history.</p>
<p>It’s a fairly complicated setup, with “pure branchial space” inevitably being deeply interwoven with rulial space. But as a first approximation, we can think of rulial space as being somewhat separate, and laid out so that different places in it correspond to the results of applying different rules—with nearby places effectively being associated with “nearby” rules.</p>
<p>And just as we can think of effects propagating in branchial space, so also we can think of them propagating in rulial space. In branchial space we can talk about entanglement cones as the analog of light cones, and a maximum entanglement speed as the analog of the speed of light. In rulial space we can instead talk about “<a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/#the-emerging-picture-of-rulial-space' target=_blank rel=noopener>emulation cones</a>”—and a “maximum emulation speed”.</p>
<p>In our rough approximation of rulial space, each point is in effect associated with a particular rule. So how do we “move” from one point to another? Effectively we have to be emulating the behavior of one rule by another. But why should it even be possible to do this? The answer is the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a>, which states that, in effect, most rules will be equivalent in their computational capabilities—and in particular they will be capable of universal computation, so that any given rule can always “run a program” that will make it emulate any other rule.</p>
<p>One can think of the program as an interpreter or translator that goes from one rule to another. The Principle of Computational Equivalence tells one that such a translator must essentially always exist. But how fast will the translator run? Effectively that’s what distance in rulial space measures. Because to “do a certain translation”, branches in the rulial multiway system have to reach from one rule to another. But they can only do that at the maximum emulation speed. </p>
<p>What does the maximum emulation speed measure? Effectively it corresponds to the <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/#the-emerging-picture-of-rulial-space' target=_blank rel=noopener>raw computational processing speed of the universe</a>. We can think of representing computations in some language—say the <a href='https://www.wolfram.com/language/'>Wolfram Language</a>. Then the processing speed will be measured in “Wolfram Language tokens processed per second” (“WLT/s”). In some sense, of course, giving a value for this speed is just a way of relating our human units of time (say, seconds) to the “intrinsic unit of time” associated with the computational processing that’s going on in the universe. Or, in other words, it’s a kind of ultimate definition of a second relative to purely formal constructs.</p>
<p>OK, but how does this relate to us as observers embedded within the ruliad? Well, just as we imagine that—along with the rest of the universe—we’re continually branching and merging in branchial space, so also this will be what happens in rulial space. In other words—like the rest of the universe—our brains aren’t following a particular rule; they’re following branching and merging paths that represent all possible rules.</p>
<p>But “from inside” we can still potentially imagine that we have a single thread of experience—effectively conflating what happens on all those different branches. And once again we can ask whether doing this will be consistent. And the answer seems to be that, yes, it can be. And what guarantees this is again a kind of “<a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#why-this-universe-the-relativity-of-rules'>rulial relativity</a>” that’s a consequence of causal invariance. There are many details here, which we’ll address to some extent later. But the broad outline is that causal invariance can be thought of as being associated with paths of history that diverge, eventually converging again. But since the ruliad contains paths corresponding to all possible rules, it’s basically inevitable that it will contain what’s needed to “undo” whatever divergence occurs. </p>
<p>So what does this mean? Basically it’s saying that even though the universe is in some sense intrinsically “following all possible rules”—as represented by paths in the ruliad—we as observers of the universe can still “take the point of view” that the universe follows a particular rule. Well, actually, it’s not quite a particular rule. Because just as we’re in some sense “quite big” in physical and presumably branchial space, so also we’re potentially “quite big” in rulial space.</p>
<p>And being extended in rulial space is basically saying that we consider not just one, but a range of possible rules to be what describe the universe. How can it work this way? Well, as observers of the universe, we can try to deduce what the “true rule for the universe” is. But inevitably we have to do this by performing physical experiments, and then using inductive inference to try to figure out what the “rule for the universe is”. But the issue is that as entities embedded within the universe, we can only ever do a finite number of experiments—and with these we’ll never be able to precisely nail down the “true rule”; there’ll always be some uncertainty.</p>
<p>When we think of ourselves as observers of the universe, there’s in a sense lots of “arbitrariness” in the way we’re set up. For example, we exist at a particular location in physical space—in our particular solar system and so on. Presumably we also exist at a particular location in branchial space, though it’s less clear how to “name” that. And in addition we exist at a particular location in rulial space.</p>
<p>What determines that location? Essentially it’s determined by how we operate as observers: the particular sensory system we have, and the particular means of description that we’ve developed in our language and in the history of knowledge in our civilization. In principle we could imagine sensing or describing our universe differently. But the way we do it defines the particular place in rulial space at which we find ourselves.</p>
<p>But what does all this mean in terms of the ruliad? The ruliad is the unique limiting structure formed by following all possible rules in all possible ways. But when we “observe the ruliad” we’re effectively “paying attention to” only particular aspects of it. Some of that “paying attention” we can conveniently describe in terms of our particular “location in the ruliad”. But some is more naturally described by thinking about equivalence classes in the ruliad.</p>
<p>Given two states that exist in the ruliad, we have to ask whether as observers we want to consider them distinct, or whether we want to conflate them, and consider them “the same”. When we discussed the construction of the ruliad, we already had many versions of this issue. Indeed, whenever we said that two paths in the ruliad “merge”, that’s really just saying that we treat the outcomes as equivalent.</p>
<p>“Viewed from the outside”, one could imagine that absolutely nothing is equivalent. Two hypergraphs produced in two different ways (and thus, perhaps, with differently labeled nodes) are “from the outside” in some sense different. But “viewed from the inside”, they pretty much have to be viewed as “the same”, in essence because all their effects will be the same. But at some level, even such conflation of differently labeled hypergraphs can be thought of as an “act of the observer”; something that one can only see works that way if one’s “observing it from inside the system”.</p>
<p>But all the way through our description of the observer, it’s very much the same story: it’s a question of what should be considered equivalent to what. In sequentializing time, we’re effectively saying that “all of space” (or “all of branchial space”, or rulial space) should be considered “equivalent”. There are many subtle issues of equivalence that also arise in the <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#the-formal-structure-of-multicomputation'>construction of states in the ruliad from underlying tokens</a>, in defining what rules and initial conditions should be considered the same, and in many other places.</p>
<p>The ruliad is in some sense the most complicated constructible object. But if we as computationally bounded observers are going to perceive things about it, we have to find some way to “cut it down to size”. And we do that by defining equivalence classes, and then paying attention only to those whole classes, not all the details of what’s going on inside them. But a key point is that because we are computationally bounded observers who imagine a certain coherence in their experience, there are strong constraints on what kinds of equivalence classes we can use.</p>
<p>If we return again to the situation of molecules in a gas, we can say that we form equivalence classes in which we look only coarsely at the positions of molecules, in “buckets” defined by simple, bounded computations—and we don’t look at their finer details, with all the computational irreducibility they involve. And it’s because of this way of looking at the system that we conclude that it follows the Second Law of thermodynamics, exhibits fluid behavior, etc.</p>
<p>And it’s very much the same story with the ruliad—and with the laws of physics. If we constrain the kind of way that we observe—or “parse”—the ruliad, then it becomes inevitable that the effective laws we’ll see will have certain features, which turns out apparently to be exactly what’s needed to reproduce known laws of physics. The full ruliad is in a sense very wild; but as observers with certain characteristics, we see a much tamer version of it, and in fact what we see is <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#observers-reference-frames-and-emergent-laws'>capable of being described in terms of laws</a> that we can largely write just in terms of existing mathematical constructs.</p>
<p>At the outset, we might have imagined that the ruliad would basically just serve as a kind of dictionary of possible universes—a “universe of all possible universes” in which each possible universe has different laws. But the ruliad is in a sense a much more complicated object. Rather than being a “dictionary” of possible separate universes, it is something that entangles together all possible universes. The Principle of Computational Equivalence implies a certain homogeneity to this entangled structure. But the crucial point is that we don’t “look at this structure from the outside”: we are instead observers embedded within the structure. And what we observe then depends on our characteristics. And it turns out that even very basic features of our consciousness and sensory apparatus in a sense inevitably lead to known laws of physics—and in a sense do so generically, independent of details of just where in rulial space we are, or exactly what slice of the ruliad we take.</p>
<p>So far we’ve primarily talked about the ruliad in terms of physics and the fundamental structure of our physical universe. But the ruliad is actually something still more general than that. Because ultimately it is just created from the abstract concept of following all possible computational rules. And, yes, we can interpret these rules as representing things going on in our universe. But we can also interpret them as representing things going on in some other, less immediately physically realizable system. Or, for that matter, representing something purely formal, and, say, mathematical.</p>
<p>This way of talking about the ruliad might make one think that it should be “considered a possible model” for our universe, or for other things. But the bizarre and surprising point is that it is more than that. It’s not just a possible model that might be one of many. Rather, it is the unique ultimate representation of all possible models, entangled together. As we’ve discussed, there are many subtle choices about how we observe the ruliad. But the ultimate ruliad itself is a unique thing, with no choice about what it is. </p>
<p>As I’ve <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>discussed at more length elsewhere</a>, the ruliad is in a sense a representation of all possible necessary truths—a formal object whose structure is an inevitable consequence of the very notion of formalization. So how does this relate to the idea that the ruliad also at an ultimate level represents our physical universe? What I’ve <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>argued elsewhere</a> is that it means that the ultimate structure of our universe is a formal necessity. In other words, it’s a matter of formal necessity that the universe must exist, and have an ultimate ruliad structure. The fact that we perceive the universe to operate in a certain way—with our standard laws of physics, for example—is then a consequence of the particular way observers like us perceive it, which in turn depends on things like where in rulial space we happen to find ourselves.</p>
<p>But beyond physics, what else might the ruliad represent? The ruliad is an ultimate example of <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/'>multicomputation, and of what I’ve characterized as the fourth major paradigm for theoretical science</a>. Often in multicomputation, what’s of interest is multiway systems with specific underlying rules. And already at this level, much of the apparatus that we’ve described in connection with the ruliad also applies—and in a sense “trickles down” to give various universal results.</p>
<p>But there are also definitely cases of multicomputation (other than physics) where the full notion of applying all possible rules is relevant. The global structures of <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#metamathematics'>metamathematics</a>, <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#economics'>economics</a>, <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#linguistics'>linguistics</a> and <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#evolutionary-biology'>evolutionary biology</a> seem likely to provide examples—and in each case we can expect that at the core is the ruliad, with its unique structure. Of course, this doesn’t mean that what we observe must always be the same, because what we observe depends on our characteristics as an observer—and the characteristics of “being an observer” in metamathematics, for example, are surely different from those for economics or evolutionary biology, or, for that matter, physics. </p>
<p>For sure, the “sensory apparatus” that we effectively use is different in different cases. But there are certain similar human-based features that still seem to apply. Whatever the domain, we always act as computationally bounded observers. And it seems that we also always have a certain coherence, consistently maintaining our “observerhood” through time or across some form of space. And it seems likely that these “human-induced” characteristics alone are sufficient to yield some very global implications for observed behavior.</p>
<h2 id='the-view-from-mathematics'>The View from Mathematics</h2>
<p>How should we think about the ruliad mathematically? In many ways, the ruliad is more an object of metamathematics than of mathematics itself. For in talking about the effects of all possible rules, it in a sense transcends individual mathematical theories—to describe a kind of metatheory of all possible theories.</p>
<p>Given a particular mathematical axiom system, it’s rather easy to see <a href='https://www.wolframscience.com/nks/p777--implications-for-mathematics-and-its-foundations/'>correspondence with a multiway system</a>. There are a variety of ways to set it up, but one approach is to think of states in the multiway system as being expressions in the language used for the axiom system, and then to think of rules in the multiway system as applying transformations on these expressions that implement axioms in the axiom system.</p>
<p>For example, with the (Abelian semigroup) axioms</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg20.png" alt='' title='' width='290' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg20_copy.txt">
					<span class='close' id='20_out'>&amp;#10005</span></p>
<pre class='text' id='20_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>here’s a multiway system generated from the expression <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg21.png" width= '78' height='21' align='absmiddle'></span> by applying the (two-way) transformations defined by the axioms in all possible ways to each expression:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/sw1110v2img23.png" alt='' title='' width='1358' height='570' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/sw1110img23_copy.txt">
					<span class='close' id='23_out'>&amp;#10005</span></p>
<pre class='text' id='23_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But now from this graph we can read off the “theorem”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg23.png" alt='' title='' width='234' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg23_copy.txt">
					<span class='close' id='23_out'>&amp;#10005</span></p>
<pre class='text' id='23_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A proof of this theorem</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg24.png" alt='' title='' width='484' height='261' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg24_copy.txt">
					<span class='close' id='24_out'>&amp;#10005</span></p>
<pre class='text' id='24_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>is just a path in the multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg25.png" alt='' title='' width='564' height='238' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg25_copy.txt">
					<span class='close' id='25_out'>&amp;#10005</span></p>
<pre class='text' id='25_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>A significantly less direct but still perfectly valid proof would correspond to the 13-step path:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg26.png" alt='' title='' width='552' height='233' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg26_copy.txt">
					<span class='close' id='26_out'>&amp;#10005</span></p>
<pre class='text' id='26_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>It’s a slightly technical point, but perhaps worth mentioning that there are alternative ways to set up the correspondence between axiomatic mathematical systems and multiway systems. One such way is to take the states in the multiway system to be not expressions (like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg27.png" width= '26' height='19' align='absmiddle'></span>) but whole propositions (like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg28.png" width= '71' height='19' align='absmiddle'></span>). Axioms then show up as states, and the rules for the multiway system are “rules of inference” or “rules of entailment” that define how, say, pairs of propositions “entail” (or “imply”) other ones. (And, yes, this requires a generalized multiway system with not just 1 state&nbsp;→&nbsp;many states, but for example 2 states&nbsp;→&nbsp;1 state.) Typical automated theorem provers (like <tt><a href='http://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt>) operate in this kind of setup, attempting to find paths that lead from initial propositions and axioms to some final state that corresponds to an “obviously true” proposition, like <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg29.png" width= '37' height='19' align='absmiddle'></span>.</p>
<p>But whatever the detailed setup, the basic picture is that an axiomatic mathematical system has an associated multiway graph, in which paths correspond to proofs. Given the rules for the multiway system, there is in general no way to guarantee that the path (if it exists) corresponding to the proof of some particular result will be of bounded length, leading to the possibility of undecidability. But even when a path exists, it may require an irreducibly large amount of computation to find it. Still, finding such paths is what automated theorem provers do. For example, we know <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>(as I discovered in 2000) that ((<em>b</em>&nbsp;&middot;&nbsp;<em>c</em>)&nbsp;&middot;&nbsp;<em>a</em>)&nbsp;&middot;&nbsp;(<em>b</em>&nbsp;&middot;&nbsp;((<em>b</em>&nbsp;&middot;&nbsp;<em>a</em>)&nbsp;&middot;&nbsp;<em>b</em>))&nbsp;=&nbsp;<em>a</em> is the minimal axiom system for Boolean algebra</a>, because <tt><a href='http://reference.wolfram.com/language/ref/FindEquationalProof.html'>FindEquationalProof</a></tt> finds a path that proves it.</p>
<p>But this path—and the corresponding proof—is a very “non-human” construct (and, for example, in 21 years essentially no progress has been made in finding a <a href='https://writings.stephenwolfram.com/2018/11/logic-explainability-and-the-future-of-understanding/'>“human-understandable narrative” for it</a>). And we can make an analogy here to the situation in physics. The individual rule applications in the multiway graph (or the proof) are like individual updating events applied to the atoms of space—and they show all kinds of complexity and computational irreducibility. But in physics, human observers work at a higher level. And the same, one suspects, is true in mathematics.</p>
<p>Rather than looking at every detail of the multiway graph, human “mathematical observers” (i.e. pure mathematicians) in effect define all sorts of equivalences that conflate together different parts of the graph. If the individual updates in the multiway graph are like molecular dynamics, human pure mathematics seems to operate much more at the “fluid dynamics level”, concentrating on “broad mathematical constructs”, not the “machine code” of specific low-level axiomatic representations. (Of course, there are some situations, for example related to undecidability, where the “molecular dynamics” effectively “breaks through”.)</p>
<p>We’ve outlined above (and <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>discussed at length elsewhere</a>) how physical observers like us “parse” the low-level structure of the physical universe (and the ruliad). How might mathematical observers do it? A large part has to do with the identification of equivalences. And the key idea is that things which are considered equivalent should be assumed to be “the same”, and therefore “conflated for mathematical purposes”.</p>
<p>The most elementary example of something like this is the statement (<a href='https://writings.stephenwolfram.com/2020/09/the-empirical-metamathematics-of-euclid-and-beyond/'>already present in Euclid</a>) that if <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg31.png" width= '36' height='21' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg32.png" width= '34' height='19' align='absmiddle'></span>, then <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg33.png" width= '35' height='21' align='absmiddle'></span>. The extensionality axiom of set theory is a more sophisticated example. And the univalence axiom of homotopy type theory is perhaps the most sophisticated current version. </p>
<p>There’s a very operational version of this that appears in automated theorem proving. Imagine that you’ve proved that <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg34.png" width= '36' height='21' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg35.png" width= '34' height='19' align='absmiddle'></span>. Then (by the assumed properties of equality) it follows that <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg36.png" width= '35' height='21' align='absmiddle'></span>. One way we could use this result is just to merge the nodes for <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg37.png" width= '9' height='21' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg38.png" width= '7' height='19' align='absmiddle'></span>. But a “bigger” thing we can do is to add the “completion” <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg39.png" width= '35' height='21' align='absmiddle'></span> as a general rule for generating the multiway system.</p>
<p>Consider, for example, the string substitution multiway system A ↔ AB:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg40.png" alt='' title='' width='562' height='162' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg40_copy.txt">
					<span class='close' id='40_out'>&amp;#10005</span></p>
<pre class='text' id='40_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But notice here that both ABA ↔ ABBA and ABA ↔ ABAB. So now add the “completion” ABBA ↔ ABAB. Here’s the resulting multiway graph: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg41.png" alt='' title='' width='562' height='197' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg41_copy.txt">
					<span class='close' id='41_out'>&amp;#10005</span></p>
<pre class='text' id='41_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Adding the completion has generated lots of new “direct equivalences”. But we can also think of it as having done something else: not only has it defined equivalences between states; it’s also defined equivalences between paths—or in effect between proofs. (Or, put another way, it’s implementing homotopic equivalence between proofs. By the way, it’s an important feature of human mathematics that progress is typically measured in theorems proved; different proofs of the same theorem are normally implicitly considered equivalent in terms of the progress of mathematics.) </p>
<p>In a <a href='https://arxiv.org/pdf/2105.10822.pdf' target=_blank rel=noopener>category theory interpretation</a>, transformations between states in the original multiway graph are like ordinary morphisms (1-morphisms). But when we’re making transformations between “proof paths”, this is like 2-morphisms. And just as we can add transformations between proofs, we can also add transformations between proofs-between-proofs, and so on. The result is that we can build up a whole hierarchy of higher and higher categories, eventually ending with an ∞-category. </p>
<p>But now we can begin to see the connection with the ruliad. The ruliad is in a sense the result of taking the limit of adding more and more possible rules. Above we did this quite explicitly in terms of the original underlying rules, for example by enumerating possible strings or possible integer multipliers. </p>
<p>But we can view successive completions as doing something very similar. Yes, the rules are enumerated in a different order. But in the end there’ll still be an infinite number of distinct rules being used. </p>
<p>Of course there are many mathematical details missing here. But in broad outline, it seems that one can think of the approach to the ruliad as some kind of limit of successively higher categories. But this limit is something that’s been studied (albeit in the upper reaches of pure mathematics), and it’s an object called the ∞-groupoid. (It’s a groupoid because when all the rules are included things inevitably “go both ways”). So, OK, is the ruliad “just” the ∞-groupoid? Not quite. Because there are more rules and more initial conditions in the ruliad, even beyond those added by completions. And in the end the ruliad actually seems to be the ∞-category of ∞-groupoids, or <a href='https://arxiv.org/pdf/2111.03460.pdf' target=_blank rel=noopener>what&#8217;s called the (∞,1)-category</a>.</p>
<p>But knowing that the ruliad can be thought of as composed of ∞-groupoids means that we can <a href='https://arxiv.org/pdf/2111.03460.pdf' target=_blank rel=noopener>apply mathematical ideas</a> about the ∞-groupoid to the ruliad. </p>
<p>Probably the most important is Grothendieck’s hypothesis, which asserts that the ∞-groupoid inevitably has a topological and (with a few other conditions) ultimately geometric structure. In other words, even though one might have imagined that one constructed the ∞-groupoid from “pure logic” (or from pure formal axiomatic structures), the assertion is that the limiting object one obtains inevitably exhibits some kind of geometrical or “spatial” structure. </p>
<p>Viewed in terms of the ruliad—and our explicit finite examples of it—this might not seem surprising. And indeed in our Physics Project, the whole concept of the <a href='https://www.wolframphysics.org/technical-introduction/limiting-behavior-and-emergent-geometry/' target=_blank rel=noopener>emergence of space from large-scale hypergraphs</a> is closely related. But here from Grothendieck’s hypothesis we’re basically seeing a general claim that the <a href='https://www.wolframphysics.org/bulletins/2020/08/a-candidate-geometrical-formalism-for-the-foundations-of-mathematics-and-physics/' target=_blank rel=noopener>ruliad must have “inevitable geometry”</a>—and we can then view things like the emergence of space in our Physics Project as a kind of “trickle down” from results about the ruliad. (And in general, a big “application” of geometrical structure is the possibility of “pure motion”.)</p>
<p>What does all this mean about the ruliad and mathematics? In a sense the ruliad represents all possible mathematics—the application of all possible rules, corresponding to all possible axiom systems. And from this “ultimate metamathematics”, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-relation-to-mathematics'>human “mathematical observers”</a> are sampling pieces that correspond to the pure mathematics they consider of interest.</p>
<p>Perhaps these will align with particular axiom systems of the kind automated theorem provers (or proof assistants) use. But things may be “sloppier” than that, with human mathematical observers effectively being extended in rulial space—and capable of making “fluid-dynamics-level” conclusions, even if not “molecular-dynamics-level” ones. </p>
<p>But a key (and in some ways very surprising) point is that the ruliad can be viewed as the basis of both physics and mathematics. In some sense, physics and mathematics are at their core the same thing. They only “appear different” to us because the way we “observe” them is different. </p>
<p>I plan to discuss the implications for mathematics at greater length elsewhere. But suffice it to say here that the existence of a common underlying core—namely the ruliad—for both physics and mathematics immediately allows one to start importing powerful results from physics into mathematics, and vice versa. It also allows one, <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-relation-to-mathematics'>as I have done elsewhere</a>, to start comparing the existence of the universe with the (Platonic-style) concept of the fundamental existence of mathematics.</p>
<h2 id='the-view-from-computation-theory'>The View from Computation Theory</h2>
<p>The ruliad can be thought of as an encapsulation of doing all possible computations in all possible ways. What we might think of as a “single computation” might consist of repeatedly applying the rules for a <a href='https://www.wolframscience.com/nks/p78--turing-machines/'>Turing machine</a> to “deterministically” generate a sequence of computational steps: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg42.png" alt='' title='' width='563' height='229' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg42_copy.txt">
					<span class='close' id='42_out'>&amp;#10005</span></p>
<pre class='text' id='42_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>But one can also consider a <a href='https://www.wolframphysics.org/bulletins/2021/02/multiway-turing-machines/' target=_blank rel=noopener>“multicomputational” system</a>, in which rules can generate multiple states, and the whole evolution of the system can be represented by a multiway graph:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg43.png" alt='' title='' width='562' height='227' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg43_copy.txt">
					<span class='close' id='43_out'>&amp;#10005</span></p>
<pre class='text' id='43_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In traditional computation theory, one talks about rules like these as “nondeterministic”, because they can have multiple outcomes—though one usually imagines that the final answer one wants from a computation can be found as the result of some particular path. (In what I now call the <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/'>multicomputational paradigm</a>—that I believe is important for modeling in physics and other places—one instead considers the <a href='https://www.wolframphysics.org/bulletins/2021/02/multiway-turing-machines/' target=_blank rel=noopener>complete multiway graph</a> of entangled possible histories.)</p>
<p>In constructing the ruliad, one is in a sense going to a more extreme version of multicomputation, in which one uses not just a particular rule with multiple outcomes, but all possible rules. In effect, the concept is to use “maximal nondeterminism”, and at each step to independently “pick whatever rule one wants”, tracing out a rulial multiway system that includes all the different possible paths this generates. </p>
<p>For the kind of Turing machines illustrated above, the <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/' target=_blank rel=noopener>rulial multiway graph one gets</a> after one step is: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg44.png" alt='' title='' width='1128' height='142' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg44_copy.txt">
					<span class='close' id='44_out'>&amp;#10005</span></p>
<pre class='text' id='44_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>After 2 steps the result is:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg45.png" alt='' title='' width='1128' height='602' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg45_copy.txt">
					<span class='close' id='45_out'>&amp;#10005</span></p>
<pre class='text' id='45_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The full ruliad is then some kind of infinite limit of this process. But as before, there’s lots of subtlety in how this limit is taken. But we can at least characterize some ways of approaching it using ideas from computational complexity theory. Increasing the number of steps of evolution is like increasing the time complexity one allows. Increasing the “size of states” (e.g. the width of nonzero Turing machine tape) that one includes is like increasing the space complexity one allows. And increasing the complexity of the rule (as measured in the number of bits needed to specify it) is like increasing the algorithmic complexity one allows. The ruliad is what is obtained by taking all these computational resource measures to infinity. </p>
<p>And a critical claim is that regardless of how this is done, the final ruliad construct one gets will always—at least in some sense—be the same. There will be many ways to coordinatize it, or to sample it, but the claim is that it’s always the same object that one’s dealing with. And ultimately the reason for this is the <a href='https://www.wolframscience.com/nks/chap-12--the-principle-of-computational-equivalence/'>Principle of Computational Equivalence</a>. Because it implies that whatever “computational parametrization” or “computational description language” one uses for the ruliad, one will almost always get something that can be viewed as “computationally equivalent”. </p>
<p>We’ve talked about building up the ruliad using Turing machines. But what about other models of computation—like cellular automata or register machines or lambda calculus? As soon as there’s computation universality we know that we’ll get results that are at least in principle equivalent, because in a sense there’s only a “finite translation cost” associated with setting up an interpreter from one model of computation to another. Or, put another way, we can always emulate the application of the rule for one system by just a finite number of rule applications for the other system.</p>
<p>But from computation universality alone we have no guarantee that there won’t be “extreme deformations” introduced by this deformation. What the Principle of Computational Equivalence says, however, is that almost always the deformations won’t have to be extreme. And indeed we can expect that particularly when multiple rules are involved, there’ll be rapid convergence almost always to a kind of “uniform equivalence” that ensures that the final structure of the ruliad is always the same.</p>
<p>But the Principle of Computational Equivalence appears to say still more about the ruliad: it says that not only will the ruliad be the same independent of the “computational basis” used to construct it, but also that there’ll be a certain uniformity across the ruliad. Different “regions of the ruliad” might involve different specific rules or different patterns of their application. But the Principle of Computational Equivalence implies that almost always the computations that happen will be equivalent, so that—at least at a certain scale—the structure associated with them will also be equivalent.</p>
<p>Knowing that the ruliad contains so many different computations, one might imagine that it would show no particular uniformity or homogeneity. But the Principle of Computational Equivalence seems to imply that it necessarily does, and moreover that there must be a certain coherence to its structure—that one can interpret (in the style of Grothendieck’s hypothesis) as an inevitable emergent geometry.</p>
<p>An individual computation corresponds to a path in the ruliad, going from its “input state” to its “output state”. In an ordinary deterministic computation, the path is restricted to always use the same rule at each step. In a nondeterministic computation, there can be different rules at different steps. But now we can formulate things like the P vs. NP problem essentially in terms of the geometry of the ruliad.</p>
<p>Here’s a picture of the same finite Turing-machine-based approximation to the ruliad as above—but now with the <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/#deterministic-turing-machine-paths-in-rulial-space' target=_blank rel=noopener>paths that correspond to deterministic Turing machine computations</a> marked in red: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg46.png" alt='' title='' width='564' height='472' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg46_copy.txt">
					<span class='close' id='46_out'>&amp;#10005</span></p>
<pre class='text' id='46_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The P vs. NP problem basically asks roughly whether the deterministic computations (shown here in red) will eventually “fill the ruliad”, or whether the general nondeterministic computations that are part of the ruliad will always “reach further”. Once again, there are many complicated and subtle issues here. But it’s interesting to see how something like the P vs. NP problem might play out in the ruliad. </p>
<p>In physics (and mathematics), we as human observers tend to sample the ruliad in a coarse-grained way, “noticing” only certain aspects of it. So is there an analog of this in computation theory—perhaps associated with certain characteristics of the “computation-theoretic observer”? There’s a potential answer, rather similar to what we’ve already seen in both physics and mathematics. </p>
<p>The basic point is that in computation theory we tend to study classes of computations (say P or NP) rather than individual computations. And in doing this we are in a sense always conflating many different possible inputs and possible outputs—which we assume we do in a computationally bounded way (e.g. through polynomial-time transformations, etc.) </p>
<p>Another thing is that we tend to focus more on the “experience of the end user” than the detailed activities of the “programmer”. In other words, we’re concerned more with what computational results are obtained, with what computational resources, rather than on the details of the program constructed to achieve this. Or, put another way, we tend to think about computation in terms of things like the successive evaluation of functions—and we conflate the different paths by which this is achieved.</p>
<p>Most likely this means that there are “effective laws” that can be derived in this computational view of the ruliad, analogous to laws of physics like general relativity. So what might some other analogies be?</p>
<p>A computation, as we’ve mentioned, corresponds to a path in the ruliad. And whenever there’s a possibility for an infinite path in the ruliad, this is a sign of undecidability: that there may be no finite way to determine whether a computation can reach a particular result. But what about cases when many paths converge to a point at which no further rules apply, or effectively “time stops”? This is the analog of a spacelike singularity—or a black hole—in the ruliad. And in terms of computation theory, it corresponds to something decidable: every computation one does will get to a result in finite time.</p>
<p>One can start asking questions like: <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/#the-emerging-picture-of-rulial-space' target=_blank rel=noopener>What is the density of black holes in rulial space</a>? If we construct the ruliad using Turing machines, this is basically analogous to asking “What’s the density of halting Turing machines (+initial conditions) in rulial space?” And this is essentially given by <a href='https://www.wolframscience.com/nks/notes-10-3--algorithmic-information-theory/'>Chaitin’s Ω</a>. </p>
<p>But so is there some number Ω that we can just compute for the ruliad? Well, actually, no. Because the undecidability of the halting problem makes Ω noncomputable. One can get approximations to it, but—in the language of the ruliad—those will correspond to using particular samplings or particular reference frames. Or in other words, even the perceived density of “decidability black holes” in the ruliad depends on features of the observer.</p>
<h2 id='whats-beyond-the-ruliad'>What&rsquo;s beyond the Ruliad?</h2>
<p>In our Physics Project we usually talk of the universe “evolving through time” (albeit with many entangled threads of history). But if the ruliad and its structure is a matter of formal necessity, doesn’t that mean that the whole ruliad effectively “already exists”—“outside of time”? Well, in some sense it does. But ultimately that would only be relevant to us if we could “look at the ruliad from the outside”.</p>
<p>And as observers like us within the ruliad, we necessarily have a different perception. Because <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>our consciousness</a>—with its computational boundedness—only gets to sample a certain sequence of pieces of the ruliad. If it were not for computational irreducibility, we might get to “jump around” in time. But computational irreducibility, together with our own computational boundedness, implies that our perception must necessarily just experience the passage of time through an irreducible process of computation.</p>
<p>In other words, while in some sense the ruliad may all “already be there” when viewed from the outside, our own perception of it “from the inside” is necessarily a progressive one, that effectively corresponds to the passage of time.</p>
<p>Could we experience the ruliad differently, even while being computationally bounded? If we think of the ruliad as a graph, then our usual “sequence of configurations of space at successive times” way of experiencing the ruliad is like a <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/foliations-and-coordinates-on-causal-graphs/#p-255' target=_blank rel=noopener>breadth-first traversal</a>. But could we for example instead do a depth-first traversal, exploring all time before investigating different parts of space? (And, yes, something like this can happen in general relativity near an event horizon, or in connection with timelike singularities.)</p>
<p>Later, we’ll discuss different ways to perceive the ruliad and the universe. But it seems to be a feature of anything we might call a coherent observer that there needs to be some form of progression in the perception. And so while we might not call it the passage of time, there’ll still be some way in which our exploration of the ruliad has a computationally irreducible process underneath.</p>
<p>A very important <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#is-this-the-only-universe?'>claim about the ruliad is that it’s unique.</a> Yes, it can be coordinatized and sampled in different ways. But ultimately there’s only one ruliad. And we can trace the argument for this to the Principle of Computational Equivalence. In essence there’s only one ruliad because the Principle of Computational Equivalence says that almost all rules lead to computations that are equivalent. In other words, the Principle of Computational Equivalence tells us that there’s only one ultimate equivalence class for computations.</p>
<p>But what if we just imagine a “<a href='https://www.wolframscience.com/nks/p720--the-content-of-the-principle/'>hypercomputation</a>” not in that class? For example, imagine a hypercomputation (analogous, for example, to an oracle for a Turing machine) that in a finite number of steps will give us the result from an infinite number of steps of a computationally irreducible process. Such a hypercomputation isn’t part of our usual ruliad. But we could still formally imagine a hyperruliad that includes it—and indeed we could imagine a whole infinite hierarchy of successively larger and more powerful hyperruliads.</p>
<p>But it’s a fundamental claim that we’re making—that can be thought of as a matter of natural science—that in our universe only computation can occur, not hypercomputation. </p>
<p>At a purely formal level, there’s nothing wrong with hyperruliads. They exist as a matter of formal necessity just like the ordinary ruliad does. But the key point is that an observer embedded within the ruliad <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#why-this-universe-the-relativity-of-rules'>can never perceive a hyperruliad</a>. As a matter of formal necessity there is, in a sense, a permanent event horizon that prevents anything from any hyperruliad from affecting anything in the ordinary ruliad. </p>
<p>So now we can be a bit more precise about our statement that “hypercomputation doesn’t happen in our universe”. Really we should say that we assert that we as observers operate purely computationally and not hypercomputationally. And this means that we are embedded within the ordinary ruliad, and not the hyperruliad.</p>
<p>Yes, we could imagine some other entity that’s embedded within the hyperruliad, and perceives what it considers to be the universe to operate hypercomputationally. But in a statement that’s in a sense more “about us” than “about the universe”, we assert that that can’t be us, and that we in a sense live purely within the ruliad—which means that for us the <a href='https://www.wolframscience.com/nks/p726--the-validity-of-the-principle/'>Principle of Computational Equivalence holds</a>, and we perceive only computation, not hypercomputation.</p>
<h2 id='communicating-across-rulial-space'>Communicating across Rulial Space</h2>
<p>What observers can there be embedded in the ruliad, and how should we characterize them? In physical spacetime we’re used to characterizing observers by their locations in physical space and by things like the spacetime reference frames they construct. And it’s very much the same for observers in the ruliad: we can characterize them by where they are in rulial space, and what rulial reference frames they use.</p>
<p>The Principle of Computational Equivalence tells us that it’s almost always possible to “encode” one “model of how the ruliad works” in any other model—effectively just by setting up a program that emulates the rules for one model using the rules for the other model. But we can think of these different models as being associated with different possible observers in the ruliad. </p>
<p>In other words, we can say that observers “at different places in rulial space” (or “using different rulial reference frames”) are using different description languages for what’s happening in the ruliad. And when an observer “moves” in rulial space, they’re effectively doing a translation from one description language to another. (And, yes, there’s a <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/#the-emerging-picture-of-rulial-space' target=_blank rel=noopener>maximum rate of motion ρ</a> in rulial space—which is the rulial analog of the speed of light—and which is effectively determined by the fundamental processing speed of the universe.)</p>
<p>So far this might all seem quite abstract. But there are immediate, everyday examples that effectively correspond to being at different places in rulial space. A simple concrete one is computers with different instruction sets. Another one is different brains with different consciousnesses.</p>
<p>We can think of a single human <a href='https://writings.stephenwolfram.com/2021/03/what-is-consciousness-some-new-perspectives-from-our-physics-project/'>consciousness as having a certain thread of experience of the universe</a>. Part of that experience is determined by the physical location of the consciousness and by the sensory apparatus with which it samples the world. But part is determined by the “internal description language” that it uses. And inevitably this internal description language depends both on the detailed physiology of the brain in which it is implemented, and on the past history of experiences that have “defined its way of looking at the world”. In the analogy of artificial neural networks, different networks will tend to have different “internal representations” because this depends not only on the network architecture, but also on the particular training data that the network has “experienced”.</p>
<p>Why can’t one human consciousness “get inside” another? It’s not just a matter of separation in physical space. It’s also that the different consciousnesses—in particular by virtue of their different histories—are inevitably at different locations in rulial space. In principle they could be brought together; but this would require not just motion in physical space, but also motion in rulial space.</p>
<p>But why then do different consciousnesses seem to have compatible views about “what happens in the universe”? Essentially this can be seen as a consequence of rulial relativity—which in turn depends on the inevitable causal invariance of the ruliad, which follows from the Principle of Computational Equivalence. There are certainly many issues to be worked out, but basically what seems to be going on is that because of causal invariance, different rulial reference frames will ultimately yield the same <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/#rulial-multiway-causal-graphs' target=_blank rel=noopener>rulial multiway causal graphs</a>, and therefore the same “fundamental description of reality”.</p>
<p>We’ve talked about different consciousnesses. But what about just “different ways of thinking”? Well, it’s definitely more than an analogy to say that different ways of thinking correspond to different positions in rulial space. If there’s lots of common history then there’ll be common ancestry in the rulial multiway graph and one will necessarily end up close in rulial space. But without common history, one can end up with different description languages—or different ways of thinking—that are not nearby in rulial space.</p>
<p>In physical space we expect to effectively use momentum to move our location. And it’s potentially a bizarrely similar story in rulial space. In our models of fundamental physics, <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#what-is-energy-what-is-mass'>energy and momentum are essentially related to the density of activity</a> (i.e. elementary updating events) in physical space. And we can similarly define a rulial analog of energy and momentum in terms of activity in rulial space. But it’s exactly this activity that provides connections between different parts of rulial space, or in effect “enables motion” in rulial space. </p>
<p>In other words, if you want to move in rulial space, you can do it by putting in the appropriate computational work to change your conceptual point of view (or, essentially equivalently, your language for describing things). So what about curvature (or the analog of gravity) in rulial space—say generated through an analog of Einstein’s equations from density of activity in rulial space? Presumably this relates to the difficulty—or time it takes—to get from one place in rulial space, and one way of thinking, to another. And conceivably things like “paradigm shifts” between different ways of thinking might be associated with features of rulial space like event horizons.</p>
<p>But let’s say you’re at one place in rulial space, and you want to get to another—or at least “send a signal” there. A typical microscopic change at one point in rulial space will tend to just “spread out in all directions” and “decay quickly”. But if you want to “coherently communicate”, you need some kind of structure that will persist as it propagates through rulial space. And by analogy with the case of physical space, what this presumably means is that you effectively need a “rulial particle”. </p>
<p>In terms of the ruliad, a rulial particle would presumably be some kind of “topological obstruction” or “topologically stable structure” that is at any moment effectively localized in rulial space and maintains its identity as it propagates across rulial space. But what might a rulial particle be in more everyday terms?</p>
<p>Potentially it’s like what we’d normally consider a concept—or something to which we might assign a word in human language. If we have ways of thinking—or consciousnesses—whose details are different, the issue is what will be robust enough to be able to be transported between them. And what everyday experience seems to suggest is that the answer is concepts. Even though one might have a slightly different way of thinking, what one calls “a fish” (or essentially, the concept of a fish) is something that can still robustly be communicated.</p>
<p>It’s interesting to notice that for an observer like us, there seem to be only a finite set of types of “elementary particles” that exist in physical space. And perhaps that’s not unrelated to the fact that observers like us also seem to imagine that there are in some sense only a finite number of “basic concepts” (associated, say, with distinct words in human languages). There’s lots more detail that exists in rulial space—or in the ruliad—but for observers like us, with our type of way of sampling the ruliad, these might be core coherent structures that we perceive. </p>
<h2 id='so-is-there-a-fundamental-theory-of-physics'>So Is There a Fundamental Theory of Physics? </h2>
<p>The concept of the ruliad arose from our efforts to find a fundamental theory of physics. But now that we know about the ruliad, what does it tell us about a fundamental theory?</p>
<p>At the outset, we might have imagined that the end point of our project would be the identification of some particular rule of which we could say “This is the rule for the universe”. But of course then we’d be faced with the question: “Why that rule, and not another?” And perhaps we would imagine just having to say “That’s something that you have to go beyond science to answer”.</p>
<p>But the ruliad implies a quite different—and in my view ultimately much more satisfying—picture. The ruliad itself is a construct of abstract necessity—that in a sense represents the entangled behavior of all possible rules for the universe. But instead of imagining that some particular rule out of all these possibilities is “picked from outside” as “the choice for our universe”, what we suppose is that—as observers embedded within the ruliad—we’re the ones who are implicitly picking the rule by virtue of how we sample and perceive the ruliad.</p>
<p>At first this might seem like it’s a wimp out. We want to know how our universe works. Yet we seem to be saying “we just pick whatever rule we feel like”. But that’s not really the story at all. Because in fact observers that are even vaguely like us are in effect deeply constrained in what rules they can attribute to the universe. There’s still some freedom, but a fundamental result is that for observers like us it seems to be basically inevitable that any rule we can pick will on a large scale reproduce the central known general laws of physics, in particular general relativity and quantum mechanics.</p>
<p>In other words, for observers generally like us it’s a matter of abstract necessity that we must observe general laws of physics that are the ones we know. But what about more specific things, like the particular spectrum of elementary particles, or the particular distribution of matter in the universe? It’s not clear how far “the general” goes—in other words, what is a matter of abstract necessity purely from the structure of the ruliad and general features of observers like us. </p>
<p>But inevitably at some point we will run out of “the general”. And then we’ll be down to specifics. So where do those specifics enter? Ultimately they must be determined by the details of how we sample the ruliad. And a prominent part of that is simply: Where in the ruliad are we? We can ask that about our location in physical space. And we can also ask it about our location in rulial space.</p>
<p>What does all this mean? At some level it’s saying that the way we are as observers is what makes us attribute certain rules to our universe. The ruliad is in a sense the only thing that fundamentally exists—and in fact its existence is a matter of abstract necessity. And our universe as we experience it is some “slice of the ruliad”, with what slice it is being determined by what we’re like as observers.</p>
<p>Let’s look at the logical structure of what we’re saying. First, we’re describing the ruliad, which at the outset doesn’t have anything specifically to do with physics: it’s just a formal construct whose structure is a matter of abstract necessity, and which relates as much to mathematics as it does to physics. But what “puts the physics in” is that we in effect “live in the ruliad”, and our perception of everything is based on “experiencing the ruliad”. But that experience—and the effective laws of physics it entails—inevitably depends on “where we are in the ruliad” and how we’re able to sample it.</p>
<p>And this is where our pieces of &#8220;falsifiable natural science&#8221; come in. The first “assertion of natural science” that we make is that we are embedded only within the ordinary ruliad, and not a hyperruliad—or in other words that our experience encompasses only computation, and not hypercomputation. </p>
<p>This is closely related to a second assertion, which may in fact be considered to subsume this: that we are computationally bounded observers, or, in other words, that our processes of perception involve bounded computation. Relative to the whole ruliad—and all the computation it entails—we’re asserting that we as observers occupy only a tiny part.</p>
<p>There’s one more assertion as well, again related to computational boundedness: that we as observers have a certain coherence or persistence. In general the ruliad contains all sorts of wild and computationally irreducible behavior. But what we’re asserting is that that part of the ruliad that is associated with us as observers has a certain simplicity or computational reducibility: and that as we evolve through time or move in space, we somehow maintain our identity. </p>
<p>These assertions seem very general, and in some ways almost self-evident—at least as they apply to us. But the important and surprising discovery is that they alone seem to lead us inexorably to crucial features of physics as we know it.</p>
<p>Where does this physics “come from”? It comes partly from the formal structure of the ruliad, and formal features of the multicomputational processes it involves. And it comes partly from the nature of us as observers. So if we ask “Why is the physics of our universe the way it is?”, an important part of the answer is “Because we observe the universe the way we do”. </p>
<p>One might imagine that in some sense physics would give us no choice about how we observe the universe. But that’s not the case. Because in the end our “observation” of the universe is about the “abstract conceptual model” we build up for the universe. And, yes, that’s certainly informed by the particular sensory apparatus we have, and so on. But it’s something we can certainly imagine being different.</p>
<p>We can think of ourselves as using some particular description language for the universe. The structure of that language is constrained by the assertions we gave above. But within such a description language, the laws of physics necessarily work out the way they do. But if we chose a different description language, we’d end up with different laws of physics.</p>
<p>Much of our perception of the universe is based on our raw biological structure—the way our sensory organs (like our eyes) work, as well as the way our brains integrate the inputs we get. But that’s not all there is to it. There’s also a certain base of knowledge in our civilization that informs how we parse our “raw perception”—and in effect what description language we use. Once we have the idea of periodic behavior, say, we can use it to describe things that we’d previously have to talk about in a less “economical” way.</p>
<p>But what if our knowledge changed? Or we had different sensory capabilities? Or we used technology to integrate our sensory input in different ways? Then we’d be able to perceive and describe the universe in different ways.</p>
<p>One’s first impression might be that the ruliad effectively contains many possible “parallel universes”, and that we have selected ourselves into one of these, perhaps as a result of our particular characteristics. But in fact the ruliad isn’t about “parallel universes”, it’s about universes that are entangled at the finest possible level. And an important consequence of this is that it means we’re not “stuck in a particular parallel universe”. Instead, we can expect that by somehow “changing our point of view”, we can effectively find ourselves in a “different universe”.</p>
<p>Put another way, a given description of the universe is roughly represented by being at a certain location in rulial space. But it’s possible to move in rulial space—and end up with a different description, and different effective laws for the universe.</p>
<p>But how difficult is motion in rulial space? It could be that some impressive future technology would allow us to “move far enough” to end up with significantly different laws of physics. But it seems more likely that we’d be able to move only comparatively little—and never be able to “escape the box” of things like computational boundedness, and coherence of the observer.</p>
<p>Of course, even changing a little might lead us to different detailed laws of physics—say attributing a different mass to the electron, or a different value of the electromagnetic coupling constant α. But actually, even in traditional physics, this is <a href='https://www.wolframscience.com/nks/notes-9-14--particle-masses/'>already something that happens</a>. When viewed at different energy scales—or in a sense with different technology—these quantities have different effective values (as characterized by the renormalization group). </p>
<p>At first it might seem a little strange to say that as our knowledge or technology change, the laws of physics change. But the whole point is that it’s really our perceived laws of physics. At the level of the raw ruliad there aren’t definite laws of physics. It’s only when we “sample our slice” of the ruliad that we perceive definite laws.</p>
<p>What does all this mean operationally for the search for a fundamental theory of physics? At some level we could just point to the ruliad and declare victory. But this certainly wouldn’t give us specific predictions about the particulars of our perceived universe. To get that we have to go further—and we have to be able to say something about what “slice of the ruliad” we’re dealing with. But the good news is that we don’t seem to have to make many assumptions about ourselves as observers to be able to identify many physical laws that observers like us should perceive. </p>
<p>So can we ever expect to nail down a single, specific rule for the universe, say one a particular observer would attribute to it? Given our characteristics as observers, the answer is undoubtedly no. We’re simply not that small in rulial space. But we’re not that big, either. And, importantly, we’re small enough that we can expect to “do science” and consider the universe to “behave in definite ways”. But just as in physical space we’re vastly larger than the scale associated with the atoms of space, so similarly we’re also undoubtedly vastly larger in rulial space than the individual components of the ruliad—so we can’t expect our experience to all be “concentrated in one thread” of the ruliad, following one particular rule. </p>
<p>As we discussed above, by doing experiments we can use scientific inference to attempt to localize ourselves in rulial space. But we won’t be able to do enough to say “from our point of view, the universe is operating according to this one specific rule, and not another”. Instead, there’ll be a whole collection of rules that are “good enough”, in the sense that they’ll be sufficient to predict the results of experiments we can realistically do.</p>
<p>People have often imagined that, try as we might, we’d never be able to “get to the bottom of physics” and find a specific rule for our universe. And in a sense our inability to localize ourselves in rulial space supports this intuition. But what our Physics Project seems to rather dramatically suggest is that we can “get close enough” in rulial space to have vast predictive power about how our universe must work, or at least how observers like us must perceive it to work. </p>
<h2 id='alien-views-of-the-ruliad'>Alien Views of the Ruliad</h2>
<p>We’ve discussed how “observers like us” will necessarily “parse the ruliad” in ways that make us perceive the universe to follow the laws of physics as we know them. But how different could things get? We have a definite sense of what constitutes a “reasonable observer” based on our 21st-century human experience—and in particular our biology, our technology and our ways of thinking. </p>
<p>But what other kinds of observers can we imagine? What about, for example, <a href='https://www.wolframscience.com/nks/p827--intelligence-in-the-universe/'>animals other than humans</a>—in particular say ones whose sensory experience emphasizes olfaction or echolocation or fluid motion? We can think of such animals as operating in a different rulial reference frame or at a different place in rulial space. But how far away in rulial space will they be? How similar or not will their “world views” (and perceived laws of physics) be to ours? It’s hard to know. Presumably our basic assertions about computational boundedness and coherence still apply. But just how the specifics of something like sequentialization in time play out, say, for an ant colony, seems quite unclear.</p>
<p>Maybe one day we’ll be able to systematically “think like other animals”. But as of now we haven’t been able to “travel that far” in rulial space. We’ve quite thoroughly explored physical space, say on the surface of our planet, but we haven’t explored very far at all in rulial space. We don’t have a way to translate our thinking into some kind of “thinking differently”—and we don’t, for example, <a href='https://writings.stephenwolfram.com/2018/01/showing-off-to-the-universe-beacons-for-the-afterlife-of-our-civilization/'>have a common language to get there</a>.</p>
<p>There’s often an assumption (a kind of “human exceptionalism”) that if it wasn’t for details of the human experience—like brains and words—then we’d necessarily be dealing with something fundamentally simpler, that could not, for example, show features that we might identify as intelligence. But the <a href='https://www.wolframscience.com/nks/p822--intelligence-in-the-universe/'>Principle of Computational Equivalence tells us this isn’t correct</a>. Because it says that there’s a certain maximal computational sophistication that’s achieved not just by us humans but also by a vast range of other systems. The restrictions of what we’ve chosen to study (in science and elsewhere) have often made us miss this, but in fact computational sophistication—and the direct generalization of our notion of intelligence that’s associated with it—seems quite ubiquitous across many different kinds of systems.</p>
<p>So can those other kinds of systems act as “observers like us”? To do so, they need not just computational sophistication, but also a certain alignment with the features we have that lead to our coherent thread of “conscious experience”. And even given that, to actually “connect with” such systems, we need to be able to reach far enough in rulial space to sufficiently make a translation. </p>
<p>Imagine the <a href='https://www.wolframscience.com/nks/p822--intelligence-in-the-universe/'>weather (sometimes said to “have a mind of its own”)</a>. It’s got plenty of computational sophistication. But is there any sense in which it sequentializes time like we do? Or can one only think of all those different parts of our atmosphere “running in their own time”? To know things like this, we effectively have to have a way to “translate” from the operation of the weather to our (current) way of thinking.</p>
<p>And in some sense we can consider the whole enterprise of natural science as being an effort to find a method of translation—or a <a href='https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#the-challenge-of-language-design-for-the-universe'>common language—between nature and our way of thinking</a>. </p>
<p>We as observers in effect trace out particular trajectories in rulial space; the challenge of natural science is to “reach out” in rulial space and “pull in” more of the ruliad; to be able to define a way to translate more parts of the ruliad to our processes of thinking. Every time we do an experiment, we can think of this as representing a moment of “connection” or “communication” between us and some aspect of nature. The experiment in effect defines a small piece of “common history” between us and nature—which helps “knit together” the parts of rulial space associated with us and with nature. </p>
<p>One of the great mysteries of science has been why—in the vastness of physical space—we’ve never detected something we identify as “alien intelligence”, or an “alien civilization”. We might have thought that it was because we humans have either achieved a unique pinnacle of intelligence or computational ability—or have fundamentally not gotten far enough. But the Principle of Computational Equivalence explodes the idea of this kind of cosmic computational pecking order.</p>
<p>So what could actually be going on? Thinking in terms of the ruliad suggests an answer. Our radio telescopes might be able to detect signals from far away in physical space. But our putative aliens might not only live far away in physical space, but also in rulial space.</p>
<p>Put another way, the “alien civilization” might be sampling aspects of the ruliad—and in effect the universe—that are utterly different from those we’re used to. That different sampling might be happening right down at the level of atoms of space, or it might be that the rulial distance from us to the aliens is small enough that there’s enough “shared description language” that the alien civilization might rise to the level of seeming like some kind of <a href='https://www.wolframscience.com/nks/p836--intelligence-in-the-universe/'>“noise” relative to our view of “what’s important in the universe”</a>.</p>
<p>We might wonder how far apart what we could consider “alien civilizations” would be in physical space. But what we now realize is that we also have to consider <a href='https://writings.stephenwolfram.com/2018/01/showing-off-to-the-universe-beacons-for-the-afterlife-of-our-civilization/#the-space-of-all-possible-civilizations'>how far apart they might be in rulial space</a>. And just like in exploring physical space we can imagine building better spacecraft or better telescopes, so also we can imagine building better ways to reach across rulial space. </p>
<p>We’re so used to physical space that it seems to us very concrete to reach across it. Of course, in our Physics Project, things like motion in physical space end up—like everything else—being pure computational processes. And from this point of view, reaching across rulial space is ultimately no more abstract—even though today we would describe it in terms of “doing (abstract) computations” rather than “moving in space”.</p>
<p>Relative to our own physical size, the universe already seems like a vast place. But the full ruliad is even incredibly more vast. And we are likely much tinier in rulial space relative to the whole universe than we are in physical space. From the Principle of Computational Equivalence we can expect that there’s ultimately no lack of raw computational sophistication out there—but thinking in terms of the ruliad, the issue is whether what’s going on is close enough to us in rulial space that we can <a href='https://writings.stephenwolfram.com/2018/01/showing-off-to-the-universe-beacons-for-the-afterlife-of-our-civilization/'>successfully see it as an “alien civilization”</a>.</p>
<p>One test of rulial distance might be to ask whether our putative aliens perceive the same laws of physics for the universe that we do. We know that at least the general forms of those laws depend only on what seem to us rather loose conditions. But to get good alignment presumably requires at the very least that we and the aliens are somehow “comparable in size” not only in physical space (and branchial space), but also in rulial space. </p>
<p>It’s humbling how difficult it is to imagine the universe from the point of view of an alien at a different place in rulial space. But for example if the alien is big compared to us in rulial space, we can say that they’ll inevitably have a version of science that seems to us much “vaguer” than ours. Because if they maintain a coherent thread of experience, they’ll have to conflate more distant paths in rulial space, on which the universe will do things that are “more different” than what we’re used to. (And, yes, there should be rulial analogs of quantum phenomena, associated for example with conflated paths that diverge far in rulial space.)</p>
<p>What would it mean operationally for there to be an alien civilization perhaps nearby in physical space but at a distance in rulial space? Basically the alien civilization will be “operating” in features of the universe that our parsing of the universe just doesn’t pick up. As a simple analogy, our view of, for example, a box of gas might be that it’s something with a certain temperature and pressure. But a different “parsing” of that system might identify a whole world of detailed motions of molecules that with respect to that parsing can be viewed as a vast “alien civilization”. Of course, the situation is much more extreme when it comes to the whole ruliad, and all the paths of history and configurations of atoms of space that it represents.</p>
<p>Relative to the whole ruliad, our civilization and our experience have carved out an extremely tiny piece. And what we’re thinking of as “alien civilizations” might also have carved out their own tiny pieces. And while we’re all “living in the same ruliad”, we might no more be able to detect each other or communicate (and likely very much less) than we can across vast distances in physical space. </p>
<p>What of the future? The future of our civilization might well be a story of mapping out more of rulial space. If we continue to invent new technology, explore new ideas and generally broaden our ways of thinking and perceiving, we will gradually—albeit in tiny steps—map out more of rulial space. How far can we get? The ultimate limit is determined by the maximum rulial speed. But if we expect to maintain our character as “observers like us”, we’ll no doubt be limited to something much less.</p>
<p>Among other issues, moving in rulial space involves doing computation. (The ultimate scale is set by the “processing power” of the universe—which defines the maximum rulial speed.) But “density of computation” effectively corresponds to a generalized version of mass—and is for example a source of “generalized gravity”. And it could be that to “move any significant distance” in rulial space, we’d have to “experience enough generalized gravity” that we could never maintain things like the kind of coherence we need to be an “observer like us”.</p>
<p>Put another way: yes, it might in principle be possible to “reach out in rulial space” and “contact the rulial aliens”. But it might be that doing so would require us to be so different from the way we currently are that we wouldn’t recognize anything like consciousness or anything that really makes us “identifiably us”. And if this is so, we are in a sense limited to experiencing the ruliad “on our own” from our particular place in rulial space, forever isolated from “alien civilizations” elsewhere in rulial space.</p>
<h2 id='conceptual-implications-of-the-ruliad'>Conceptual Implications of the Ruliad</h2>
<p>What does the concept of the ruliad mean for the fundamental way we think about things like science? The typical conception of “what science does” is that it’s about us figuring out—as “objectively” as we can—how the world happens to be. But the concept of the ruliad in a sense turns this on its head. </p>
<p>Because it says that at some ultimate level, everything is a matter of abstract necessity. And it’s just our “parsing” of it that defines the subject matter of what we call science. We might have thought that the science of the universe was just something that’s “out there”. But what we’re realizing is that instead in some fundamental sense, it’s all “on us”.</p>
<p>But does that mean that there’s no “objective truth”, and nothing that can robustly be said about the universe without “passing it through us”? Well, no. Because what we’ve discovered through our Physics Project is that actually there are quite global things that can (“objectively”) be said about our universe and the laws it follows, as perceived by observers like us. </p>
<p>We don’t have to know in detail about us humans and the particular ways we perceive things. All we need are some general features—particularly that we are computationally bounded, and that we have a certain persistence and coherence. And this is all it takes to deduce some quite specific statements about how our universe operates, at least as we perceive it.</p>
<p>So in a sense what this means is that there is a large “zone of objectivity”; a large set of choices for how we could be that will still lead us to the same “objective truth” about our universe. But if we go far enough away in our mechanism for “parsing the ruliad”, this will no longer be the case. From our current vantage point, we’d no doubt then be hard-pressed to recognize how we’re “doing the parsing”, but the results we’d get would no longer give us the same laws of physics or general perception of the universe that we’re used to.</p>
<p>This view of things has all sorts of implications for various long-discussed philosophical issues. But it’s also a view that has precise scientific consequences. And these don’t just relate to physics. Because the ruliad is really a general object that represents the entangled behavior of all possible abstract rules. When we think of ourselves as observers embedded within this object, it means that <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/'>for us things are actualized</a>, and we have what we call physics. But we can also imagine sampling the ruliad in different ways. </p>
<p>Some of those ways <a href='https://writings.stephenwolfram.com/2021/04/why-does-the-universe-exist-some-perspectives-from-our-physics-project/#the-relation-to-mathematics'>correspond to mathematics (or metamathematics)</a>. Some correspond to theoretical computer science. The ruliad is the single object that underlies all of them. And which of them we’re talking about just depends on how we imagine we’re sampling or parsing the ruliad, and how we’re describing what we’re observing.</p>
<p>With this degree of generality and universality, it’s inevitable that the ruliad must be a complicated object; in fact, in a sense it must encapsulate all possible achievable complexity. But what’s important is that we now have a definite concept of the ruliad, as something we can study and analyze.</p>
<p>It’s not simple to do this. The ruliad is at some level an object of great and perhaps supremely elegant abstract regularity. But for us to get any concrete handle on it and its structure, we need to break it down into some kind of “digestible slices” which inevitably lose much of its abstract regularity. </p>
<p>And we’re just at the beginning of seeing how best to “unpack” and “pick through” the ruliad. With explicit computations, we can only chip away at the <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/' target=_blank rel=noopener>very simplest approximations to the ruliad</a>. In a sense it’s a tribute to the naturalness and inevitability of the ruliad that it’s so closely related to some of the most advanced abstract mathematical methods we know so far. But again, even with these methods we’re barely scratching the surface of the ruliad and what it contains.</p>
<p>The theoretical exploration of the ruliad will be a long and difficult journey. But the incredible generality and universality of the ruliad means that every piece of progress is likely to have exceptionally powerful consequences. In some sense the exploration of the ruliad can be seen as the encapsulated expression of everything it means to do theoretical investigation: a kind of ultimately abstract limit of theoretical science and more.</p>
<p>For me, the ruliad in a sense builds on a tower of ideas, that include the computational paradigm in general, the exploration of the computational universe of simple programs, the Principle of Computational Equivalence, our Physics Project and the notion of multicomputation. But even with all of these it’s still a significant further jump in abstraction. And one whose consequences will take considerable time to unfold.</p>
<p>But for now it’s exciting to have at least been able to define this thing I call the ruliad, and to start seeing some of its unprecedentedly broad and deep implications. </p>
<hr>
<h2 id='appendix-the-case-of-the-multiplicad'>Appendix: The Case of the &ldquo;Multiplicad&rdquo;</h2>
<p>As a very simple example of something like the ruliad, we can consider what we might call the “multiplicad”: a rulial <a href='https://www.wolframphysics.org/bulletins/2021/10/multicomputation-with-numbers-the-case-of-simple-multiway-systems' target=_blank rel=noopener>multiway system based on integers</a>, in which the rules simply multiply by successive integers: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg47.png" alt='' title='' width='165' height='21' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg47_copy.txt">
					<span class='close' id='47_out'>&amp;#10005</span></p>
<pre class='text' id='47_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>(Note that this kind of pure multiplication is presumably not computation universal, so the limiting object here will not be a coordinatization of the actual full ruliad.)</p>
<p>Just like with the full ruliad, there are many different “directions” in which to build up the multiplicad. We could allow as many multipliers and steps as we want, but limit the total size of numbers generated, here say to 30:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg48.png" alt='' title='' width='577' height='301' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg48_copy.txt">
					<span class='close' id='48_out'>&amp;#10005</span></p>
<pre class='text' id='48_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>As an alternative, we can limit the number of multipliers <em>s</em>, say to <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg49.png" width= '35' height='19' align='absmiddle'></span>. Then the multiplicad would build up like this:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg50.png" alt='' title='' width='561' height='283' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg50_copy.txt">
					<span class='close' id='50_out'>&amp;#10005</span></p>
<pre class='text' id='50_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In the pictures we’ve drawn so far, we’re effectively always deduplicating different occurrences of the same integer. So, for example, the integer 12 can be generated as 1&nbsp;×&nbsp;3&nbsp;×&nbsp;4 or 1&nbsp;×&nbsp;6&nbsp;×&nbsp;2 or 1&nbsp;×&nbsp;3&nbsp;×&nbsp;2&nbsp;×&nbsp;2, etc. And in principle we could show each of these “different 12s” separately. But in our <a href='https://writings.stephenwolfram.com/2021/09/even-beyond-physics-introducing-multicomputation-as-a-fourth-general-paradigm-for-theoretical-science/#the-formal-structure-of-multicomputation'>deduplicated graph</a>, only a single 12 appears—with the different possible decompositions of 12 being reflected in the presence of multiple paths that lead to the 12.</p>
<p>Sometimes the structure we get is richer—if much bigger—when we don’t immediately do deduplication. For example, if we allow any number of multipliers (i.e. take <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg51.png" width= '41' height='19' align='absmiddle'></span>) then after just 1 step we will get all integers—and if we do deduplication, then this will be the end of our graph, because we “already have all the integers”. But if we don’t do deduplication, we’ll get a slightly more complicated picture, that begins like this:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg52.png" alt='' title='' width='580' height='134' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg52_copy.txt">
					<span class='close' id='52_out'>&amp;#10005</span></p>
<pre class='text' id='52_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The “topological” structure of this graph is now straightforward, but its “labeling” with numbers is less so—and if we ask, for example, where a particular number appears after <em>t</em> steps, this can be more complicated. </p>
<p>Imagine that we are looking only at the subtrees associated with up to <em>s</em> multipliers at the first step—or, equivalently, that we are looking at the rulial multiway system “truncated” with only <em>s</em> rules. Which numbers will appear after <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg53.png" width= '34' height='19' align='absmiddle'></span> steps? The answer is that it will be precisely those numbers that show up in an <em>s</em> × <em>s</em> multiplication table where we start from <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg54.png" width= '37' height='19' align='absmiddle'></span>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg55.png" alt='' title='' width='494' height='211' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg55_copy.txt">
					<span class='close' id='55_out'>&amp;#10005</span></p>
<pre class='text' id='55_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Clearly no primes appear here, but some numbers can appear multiple times (e.g. 12 appears 4 times). In general, the number of times that the number <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg56.png" width= '35' height='19' align='absmiddle'></span> will show up is the number of proper divisors it has, or <tt><a href='http://reference.wolfram.com/language/ref/DivisorSigma.html'>DivisorSigma</a></tt>[0, <em>n</em>]–2: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg57.png" alt='' title='' width='567' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg57_copy.txt">
					<span class='close' id='57_out'>&amp;#10005</span></p>
<pre class='text' id='57_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg58.png" alt='' title='' width='575' height='128' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg58_copy.txt">
					<span class='close' id='58_out'>&amp;#10005</span></p>
<pre class='text' id='58_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can continue this, to ask how many times a given number <em>n</em> will occur at a particular step <em>t</em>: </p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg59.png" alt='' title='' width='567' height='124' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg59_copy.txt">
					<span class='close' id='59_out'>&amp;#10005</span></p>
<pre class='text' id='59_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg60.png" alt='' title='' width='567' height='341' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg60_copy.txt">
					<span class='close' id='60_out'>&amp;#10005</span></p>
<pre class='text' id='60_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg61.png" alt='' title='' width='562' height='126' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg61_copy.txt">
					<span class='close' id='61_out'>&amp;#10005</span></p>
<pre class='text' id='61_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can think of these results as being determined by the number of times that <em>n</em> appears in an <em>s</em>&nbsp;&times;&nbsp;<em>s</em>&nbsp;&times;&nbsp;<em>s</em>&#8230; (<em>t</em> times) multiplication array. Alternatively, to know the results for a given number <em>n</em>, we can look at all the ways <em>n</em> can be decomposed into factors. For <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg62.png" width= '44' height='19' align='absmiddle'></span>, for example, we would have:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg63.png" alt='' title='' width='376' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg63_copy.txt">
					<span class='close' id='63_out'>&amp;#10005</span></p>
<pre class='text' id='63_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And from this we can deduce that 12 appears once at <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg64.png" width= '32' height='19' align='absmiddle'></span> (i.e. with 1 factor), 4 times at <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg65.png" width= '34' height='19' align='absmiddle'></span> (i.e. with 2 factors) and 3 times at <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg66.png" width= '34' height='19' align='absmiddle'></span> (i.e. with 3 factors). </p>
<p>The full multiplicad is formed by taking the limits <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg67.png" width= '44' height='19' align='absmiddle'></span> and <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg68.png" width= '43' height='19' align='absmiddle'></span> (as well as what is essentially the limit <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg69.png" width= '46' height='19' align='absmiddle'></span> for an infinite set of possible initial conditions). As we can see, our “finite perception” of the multiplicad will be different depending on how we sample it in <em>s</em> and <em>t</em>. </p>
<p>As an example, let’s consider what happens for given <em>s</em> as a function of <em>t</em>. For <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg70.png" width= '35' height='19' align='absmiddle'></span>, we simply have powers of 2:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg71.png" alt='' title='' width='551' height='24' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg71_copy.txt">
					<span class='close' id='71_out'>&amp;#10005</span></p>
<pre class='text' id='71_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg72.png" width= '35' height='19' align='absmiddle'></span>, where can multiply by both 2 and 3, we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg73.png" alt='' title='' width='551' height='283' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg73_copy.txt">
					<span class='close' id='73_out'>&amp;#10005</span></p>
<pre class='text' id='73_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In studying multiway systems, it is often of interest to ask about the <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/typical-multiway-graph-structures/' target=_blank rel=noopener>growth rates of the number of states</a> reached over the course of <em>t</em> steps (i.e. the growth rates of volumes of geodesic balls). In the case <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg74.png" width= '35' height='19' align='absmiddle'></span>, the number of states reached by step <em>t</em> is just <em>t</em>. For <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg75.png" width= '35' height='19' align='absmiddle'></span>, it’s the triangular numbers <em>t </em>(<em>t –</em> 1)/2:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg76.png" alt='' title='' width='477' height='19' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg76_copy.txt">
					<span class='close' id='76_out'>&amp;#10005</span></p>
<pre class='text' id='76_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Here are some results for larger <em>s</em>:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg77.png" alt='' title='' width='559' height='201' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg77_copy.txt">
					<span class='close' id='77_out'>&amp;#10005</span></p>
<pre class='text' id='77_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>Each of these sequences is generated by a linear recurrence relation with a kernel given by a sequence of signed binomial coefficients. The values for successive <em>t</em> can be represented by polynomials:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg78.png" alt='' title='' width='566' height='259' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg78_copy.txt">
					<span class='close' id='78_out'>&amp;#10005</span></p>
<pre class='text' id='78_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>The leading term in the growth of number of states is then determined by the orders of these polynomials, which turn out to be just <tt><a href='http://reference.wolfram.com/language/ref/PrimePi.html'>PrimePi</a></tt>[<em>s</em>]:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg79.png" alt='' title='' width='567' height='44' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg79_copy.txt">
					<span class='close' id='79_out'>&amp;#10005</span></p>
<pre class='text' id='79_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg80.png" alt='' title='' width='567' height='126' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg80_copy.txt">
					<span class='close' id='80_out'>&amp;#10005</span></p>
<pre class='text' id='80_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For the case <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg81.png" width= '35' height='19' align='absmiddle'></span>, we saw above that the multiway graph essentially forms a simple 2D grid. For larger <em>s</em>, the graph becomes more complicated, though it still approximates a grid—but in dimension <tt><a href='http://reference.wolfram.com/language/ref/PrimePi.html'>PrimePi</a></tt>[<em>s</em>]. (The reason <tt><a href='http://reference.wolfram.com/language/ref/PrimePi.html'>PrimePi</a></tt>[<em>s</em>] appears is that in a sense the combining of primes less than <em>s</em> are the largest “drivers” of structure in the multiway graph.)</p>
<p>In our general analysis of multiway graphs, it is common to consider <a href='https://www.wolframphysics.org/technical-introduction/the-updating-process-for-string-substitution-systems/the-concept-of-branchial-graphs/' target=_blank rel=noopener>branchial graphs</a>—or for a rulial multiway system what we can call <a href='https://www.wolframphysics.org/bulletins/2020/06/exploring-rulial-space-the-case-of-turing-machines/#rulial-graphs' target=_blank rel=noopener>rulial graphs</a>—obtained by looking at a slice of the multiway graph, effectively for a given <em>t</em>, and asking what states are connected by having a common ancestor. The results for <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg82.png" width= '35' height='19' align='absmiddle'></span> are rather trivial (here shown for <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg83.png" width= '32' height='19' align='absmiddle'></span>, 2, 3):</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg84.png" alt='' title='' width='567' height='23' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg84_copy.txt">
					<span class='close' id='84_out'>&amp;#10005</span></p>
<pre class='text' id='84_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg85.png" width= '35' height='19' align='absmiddle'></span> we get:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg86.png" alt='' title='' width='439' height='222' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg86_copy.txt">
					<span class='close' id='86_out'>&amp;#10005</span></p>
<pre class='text' id='86_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And for <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg87.png" width= '35' height='19' align='absmiddle'></span> we have:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg88.png" alt='' title='' width='565' height='185' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg88_copy.txt">
					<span class='close' id='88_out'>&amp;#10005</span></p>
<pre class='text' id='88_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>In a sense these pictures show how numbers in the multiplicad can be “laid out in rulial space”. For <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg89.png" width= '35' height='19' align='absmiddle'></span>, the “large-<em>t</em> graph” has a very linear form</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg90.png" alt='' title='' width='579' height='61' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg90_copy.txt">
					<span class='close' id='90_out'>&amp;#10005</span></p>
<pre class='text' id='90_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>and the numbers that appear “from left to right” are arranged more or less in numerical order:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg91.png" alt='' title='' width='529' height='101' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg91_copy.txt">
					<span class='close' id='91_out'>&amp;#10005</span></p>
<pre class='text' id='91_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>For <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg92.png" width= '35' height='19' align='absmiddle'></span>, the result is a 2D-like structure:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg93.png" alt='' title='' width='483' height='268' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg93_copy.txt">
					<span class='close' id='93_out'>&amp;#10005</span></p>
<pre class='text' id='93_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>And again the numbers that appear are roughly arranged in a kind of “numerical sequence”:</p>
<table class='InCell'>
<tbody>
<tr>
<td colspan='1' rowspan='1' class='Input'>
<div>
					<img class='' src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg94.png" alt='' title='' width='503' height='303' />
				</div>
<div class='IFL' data-src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg94_copy.txt">
					<span class='close' id='94_out'>&amp;#10005</span></p>
<pre class='text' id='94_out_text'></pre>
</p></div>
</td>
</tr>
</tbody>
</table>
<p>We can then think of this as suggesting that the multiplicad “generates a rulial space” that can be approximately coordinatized purely by the values of the numbers that appear in it. How all this works in the limit <span class='InlineFormula'><img src="https://content.wolfram.com/uploads/sites/43/2021/11/1110swimg95.png" width= '44' height='19' align='absmiddle'></span> is not clear, though somehow the “1D” sequence of numerical values presumably “snakes through” <tt><a href='http://reference.wolfram.com/language/ref/PrimePi.html'>PrimePi</a></tt>[<em>s</em>]-dimensional space as some kind of approximation to a space-filling curve. </p>
<p>It should be noted that we’ve only considered one particular way of sampling the rulial multiway graph as a function of <em>t</em>. In general there are many different possible foliations that could be used, all of them giving us in effect a different view of the multiplicad, from a different “reference frame”.</p>
<p>As mentioned at the beginning, the multiplicad is presumably not on its own capable of giving us the full ruliad. But if we change the underlying rules—probably even just <a href='https://www.wolframphysics.org/bulletins/2021/10/multicomputation-with-numbers-the-case-of-simple-multiway-systems/#multiplication-and-addition' target=_blank rel=noopener>inserting addition as well as multiplication</a>—we’ll potentially get a system that is <a href='https://www.wolframscience.com/nks/p673--emulating-cellular-automata-with-other-systems/'>capable of universal computation</a>, and which can therefore generate the full ruliad. Needless to say, the particular representation of the ruliad obtained by the kind of “numerical processes” that we’ve used here may be utterly different from any representation that we would recognize from our perception of the physical universe.</p>
<h2 id='thanks-and-note' style='font-size:1.2rem'>Thanks &#038; Note</h2>
<p style='font-size:90%'>Thanks for discussions of various aspects of the ruliad to Xerxes Arsiwalla, James Boyd, Elise Cawley, Hatem Elshatlawy, Jonathan Gorard and Nik Murzin. Thanks also to Ed Pegg and Joseph Stocke for input about the multiplicad. A <a href='https://arxiv.org/pdf/2111.03460.pdf' target=_blank rel=noopener>new paper by Xerxes Arsiwalla and Jonathan Gorard</a> discusses in a more technical way some ideas and results related to the ruliad.</p>
]]></content:encoded>
			<wfw:commentRss>https://writings.stephenwolfram.com/2021/11/the-concept-of-the-ruliad/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>
		</item>
	</channel>
</rss>