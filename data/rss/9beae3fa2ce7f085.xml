<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <atom:link href="http://dustintran.com/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://dustintran.com/blog/</link>
    <description></description>
    <pubDate>Sat, 10 Feb 2018 14:31:22 -0800</pubDate>
    
      <item>
        <title>I joined Google</title>
        <link>http://dustintran.com/blog/i-joined-google</link>
        <guid isPermaLink="true">http://dustintran.com/blog/i-joined-google</guid>
        <description>&lt;p&gt;As a personal news update, starting today, I am at
&lt;a href=&quot;https://research.google.com&quot;&gt;Google&lt;/a&gt; full-time as a Research Scientist. I’ll
be based in the San Francisco and Mountain View offices.&lt;/p&gt;

&lt;p&gt;My job search was painless and quick. I applied selectively, on the hope that
it didn’t detract from working on ICML papers and Edward. Well, it did. But
fortunately I’ve still had time to work on them.&lt;/p&gt;

&lt;p&gt;Now to finish that pesky Ph.D…&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Feb 2018 00:00:00 -0800</pubDate>
      </item>
    
      <item>
        <title>At NIPS 2017</title>
        <link>http://dustintran.com/blog/at-nips-2017</link>
        <guid isPermaLink="true">http://dustintran.com/blog/at-nips-2017</guid>
        <description>&lt;p&gt;I’m at &lt;a href=&quot;https://nips.cc/Conferences/2017/&quot;&gt;NIPS 2017&lt;/a&gt;.
Please catch me or e-mail me if you’d like to chat about research!
&lt;!-- Especially if it's about probabilistic programming, variational --&gt;
&lt;!-- inference, or recent work.                                      --&gt;
I can also describe my experience in
the Bayesflow team at Google—TensorFlow meets Bayes which is led by &lt;a href=&quot;https://research.google.com/pubs/105197.html&quot;&gt;Rif
Saurous&lt;/a&gt; and partially
&lt;a href=&quot;https://research.google.com/pubs/KevinMurphy.html&quot;&gt;Kevin Murphy&lt;/a&gt;—as
well as &lt;a href=&quot;http://www.cs.columbia.edu/~blei&quot;&gt;David Blei’s group&lt;/a&gt; at
Columbia.  Both are always looking for excellent researchers as
postdocs, research scientists, and interns.&lt;/p&gt;

&lt;p&gt;As advertisement, we’re fortunate to have two posters at the main conference:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adji B. Dieng, Dustin Tran, Rajesh Ranganath, John Paisley, David
M. Blei (2017).
&lt;a href=&quot;http://papers.nips.cc/paper/6866-variational-inference-via-chi-upper-bound-minimization&quot;&gt;Variational inference via &lt;script type=&quot;math/tex&quot;&gt;\chi&lt;/script&gt; -upper bound
minimization.&lt;/a&gt;
 &lt;em&gt;Monday, 06:30 – 10:30 PM @ Pacific Ballroom #186&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Dustin Tran, Rajesh Ranganath, David M. Blei (2017).
 &lt;a href=&quot;http://papers.nips.cc/paper/7136-hierarchical-implicit-models-and-likelihood-free-variational-inference&quot;&gt;Hierarchical implicit models and likelihood-free variational
 inference.&lt;/a&gt;
 &lt;em&gt;Wednesday, 06:30 – 10:30 PM @ Pacific Ballroom #179&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At workshops, I’ll also be presenting three talks and two posters:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Title: &lt;em&gt;Implicit causal models for genome-wide association studies&lt;/em&gt;&lt;br /&gt;   
Friday, 11:40–12:00 @ Room 104 C. &lt;a href=&quot;https://dl4physicalsciences.github.io&quot;&gt;NIPS Workshop: Deep Learning for Physical Sciences&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Title: &lt;em&gt;Why Aren’t You Using Probabilistic Programming?&lt;/em&gt;&lt;br /&gt;   
Saturday, 8:05–8:30 @ Hall C. &lt;a href=&quot;http://bayesiandeeplearning.org&quot;&gt;NIPS Workshop: Bayesian Deep Learning&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Title: &lt;em&gt;Lessons learned from designing Edward&lt;/em&gt;&lt;br /&gt;   
Saturday, 8:05–8:30 @ Room 202. &lt;a href=&quot;https://mltrain.cc/events/nips-highlights-learn-how-to-code-a-paper-with-state-of-the-art-frameworks/&quot;&gt;NIPS Workshop: NIPS Highlights, Learn How to Code a Paper&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Poster: &lt;em&gt;Implicit causal models for genome-wide association studies&lt;/em&gt; [&lt;a href=&quot;https://dl4physicalsciences.github.io/files/nips_dlps_2017_14.pdf&quot;&gt;pdf&lt;/a&gt;] [&lt;a href=&quot;https://arxiv.org/abs/1710.10742&quot;&gt;arxiv&lt;/a&gt;] &lt;br /&gt;   
Dustin Tran, David M. Blei (2017).&lt;br /&gt;   
Friday @ Room 104 C. &lt;a href=&quot;https://dl4physicalsciences.github.io&quot;&gt;NIPS Workshop: Deep Learning for Physical Sciences&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Poster: &lt;em&gt;Feature-matching auto-encoders&lt;/em&gt;  [&lt;a href=&quot;http://bayesiandeeplearning.org/2017/papers/58.pdf&quot;&gt;pdf&lt;/a&gt;]&lt;br /&gt;   
Dustin Tran, Yura Burda, Ilya Sutskever (2017).&lt;br /&gt;   
Saturday @ Hall C. &lt;a href=&quot;http://bayesiandeeplearning.org&quot;&gt;NIPS Workshop: Bayesian Deep Learning&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;a href=&quot;http://approximateinference.org&quot;&gt;NIPS approximate inference workshop&lt;/a&gt; will be quite a bit of fun this Friday @ Seaside Ballroom. Join us!&lt;/p&gt;

&lt;p&gt;Finally, if you’d like to talk about current research, I’m &lt;em&gt;very&lt;/em&gt;
excited to talk about the workshop papers and our recent probabilistic
programming work: &lt;a href=&quot;https://arxiv.org/abs/1711.10604&quot;&gt;TensorFlow Distributions&lt;/a&gt;, and a coming book chapter on deep probabilistic programming with Vikash Mansinghka.&lt;/p&gt;

&lt;!-- + Joshua V. Dillon, Ian Langmore, Dustin Tran, Eugene Brevdo, Srinivas Vasudevan, Dave Moore, Brian Patton, Alex Alemi, Matt Hoffman, Rif A. Saurous (2017). --&gt;
&lt;!--   _TensorFlow Distributions_.                                                                                                                                --&gt;
&lt;!--   \[[arxiv](https://arxiv.org/abs/1711.10604)\]                                                                                                              --&gt;

&lt;!-- Vikash Mansinghka and I have been writing a book chapter on     --&gt;
&lt;!-- probabilistic programming for deep generative models. Expect it --&gt;
&lt;!-- out within coming weeks.                                        --&gt;

&lt;p&gt;See you at the conference.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Dec 2017 00:00:00 -0800</pubDate>
      </item>
    
      <item>
        <title>On Pyro - Deep Probabilistic Programming on PyTorch</title>
        <link>http://dustintran.com/blog/on-pyro-deep-probabilistic-programming-on-pytorch</link>
        <guid isPermaLink="true">http://dustintran.com/blog/on-pyro-deep-probabilistic-programming-on-pytorch</guid>
        <description>&lt;p&gt;Pyro, a “deep universal probabilistic programming language” on
PyTorch, was announced today (see &lt;a href=&quot;https://eng.uber.com/pyro/&quot;&gt;blog post&lt;/a&gt;; &lt;a href=&quot;http://pyro.ai&quot;&gt;homepage&lt;/a&gt;).
People were curious of my thoughts. I shared a short note on
&lt;a href=&quot;https://www.reddit.com/r/MachineLearning/comments/7ak6x9/n_uber_ai_labs_open_sources_pyro_a_deep/&quot;&gt;reddit&lt;/a&gt;,
copied and pasted below:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is great work coming from the Uber AI labs, especially by Eli Bingham and Noah Goodman for leading this effort among an excellent group. I’ve met with them in-person on numerous occasions to discuss the overall design and implementation details. Pyro touches on interesting aspects in PPL research: dynamic computational graphs, deep generative models, and programmable inference.&lt;/p&gt;

  &lt;p&gt;It’s yet to see where Pyro will come to fruition. Personally, inheriting from my advisors David Blei and Andrew Gelman, I like to think from a bottom-up view where applications ground design principles; and they end up determining the direction and success of a PPL. For Stan, it’s hierarchical GLMs fueled with HMC across a variety of social and political sciences. For Edward, it’s deep latent variable models fueled with black box VI across text, images, and spatial data. I’d like to see where Pyro not only makes dynamic probabilistic programming easier, but (1) what applications it enables that was not possible before; and (2) what new PPL innovations come out. Attend, Infer, Repeat (&lt;a href=&quot;https://github.com/uber/pyro/blob/dev/tutorial/source/air.ipynb&quot;&gt;Pyro notebook&lt;/a&gt;) is a great example in this direction.&lt;/p&gt;

  &lt;p&gt;On speed: Pyro might be faster than Edward on CPUs depending on the intensity of graph-building in PyTorch vs TensorFlow. I’m confident Edward will dominate on GPUs (certainly TPUs) when data or model parallelism is the bottleneck. It warrants benchmarks, including Pyro vs native PyTorch. Edward benefits from speed being just as fast as native TF because the underlying computational graph is the same. Dynamic PPLs trade off that benefit.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 03 Nov 2017 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>NIPS 2017 Workshop on Approximate Inference</title>
        <link>http://dustintran.com/blog/nips-2017-workshop-on-approximate-inference</link>
        <guid isPermaLink="true">http://dustintran.com/blog/nips-2017-workshop-on-approximate-inference</guid>
        <description>&lt;p&gt;This year we’re organizing the &lt;a href=&quot;http://approximateinference.org&quot;&gt;third NIPS workshop on approximate inference&lt;/a&gt;. It is together with Francisco Ruiz, Stephan Mandt, Cheng Zhang, and James Mclnerney—and alongside our amazing committee of Tamara Broderick, Michalis Titsias, David Blei, and Max Welling.&lt;/p&gt;

&lt;p&gt;Call for papers below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We have a &lt;em&gt;lot&lt;/em&gt; of funding for awards this year.  We’ve
decided to not only allocate some funding for Ph.D. students and early
postdocs, but we also feature a best paper award. Submit your papers!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Call For Papers
NIPS Workshop on Advances in Approximate Bayesian Inference
Friday, 8th December 2017, Long Beach, California
URL: http://approximateinference.org

Submission deadline: Nov 01, 2017
Please direct questions to: aabiworkshop2017@gmail.com

## Call for Participation

We invite researchers to submit their recent work on the development, analysis, or application of approximate Bayesian inference.

A submission should take the form of an extended abstract of 2-4 pages in PDF format using the NIPS style. Author names do not need to be anonymized and references may extend as far as needed beyond the 4 page upper limit. If authors' research has previously appeared in a journal, workshop, or conference (including NIPS 2017), their workshop submission should extend that previous work. Submissions may include a supplement/appendix, but reviewers are not responsible for reading any supplementary material.

This year, the workshop offers multiple best paper awards. They are open to all researchers, and a few awards are restricted to junior researchers. Submitting by the deadline automatically entitles you for consideration for all of the following:

+ Roughly $3000 in total, to be allocated across winners
+ Four NIPS 2017 workshop registration fee waivers

## Abstract

Approximate inference is key to modern probabilistic modeling. Thanks to the availability of big data, significant computational power, and sophisticated models, machine learning has achieved many breakthroughs in multiple application domains. At the same time, approximate inference becomes critical since exact inference is intractable for most models of interest. Within the field of approximate Bayesian inference, variational and Monte Carlo methods are currently the mainstay techniques. For both methods, there has been considerable progress both on the efficiency and performance.

In this workshop, we encourage submissions advancing approximate inference methods. We are open to a broad scope of methods within the field of Bayesian inference. In addition, we also encourage applications of approximate inference in many domains, such as computational biology, recommender systems, differential privacy, and industry applications.

## Key Dates

Nov 01, 2017: Submission Deadline
Nov 15, 2017: Notification of Acceptance
Nov 24, 2017: Submission Reviews &amp;amp; Award Notifications

## Organizers

Francisco Ruiz, Stephan Mandt, Cheng Zhang, James Mclnerney, Dustin Tran

## Advisory Committee

Tamara Broderick, Michalis Titsias, David Blei, Max Welling
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 25 Sep 2017 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>How much compute do we need to train generative models?</title>
        <link>http://dustintran.com/blog/how-much-compute-do-we-need-to-train-generative-models</link>
        <guid isPermaLink="true">http://dustintran.com/blog/how-much-compute-do-we-need-to-train-generative-models</guid>
        <description>&lt;p&gt;&lt;em&gt;Update (09/01/17): The post is written to be somewhat silly and numbers are not meant to be accurate. For example, there is a simplifying assumption that training time scales linearly with the # of bits to encode the output; and 5000 is chosen arbitrarily given only that the output’s range has 65K*3 dimensions and each takes one of 256 integers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Discriminative models can take weeks to train. It was only until a
breakthrough two months ago by Facebook &lt;a href=&quot;#goyal2017accurate&quot;&gt;(Goyal et al., 2017)&lt;/a&gt; that we could successfully train a neural net
exceeding human accuracy (ResNet-50) on ImageNet in one hour. And this
was with 256 GPUs and a monstrous batch size of 8192.
&lt;!-- Unfortunately, most of us mortals have maybe 8 GPUs at most—or for the --&gt;
&lt;!-- very fortunate, at most 8 GPUs per experiment—and do not have help     --&gt;
&lt;!-- from the first authors of ResNets and Caffe. This means in 2017, each    --&gt;
&lt;!-- ImageNet classifier can still take days to a week.                       --&gt;&lt;/p&gt;

&lt;p&gt;Contrast this with generative models.  We’ve made progress in
stability and sample diversity with generative adversarial networks,
where, say, Wasserstein GANs with gradient penalty
&lt;a href=&quot;#gulrajani2017improved&quot;&gt;(Gulrajani, Ahmed, Arjovsky, Dumoulin, &amp;amp; Courville, 2017)&lt;/a&gt; and
Cramer GANs
&lt;a href=&quot;#bellemare2017cramer&quot;&gt;(Bellemare et al., 2017)&lt;/a&gt;
can get good results for generating LSUN bedrooms.
But in communication with
Ishaan Gulrajani, this took 3 days to train with 4 GPUs and 900,000
total iterations; moreover, LSUN
has a resolution of 64x64 and is
significantly less diverse than the 256x256 sized ImageNet.
&lt;!-- : this is especially the case as we do 5 discriminator                --&gt;
&lt;!-- updates per generator update, which is already a 5x slowdown compared --&gt;
&lt;!-- to vanilla GANs per-generator iteration.                              --&gt;
Let’s also not kid ourselves
that we perfected density estimation to learn the true distribution of
LSUN bedrooms yet.&lt;/p&gt;

&lt;p&gt;Generative models for text are no different. The best results so far for the 1 billion
language modeling benchmark are an LSTM with 151 million parameters
(excluding embedding and softmax layers)
which took 3 weeks to train with 32 GPUs
&lt;a href=&quot;#jozefowicz2016exploring&quot;&gt;(Jozefowicz, Vinyals, Schuster, Shazeer, &amp;amp; Wu, 2016)&lt;/a&gt;
and a mixture of experts LSTM with 4.3 billion parameters
&lt;a href=&quot;#shazeer2017outrageously&quot;&gt;(Shazeer et al., 2017)&lt;/a&gt;.
&lt;!-- downsampled ImageNet. --&gt;&lt;/p&gt;

&lt;p&gt;This begs the question: how much compute &lt;em&gt;should&lt;/em&gt; we expect in order
to learn a generative model?&lt;/p&gt;

&lt;p&gt;Suppose we restrict ourselves to 256x256 ImageNet as a proxy for
natural images.
A simple property in information theory says that the the entropy of
the conditional
&lt;script type=&quot;math/tex&quot;&gt;p(\text{class label}\mid \text{natural image})&lt;/script&gt;
is upper bounded by at most &lt;script type=&quot;math/tex&quot;&gt;\log K&lt;/script&gt; bits for &lt;script type=&quot;math/tex&quot;&gt;K&lt;/script&gt; classes.
Comparing this to the entropy of the unconditional
&lt;script type=&quot;math/tex&quot;&gt;p(\text{natural image})&lt;/script&gt;, whose
number of bits is a function of &lt;script type=&quot;math/tex&quot;&gt;256\times 256=65,536&lt;/script&gt;
pixels each of which take 3 values from &lt;script type=&quot;math/tex&quot;&gt;[0, 255]&lt;/script&gt;,
then a very modest guess would be that &lt;script type=&quot;math/tex&quot;&gt;p(\text{natural image})&lt;/script&gt; has
5000 times more bits. We also need to
account for the difference in training methods.  Let’s say that the
method for generative models is only 6x slower than that of
discriminative models (5 discriminative updates per generator update;
we’ll forget the fact that GAN and MMD objectives are actually more expensive
than maximum likelihood due to multiple forward and backward passes).&lt;/p&gt;

&lt;p&gt;Finally, let’s take Facebook’s result as a baseline for learning
&lt;script type=&quot;math/tex&quot;&gt;p(\text{class label}\mid \text{natural image})&lt;/script&gt; in 1 hour with 256 GPUs
and a batch size of 8192. &lt;strong&gt;Then the distribution &lt;script type=&quot;math/tex&quot;&gt;p(\text{natural image})&lt;/script&gt;
would require
1 hour &lt;script type=&quot;math/tex&quot;&gt;\cdot&lt;/script&gt; 5000 &lt;script type=&quot;math/tex&quot;&gt;\cdot&lt;/script&gt; 6 &lt;script type=&quot;math/tex&quot;&gt;=&lt;/script&gt; 30,000 hours &lt;script type=&quot;math/tex&quot;&gt;\approx&lt;/script&gt; 3.4 years to train.&lt;/strong&gt;
And this is assuming we have the right objective, architecture, and
hyperparameters to set it and forget it: until then, let’s hope for
better hardware.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This short post is extracted from a fun conversation with Alec Radford today.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;bellemare2017cramer&quot;&gt;Bellemare, M. G., Danihelka, I., Dabney, W., Mohamed, S., Lakshminarayanan, B., Hoyer, S., &amp;amp; Munos, R. (2017). The Cramer Distance as a Solution to Biased Wasserstein Gradients. &lt;i&gt;ArXiv Preprint ArXiv:1705.10743&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;goyal2017accurate&quot;&gt;Goyal, P., Dollár, P., Girshick, R., Noordhuis, P., Wesolowski, L., Kyrola, A., … He, K. (2017). Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour. &lt;i&gt;ArXiv Preprint ArXiv:1706.02677&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;gulrajani2017improved&quot;&gt;Gulrajani, I., Ahmed, F., Arjovsky, M., Dumoulin, V., &amp;amp; Courville, A. (2017). Improved Training of Wasserstein GANs. &lt;i&gt;ArXiv Preprint ArXiv:1704.00028&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;jozefowicz2016exploring&quot;&gt;Jozefowicz, R., Vinyals, O., Schuster, M., Shazeer, N., &amp;amp; Wu, Y. (2016). Exploring the Limits of Language Modeling. &lt;i&gt;ArXiv Preprint ArXiv:1602.02410&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;shazeer2017outrageously&quot;&gt;Shazeer, N., Mirhoseini, A., Maziarz, K., Davis, A., Le, Q., Hinton, G., &amp;amp; Dean, J. (2017). Outrageously Large Neural Networks: The Sparsely-Gated Mixture-of-Experts Layer. In &lt;i&gt;International Conference on Learning Representations&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Thu, 31 Aug 2017 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>My Qualifying Exam (Oral)</title>
        <link>http://dustintran.com/blog/my-qualifying-exam-oral</link>
        <guid isPermaLink="true">http://dustintran.com/blog/my-qualifying-exam-oral</guid>
        <description>&lt;p&gt;I’m taking my qualifying exam this Tuesday—which may surprise some of
you that I haven’t already done it! This is mostly due to logistical
kerfuffles as I transferred Ph.D.’s and I also tend to avoid coursework
like the plague.&lt;/p&gt;

&lt;p&gt;Each university has its own culture around an oral or qualifying exam.
Columbia’s Computer Science department involves the following:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The committee, after consideration of the student’s input, selects a syllabus of the 20-30 most significant documents that encompass the state of the art in the area. […] The oral exam begins with the student’s 30 minute critical evaluation of the syllabus materials, and is followed by no more than 90 minutes of questioning by the committee on any subject matter related to their contents. The student is judged primarily on the oral evidence, but the content and style of the presentation can account for part of the decision.
&lt;a href=&quot;http://www.cs.columbia.edu/education/phd/requirements/candidacy/&quot;&gt;[url]&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My syllabus concerns &lt;em&gt;Bayesian deep learning&lt;/em&gt;, which is the
synthesis of modern Bayesian analysis with deep learning.
The syllabus includes 29 papers published in 2014 or later,
representing “the most significant documents that encompass the
state of the art in the area.”
I got multiple requests from friends to share the list, so I decided
to just share it publically.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Probabilistic programming &amp;amp; AI systems&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#mansinghka2014venture&quot;&gt;Mansinghka, Selsam, &amp;amp; Perov (2014)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tristan2014augur&quot;&gt;Tristan et al. (2014)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#schulman2015gradient&quot;&gt;Schulman, Heess, Weber, &amp;amp; Abbeel (2015)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#narayanan2016probabilistic&quot;&gt;Narayanan, Carette, Romano, Shan, &amp;amp; Zinkov (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#abadi2016tensorflow&quot;&gt;Abadi et al. (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#carpenter2016stan&quot;&gt;Carpenter et al. (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tran2016edward&quot;&gt;Tran et al. (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#kucukelbir2017automatic&quot;&gt;Kucukelbir, Tran, Ranganath, Gelman, &amp;amp; Blei (2017)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tran2017deep&quot;&gt;Tran et al. (2017)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#neubig2017dynet&quot;&gt;Neubig et al. (2017)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Variational inference&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#kingma2014autoencoding&quot;&gt;Kingma &amp;amp; Welling (2014)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ranganath2014black&quot;&gt;Ranganath, Gerrish, &amp;amp; Blei (2014)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rezende2014stochastic&quot;&gt;Rezende, Mohamed, &amp;amp; Wierstra (2014)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mnih2014neural&quot;&gt;Mnih &amp;amp; Gregor (2014)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rezende2015variational&quot;&gt;Rezende &amp;amp; Mohamed (2015)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#salimans2015markov&quot;&gt;Salimans, Kingma, &amp;amp; Welling (2015)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tran2016variational&quot;&gt;Tran, Ranganath, &amp;amp; Blei (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ranganath2016hierarchical&quot;&gt;Ranganath, Tran, &amp;amp; Blei (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#maaloe2016auxiliary&quot;&gt;Maaløe, Sønderby, Sønderby, &amp;amp; Winther (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#johnson2016composing&quot;&gt;Johnson, Duvenaud, Wiltschko, Datta, &amp;amp; Adams (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ranganath2016operator&quot;&gt;Ranganath, Altosaar, Tran, &amp;amp; Blei (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#gelman2017expectation&quot;&gt;Gelman et al. (2017)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Implicit probabilistic models &amp;amp; adversarial training&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#goodfellow2014generative&quot;&gt;Goodfellow et al. (2014)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dziugaite2015training&quot;&gt;Dziugaite, Roy, &amp;amp; Ghahramani (2015)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#li2015generative&quot;&gt;Li, Swersky, &amp;amp; Zemel (2015)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#radford2016unsupervised&quot;&gt;Radford, Metz, &amp;amp; Chintala (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mohamed2016learning&quot;&gt;Mohamed &amp;amp; Lakshminarayanan (2016)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#arjovsky2017wasserstein&quot;&gt;Arjovsky, Chintala, &amp;amp; Bottou (2017)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tran2017deepand&quot;&gt;Tran, Ranganath, &amp;amp; Blei (2017)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Committee: David Blei, Andrew Gelman, Daniel Hsu.&lt;/p&gt;

&lt;p&gt;Disclaimer: I favored papers which have
shown to be or are most likely to be long-lasting in influence (this
means fewer papers from 2017); papers on methodology rather than
applications (only to narrow the scope); original papers over surveys;
and my own papers (because it’s my oral). If I did not cite you or if
you have strong opinions about a missing paper, recall &lt;a href=&quot;https://en.wikipedia.org/wiki/Hanlon%27s_razor&quot;&gt;Hanlon’s
razor&lt;/a&gt;. E-mail me your
suggestions.&lt;/p&gt;

&lt;p&gt;Update (08/08/2017): I passed the oral. :-)&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;abadi2016tensorflow&quot;&gt;Abadi, Barham, P., Chen, J., Chen, Z., Davis, A., Dean, J., … Zhang, X. (2016). TensorFlow: A system for large-scale machine learning, &lt;i&gt;cs.DC&lt;/i&gt;, 1–18.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;arjovsky2017wasserstein&quot;&gt;Arjovsky, M., Chintala, S., &amp;amp; Bottou, L. (2017). Wasserstein GAN. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;carpenter2016stan&quot;&gt;Carpenter, B., Gelman, A., Hoffman, M. D., Lee, D., Goodrich, B., Betancourt, M., … Riddell, A. (2016). Stan: a probabilistic programming language. &lt;i&gt;Journal of Statistical Software&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;dziugaite2015training&quot;&gt;Dziugaite, G. K., Roy, D. M., &amp;amp; Ghahramani, Z. (2015). Training generative neural networks via Maximum Mean Discrepancy optimization. In &lt;i&gt;Uncertainty in Artificial Intelligence&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;gelman2017expectation&quot;&gt;Gelman, A., Vehtari, A., Jylänki, P., Sivula, T., Tran, D., Sahai, S., … Robert, C. (2017). Expectation propagation as a way of life: A framework for Bayesian inference on partitioned data. &lt;i&gt;ArXiv.org&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;goodfellow2014generative&quot;&gt;Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … Bengio, Y. (2014). Generative Adversarial Nets. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;johnson2016composing&quot;&gt;Johnson, M. J., Duvenaud, D., Wiltschko, A. B., Datta, S. R., &amp;amp; Adams, R. P. (2016). Composing graphical models with neural networks for structured representations and fast inference. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;kingma2014autoencoding&quot;&gt;Kingma, D. P., &amp;amp; Welling, M. (2014). Auto-Encoding Variational Bayes. In &lt;i&gt;International Conference on Learning Representations&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;kucukelbir2017automatic&quot;&gt;Kucukelbir, A., Tran, D., Ranganath, R., Gelman, A., &amp;amp; Blei, D. M. (2017). Automatic Differentiation Variational Inference. &lt;i&gt;Journal of Machine Learning Research&lt;/i&gt;, &lt;i&gt;18&lt;/i&gt;, 1–45.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;li2015generative&quot;&gt;Li, Y., Swersky, K., &amp;amp; Zemel, R. (2015). Generative Moment Matching Networks. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;maaloe2016auxiliary&quot;&gt;Maaløe, L., Sønderby, C. K., Sønderby, S. K., &amp;amp; Winther, O. (2016). Auxiliary Deep Generative Models. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;mansinghka2014venture&quot;&gt;Mansinghka, V., Selsam, D., &amp;amp; Perov, Y. (2014). Venture: a higher-order probabilistic programming platform with programmable inference. &lt;i&gt;ArXiv.org&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;mnih2014neural&quot;&gt;Mnih, A., &amp;amp; Gregor, K. (2014). Neural Variational Inference and Learning in Belief Networks. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;mohamed2016learning&quot;&gt;Mohamed, S., &amp;amp; Lakshminarayanan, B. (2016). Learning in Implicit Generative Models. &lt;i&gt;ArXiv.org&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;narayanan2016probabilistic&quot;&gt;Narayanan, P., Carette, J., Romano, W., Shan, C.-chieh, &amp;amp; Zinkov, R. (2016). Probabilistic Inference by Program Transformation in Hakaru (System Description). In &lt;i&gt;International Symposium on Functional and Logic Programming&lt;/i&gt;. Springer, Cham.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;neubig2017dynet&quot;&gt;Neubig, G., Dyer, C., Goldberg, Y., Matthews, A., Ammar, W., Anastasopoulos, A., … Yin, P. (2017). DyNet: The Dynamic Neural Network Toolkit. &lt;i&gt;ArXiv.org&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;radford2016unsupervised&quot;&gt;Radford, A., Metz, L., &amp;amp; Chintala, S. (2016). Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks. In &lt;i&gt;International Conference on Learning Representations&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;ranganath2016operator&quot;&gt;Ranganath, R., Altosaar, J., Tran, D., &amp;amp; Blei, D. M. (2016). Operator Variational Inference. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;ranganath2014black&quot;&gt;Ranganath, R., Gerrish, S., &amp;amp; Blei, D. M. (2014). Black Box Variational Inference. In &lt;i&gt;Artificial Intelligence and Statistics&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;ranganath2016hierarchical&quot;&gt;Ranganath, R., Tran, D., &amp;amp; Blei, D. M. (2016). Hierarchical Variational Models. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;rezende2015variational&quot;&gt;Rezende, D. J., &amp;amp; Mohamed, S. (2015). Variational Inference with Normalizing Flows. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;rezende2014stochastic&quot;&gt;Rezende, D. J., Mohamed, S., &amp;amp; Wierstra, D. (2014). Stochastic Backpropagation and Approximate Inference in Deep Generative Models. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;salimans2015markov&quot;&gt;Salimans, T., Kingma, D. P., &amp;amp; Welling, M. (2015). Markov Chain Monte Carlo and Variational Inference: Bridging the Gap. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;schulman2015gradient&quot;&gt;Schulman, J., Heess, N., Weber, T., &amp;amp; Abbeel, P. (2015). Gradient Estimation Using Stochastic Computation Graphs. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tran2017deep&quot;&gt;Tran, D., Hoffman, M. D., Saurous, R. A., Brevdo, E., Murphy, K., &amp;amp; Blei, D. M. (2017). Deep Probabilistic Programming. In &lt;i&gt;International Conference on Learning Representations&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tran2016edward&quot;&gt;Tran, D., Kucukelbir, A., Dieng, A. B., Rudolph, M., Liang, D., &amp;amp; Blei, D. M. (2016). Edward: A library for probabilistic modeling, inference, and criticism. &lt;i&gt;ArXiv.org&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tran2017deepand&quot;&gt;Tran, D., Ranganath, R., &amp;amp; Blei, D. M. (2017). Deep and Hierarchical Implicit Models. &lt;i&gt;ArXiv.org&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tran2016variational&quot;&gt;Tran, D., Ranganath, R., &amp;amp; Blei, D. M. (2016). The Variational Gaussian Process. In &lt;i&gt;International Conference on Learning Representations&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tristan2014augur&quot;&gt;Tristan, J.-B., Huang, D., Tassarotti, J., Pocock, A. C., Green, S., &amp;amp; Steele, G. L. (2014). Augur: Data-Parallel Probabilistic Modeling. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt; (pp. 2600–2608).&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Mon, 07 Aug 2017 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>A Research to Engineering Workflow</title>
        <link>http://dustintran.com/blog/a-research-to-engineering-workflow</link>
        <guid isPermaLink="true">http://dustintran.com/blog/a-research-to-engineering-workflow</guid>
        <description>&lt;p&gt;Going from a research idea to experiments is fundamental. But this
step is typically glossed over with little explicit advice. In
academia, the graduate student is often left toiling away—fragmented
code, various notes and LaTeX write-ups scattered around.
New projects often result in entirely new code bases, and if they do
rely on past code, are difficult to properly extend to these new projects.&lt;/p&gt;

&lt;p&gt;Motivated by this, I thought it’d be useful to outline the steps I
personally take in going from research idea to experimentation, and
how that then improves my research understanding so I can revise the
idea. This process is crucial: given an initial idea, all my time is
spent on this process;
&lt;!--(with the majority of my time specifically spent on the experiments)--&gt;
and for me at least, the experiments are key to
learning about and solving problems that I couldn’t predict otherwise.&lt;a href=&quot;#references&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;
&lt;!--More generally, I think without having a good                         --&gt;
&lt;!--handle on this process, you can sometimes lose touch with             --&gt;
&lt;!--reality and have a hard time                                          --&gt;
&lt;!--[&gt;figuring out what open problems and/or solutions are important.&lt;]   --&gt;
&lt;!--recalling why the problems you're working on are important.           --&gt;&lt;/p&gt;

&lt;!--Much of what I'll describe is what other researchers, collaborators,--&gt;
&lt;!--and friends I know already do. I'm hoping to make these steps       --&gt;
&lt;!--transparent, we can review the workflow, compare it to alternatives,--&gt;
&lt;!--and see how it might be optimized.                                  --&gt;

&lt;!--## Coming up with an Idea--&gt;
&lt;h2 id=&quot;finding-the-right-problem&quot;&gt;Finding the Right Problem&lt;/h2&gt;
&lt;!--## A Master List of Research Ideas--&gt;

&lt;!--+ reading papers                                                      --&gt;
&lt;!--+ talking to people at conferences, workshops, etc. to see what find  --&gt;
&lt;!--  important                                                           --&gt;
&lt;!--+ personal experiences (in both research/understanding and in your own--&gt;
&lt;!--  experiments)                                                        --&gt;
&lt;!--+ frequent communication with people near you, if you have the benefit--&gt;
&lt;!--  of like minded(or even not like minded) people as neighbors to      --&gt;
&lt;!--  bounce ideas off of                                                 --&gt;

&lt;!--This is the modt open ended and often in my opinion one of the most--&gt;
&lt;!--challenging. It must be interesting to you, ideally ambitious with --&gt;
&lt;!--clear and amazing end goals, important to many people in the       --&gt;
&lt;!--community, and with short and long term visions.                   --&gt;

&lt;!--Research is an organic process. Repositories file that research in--&gt;
&lt;!--discrete units. Before making a repository, it's necessary to     --&gt;
&lt;!--decide how initial ideas might jumpstart into more official and   --&gt;
&lt;!--formalized.                                                       --&gt;

&lt;!--This particular step varies widely. --&gt;
&lt;p&gt;Before working on a project, it’s necessary to decide how
ideas might jumpstart into something more official. Sometimes it’s as
simple as having a mentor suggest a project to work on; or tackling a
specific data set or applied problem; or having a conversation with a
frequent collaborator and then striking up a useful problem
to work on together. More often, I find that research is
a result of a long chain of ideas which were continually
iterated upon—through frequent conversations, recent
work, longer term readings of subjects I’m unfamiliar with
(e.g., &lt;a href=&quot;#pearl2000causality&quot;&gt;Pearl (2000)&lt;/a&gt;),
and
favorite papers I like to revisit (e.g.,
&lt;a href=&quot;#wainwright2008graphical&quot;&gt;Wainwright &amp;amp; Jordan (2008)&lt;/a&gt;,
&lt;a href=&quot;#neal1994bayesian&quot;&gt;Neal (1994)&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/2017-06-03-fig0.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;&lt;center&gt;A master document of all my unexplored research ideas.&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One technique I’ve found immensely helpful is to maintain a single
master document.&lt;a href=&quot;#references&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;
It does a few things.&lt;/p&gt;

&lt;p&gt;First, it has a bulleted list of all ideas, problems, and topics that
I’d like to think more carefully about (Section 1.3 in the figure).
Sometimes they’re as high-level as “Bayesian/generative approaches to
reinforcement learning” or “addressing fairness in machine learning”;
or they’re as specific as “Inference networks to handle memory
complexity in EP” or “analysis of size-biased vs symmetric Dirichlet
priors.”.  I try to keep the list succinct: subsequent sections go in
depth on a particular entry (Section 2+ in the figure).&lt;/p&gt;

&lt;p&gt;Second, the list of ideas is sorted according to what I’d like to work on
next. This guides me to understand the general direction of my
research beyond present work. I can continually revise my
priorities according to whether I think the direction aligns
with my broader research vision, and if I think the direction is
necessarily impactful for the community at large.
&lt;!-- --&gt;
Importantly, the list isn’t just about the next publishable idea to
work on, but generally what things I’d like to learn about next. This
contributes long-term in finding important problems and arriving at
simple or novel solutions.&lt;/p&gt;

&lt;p&gt;Every so often, I revisit the list, resorting things, adding things,
deleting things. Eventually I might elaborate upon an idea enough that
it becomes a formal paper. In general, I’ve found that this process
of iterating upon ideas within one location (and one format) makes
the transition to formal paper-writing and experiments to be a fluid experience.&lt;/p&gt;

&lt;h2 id=&quot;managing-papers&quot;&gt;Managing Papers&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/2017-06-03-fig5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Good research requires reading &lt;em&gt;a lot&lt;/em&gt; of papers. Without a good way
of organizing your readings, you can easily get overwhelmed by the
field’s hurried pace. (These past
weeks have been especially notorious in trying to catch up on the slew
of NIPS submissions posted to arXiv.)&lt;/p&gt;

&lt;p&gt;I’ve experimented with a lot of approaches to this, and ultimately
I’ve arrived at the &lt;a href=&quot;http://papersapp.com&quot;&gt;Papers app&lt;/a&gt; which I highly
recommend.&lt;sup&gt;3&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;The most fundamental utility in a good management system is a
centralized repository which can be referenced back to. The advantage
of having one location for this cannot be underestimated, whether it
be 8 page conference papers, journal papers, surveys, or even textbooks.
Moreover, Papers is a nice tool for actually reading PDFs, and it
conveniently syncs across devices as I read and star things on my
tablet or laptop.  As I cite papers when I write, I can go back to
Papers and get the corresponding BibTeX file and citekey.&lt;/p&gt;

&lt;p&gt;I personally enjoy taking painstaking effort in organizing papers. In
the screenshot above, I have a sprawling list of topics as paper tags.
These range from &lt;code class=&quot;highlighter-rouge&quot;&gt;applications&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;models&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;inference&lt;/code&gt; (each with
subtags), and there are also miscellaneous topics such as
&lt;code class=&quot;highlighter-rouge&quot;&gt;information-theory&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;experimental-design&lt;/code&gt;. An important
collection not seen in the screenshot is a tag called &lt;code class=&quot;highlighter-rouge&quot;&gt;research&lt;/code&gt;,
which I bin all papers relevant to a particular research topic into.
For example, &lt;a href=&quot;https://arxiv.org/abs/1706.00531&quot;&gt;the PixelGAN paper&lt;/a&gt;
presently highlighted is tagged into two topics I’ve currently been
thinking a lot about—these are sorted into &lt;code class=&quot;highlighter-rouge&quot;&gt;research→alignment-semi&lt;/code&gt;
and &lt;code class=&quot;highlighter-rouge&quot;&gt;research→generative-images&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;managing-a-project&quot;&gt;Managing a Project&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/2017-06-03-fig1.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;&lt;center&gt;The repository we used for a recent
&lt;a href=&quot;https://arxiv.org/abs/1610.09037&quot;&gt;arXiv preprint&lt;/a&gt;.&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I like to maintain one research project in one Github repository.
&lt;!--Whatever one &quot;unit&quot; of research is varies. I define it as something   --&gt;
&lt;!--relatively self-contained; for example, it might be tied to a specific--&gt;
&lt;!--paper, an applied data analysis, or a particular topic at hand.       --&gt;
&lt;!-- --&gt;
They’re useful not only for tracking code but also
in tracking general research progress, paper writing, and tying others
in for collaboration. How Github repositories are organized is a frequent pain point.
I like the following structure,
based originally from &lt;a href=&quot;http://www.cs.columbia.edu/~blei/seminar/2016_discrete_data/notes/week_01.pdf&quot;&gt;Dave Blei’s preferred one&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-- doc/
  -- 2017-nips/
    -- preamble/
    -- img/
    -- main.pdf
    -- main.tex
    -- introduction.tex
-- etc/
  -- 2017-03-25-whiteboard.jpg
  -- 2017-04-03-whiteboard.jpg
  -- 2017-04-06-dustin-comments.md
  -- 2017-04-08-dave-comments.pdf
-- src/
  -- checkpoints/
  -- codebase/
  -- log/
  -- out/
  -- script1.py
  -- script2.py
-- README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;README.md&lt;/code&gt; maintains a list of todo’s, both for myself and
collaborators. This makes it transparent how to keep moving forward
and what’s blocking the work.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doc/&lt;/code&gt; contains all write-ups. Each subdirectory corresponds to a
particular conference or journal submission, with &lt;code class=&quot;highlighter-rouge&quot;&gt;main.tex&lt;/code&gt; being the
primary document and individual sections written in separate files
such as &lt;code class=&quot;highlighter-rouge&quot;&gt;introduction.tex&lt;/code&gt;. Keeping one section per file makes
it easy for multiple people to work on separate sections
simultaneously and avoid merge conflicts. Some people prefer to write
the full paper after major experiments are complete. I personally like to
write a paper more as a summary of the current ideas and, as with the
idea itself, it is continually revised as experiments proceed.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;etc/&lt;/code&gt; is a dump of everything not relevant to other directories. I
typically use it to store pictures of whiteboards during conversations
about the project. Or sometimes as I’m just going about my day-to-day,
I’m struck with a bunch of ideas and so I dump them into a Markdown
document. It’s also a convenient location to handle various
commentaries about the work, such as general feedback or paper
markups from collaborators.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;src/&lt;/code&gt; is where all code is written. Runnable scripts are written
directly in &lt;code class=&quot;highlighter-rouge&quot;&gt;src/&lt;/code&gt;, and classes and utilities are written in
&lt;code class=&quot;highlighter-rouge&quot;&gt;codebase/&lt;/code&gt;. I’ll elaborate on these next. (The other three are
directories outputted from scripts, which I’ll also elaborate upon.)&lt;/p&gt;

&lt;h2 id=&quot;writing-code&quot;&gt;Writing Code&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/2017-06-03-fig2.png&quot; alt=&quot;&quot; /&gt;
&lt;!--_&lt;center&gt;A master document of all my unexplored research ideas.&lt;/center&gt;_--&gt;&lt;/p&gt;

&lt;p&gt;Any code I write now uses &lt;a href=&quot;http://edwardlib.org&quot;&gt;Edward&lt;/a&gt;.
&lt;!--which uses                                                                    --&gt;
&lt;!--[Python](https://www.python.org) and [TensorFlow](https://www.tensorflow.org).--&gt;
I find it to be the best framework for
quickly experimenting with modern probabilistic models and algorithms.
&lt;!--[&lt;sup&gt;3&lt;/sup&gt;](#references)--&gt;
&lt;!--developing modern probabilistic models and inference algorithms.--&gt;
&lt;!--, and with plug-and-play with built-in methods and pre-existing examples.--&gt;
&lt;!-- --&gt;
&lt;!--Previously I had to resort to working in fragmented code bases, where --&gt;
&lt;!--one language had one idea, a pre-existing code base was hacked upon to--&gt;
&lt;!--support certain other features, additional interface layers were      --&gt;
&lt;!--written to get them all to communicate together... it was not good.   --&gt;
&lt;!--Maintaining these dependencies and duplicate implemented ideas is a  --&gt;
&lt;!--nightmare. And more importantly the code just constrains the sorts of--&gt;
&lt;!--ideas/experiments you'd like to do.                                  --&gt;
&lt;!--With Edward, everything is just there™. --&gt;&lt;/p&gt;

&lt;p&gt;On a conceptual level, Edward’s
appealing because the language explicitly follows the math: the
model’s generative process translates to specific lines of Edward
code; then the proposed algorithm translates to the next lines; etc. This
clean translation
&lt;!--makes it easy to understand the mapping between math--&gt;
&lt;!--and code. And it                                    --&gt;
avoids future abstraction headaches when trying to extend the
code with natural research questions: for example, what if I used a different
prior, or tweaked the gradient estimator, or tried a different
neural net architecture, or applied the method on larger scale data sets?
&lt;!-- which makes it easy to translate engineering   --&gt;
&lt;!--ideas about sharing various components to the math, and analogously   --&gt;
&lt;!--how to easily take tweaked math ideas and replace the corresponding   --&gt;
&lt;!--code.                                                                 --&gt;&lt;/p&gt;

&lt;p&gt;On a practical level, I most benefit from Edward by building off
pre-existing model examples
(in &lt;a href=&quot;https://github.com/blei-lab/edward/tree/master/examples&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;edward/examples/&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/blei-lab/edward/tree/master/notebooks&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;edward/notebooks/&lt;/code&gt;&lt;/a&gt;),
and then adapting it to my problem.
If I am also implementing a new
algorithm, I take a pre-existing algorithm’s source
code (in &lt;a href=&quot;https://github.com/blei-lab/edward/tree/master/edward/inferences&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;edward/inferences/&lt;/code&gt;&lt;/a&gt;),
paste it as a new file in my research project’s &lt;code class=&quot;highlighter-rouge&quot;&gt;codebase/&lt;/code&gt; directory,
and then I tweak it. This process makes it really easy to start
afresh—beginning from templates and avoiding low-level details.&lt;/p&gt;

&lt;p&gt;When writing code, I always follow PEP8 (I particularly like the
&lt;a href=&quot;https://pypi.python.org/pypi/pep8&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pep8&lt;/code&gt;&lt;/a&gt; package), and I try
to separate individual scripts from the class and function definitions shared
across scripts; the latter is placed inside &lt;code class=&quot;highlighter-rouge&quot;&gt;codebase/&lt;/code&gt; and then imported.
Maintaining code quality from the beginning is always a good
investment, and I find this process scales well as the code gets
increasingly more complicated and worked on with others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On Jupyter notebooks.&lt;/strong&gt;
Many people use &lt;a href=&quot;http://jupyter.org&quot;&gt;Jupyter notebooks&lt;/a&gt;
as a method for interactive code development, and as an easy way to
embed visualizations and LaTeX. I personally haven’t found
success in integrating it into my workflow. I like to just write all
my code down in a Python script and then run the script. But I can see why
others like the interactivity.&lt;/p&gt;

&lt;h2 id=&quot;managing-experiments&quot;&gt;Managing Experiments&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/2017-06-03-fig3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Investing in a good workstation or cloud service is a must.
Features such as GPUs should basically
be a given with &lt;a href=&quot;http://timdettmers.com/2017/04/09/which-gpu-for-deep-learning/&quot;&gt;their wide
availability&lt;/a&gt;,
and one should have access to running many jobs in parallel.&lt;/p&gt;

&lt;p&gt;After I finish writing a script on my local computer, my typical workflow is:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;rsync&lt;/code&gt; to synchronize my local computer’s Github repository
  (which includes uncommitted files) with a directory in the server;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; into the server.&lt;/li&gt;
  &lt;li&gt;Start &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; and run the script. Among many things, &lt;code class=&quot;highlighter-rouge&quot;&gt;tmux&lt;/code&gt; lets you
detach the session so you don’t have to wait for the job to finish
before interacting with the server again.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When the script is sensible, I start diving into experiments with
multiple hyperparameter configurations.
A useful tool for this is
&lt;a href=&quot;https://docs.python.org/3/library/argparse.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;argparse&lt;/code&gt;&lt;/a&gt;.
It augments a Python script with commandline arguments, where you
add something like the following to your script:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--batch_size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Minibatch during training'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'--lr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Learning rate step-size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then you can run terminal commands such as&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python script1.py &lt;span class=&quot;nt&quot;&gt;--batch_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;256 &lt;span class=&quot;nt&quot;&gt;--lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1e-4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This makes it easy to submit server jobs which vary these hyperparameters.&lt;/p&gt;

&lt;p&gt;Finally, let’s talk about managing the output of experiments.
Recall the &lt;code class=&quot;highlighter-rouge&quot;&gt;src/&lt;/code&gt; directory structure above:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-- src/
  -- checkpoints/
  -- codebase/
  -- log/
  -- out/
  -- script1.py
  -- script2.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We described the individual scripts and &lt;code class=&quot;highlighter-rouge&quot;&gt;codebase/&lt;/code&gt;.
The other three directories are for organizing experiment output:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;checkpoints/&lt;/code&gt; records saved model parameters during training.
Use &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.train.Saver&lt;/code&gt; to save parameters as the algorithm runs every
fixed number of iterations. This helps with running long experiments, where you
might want to cut the experiment short and later restore the
parameters. Each experiment outputs a subdirectory in &lt;code class=&quot;highlighter-rouge&quot;&gt;checkpoints/&lt;/code&gt;
with the convention,
&lt;code class=&quot;highlighter-rouge&quot;&gt;20170524_192314_batch_size_25_lr_1e-4/&lt;/code&gt;. The first
number is the date (&lt;code class=&quot;highlighter-rouge&quot;&gt;YYYYMMDD&lt;/code&gt;); the second is the timestamp (&lt;code class=&quot;highlighter-rouge&quot;&gt;%H%M%S&lt;/code&gt;);
and the rest is hyperparameters.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log/&lt;/code&gt; records logs for visualizing learning.
Each experiment belongs in a subdirectory with the same
convention as &lt;code class=&quot;highlighter-rouge&quot;&gt;checkpoints/&lt;/code&gt;.
One benefit of Edward is that for logging, you can simply pass an
argument as &lt;code class=&quot;highlighter-rouge&quot;&gt;inference.initialize(logdir='log/' + subdir)&lt;/code&gt;.
Default TensorFlow summaries are tracked which can then be
visualized using TensorBoard (more on this next).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;out/&lt;/code&gt; records exploratory output after training finishes; for example,
generated images or matplotlib plots.
Each experiment belongs in a subdirectory with the same convention
as &lt;code class=&quot;highlighter-rouge&quot;&gt;checkpoints/&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;On data sets.&lt;/strong&gt;
Data sets are used across many research projects. I prefer storing them
in the home directory &lt;code class=&quot;highlighter-rouge&quot;&gt;~/data&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On software containers.&lt;/strong&gt;
&lt;a href=&quot;http://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/&quot;&gt;virtualenv&lt;/a&gt;
is a must for managing Python dependencies and avoiding difficulties
with system-wide Python installs. It’s particularly nice if you like
to write Python 2/3-agnostic code.
&lt;a href=&quot;https://www.docker.com&quot;&gt;Docker containers&lt;/a&gt; are an even more powerful
tool if you require more from your setup.&lt;/p&gt;

&lt;h2 id=&quot;exploration-debugging--diagnostics&quot;&gt;Exploration, Debugging, &amp;amp; Diagnostics&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/2017-06-03-fig4.png&quot; alt=&quot;&quot; /&gt;
&lt;!--_&lt;center&gt;Picture thanks to                                                   --&gt;
&lt;!--&lt;a href=&quot;https://github.com/blei-lab/edward/pull/653#issuecomment-304728311&quot;&gt;--&gt;
&lt;!--Sean Kruzel&lt;/a&gt;.&lt;/center&gt;_                                                   --&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tensorflow.org/get_started/summaries_and_tensorboard&quot;&gt;Tensorboard&lt;/a&gt;
is an excellent tool for visualizing and exploring your model
training. With TensorBoard’s interactivity, I find it
particularly convenient in that I don’t have to configure a bunch of
matplotlib functions to understand training. One only needs to percolate a
bunch of &lt;code class=&quot;highlighter-rouge&quot;&gt;tf.summary&lt;/code&gt;s on tensors in the code.&lt;/p&gt;

&lt;p&gt;Edward logs a bunch of summaries by default in order to visualize how
loss function values, gradients, and parameter change across
training iteration.
TensorBoard also includes wall time comparisons, and
a sufficiently decorated TensorFlow code base provides a nice
computational graph you can stare at.
For nuanced issues I can’t diagnose with TensorBoard specifically, I
just output things in the &lt;code class=&quot;highlighter-rouge&quot;&gt;out/&lt;/code&gt; directory and inspect those results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debugging error messages.&lt;/strong&gt;
My debugging workflow is terrible. I
percolate print statements across my code and
find errors by
process of
elimination. This is primitive. Although I haven’t tried it, I
hear good things about
&lt;a href=&quot;https://www.tensorflow.org/programmers_guide/debugger&quot;&gt;TensorFlow’s debugger&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;improving-research-understanding&quot;&gt;Improving Research Understanding&lt;/h2&gt;

&lt;p&gt;Interrogating your model, algorithm, and generally the learning
process lets you better understand your work’s success and failure
modes. This lets you go back to the drawing board, thinking deeply
about the method and how it might be further improved.
As the method indicates success, one can go
from tackling simple toy configurations to increasingly large
scale and high-dimensional problems.&lt;/p&gt;

&lt;p&gt;From a higher level, this workflow is really about implementing the
scientific method in the real world.  No major ideas are necessarily
discarded at each iteration of the experimental process, but rather,
as in the ideal of science, you start with fundamentals and
iteratively expand upon them as you have a stronger grasp of reality.&lt;/p&gt;

&lt;p&gt;Experiments aren’t alone in this process either. Collaboration,
communicating with experts from other fields, reading papers, working
on both short and longer term ideas, and attending talks and
conferences help broaden your perspective in finding the right
problems and solving them.&lt;/p&gt;

&lt;h2 id=&quot;footnotes--references&quot;&gt;Footnotes &amp;amp; References&lt;/h2&gt;

&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; This workflow is specifically for empirical research.
Theory is a whole other can of worms, but some of these ideas
still generalize.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;
The template for the master document is available
&lt;a href=&quot;https://github.com/dustinvtran/latex-templates&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;here&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;3&lt;/sup&gt;
There’s one caveat to Papers. I use it for everything: there are at
least 2,000 papers stored in my account, and with quite a few dense
textbooks.  The application sifts through at least half a dozen
gigabytes, and so it suffers from a few hiccups when
reading/referencing back across many papers. I’m not sure if this is a
bug or just inherent to me exploiting Papers almost &lt;em&gt;too&lt;/em&gt; much.&lt;/p&gt;

&lt;!--&lt;sup&gt;3&lt;/sup&gt;                                                                           --&gt;
&lt;!--Disclaimer: I wrote most of Edward.                                                    --&gt;
&lt;!--I personally benefit from the fact that if                                             --&gt;
&lt;!--something is missing in Edward I can easily add it.                                    --&gt;
&lt;!--[But of course you can (and should) add things too.](http://edwardlib.org/contributing)--&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;neal1994bayesian&quot;&gt;Neal, R. M. (1994). &lt;i&gt;Bayesian Learning for Neural Networks&lt;/i&gt; (PhD thesis). University of Toronto.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;pearl2000causality&quot;&gt;Pearl, J. (2000). &lt;i&gt;Causality&lt;/i&gt;. Cambridge University Press.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;wainwright2008graphical&quot;&gt;Wainwright, M. J., &amp;amp; Jordan, M. I. (2008). Graphical Models, Exponential Families, and Variational Inference. &lt;i&gt;Foundations and Trends in Machine Learning&lt;/i&gt;, &lt;i&gt;1&lt;/i&gt;(1–2), 1–305.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;!--__Failed ideas.__                                                     --&gt;
&lt;!--They go back into master document. Or if there's a large collection of--&gt;
&lt;!--perpheral stuff, they remain as Github repos, but I personally store  --&gt;
&lt;!--them in an `archives/` folder. They're put on hold, and I might--&gt;
&lt;!--revisit them over the years as I spark up new ideas.           --&gt;

&lt;!--__Deployment to Larger Scales.__                                 --&gt;
&lt;!--your mileage will vary, given how you specifically deploy things.--&gt;
&lt;!--different clusters or machines. analysis of how to start placing --&gt;
&lt;!--device configurations in the code.                               --&gt;

&lt;!--+ device configurations                                          --&gt;
&lt;!--+ pretrained models                                              --&gt;
&lt;!--+ xla                                                            --&gt;
&lt;!--+ file readers                                                   --&gt;
&lt;!--+ distributed tensorflow stuff and data management systems       --&gt;

&lt;!--+ redditors and new ml researchers would love it                      --&gt;
&lt;!--+ engineers and non ml experts could read it to understand where we   --&gt;
&lt;!--  come from and how we work, so maybe                                 --&gt;

&lt;!--other things i might mention                                          --&gt;
&lt;!--+ note how write-up and formalism of idea can come before or after    --&gt;
&lt;!--  first iteration of the workflow, depending on whether or kot a forst--&gt;
&lt;!--  iteration is needed to pass a dummy test of if the idea makes sense --&gt;
&lt;!--+ the different ways that you might do research                       --&gt;
&lt;!--+ my personal day to day on how much time i spend reading (relevant   --&gt;
&lt;!--  papers to current research, other papers for breadth of knowledge,  --&gt;
&lt;!--  long term understanding of new subjects), research of               --&gt;
&lt;!--  thinking/writing, coding, meetingd. and also personal management of --&gt;
&lt;!--  ongoing work, such as maitaining and developing edward, and how many--&gt;
&lt;!--  independent projects to tackle at once                              --&gt;
&lt;!--+ code expansion, management of quality, as it grows bigger and bigger--&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>ICML 2017 Workshop on Implicit Models</title>
        <link>http://dustintran.com/blog/implicit-models-workshop</link>
        <guid isPermaLink="true">http://dustintran.com/blog/implicit-models-workshop</guid>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.cs.columbia.edu/~blei/&quot;&gt;David Blei&lt;/a&gt;,
&lt;a href=&quot;http://www.iangoodfellow.com&quot;&gt;Ian Goodfellow&lt;/a&gt;,
&lt;a href=&quot;http://www.gatsby.ucl.ac.uk/~balaji/&quot;&gt;Balaji Lakshminarayanan&lt;/a&gt;,
&lt;a href=&quot;http://shakirm.com&quot;&gt;Shakir Mohamed&lt;/a&gt;,
&lt;a href=&quot;https://www.cs.princeton.edu/~rajeshr/&quot;&gt;Rajesh Ranganath&lt;/a&gt;,
and I are organizing a workshop at ICML this year, titled
“Implicit Models”.&lt;/p&gt;

&lt;p&gt;Workshop URL: &lt;a href=&quot;https://sites.google.com/view/implicitmodels/&quot;&gt;https://sites.google.com/view/implicitmodels/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leveraging this recent and highly impactful topic, I’m personally
excited to see how we might foster discussion across communities. (See
the &lt;a href=&quot;https://sites.google.com/view/implicitmodels/bibliography&quot;&gt;bibliography
page&lt;/a&gt;
for detailed references.)&lt;/p&gt;

&lt;p&gt;The deadline for paper submissions (including travel awards) is June 30, 2017.&lt;/p&gt;

&lt;h2 id=&quot;call-for-papers&quot;&gt;Call For Papers&lt;/h2&gt;

&lt;p&gt;Probabilistic models are an important tool in machine learning. They
form the basis for models that generate realistic data, uncover hidden
structure, and make predictions. Traditionally, probabilistic models
in machine learning have focused on prescribed models. Prescribed
models specify a joint density over observed and hidden variables that
can be easily evaluated. The requirement of a tractable density
simplifies their learning but limits their flexibility — several
real world phenomena are better described by simulators that do not
admit a tractable density. Probabilistic models defined only via the
simulations they produce are called implicit models.&lt;/p&gt;

&lt;p&gt;Arguably starting with generative adversarial networks, research on
implicit models in machine learning has exploded in recent years. This
workshop’s aim is to foster a discussion around the recent
developments, commonalities among applications, and future directions
of implicit models.&lt;/p&gt;

&lt;p&gt;We invite submission of papers for poster and short oral
presentations. Topics of interest include but are not limited to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;implicit models,&lt;/li&gt;
  &lt;li&gt;generative adversarial networks,&lt;/li&gt;
  &lt;li&gt;adversarial training,&lt;/li&gt;
  &lt;li&gt;variational inference with implicit approximations,&lt;/li&gt;
  &lt;li&gt;approximate Bayesian computation,&lt;/li&gt;
  &lt;li&gt;likelihood free inference,&lt;/li&gt;
  &lt;li&gt;two sample testing and density ratio estimation,&lt;/li&gt;
  &lt;li&gt;theory,&lt;/li&gt;
  &lt;li&gt;evaluation and&lt;/li&gt;
  &lt;li&gt;applications of implicit models.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Key Dates:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;June 30, 2017: Submission and Travel Award Deadline&lt;/li&gt;
  &lt;li&gt;July 14, 2017: Acceptance and Travel Award Notification&lt;/li&gt;
  &lt;li&gt;Aug 1, 2017: Final papers due&lt;/li&gt;
  &lt;li&gt;Aug 10, 2017: Workshop date&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Submission Instructions:&lt;/strong&gt;
Researchers interested in contributing should upload a short paper of
4 pages in PDF format by June 30, 2017, 11:59pm (time zone of your
choice) to the submission web site
https://sites.google.com/view/implicitmodels/submissions. References
and supplementary material can exceed 4 pages.&lt;/p&gt;

&lt;p&gt;Authors should use the ICML style file. Submissions don’t need to be
anonymized. The workshop allows submissions of papers that are under
review or have been recently published in a conference or a journal.
Authors should state any overlapping published work at time of
submission.&lt;/p&gt;

&lt;p&gt;All submissions will be reviewed and will be evaluated on the basis of
their technical content. Accepted papers will selected for either a
short oral presentation or spotlight presentation, in addition to
poster presentation.&lt;/p&gt;

&lt;p&gt;If you have any questions, please contact us at implicitmodels2017@gmail.com.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Confirmed Speakers:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sanjeev Arora (Princeton)&lt;/li&gt;
  &lt;li&gt;Stefano Ermon (Stanford)&lt;/li&gt;
  &lt;li&gt;Qiang Liu (Dartmouth)&lt;/li&gt;
  &lt;li&gt;Kerrie Mengerson (Queensland University of Technology)&lt;/li&gt;
  &lt;li&gt;Dougal Sutherland (UCL)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 02 Jun 2017 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>Deep and Hierarchical Implicit Models</title>
        <link>http://dustintran.com/blog/deep-and-hierarchical-implicit-models</link>
        <guid isPermaLink="true">http://dustintran.com/blog/deep-and-hierarchical-implicit-models</guid>
        <description>&lt;p&gt;I’m excited to announce a paper that Rajesh Ranganath, Dave Blei, and
I released today on arXiv, titled
&lt;a href=&quot;https://arxiv.org/abs/1702.08896&quot;&gt;Deep and Hierarchical Implicit Models&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Implicit probabilistic models are all about sampling as a primitive:
they define a process to simulate data and do not require tractable
densities
(&lt;a href=&quot;#diggle1984monte&quot;&gt;Diggle &amp;amp; Gratton (1984)&lt;/a&gt;,
&lt;a href=&quot;#hartig2011statistical&quot;&gt;Hartig, Calabrese, Reineking, Wiegand, &amp;amp; Huth (2011)&lt;/a&gt;)
. We leverage this fundamental idea to develop new classes of
models: they encompass simulators in the scientific communities,
generative adversarial networks
&lt;a href=&quot;#goodfellow2014generative&quot;&gt;(Goodfellow et al., 2014)&lt;/a&gt;,
and deep generative models such as sigmoid
belief nets
&lt;a href=&quot;#neal1990learning&quot;&gt;(Neal, 1990)&lt;/a&gt;
and deep latent Gaussian models
(&lt;a href=&quot;#rezende2014stochastic&quot;&gt;Rezende, Mohamed, &amp;amp; Wierstra (2014)&lt;/a&gt;,
&lt;a href=&quot;#kingma2014autoencoding&quot;&gt;Kingma &amp;amp; Welling (2014)&lt;/a&gt;).
These modeling developments could not really be done without
inference, and we develop a variational inference algorithm that
underpins them all.&lt;/p&gt;

&lt;p&gt;Biased as I am, I think this is quite a dense paper—chock full of
simple ideas that are rife with deep implications. There are many
nuggets of wisdom that I could ramble on about, and I just might in
separate blog posts.&lt;/p&gt;

&lt;p&gt;As a practical example, we show how you can take any standard neural
network and turn it into a deep implicit model: simply inject noise
into the hidden layers. The hidden units in these layers are now
interpreted as latent variables. Further, the induced latent variables
are astonishingly flexible, going beyond Gaussians (or exponential
families
&lt;a href=&quot;#ranganath2015deep&quot;&gt;(Ranganath, Tang, Charlin, &amp;amp; Blei, 2015)&lt;/a&gt;)
to arbitrary probability distributions. Deep generative modeling could
not be any simpler!&lt;/p&gt;

&lt;p&gt;Here’s a 2-layer deep implicit model in &lt;a href=&quot;http://edwardlib.org&quot;&gt;Edward&lt;/a&gt;.
It defines the generative process,&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{aligned}
\mathbf{z}_{n,2} = g_2(\mathbf{\epsilon}_{n,2}),\qquad
\mathbf{\epsilon}_{n, 2} \sim \text{Normal}(0, 1), \\
\mathbf{z}_{n,1} = g_1(\mathbf{\epsilon}_{n,1}\mid\mathbf{z}_{n,2}),\qquad
\mathbf{\epsilon}_{n, 1} \sim \text{Normal}(0, 1), \\
\mathbf{x}_{n} = g_0(\mathbf{\epsilon}_{n,0}\mid\mathbf{z}_{n,1}),\qquad
\mathbf{\epsilon}_{n, 0} \sim \text{Normal}(0, 1).
\end{aligned}&lt;/script&gt;

&lt;p&gt;This generates layers of latent variables &lt;script type=&quot;math/tex&quot;&gt;\mathbf{z}_{n,1}&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\mathbf{z}_{n,2}&lt;/script&gt; and data &lt;script type=&quot;math/tex&quot;&gt;\mathbf{x}_{n}&lt;/script&gt; via functions of noise &lt;script type=&quot;math/tex&quot;&gt;\mathbf{\epsilon}&lt;/script&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;edward.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Normal&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras.layers&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55000&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# number of data points&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# noise dimensionality&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# random noise is Normal(0, 1)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;eps2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;eps1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;eps0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# alternate latent layers z with hidden layers h&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eps1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'relu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eps0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The model uses Keras, where &lt;code class=&quot;highlighter-rouge&quot;&gt;Dense(256)(x)&lt;/code&gt; denotes a fully connected
layer with &lt;script type=&quot;math/tex&quot;&gt;256&lt;/script&gt; hidden units applied to input &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;. To define a
stochastic layer, we concatenate noise with the previous layer. The
model alternates between stochastic and deterministic layers to
generate data points &lt;script type=&quot;math/tex&quot;&gt;\mathbf{x}_n\in\mathbb{R}^{10}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Check out the paper for how you can work with, or even interpret, such a model.&lt;/p&gt;

&lt;p&gt;EDIT (2017/03/02): The algorithm is now &lt;a href=&quot;https://github.com/blei-lab/edward/pull/491&quot;&gt;merged into Edward&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;diggle1984monte&quot;&gt;Diggle, P. J., &amp;amp; Gratton, R. J. (1984). Monte Carlo methods of inference for implicit statistical models. &lt;i&gt;Journal of the Royal Statistical Society Series B&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;goodfellow2014generative&quot;&gt;Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … Bengio, Y. (2014). Generative Adversarial Nets. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;hartig2011statistical&quot;&gt;Hartig, F., Calabrese, J. M., Reineking, B., Wiegand, T., &amp;amp; Huth, A. (2011). Statistical inference for stochastic simulation models - theory and application. &lt;i&gt;Ecology Letters&lt;/i&gt;, &lt;i&gt;14&lt;/i&gt;(8), 816–827.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;kingma2014autoencoding&quot;&gt;Kingma, D. P., &amp;amp; Welling, M. (2014). Auto-Encoding Variational Bayes. In &lt;i&gt;International Conference on Learning Representations&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;neal1990learning&quot;&gt;Neal, R. M. (1990). &lt;i&gt;Learning Stochastic Feedforward Networks&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;ranganath2015deep&quot;&gt;Ranganath, R., Tang, L., Charlin, L., &amp;amp; Blei, D. M. (2015). Deep Exponential Families. In &lt;i&gt;Artificial Intelligence and Statistics&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;rezende2014stochastic&quot;&gt;Rezende, D. J., Mohamed, S., &amp;amp; Wierstra, D. (2014). Stochastic Backpropagation and Approximate Inference in Deep Generative Models. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Tue, 28 Feb 2017 00:00:00 -0800</pubDate>
      </item>
    
      <item>
        <title>Video resources for machine learning (an update)</title>
        <link>http://dustintran.com/blog/video-resources-for-machine-learning-update</link>
        <guid isPermaLink="true">http://dustintran.com/blog/video-resources-for-machine-learning-update</guid>
        <description>&lt;p&gt;Last year I shared my collection of &lt;a href=&quot;/blog/video-resources-for-machine-learning&quot;&gt;video resources for
machine learning&lt;/a&gt;. (I attribute a significant portion of my education to these videos.)&lt;/p&gt;

&lt;p&gt;It was unwieldy taking individual e-mail requests and updating a
time-stamped blog post. So now it’s a Github repo. &lt;a href=&quot;https://github.com/dustinvtran/ml-videos&quot;&gt;Enjoy.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 00:00:00 -0800</pubDate>
      </item>
    
      <item>
        <title>On Model Mismatch and Bayesian Analysis</title>
        <link>http://dustintran.com/blog/on-model-mismatch-and-bayesian-analysis</link>
        <guid isPermaLink="true">http://dustintran.com/blog/on-model-mismatch-and-bayesian-analysis</guid>
        <description>&lt;p&gt;One aspect I always enjoy about machine learning is that questions
often go back to the basics. The field essentially goes into an
existential crisis every dozen years—rethinking our tools and asking foundational questions
such as “why neural networks” or “why generative models”.&lt;sup&gt;1&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;This was a theme in my conversations during
&lt;a href=&quot;https://nips.cc/Conferences/2016&quot;&gt;NIPS 2016&lt;/a&gt; last week, where a
frequent topic was
on the advantages of a Bayesian perspective to machine learning.
Not surprisingly, this appeared as a big discussion point during the
panel at the &lt;a href=&quot;http://bayesiandeeplearning.org&quot;&gt;Bayesian deep learning
workshop&lt;/a&gt;, where many
panelists were conciliatory to the use of non-Bayesian approaches.
(Granted, much of it was Neil trolling them to admit when non-Bayesian
approaches worked better in practice.)&lt;/p&gt;

&lt;p&gt;One argument against Bayesian analysis went as follows:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;While Bayesian inference can capture uncertainty about parameters,
it relies on the model being correctly specified. However, in
practice, all models are wrong. And in fact, this model mismatch can
be often be large enough that we should be more concerned with
calibrating our inferences to correct for the mismatch than to
produce uncertainty estimates from incorrect assumptions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A related complaint was on the separation of model and
inference, a philosophical point commonly associated with Bayesians:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;While in principle it is nice that we can build models separate from
our choice of inference, we often need to combine the two in practice. (The whole
naming behind the popular model-inference classes of “variational
auto-encoders” &lt;a href=&quot;#kingma2014autoencoding&quot;&gt;(Kingma &amp;amp; Welling, 2014)&lt;/a&gt;
and “generative adversarial networks” &lt;a href=&quot;#goodfellow2014generative&quot;&gt;(Goodfellow et al., 2014)&lt;/a&gt; are one
example.) That is, we often choose our model based on what we know
enables fast inferences, or we select hyperparameters in our model
from data. This goes against the Bayesian paradigm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First, I’d like to say immediately that I think interpreting Bayesian
analysis as a two-step procedure of setting up a probability model,
then performing posterior inference is outdated. Certainly this was the
prevailing perspective back in the 80s’ and 90s’ when Markov chain Monte Carlo
was first popularized, and when statisticians started to take Bayesian analysis
more seriously &lt;a href=&quot;#robert2011short&quot;&gt;(Robert &amp;amp; Casella, 2011)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Quoting &lt;a href=&quot;#gelman2012philosophy&quot;&gt;Gelman &amp;amp; Shalizi (2012)&lt;/a&gt;
who summarize this perspective,
“The expression &lt;script type=&quot;math/tex&quot;&gt;p(\theta\mid y)&lt;/script&gt; says it all, and the central goal of Bayesian inference is computing the posterior probabilities of hypotheses. Anything not contained in the posterior distribution &lt;script type=&quot;math/tex&quot;&gt;p(\theta\mid y)&lt;/script&gt; is simply irrelevant, and it would be irrational (or incoherent) to attempt falsification, unless that somehow shows up in the posterior.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like many statisticians before me&lt;/strong&gt;
(e.g., &lt;a href=&quot;#box1980sampling&quot;&gt;Box (1980)&lt;/a&gt;,
&lt;a href=&quot;#good1983good&quot;&gt;Good (1983)&lt;/a&gt;,
&lt;a href=&quot;#rubin1984bayesianly&quot;&gt;Rubin (1984)&lt;/a&gt;,
&lt;a href=&quot;#jaynes2003probability&quot;&gt;Jaynes (2003)&lt;/a&gt;),
&lt;strong&gt;I believe this perspective is wrong. Bayesian analysis is no
different in its testing and falsification of models than any other
inferential paradigm&lt;/strong&gt;
(&lt;a href=&quot;#fisher1925statistical&quot;&gt;Fisher (1925)&lt;/a&gt;,
&lt;a href=&quot;#neyman1933on&quot;&gt;Neyman &amp;amp; Pearson (1933)&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;An important third step to all empirical analyses is &lt;em&gt;model criticism&lt;/em&gt;
(&lt;a href=&quot;#box1980sampling&quot;&gt;Box (1980)&lt;/a&gt;,
&lt;a href=&quot;#ohagan2011hsss&quot;&gt;O’Hagan (2001)&lt;/a&gt;
),
also known as model
validation, or model
checking and diagnostics
(&lt;a href=&quot;#rubin1984bayesianly&quot;&gt;Rubin (1984)&lt;/a&gt;,
&lt;a href=&quot;#meng1994posterior&quot;&gt;Meng (1994)&lt;/a&gt;,
&lt;a href=&quot;#gelman1996posterior&quot;&gt;Gelman, Meng, &amp;amp; Stern (1996)&lt;/a&gt;).
In criticizing our models after inference, we can either justify
use of the model or find directions in which we can revise the model.
By revising the model, we go back to the modeling step, thus forming
a loop, called &lt;em&gt;Box’s loop&lt;/em&gt;
(&lt;a href=&quot;#box1976science&quot;&gt;Box (1976)&lt;/a&gt;,
&lt;a href=&quot;#blei2014build&quot;&gt;Blei (2014)&lt;/a&gt;,
&lt;a href=&quot;#gelman2013bayesian&quot;&gt;Gelman et al. (2013)&lt;/a&gt;).
&lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;From my perspective, this solves the perceived problem of conflating
model and inference, whether it be to address model mismatch or to
build the model from previous inferences or data.
That is, while
posterior inference is simply a mechanical step of calculating a
conditional distribution, the
step of model criticism is about the relevance of the model to future
data—to put it in statistical terms, the relevance of the model with
respect to a population distribution
&lt;a href=&quot;#wasserman2006frequentist&quot;&gt;(Wasserman, 2006)&lt;/a&gt;.
As with data, the model is
just a source of information, and posterior inference simply aggregates these
two sources of information. Thus it
makes sense that as we better understand properties of the data, we
can revise our information to better formulate a model of it
&lt;a href=&quot;#tukey1977exploratory&quot;&gt;(Tukey, 1977)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This might sound like an awkward way to shoehorn Bayesian analysis to
mimick frequentist properties, or no different from combining model
and inference from the get-go.
However, this loop is fundamental because it still emphasizes the
importance of separating the two.  We can continue to form
hypothetico-deductive analyses—namely, a falsificationist view of
the world where components of model, inference, and criticism
interact—while still incorporating posterior probabilities.&lt;/p&gt;

&lt;p&gt;For more details, I highly recommend
&lt;a href=&quot;#gelman2012philosophy&quot;&gt;Gelman &amp;amp; Shalizi (2012)&lt;/a&gt;
and of course the classic,
&lt;a href=&quot;#rubin1984bayesianly&quot;&gt;Rubin (1984)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;
I take an optimistic viewpoint to the trend of cycling among tools for
machine learning. The trend is based on what works best empirically,
and I think that’s important.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;
As a plug, I should also mention that this is what &lt;a href=&quot;http://edwardlib.org&quot;&gt;Edward&lt;/a&gt; is all about.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;blei2014build&quot;&gt;Blei, D. M. (2014). Build, compute, critique, repeat: Data analysis with latent variable models. &lt;i&gt;Annual Review of Statistics and Its Application&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;box1980sampling&quot;&gt;Box, G. E. P. (1980). Sampling and Bayes’ inference in scientific modelling and robustness. &lt;i&gt;Journal of the Royal Statistical Society. Series A. General&lt;/i&gt;, &lt;i&gt;143&lt;/i&gt;(4), 383–430.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;box1976science&quot;&gt;Box, G. E. P. (1976). Science and statistics. &lt;i&gt;Journal of the American Statistical Association&lt;/i&gt;, &lt;i&gt;71&lt;/i&gt;(356), 791–799.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;fisher1925statistical&quot;&gt;Fisher, R. A. (1925). &lt;i&gt;Statistical Methods for Research Workers&lt;/i&gt;. Genesis Publishing Pvt Ltd.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;gelman2013bayesian&quot;&gt;Gelman, A., Carlin, J. B., Stern, H. S., Dunson, D. B., Vehtari, A., &amp;amp; Rubin, D. B. (2013). &lt;i&gt;Bayesian data analysis&lt;/i&gt; (Third). CRC Press, Boca Raton, FL.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;gelman1996posterior&quot;&gt;Gelman, A., Meng, X.-L., &amp;amp; Stern, H. (1996). Posterior predictive assessment of model fitness via realized discrepancies. &lt;i&gt;Statistica Sinica&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;gelman2012philosophy&quot;&gt;Gelman, A., &amp;amp; Shalizi, C. R. (2012). Philosophy and the practice of Bayesian statistics. &lt;i&gt;British Journal of Mathematical and Statistical Psychology&lt;/i&gt;, &lt;i&gt;66&lt;/i&gt;(1), 8–38.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;good1983good&quot;&gt;Good, I. J. (1983). &lt;i&gt;Good thinking: The foundations of probability and its applications&lt;/i&gt;. U of Minnesota Press.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;goodfellow2014generative&quot;&gt;Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … Bengio, Y. (2014). Generative Adversarial Nets. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;jaynes2003probability&quot;&gt;Jaynes, E. T. (2003). Probability theory: The logic of science. Washington University St. Louis, MO.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;kingma2014autoencoding&quot;&gt;Kingma, D. P., &amp;amp; Welling, M. (2014). Auto-Encoding Variational Bayes. In &lt;i&gt;International Conference on Learning Representations&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;meng1994posterior&quot;&gt;Meng, X.-L. (1994). Posterior predictive p-values. &lt;i&gt;The Annals of Statistics&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;neyman1933on&quot;&gt;Neyman, J., &amp;amp; Pearson, E. S. (1933). On the Problem of the Most Efficient Tests of Statistical Hypotheses. &lt;i&gt;Philosophical Transactions of the Royal Society A Mathematical, Physical and Engineering Sciences&lt;/i&gt;, &lt;i&gt;231&lt;/i&gt;, 289–337.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;ohagan2011hsss&quot;&gt;O’Hagan, A. (2001). &lt;i&gt;HSSS model criticism&lt;/i&gt;. University of Sheffield, Department of Probability and Statistics.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;robert2011short&quot;&gt;Robert, C., &amp;amp; Casella, G. (2011). A short history of Markov Chain Monte Carlo: subjective recollections from incomplete data. &lt;i&gt;Statistical Science&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;rubin1984bayesianly&quot;&gt;Rubin, D. B. (1984). Bayesianly justifiable and relevant frequency calculations for the applied statistician. &lt;i&gt;The Annals of Statistics&lt;/i&gt;, &lt;i&gt;12&lt;/i&gt;(4), 1151–1172.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tukey1977exploratory&quot;&gt;Tukey, J. W. (1977). Exploratory data analysis.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;wasserman2006frequentist&quot;&gt;Wasserman, L. (2006). Frequentist Bayes is objective (comment on articles by Berger and by Goldstein). &lt;i&gt;Bayesian Analysis&lt;/i&gt;, &lt;i&gt;1&lt;/i&gt;(3), 451–456.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Tue, 13 Dec 2016 00:00:00 -0800</pubDate>
      </item>
    
      <item>
        <title>Two papers released on arXiv, &quot;Operator Variational Inference&quot; and &quot;Model Criticism for Bayesian Causal Inference&quot;</title>
        <link>http://dustintran.com/blog/two-papers-released-on-arxiv</link>
        <guid isPermaLink="true">http://dustintran.com/blog/two-papers-released-on-arxiv</guid>
        <description>&lt;p&gt;Two papers of mine were released today on arXiv.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1610.09033&quot;&gt;Operator variational inference&lt;/a&gt;, in collaboration with Rajesh Ranganath, Jaan Altosaar, and David Blei.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1610.09037&quot;&gt;Model criticism for Bayesian causal inference&lt;/a&gt;, in collaboration with Francisco Ruiz, Susan Athey, and David Blei.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Last week, I gave a talk at OpenAI on operator variational
inference and Edward. I can now release those
&lt;a href=&quot;http://dustintran.com/talks/Tran_Operator_Edward.pdf&quot;&gt;slides online&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;operator-variational-inference&quot;&gt;Operator variational inference&lt;/h2&gt;

&lt;p&gt;Operator VI is a paper I’m really excited about. It is at
&lt;a href=&quot;https://nips.cc&quot;&gt;NIPS&lt;/a&gt; this year. Most directly, it’s a continuation of work that
Rajesh and I have been developing on the aim for more expressive
approximations for variational inference.  We’ve seen this with the
variational Gaussian process &lt;a href=&quot;#tran2016variational&quot;&gt;(Tran, Ranganath, &amp;amp; Blei, 2016)&lt;/a&gt; and hierarchical variational models &lt;a href=&quot;#ranganath2016hierarchical&quot;&gt;(Ranganath, Tran, &amp;amp; Blei, 2016)&lt;/a&gt; (and if you’ve
read my older work, copula variational inference
&lt;a href=&quot;#tran2015copula&quot;&gt;(Tran, Blei, &amp;amp; Airoldi, 2015)&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;More generally, in variational inference, we always make tradeoffs
between the statistical efficiency of the approximation and the
computational complexity of the algorithm. (This is partly what Andrew
Gelman calls the “efficiency frontier”.) However, we don’t quite have
a knob for controlling this tradeoff, nor do we have a way of even
formalizing these notions.&lt;/p&gt;

&lt;p&gt;Operator VI is a proposed solution to this problem. It formalizes
these tradeoffs, and it analyzes how we can characterize different
approaches to variational inference in order to achieve specific
aims. As one example, we show how to develop the most expressive
posterior approximations, which we call “variational programs”.
Variational programs do not require a tractable density, and they bring
variational inference closer to powerful inferential techniques as in
generative adversarial networks
&lt;a href=&quot;#goodfellow2014generative&quot;&gt;(Goodfellow et al., 2014)&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;model-criticism-for-bayesian-causal-inference&quot;&gt;Model criticism for Bayesian causal inference&lt;/h2&gt;

&lt;p&gt;To me, causal inference is one of the most interesting fields in statistics
and machine learning, and with the greatest potential for long term impact.
It can significantly speed up progress towards something like
artificial general intelligence (and is arguably necessary to achieve it). And most immediately, it enables richer
data analyses to capture scientific phenomena. In order for our models
to truly infer generative processes, they must understand and learn
causal notions of the world.&lt;/p&gt;

&lt;p&gt;Much of the work in the causal inference community has focused on
nonparametric models, which make few modeling assumptions. They
satisfy theoretic notions such as asymptotics and can perform well on
small-to-medium size data sets (a typical setting setting in applied
causal inference). However, in higher-dimensional and massive data
settings, we require more complex generative models,
as we’ve seen in probabilistic machine learning.&lt;/p&gt;

&lt;p&gt;There’s a caveat to this. Before being able to build rich, complex (and possibly deep)
causal models, we first need a way of evaluating them.  This arXiv
paper addresses that issue. It is a foundational question
more generally in the area of model criticism, also known as model
checking and diagnostics. We ask the question, “To what extent
is my model falsified by the empirical data?”. By answering it, we can
probe different assumptions in our model and possibly revise them,
thus better capturing causal mechanisms.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;goodfellow2014generative&quot;&gt;Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … Bengio, Y. (2014). Generative adversarial nets. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;ranganath2016hierarchical&quot;&gt;Ranganath, R., Tran, D., &amp;amp; Blei, D. M. (2016). Hierarchical variational models. In &lt;i&gt;International Conference on Machine Learning&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tran2015copula&quot;&gt;Tran, D., Blei, D. M., &amp;amp; Airoldi, E. M. (2015). Copula variational inference. In &lt;i&gt;Neural Information Processing Systems&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tran2016variational&quot;&gt;Tran, D., Ranganath, R., &amp;amp; Blei, D. M. (2016). The variational Gaussian process. In &lt;i&gt;International Conference on Learning Representations&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Sun, 30 Oct 2016 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>NIPS 2016 Workshop on Approximate Inference</title>
        <link>http://dustintran.com/blog/nips-2016-workshop-on-approximate-inference</link>
        <guid isPermaLink="true">http://dustintran.com/blog/nips-2016-workshop-on-approximate-inference</guid>
        <description>&lt;p&gt;We’re organizing a NIPS workshop on approximate inference. It is together with Tamara Broderick, Stephan Mandt, and James McInerney—and alongside an incredible cast of seminal researchers: David Blei, Andrew Gelman, Mike Jordan, and Kevin Murphy. [&lt;a href=&quot;http://approximateinference.org&quot;&gt;Workshop homepage&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;This year, we set a theme based on what we believe are some of the most important challenges. In particular, there’s an emphasis on the practice of approximate inference, whether it be challenges which arise in applications or in software. Advances in both methodology and theory are of course crucial to achieve this end-goal; we also highly encourage such work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We have (quite a few!) travel awards. If you’re interested in applying, the travel
award and early application deadline is October 7.&lt;/p&gt;

&lt;p&gt;Call for papers below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;We invite researchers in machine learning and statistics to participate in the:

NIPS 2016 Workshop on Advances in Approximate Bayesian Inference
Friday 9 December 2016, Barcelona, Spain
www.approximateinference.org
Submission deadline: 1 November 2016

1. Call for Participation

We invite researchers to submit their recent work on the development, analysis, or application of approximate Bayesian inference. A submission should take the form of an extended abstract of 2-4 pages in PDF format using the NIPS style. Author names do not need to be anonymized and references may extend as far as needed beyond the 4 page upper limit. If authors' research has previously appeared in a journal, workshop, or conference (including the NIPS 2016 conference), their workshop submission should extend that previous work. Submissions may include a supplement/appendix, but reviewers are not responsible for reading any supplementary material.

Submissions will be accepted either as contributed talks or poster presentations. Extended abstracts should be submitted by 1 November; see website for submission details. Final versions of the extended abstract are due by 5 December, and will be posted on the workshop website.

2. Workshop Overview

Bayesian analysis has seen a resurgence in machine learning, expanding its scope beyond traditional applications. Increasingly complex models have been trained with large and streaming data sets, and they have been applied to a diverse range of domains. Key to this resurgence has been advances in approximate Bayesian inference. Variational and Monte Carlo methods are currently the mainstay techniques, where recent insights have improved their approximation quality, provided black box strategies for fitting many models, and enabled scalable computation.

In this year's workshop, we would like to continue the theme of approximate Bayesian inference with additional emphases. In particular, we encourage submissions not only advancing approximate inference but also regarding (1) unconventional inference techniques, with the aim to bring together diverse communities; (2) software tools for both the applied and methodological researcher; and (3) challenges in applications, both in non-traditional domains and when applying these techniques to advance current domains.

This workshop is a continuation of past years:
+ NIPS 2015 Workshop: Advances in Approximate Bayesian Inference
+ NIPS 2014 Workshop: Advances in Variational Inference
This workshop has been endorsed by the International Society for Bayesian Analysis (ISBA) and is supported by Disney Research.

3. Confirmed Speakers and Panelists

Invited speakers:
Barbara Engelhardt (Princeton University)
Surya Ganguli (Stanford University)
Jonathan Huggins (MIT)
Jeffrey Regier (UC Berkeley)
Matthew Johnson (Harvard University)

Panel: Software
TBA (Stan)
Noah Goodman (WebPPL; Stanford University)
Dustin Tran (Edward; Columbia University)
TBA (TensorFlow, BayesFlow; Google)
Michael Hughes (BNPy; Harvard University)

Panel: On the Foundations and Future of Approximate Inference
Ryan Adams (Harvard University, Twitter Cortex)
Barbara Engelhardt (Princeton University)
Philip Hennig (Max Planck Institute for Intelligent Systems)
Richard Turner (University of Cambridge)
Neil Lawrence (University of Sheffield)

4. Key Dates

Travel award application deadline: 7 October 2016
Early acceptance notification: 7 October 2016
Paper submission: 1 November 2016
Acceptance notification: 16 November 2016
Travel award notification: 16 November 2016
Final paper submission: 5 December 2016

Workshop organizers:
Tamara Broderick (MIT)
Stephan Mandt (Disney Research)
James McInerney (Columbia University)
Dustin Tran (Columbia University)

Advisory committee:
David Blei (Columbia University)
Andrew Gelman (Columbia University)
Michael Jordan (UC Berkeley)
Kevin Murphy (Google)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 30 Sep 2016 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>Discussion of &quot;Fast Approximate Inference for Arbitrarily Large Semiparametric Regression Models via Message Passing&quot;</title>
        <link>http://dustintran.com/blog/discussion-of-fast-approximate-inference</link>
        <guid isPermaLink="true">http://dustintran.com/blog/discussion-of-fast-approximate-inference</guid>
        <description>&lt;p&gt;&lt;em&gt;This article is written with much help by David Blei. It is extracted from a discussion paper on “Fast Approximate Inference for Arbitrarily Large Semiparametric Regression Models via Message Passing”.&lt;/em&gt; &lt;a href=&quot;http://arxiv.org/abs/1609.05615&quot;&gt;[link]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We commend &lt;a href=&quot;#wand2016fast&quot;&gt;Wand (2016)&lt;/a&gt; for an excellent description of
message passing (&lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt;) and for developing it to infer large semiparametric
regression models.  We agree with the author in fully embracing the
modular nature of message passing, where one can define “fragments”
that enable us to compose localized algorithms.  We believe this
perspective can aid in the development of new algorithms for automated
inference.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Automated inference.&lt;/strong&gt;  The promise of automated algorithms is
that modeling and inference can be separated. A user can construct
large, complicated models in accordance with the assumptions he or she
is willing to make about their data. Then the user can use generic
inference algorithms as a computational backend in a “probabilistic
programming language,” i.e., a language for specifying generative
probability models.&lt;/p&gt;

&lt;p&gt;With probabilistic programming, the user no longer has to write their
own algorithms, which may require tedious model-specific derivations
and implementations. In the same spirit, the user no longer has to
bottleneck their modeling choices in order to fit the requirements of
an existing model-specific algorithm.  Automated inference enables
probabilistic programming systems, such as
Stan &lt;a href=&quot;#carpenter2016stan&quot;&gt;(Carpenter et al., 2016)&lt;/a&gt;, through methods like
automatic differentiation variational inference (&lt;span style=&quot;font-variant:small-caps;&quot;&gt;advi&lt;/span&gt;) &lt;a href=&quot;#kucukelbir2016automatic&quot;&gt;(Kucukelbir, Tran, Ranganath, Gelman, &amp;amp; Blei, 2016)&lt;/a&gt; and
no U-turn sampler (&lt;span style=&quot;font-variant:small-caps;&quot;&gt;nuts&lt;/span&gt;) &lt;a href=&quot;#hoffman2014nuts&quot;&gt;(Hoffman &amp;amp; Gelman, 2014)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Though they aim to apply to a large class of models, automated
inference algorithms typically need to incorporate modeling structure
in order to remain practical. For example, Stan assumes that one can
at least take gradients of a model’s joint density. (Contrast this
with other languages which assume one can only sample from the model.)
However, more structure is often necessary: &lt;span style=&quot;font-variant:small-caps;&quot;&gt;advi&lt;/span&gt; and &lt;span style=&quot;font-variant:small-caps;&quot;&gt;nuts&lt;/span&gt;
are not fast enough by themselves to infer very large models, such as
hierarchical models with many groups.&lt;/p&gt;

&lt;p&gt;We believe &lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt; and Wand’s work could offer fruitful avenues for
expanding the frontiers of automated inference. From our perspective,
a core principle underlying &lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt; is to leverage structure when it
is available—in particular, statistical properties in the model—which provides useful computational properties.  In &lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt;, two
examples are conditional independence and conditional conjugacy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;From conditional independence to distributed computation.&lt;/strong&gt;
As &lt;a href=&quot;#wand2016fast&quot;&gt;Wand (2016)&lt;/a&gt; indicates, a crucial advantage of message
passing is that it modularizes inference; the computation can be
performed separately over conditionally independent posterior
factors. By definition, conditional independence separates a posterior
factor from the rest of the model, which enables &lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt; to define a
series of iterative updates. These updates can be run asynchronously
and in a distributed environment.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;/blog/assets/2016-09-19-figure.png&quot; style=&quot;width:200px;&quot; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;em&gt;Figure 1.
A hierarchical model, with latent variables &lt;script type=&quot;math/tex&quot;&gt;\alpha_k&lt;/script&gt; defined locally
per group and latent variables &lt;script type=&quot;math/tex&quot;&gt;\phi&lt;/script&gt; defined globally to be shared across groups.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We are motivated by hierarchical models, which substantially benefit
from this property. Formally, let &lt;script type=&quot;math/tex&quot;&gt;y_{nk}&lt;/script&gt; be the &lt;script type=&quot;math/tex&quot;&gt;n^{th}&lt;/script&gt; data
point in group &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;, with a total of &lt;script type=&quot;math/tex&quot;&gt;N_k&lt;/script&gt; data points in group &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; and
&lt;script type=&quot;math/tex&quot;&gt;K&lt;/script&gt; many groups. We model the data using local latent variables
&lt;script type=&quot;math/tex&quot;&gt;\alpha_k&lt;/script&gt; associated to a group &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt;, and using global latent
variables &lt;script type=&quot;math/tex&quot;&gt;\phi&lt;/script&gt; which are shared across groups. The model is depicted
in Figure 1.&lt;/p&gt;

&lt;p&gt;The posterior distribution of local variables &lt;script type=&quot;math/tex&quot;&gt;\alpha_k&lt;/script&gt; and global
variables &lt;script type=&quot;math/tex&quot;&gt;\phi&lt;/script&gt; is&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(\alpha,\phi\mid\mathbf{y}) \propto
p(\phi\mid\mathbf{y}) \prod_{k=1}^K
\Big[ p(\alpha_k\mid \beta) \prod_{n=1}^{N_K} p(y_{nk}\mid\alpha_k,\phi) \Big].&lt;/script&gt;

&lt;p&gt;The benefit of distributed updates over the independent factors is
immediate. For example, suppose the data consists of 1,000 data points
per group (with 5,000 groups); we model it with 2 latent variables per
group and 20 global latent variables.  Passing messages, or
inferential updates, in parallel provides an attractive approach to
handling all 10,020 latent dimensions. (In contrast, consider a
sequential algorithm that requires taking 10,019 steps for all other
variables before repeating an update of the first.)&lt;/p&gt;

&lt;p&gt;While this approach to leveraging conditional independence is
straightforward from the message passing perspective, it is not
necessarily immediate from other perspectives.  For example, the
statistics literature has only recently come to similar ideas,
motivated by scaling up Markov chain Monte Carlo using divide and
conquer strategies &lt;a href=&quot;#huang2005sampling&quot;&gt;(Huang &amp;amp; Gelman, 2005; Wang &amp;amp; Dunson, 2013)&lt;/a&gt;.
These first analyze data locally over a partition of the joint
density, and second aggregate the local inferences.  In our work in
&lt;a href=&quot;#gelman2014expectation&quot;&gt;Gelman et al. (2014)&lt;/a&gt;, we arrive at the continuation of this
idea. Like message passing, the process is iterated, so that local
information propagates to global information and global information
propagates to local information. In doing so, we obtain a scalable
approach to Monte Carlo inference, both from a top-down view which
deals with fitting statistical models to large data sets and from a
bottom-up view which deals with combining information across local
sources of data and models.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;From conditional conjugacy to exact iterative updates.&lt;/strong&gt;
Another important element of message passing algorithms is conditional
conjugacy, which lets us easily calculate the exact distribution for a
posterior factor conditional on other latent variables. This enables
analytically tractable messages (c.f., Equations (7)-(8) of
&lt;a href=&quot;#wand2016fast&quot;&gt;Wand (2016)&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Consider the same hierarchical model discussed above, and set&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(y_k,\alpha_k\mid \phi)
= h(y_k, \alpha_k) \exp\{\phi^\top t(y_k, \alpha_k) - a(\phi)\},&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(\phi)
= h(\phi) \exp\{\eta^{(0) \top} t(\phi) - a(\eta_0)\}
.&lt;/script&gt;

&lt;p&gt;The local factor &lt;script type=&quot;math/tex&quot;&gt;p(y_k,\alpha_k\mid\phi)&lt;/script&gt; has sufficient statistics
&lt;script type=&quot;math/tex&quot;&gt;t(y_k,\alpha_k)&lt;/script&gt; and natural parameters given by the global latent
variable &lt;script type=&quot;math/tex&quot;&gt;\phi&lt;/script&gt;.  The global factor &lt;script type=&quot;math/tex&quot;&gt;p(\phi)&lt;/script&gt; has sufficient
statistics &lt;script type=&quot;math/tex&quot;&gt;t(\phi) = (\phi, -a(\phi))&lt;/script&gt;, and with fixed
hyperparameters &lt;script type=&quot;math/tex&quot;&gt;\eta^{(0)}&lt;/script&gt;, which has two components: &lt;script type=&quot;math/tex&quot;&gt;\eta^{(0)} =
(\eta^{(0)}_1,\eta^{(0)}_2)&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;This exponential family structure implies that, conditionally, the
posterior factors are also in the same exponential families
as the prior factors &lt;a href=&quot;#diaconis1979conjugate&quot;&gt;(Diaconis &amp;amp; Ylvisaker, 1979)&lt;/a&gt;,&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(\phi\mid\mathbf{y},\alpha)
= h(\phi) \exp\{\eta(\mathbf{y},\alpha)^\top t(\phi) - a(\mathbf{y},\alpha)\},&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(\alpha_k\mid y_k, \phi)
= h(\alpha_k) \exp\{\eta(y_k, \phi)^\top t(\alpha_k) - a(y_k, \phi)\}
.&lt;/script&gt;

&lt;p&gt;The global factor’s natural parameter is &lt;script type=&quot;math/tex&quot;&gt;\eta(\mathbf{y},\alpha) =
(\eta^{(0)}_1 + \sum_{k=1}^K t(y_k, \alpha_k), \eta^{(0)}_2 + \sum_{k=1}^K N_k)&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;With this statistical property at play—namely that conjugacy gives
rise to tractable conditional posterior factors—we can derive
algorithms at a conditional level with exact iterative updates.  This
is assumed for most of the message passing of semiparametric models in
&lt;a href=&quot;#wand2016fast&quot;&gt;Wand (2016)&lt;/a&gt;.  Importantly, this is not necessarily a
limitation of the algorithm. It is a testament to leveraging model
structure: without access to tractable conditional posteriors,
additional approximations must be made.  &lt;a href=&quot;#wand2016fast&quot;&gt;Wand (2016)&lt;/a&gt; provides
an elegant way to separate out these nonconjugate pieces from the
conjugate pieces.&lt;/p&gt;

&lt;p&gt;In statistics, the most well-known example which leverages
conditionally conjugate factors is the Gibbs sampling algorithm.  From
our own work, we apply the idea in order to access fast natural
gradients in variational inference, which accounts for the information
geometry of the parameter space &lt;a href=&quot;#hoffman2013stochastic&quot;&gt;(Hoffman, Blei, Wang, &amp;amp; Paisley, 2013)&lt;/a&gt;.  In
other work, we demonstrate a collection of methods for gradient-based
marginal optimization &lt;a href=&quot;#tran2016gradient&quot;&gt;(Tran, Gelman, &amp;amp; Vehtari, 2016)&lt;/a&gt;.  Assuming forms of
conjugacy in the model class arrives at the classic idea of
iteratively reweighted least squares as well as the EM algorithm. Such
structure in the model provides efficient algorithms—both
statistically and computationally—for their automated inference.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Challenges and Future Directions.&lt;/strong&gt; Message passing is a
classic algorithm in the computer science literature, which is ripe
with interesting ideas for statistical inference. In particular,
&lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt; enables new advancements in the realm of automated inference,
where one can take advantage of statistical structure in the model.
&lt;a href=&quot;#wand2016fast&quot;&gt;Wand (2016)&lt;/a&gt; makes great steps following this direction.&lt;/p&gt;

&lt;p&gt;With that said, important open challenges still exist in order to
realize this fusion.&lt;/p&gt;

&lt;p&gt;First is about the design and implementation of probabilistic
programming languages. In order to implement &lt;a href=&quot;#wand2016fast&quot;&gt;Wand (2016)&lt;/a&gt;’s
message passing, the language must provide ways of identifying local
structure in a probabilistic program.  While that is enough to let
practitioners use &lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt;, a much larger challenge is to
then automate the process of detecting local structure.&lt;/p&gt;

&lt;p&gt;Second is about the design and implementation of inference engines.
The inference must be extensible, so that users can not only employ
the algorithm in &lt;a href=&quot;#wand2016fast&quot;&gt;Wand (2016)&lt;/a&gt; but easily build on top of it.
Further, its infrastructure must be able to encompass a variety of
algorithms, so that users can incorporate &lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt; as one of many
tools in their toolbox.&lt;/p&gt;

&lt;p&gt;Third, we think there are innovations to be made on taking the stance
of modularity to a further extreme. In principle, one can compose not
only localized message passing updates but compose localized inference
algorithms of any choice—whether it be exact inference, Monte Carlo,
or variational methods.  This modularity will enable new
experimentation with inference hybrids and can bridge the gap among
inference methods.&lt;/p&gt;

&lt;p&gt;Finally, while we discuss &lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt; in the context of automation,
fully automatic algorithms are not possible. Associated to all
inference are statistical and computational
tradeoffs &lt;a href=&quot;#jordan2013statistics&quot;&gt;(Jordan, 2013)&lt;/a&gt;.  Thus we need algorithms along
the frontier, where a user can explicitly define a computational
budget and employ an algorithm achieving the best statistical
properties within that budget; or conversely, define desired
statistical properties and employ the fastest algorithm to achieve
them.  We think ideas in &lt;span style=&quot;font-variant:small-caps;&quot;&gt;mp&lt;/span&gt; will also help in developing some of
these algorithms.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;carpenter2016stan&quot;&gt;Carpenter, B., Gelman, A., Hoffman, M. D., Lee, D., Goodrich, B., Betancourt, M., … Riddell, A. (2016). Stan: A probabilistic programming language. &lt;i&gt;Journal of Statistical Software&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;diaconis1979conjugate&quot;&gt;Diaconis, P., &amp;amp; Ylvisaker, D. (1979). Conjugate Priors for Exponential Families. &lt;i&gt;The Annals of Statistics&lt;/i&gt;, &lt;i&gt;7&lt;/i&gt;(2), 269–281.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;gelman2014expectation&quot;&gt;Gelman, A., Vehtari, A., Jylänki, P., Robert, C., Chopin, N., &amp;amp; Cunningham, J. P. (2014). Expectation propagation as a way of life. &lt;i&gt;ArXiv Preprint ArXiv:1412.4869&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;hoffman2013stochastic&quot;&gt;Hoffman, M. D., Blei, D. M., Wang, C., &amp;amp; Paisley, J. (2013). Stochastic Variational Inference. &lt;i&gt;Journal of Machine Learning Research&lt;/i&gt;, &lt;i&gt;14&lt;/i&gt;, 1303–1347.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;hoffman2014nuts&quot;&gt;Hoffman, M. D., &amp;amp; Gelman, A. (2014). The no-U-turn sampler: adaptively setting path lengths in Hamiltonian Monte Carlo. &lt;i&gt;Journal of Machine Learning Research&lt;/i&gt;, &lt;i&gt;15&lt;/i&gt;, 1593–1623.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;huang2005sampling&quot;&gt;Huang, Z., &amp;amp; Gelman, A. (2005). Sampling for Bayesian Computation with Large Datasets. &lt;i&gt;SSRN Electronic Journal&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;jordan2013statistics&quot;&gt;Jordan, M. I. (2013). On statistics, computation and scalability. &lt;i&gt;Bernoulli&lt;/i&gt;, &lt;i&gt;19&lt;/i&gt;(4), 1378–1390.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;kucukelbir2016automatic&quot;&gt;Kucukelbir, A., Tran, D., Ranganath, R., Gelman, A., &amp;amp; Blei, D. M. (2016). Automatic Differentiation Variational Inference. &lt;i&gt;ArXiv Preprint ArXiv:1603.00788&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;tran2016gradient&quot;&gt;Tran, D., Gelman, A., &amp;amp; Vehtari, A. (2016). Gradient-based marginal optimization. &lt;i&gt;Technical Report&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;wand2016fast&quot;&gt;Wand, M. P. (2016). Fast Approximate Inference for Arbitrarily Large Semiparametric Regression Models via Message Passing. &lt;i&gt;ArXiv Preprint ArXiv:1602.07412&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;wang2013parallelizing&quot;&gt;Wang, X., &amp;amp; Dunson, D. B. (2013). Parallelizing MCMC via Weierstrass sampler. &lt;i&gt;ArXiv Preprint ArXiv:1312.4605&lt;/i&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Mon, 19 Sep 2016 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>Blog has migrated from Ghost to Jekyll</title>
        <link>http://dustintran.com/blog/blog-has-migrated-from-ghost-to-jekyll</link>
        <guid isPermaLink="true">http://dustintran.com/blog/blog-has-migrated-from-ghost-to-jekyll</guid>
        <description>&lt;p&gt;In the past few days I spent time migrating the blog from
&lt;a href=&quot;https://ghost.org&quot;&gt;Ghost&lt;/a&gt; to &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The theme builds off
&lt;a href=&quot;https://rohanchandra.github.io/project/type/&quot;&gt;Type Theme&lt;/a&gt;, and is
heavily inspired by &lt;a href=&quot;http://blog.otoro.net/&quot;&gt;Otoro&lt;/a&gt;, the &lt;a href=&quot;http://www.nytimes.com/&quot;&gt;New York
Times&lt;/a&gt;, and the
&lt;a href=&quot;http://the-rosenrot.com/&quot;&gt;Rosenrot&lt;/a&gt;. The annals-like frontpage takes
cue from Paul Graham’s &lt;a href=&quot;http://paulgraham.com/articles.html&quot;&gt;essays&lt;/a&gt;
and Cosma Shalizi’s &lt;a href=&quot;http://bactra.org/notebooks/&quot;&gt;notebooks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/2016-08-11-figure1.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/2016-08-11-figure2.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;&lt;center&gt;Top: Old frontpage. Bottom: New frontpage.&lt;/center&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hooray for math! (using KaTeX)&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;E(w_i,c_k,z) = -\sum_{j=1}^z w_{i,j} c_{k,j} + \Big[z\log a -\sum_{j=1}^z (w_{i,j}^2 +  c_{k,j}^2)\Big].&lt;/script&gt;

&lt;p&gt;Hooray for code snippets! (taken from &lt;a href=&quot;http://edwardlib.org/getting-started&quot;&gt;Edward&lt;/a&gt;)&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;Set seed for both NumPy and TensorFlow.

  Parameters
  ----------
  x : int, float
    seed
  &quot;&quot;&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_random_seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hooray for bibliographies!
…
Okay I don’t quite have that one set up yet. But &lt;a href=&quot;https://github.com/inukshuk/jekyll-scholar&quot;&gt;it’s
doable&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The blog’s permalinks are the same. The &lt;a href=&quot;/blog/rss/&quot;&gt;RSS feed&lt;/a&gt; is the same.&lt;/p&gt;

&lt;h2 id=&quot;why-the-change&quot;&gt;Why the change?&lt;/h2&gt;

&lt;p&gt;I liked Ghost, having migrated from Wordpress and with the impression of a
sleeker and more modern content management system (CMS). But CMS’ have
always been a bother for me because I could never understand the
internals. It would always be a reliance on plugins in order to
accomplish things. Even with Ghost some things were too automagical
and hidden to the user.&lt;/p&gt;

&lt;p&gt;Time to go even more bare-bones with a static site generator.
&lt;a href=&quot;https://github.com/dustinvtran/blog&quot;&gt;All code and content for this blog is available&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s to hoping the redesign motivates me to write more often!&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Aug 2016 00:00:00 -0700</pubDate>
      </item>
    
  </channel>
</rss>
