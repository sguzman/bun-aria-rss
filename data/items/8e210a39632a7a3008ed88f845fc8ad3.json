{
  "title": "Use Apache Parquet",
  "link": "",
  "updated": "2017-06-28T00:00:00+00:00",
  "id": "https://mrocklin.github.io/blog/work/2017/06/28/use-parquet",
  "content": "<p><em>This work is supported by <a href=\"http://continuum.io\">Continuum Analytics</a>\nand the Data Driven Discovery Initiative from the <a href=\"https://www.moore.org/\">Moore\nFoundation</a>.</em></p>\n\n<p>This is a tiny blogpost to encourage you to use\n<a href=\"http://parquet.apache.org/\">Parquet</a> instead of CSV for your dataframe\ncomputations.  I’ll use Dask.dataframe here but Pandas would work just as well.\nI’ll also use my local laptop here, but Parquet is an excellent format to use\non a cluster.</p>\n\n<h3 id=\"csv-is-convenient-but-slow\">CSV is convenient, but slow</h3>\n\n<p>I have the NYC taxi cab dataset on my laptop stored as CSV</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mrocklin@carbon:~/data/nyc/csv$ ls\nyellow_tripdata_2015-01.csv  yellow_tripdata_2015-07.csv\nyellow_tripdata_2015-02.csv  yellow_tripdata_2015-08.csv\nyellow_tripdata_2015-03.csv  yellow_tripdata_2015-09.csv\nyellow_tripdata_2015-04.csv  yellow_tripdata_2015-10.csv\nyellow_tripdata_2015-05.csv  yellow_tripdata_2015-11.csv\nyellow_tripdata_2015-06.csv  yellow_tripdata_2015-12.csv\n</code></pre></div></div>\n\n<p>This is a convenient format for humans because we can read it directly.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mrocklin@carbon:~/data/nyc/csv$ head yellow_tripdata_2015-01.csv\nVendorID,tpep_pickup_datetime,tpep_dropoff_datetime,passenger_count,trip_distance,pickup_longitude,pickup_latitude,RateCodeID,store_and_fwd_flag,dropoff_longitude,dropoff_latitude,payment_type,fare_amount,extra,mta_tax,tip_amount,tolls_amount,improvement_surcharge,total_amount\n2,2015-01-15 19:05:39,2015-01-15\n19:23:42,1,1.59,-73.993896484375,40.750110626220703,1,N,-73.974784851074219,40.750617980957031,1,12,1,0.5,3.25,0,0.3,17.05\n1,2015-01-10 20:33:38,2015-01-10\n20:53:28,1,3.30,-74.00164794921875,40.7242431640625,1,N,-73.994415283203125,40.759109497070313,1,14.5,0.5,0.5,2,0,0.3,17.8\n1,2015-01-10 20:33:38,2015-01-10\n20:43:41,1,1.80,-73.963340759277344,40.802787780761719,1,N,-73.951820373535156,40.824413299560547,2,9.5,0.5,0.5,0,0,0.3,10.8\n1,2015-01-10 20:33:39,2015-01-10\n20:35:31,1,.50,-74.009086608886719,40.713817596435547,1,N,-74.004325866699219,40.719985961914063,2,3.5,0.5,0.5,0,0,0.3,4.8\n1,2015-01-10 20:33:39,2015-01-10\n20:52:58,1,3.00,-73.971176147460938,40.762428283691406,1,N,-74.004180908203125,40.742652893066406,2,15,0.5,0.5,0,0,0.3,16.3\n1,2015-01-10 20:33:39,2015-01-10\n20:53:52,1,9.00,-73.874374389648438,40.7740478515625,1,N,-73.986976623535156,40.758193969726563,1,27,0.5,0.5,6.7,5.33,0.3,40.33\n1,2015-01-10 20:33:39,2015-01-10\n20:58:31,1,2.20,-73.9832763671875,40.726009368896484,1,N,-73.992469787597656,40.7496337890625,2,14,0.5,0.5,0,0,0.3,15.3\n1,2015-01-10 20:33:39,2015-01-10\n20:42:20,3,.80,-74.002662658691406,40.734142303466797,1,N,-73.995010375976563,40.726325988769531,1,7,0.5,0.5,1.66,0,0.3,9.96\n1,2015-01-10 20:33:39,2015-01-10\n21:11:35,3,18.20,-73.783042907714844,40.644355773925781,2,N,-73.987594604492187,40.759357452392578,2,52,0,0.5,0,5.33,0.3,58.13\n</code></pre></div></div>\n\n<p>We can use tools like Pandas or Dask.dataframe to read in all of this data.\nBecause the data is large-ish, I’ll use Dask.dataframe</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mrocklin@carbon:~/data/nyc/csv$ du -hs .\n22G .\n</code></pre></div></div>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">dask.dataframe</span> <span class=\"k\">as</span> <span class=\"n\">dd</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"o\">%</span><span class=\"n\">time</span> <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">dd</span><span class=\"p\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s\">'yellow_tripdata_2015-*.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">CPU</span> <span class=\"n\">times</span><span class=\"p\">:</span> <span class=\"n\">user</span> <span class=\"mi\">340</span> <span class=\"n\">ms</span><span class=\"p\">,</span> <span class=\"n\">sys</span><span class=\"p\">:</span> <span class=\"mi\">12</span> <span class=\"n\">ms</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"p\">:</span> <span class=\"mi\">352</span> <span class=\"n\">ms</span>\n<span class=\"n\">Wall</span> <span class=\"n\">time</span><span class=\"p\">:</span> <span class=\"mi\">377</span> <span class=\"n\">ms</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">df</span><span class=\"p\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span>\n<span class=\"n\">VendorID</span> <span class=\"n\">tpep_pickup_datetime</span> <span class=\"n\">tpep_dropoff_datetime</span>  <span class=\"n\">passenger_count</span>  \\\n<span class=\"mi\">0</span>         <span class=\"mi\">2</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mi\">05</span><span class=\"p\">:</span><span class=\"mi\">39</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"mi\">19</span><span class=\"p\">:</span><span class=\"mi\">23</span><span class=\"p\">:</span><span class=\"mi\">42</span>                <span class=\"mi\">1</span>\n<span class=\"mi\">1</span>         <span class=\"mi\">1</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">33</span><span class=\"p\">:</span><span class=\"mi\">38</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">53</span><span class=\"p\">:</span><span class=\"mi\">28</span>                <span class=\"mi\">1</span>\n<span class=\"mi\">2</span>         <span class=\"mi\">1</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">33</span><span class=\"p\">:</span><span class=\"mi\">38</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">43</span><span class=\"p\">:</span><span class=\"mi\">41</span>                <span class=\"mi\">1</span>\n<span class=\"mi\">3</span>         <span class=\"mi\">1</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">33</span><span class=\"p\">:</span><span class=\"mi\">39</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">35</span><span class=\"p\">:</span><span class=\"mi\">31</span>                <span class=\"mi\">1</span>\n<span class=\"mi\">4</span>         <span class=\"mi\">1</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">33</span><span class=\"p\">:</span><span class=\"mi\">39</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">10</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">52</span><span class=\"p\">:</span><span class=\"mi\">58</span>                <span class=\"mi\">1</span>\n\n   <span class=\"n\">trip_distance</span>  <span class=\"n\">pickup_longitude</span>  <span class=\"n\">pickup_latitude</span>  <span class=\"n\">RateCodeID</span>  \\\n<span class=\"mi\">0</span>           <span class=\"mf\">1.59</span>        <span class=\"o\">-</span><span class=\"mf\">73.993896</span>        <span class=\"mf\">40.750111</span>           <span class=\"mi\">1</span>\n<span class=\"mi\">1</span>           <span class=\"mf\">3.30</span>        <span class=\"o\">-</span><span class=\"mf\">74.001648</span>        <span class=\"mf\">40.724243</span>           <span class=\"mi\">1</span>\n<span class=\"mi\">2</span>           <span class=\"mf\">1.80</span>        <span class=\"o\">-</span><span class=\"mf\">73.963341</span>        <span class=\"mf\">40.802788</span>           <span class=\"mi\">1</span>\n<span class=\"mi\">3</span>           <span class=\"mf\">0.50</span>        <span class=\"o\">-</span><span class=\"mf\">74.009087</span>        <span class=\"mf\">40.713818</span>           <span class=\"mi\">1</span>\n<span class=\"mi\">4</span>           <span class=\"mf\">3.00</span>        <span class=\"o\">-</span><span class=\"mf\">73.971176</span>        <span class=\"mf\">40.762428</span>           <span class=\"mi\">1</span>\n\n  <span class=\"n\">store_and_fwd_flag</span>  <span class=\"n\">dropoff_longitude</span>  <span class=\"n\">dropoff_latitude</span>  <span class=\"n\">payment_type</span> \\\n<span class=\"mi\">0</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">73.974785</span>         <span class=\"mf\">40.750618</span>             <span class=\"mi\">1</span>\n<span class=\"mi\">1</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">73.994415</span>         <span class=\"mf\">40.759109</span>             <span class=\"mi\">1</span>\n<span class=\"mi\">2</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">73.951820</span>         <span class=\"mf\">40.824413</span>             <span class=\"mi\">2</span>\n<span class=\"mi\">3</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">74.004326</span>         <span class=\"mf\">40.719986</span>             <span class=\"mi\">2</span>\n<span class=\"mi\">4</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">74.004181</span>         <span class=\"mf\">40.742653</span>             <span class=\"mi\">2</span>\n\n   <span class=\"n\">fare_amount</span>  <span class=\"n\">extra</span>  <span class=\"n\">mta_tax</span>  <span class=\"n\">tip_amount</span>  <span class=\"n\">tolls_amount</span>  \\\n<span class=\"mi\">0</span>         <span class=\"mf\">12.0</span>    <span class=\"mf\">1.0</span>      <span class=\"mf\">0.5</span>        <span class=\"mf\">3.25</span>           <span class=\"mf\">0.0</span>\n<span class=\"mi\">1</span>         <span class=\"mf\">14.5</span>    <span class=\"mf\">0.5</span>      <span class=\"mf\">0.5</span>        <span class=\"mf\">2.00</span>           <span class=\"mf\">0.0</span>\n<span class=\"mi\">2</span>          <span class=\"mf\">9.5</span>    <span class=\"mf\">0.5</span>      <span class=\"mf\">0.5</span>        <span class=\"mf\">0.00</span>           <span class=\"mf\">0.0</span>\n<span class=\"mi\">3</span>          <span class=\"mf\">3.5</span>    <span class=\"mf\">0.5</span>      <span class=\"mf\">0.5</span>        <span class=\"mf\">0.00</span>           <span class=\"mf\">0.0</span>\n<span class=\"mi\">4</span>         <span class=\"mf\">15.0</span>    <span class=\"mf\">0.5</span>      <span class=\"mf\">0.5</span>        <span class=\"mf\">0.00</span>           <span class=\"mf\">0.0</span>\n\n   <span class=\"n\">improvement_surcharge</span>  <span class=\"n\">total_amount</span>\n<span class=\"mi\">0</span>                    <span class=\"mf\">0.3</span>         <span class=\"mf\">17.05</span>\n<span class=\"mi\">1</span>                    <span class=\"mf\">0.3</span>         <span class=\"mf\">17.80</span>\n<span class=\"mi\">2</span>                    <span class=\"mf\">0.3</span>         <span class=\"mf\">10.80</span>\n<span class=\"mi\">3</span>                    <span class=\"mf\">0.3</span>          <span class=\"mf\">4.80</span>\n<span class=\"mi\">4</span>                    <span class=\"mf\">0.3</span>         <span class=\"mf\">16.30</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">dask.diagnostics</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressBar</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">ProgressBar</span><span class=\"p\">().</span><span class=\"n\">register</span><span class=\"p\">()</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">df</span><span class=\"p\">.</span><span class=\"n\">passenger_count</span><span class=\"p\">.</span><span class=\"nb\">sum</span><span class=\"p\">().</span><span class=\"n\">compute</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"c1\">########################################] | 100% Completed |\n</span><span class=\"mi\">3</span><span class=\"nb\">min</span> <span class=\"mf\">58.8</span><span class=\"n\">s</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"mi\">245566747</span>\n</code></pre></div></div>\n\n<p>We were able to ask questions about this data (and learn that 250 million\npeople rode cabs in 2016) even though it is too large to fit into memory.  This\nis because Dask is able to operate lazily from disk.  It reads in the data on\nan as-needed basis and then forgets it when it no longer needs it.  This takes\na while (4 minutes) but does just work.</p>\n\n<p>However, when we read this data many times from disk we start to become\nfrustrated by this four minute cost.  In Pandas we suffered this cost once as\nwe moved data from disk to memory.  On larger datasets when we don’t have\nenough RAM we suffer this cost many times.</p>\n\n<h3 id=\"parquet-is-faster\">Parquet is faster</h3>\n\n<p>Lets try this same process with Parquet.  I happen to have the same exact data\nstored in Parquet format on my hard drive.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mrocklin@carbon:~/data/nyc$ du -hs nyc-2016.parquet/\n17G nyc-2016.parquet/\n</code></pre></div></div>\n\n<p>It is stored as a bunch of individual files, but we don’t actually care about\nthat.  We’ll always refer to the directory as the dataset.  These files are\nstored in binary format.  We can’t read them as humans</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">mrocklin</span><span class=\"o\">@</span><span class=\"n\">carbon</span><span class=\"p\">:</span><span class=\"o\">~/</span><span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">nyc</span><span class=\"err\">$</span> <span class=\"n\">head</span> <span class=\"n\">nyc</span><span class=\"o\">-</span><span class=\"mf\">2016.</span><span class=\"n\">parquet</span><span class=\"o\">/</span><span class=\"n\">part</span><span class=\"p\">.</span><span class=\"mf\">0.</span><span class=\"n\">parquet</span>\n<span class=\"o\">&lt;</span><span class=\"n\">a</span> <span class=\"n\">bunch</span> <span class=\"n\">of</span> <span class=\"n\">illegible</span> <span class=\"nb\">bytes</span><span class=\"o\">&gt;</span>\n</code></pre></div></div>\n\n<p>But computers are much more able to both read and navigate this data.  Lets do\nthe same experiment from before:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">dask.dataframe</span> <span class=\"k\">as</span> <span class=\"n\">dd</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">dd</span><span class=\"p\">.</span><span class=\"n\">read_parquet</span><span class=\"p\">(</span><span class=\"s\">'nyc-2016.parquet/'</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">df</span><span class=\"p\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span>\n  <span class=\"n\">tpep_pickup_datetime</span>  <span class=\"n\">VendorID</span> <span class=\"n\">tpep_dropoff_datetime</span>  <span class=\"n\">passenger_count</span>  \\\n<span class=\"mi\">0</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span>         <span class=\"mi\">2</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span>                <span class=\"mi\">3</span>\n<span class=\"mi\">1</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span>         <span class=\"mi\">2</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span>                <span class=\"mi\">1</span>\n<span class=\"mi\">2</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span>         <span class=\"mi\">1</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"mi\">26</span>                <span class=\"mi\">5</span>\n<span class=\"mi\">3</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">01</span>         <span class=\"mi\">1</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mi\">49</span>                <span class=\"mi\">1</span>\n<span class=\"mi\">4</span>  <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">03</span>         <span class=\"mi\">2</span>   <span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">01</span><span class=\"o\">-</span><span class=\"mi\">01</span> <span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mi\">48</span>                <span class=\"mi\">2</span>\n\n    <span class=\"n\">trip_distance</span>  <span class=\"n\">pickup_longitude</span>  <span class=\"n\">pickup_latitude</span>  <span class=\"n\">RateCodeID</span>  \\\n<span class=\"mi\">0</span>           <span class=\"mf\">1.56</span>        <span class=\"o\">-</span><span class=\"mf\">74.001320</span>        <span class=\"mf\">40.729057</span>           <span class=\"mi\">1</span>\n<span class=\"mi\">1</span>           <span class=\"mf\">1.68</span>        <span class=\"o\">-</span><span class=\"mf\">73.991547</span>        <span class=\"mf\">40.750069</span>           <span class=\"mi\">1</span>\n<span class=\"mi\">2</span>           <span class=\"mf\">4.00</span>        <span class=\"o\">-</span><span class=\"mf\">73.971436</span>        <span class=\"mf\">40.760201</span>           <span class=\"mi\">1</span>\n<span class=\"mi\">3</span>           <span class=\"mf\">0.80</span>        <span class=\"o\">-</span><span class=\"mf\">73.860847</span>        <span class=\"mf\">40.757294</span>           <span class=\"mi\">1</span>\n<span class=\"mi\">4</span>           <span class=\"mf\">2.57</span>        <span class=\"o\">-</span><span class=\"mf\">73.969017</span>        <span class=\"mf\">40.754269</span>           <span class=\"mi\">1</span>\n\n  <span class=\"n\">store_and_fwd_flag</span>  <span class=\"n\">dropoff_longitude</span>  <span class=\"n\">dropoff_latitude</span>  <span class=\"n\">payment_type</span>  \\\n<span class=\"mi\">0</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">74.010208</span>         <span class=\"mf\">40.719662</span>             <span class=\"mi\">1</span>\n<span class=\"mi\">1</span>                  <span class=\"n\">N</span>           <span class=\"mf\">0.000000</span>          <span class=\"mf\">0.000000</span>             <span class=\"mi\">2</span>\n<span class=\"mi\">2</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">73.921181</span>         <span class=\"mf\">40.768269</span>             <span class=\"mi\">2</span>\n<span class=\"mi\">3</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">73.868111</span>         <span class=\"mf\">40.752285</span>             <span class=\"mi\">2</span>\n<span class=\"mi\">4</span>                  <span class=\"n\">N</span>         <span class=\"o\">-</span><span class=\"mf\">73.994133</span>         <span class=\"mf\">40.761600</span>             <span class=\"mi\">2</span>\n\n   <span class=\"n\">fare_amount</span>  <span class=\"n\">extra</span>  <span class=\"n\">mta_tax</span>  <span class=\"n\">tip_amount</span>  <span class=\"n\">tolls_amount</span>  \\\n<span class=\"mi\">0</span>          <span class=\"mf\">7.5</span>    <span class=\"mf\">0.5</span>      <span class=\"mf\">0.5</span>         <span class=\"mf\">0.0</span>           <span class=\"mf\">0.0</span>\n<span class=\"mi\">1</span>         <span class=\"mf\">10.0</span>    <span class=\"mf\">0.0</span>      <span class=\"mf\">0.5</span>         <span class=\"mf\">0.0</span>           <span class=\"mf\">0.0</span>\n<span class=\"mi\">2</span>         <span class=\"mf\">13.5</span>    <span class=\"mf\">0.5</span>      <span class=\"mf\">0.5</span>         <span class=\"mf\">0.0</span>           <span class=\"mf\">0.0</span>\n<span class=\"mi\">3</span>          <span class=\"mf\">5.0</span>    <span class=\"mf\">0.5</span>      <span class=\"mf\">0.5</span>         <span class=\"mf\">0.0</span>           <span class=\"mf\">0.0</span>\n<span class=\"mi\">4</span>         <span class=\"mf\">14.5</span>    <span class=\"mf\">0.5</span>      <span class=\"mf\">0.5</span>         <span class=\"mf\">0.0</span>           <span class=\"mf\">0.0</span>\n\n   <span class=\"n\">improvement_surcharge</span>  <span class=\"n\">total_amount</span>\n<span class=\"mi\">0</span>                    <span class=\"mf\">0.3</span>           <span class=\"mf\">8.8</span>\n<span class=\"mi\">1</span>                    <span class=\"mf\">0.3</span>          <span class=\"mf\">10.8</span>\n<span class=\"mi\">2</span>                    <span class=\"mf\">0.0</span>          <span class=\"mf\">14.5</span>\n<span class=\"mi\">3</span>                    <span class=\"mf\">0.0</span>           <span class=\"mf\">6.3</span>\n<span class=\"mi\">4</span>                    <span class=\"mf\">0.3</span>          <span class=\"mf\">15.8</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">dask.diagnostics</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressBar</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">ProgressBar</span><span class=\"p\">().</span><span class=\"n\">register</span><span class=\"p\">()</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">df</span><span class=\"p\">.</span><span class=\"n\">passenger_count</span><span class=\"p\">.</span><span class=\"nb\">sum</span><span class=\"p\">().</span><span class=\"n\">compute</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"c1\">########################################] | 100% Completed |\n</span><span class=\"mf\">2.8</span><span class=\"n\">s</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"mi\">245566747</span>\n</code></pre></div></div>\n\n<p>Same values, but now our computation happens in three seconds, rather than four\nminutes.  We’re cheating a little bit here (pulling out the passenger count\ncolumn is especially easy for Parquet) but generally Parquet will be <em>much</em>\nfaster than CSV.  This lets us work from disk comfortably without worrying\nabout how much memory we have.</p>\n\n<h2 id=\"convert\">Convert</h2>\n\n<p>So do yourself a favor and convert your data</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">dask.dataframe</span> <span class=\"k\">as</span> <span class=\"n\">dd</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">dd</span><span class=\"p\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s\">'csv/yellow_tripdata_2015-*.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">dask.diagnostics</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressBar</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">ProgressBar</span><span class=\"p\">().</span><span class=\"n\">register</span><span class=\"p\">()</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">df</span><span class=\"p\">.</span><span class=\"n\">to_parquet</span><span class=\"p\">(</span><span class=\"s\">'yellow_tripdata.parquet'</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"c1\">############                            ] | 30% Completed |  1min 54.7s\n</span></code></pre></div></div>\n\n<p>If you want to be more clever you can specify dtypes and compression when\nconverting.  This can definitely help give you significantly greater speedups,\nbut just using the default settings will still be a large improvement.</p>\n\n<h2 id=\"advantages\">Advantages</h2>\n\n<p>Parquet enables the following:</p>\n\n<ol>\n  <li>Binary representation of data, allowing for speedy conversion of\nbytes-on-disk to bytes-in-memory</li>\n  <li>Columnar storage, meaning that you can load in as few columns as you need\nwithout loading the entire dataset</li>\n  <li>Row-chunked storage so that you can pull out data from a particular range\nwithout touching the others</li>\n  <li>Per-chunk statistics so that you can find subsets quickly</li>\n  <li>Compression</li>\n</ol>\n\n<h2 id=\"parquet-versions\">Parquet Versions</h2>\n\n<p>There are two nice Python packages with support for the Parquet format:</p>\n\n<ol>\n  <li><a href=\"https://arrow.apache.org/docs/python/parquet.html\">pyarrow</a>:\nPython bindings for the Apache Arrow and Apache Parquet C++ libraries</li>\n  <li><a href=\"http://fastparquet.readthedocs.io/en/latest/\">fastparquet</a>: a direct\nNumPy + Numba implementation of the Parquet format</li>\n</ol>\n\n<p>Both are good.  Both can do most things.  Each has separate strengths.  The\ncode above used <code class=\"language-plaintext highlighter-rouge\">fastparquet</code> by default but you can change this in Dask with\nthe <code class=\"language-plaintext highlighter-rouge\">engine='arrow'</code> keyword if desired.</p>"
}