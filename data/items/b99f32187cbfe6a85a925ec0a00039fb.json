{
  "id": "yt:video:97twa7KgQ6k",
  "yt:videoId": "97twa7KgQ6k",
  "yt:channelId": "UCRfR7ivZHwXIC8kdydo5jdQ",
  "title": "Formalities & Informalities: Judgmental Equality [Intro to HoTT, No. 2, Part 2]",
  "link": "",
  "author": {
    "name": "Jacob Neumann",
    "uri": "https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ"
  },
  "published": "2022-05-26T23:15:51+00:00",
  "updated": "2022-06-21T21:15:33+00:00",
  "media:group": {
    "media:title": "Formalities & Informalities: Judgmental Equality [Intro to HoTT, No. 2, Part 2]",
    "media:content": "",
    "media:thumbnail": "",
    "media:description": "Part 2 of Formalities & Informalities (Parts 0 and 1: https://youtu.be/-QKLxN1_nvk https://youtu.be/J-v7m_tdTfE), answering the question:  how do we do Homotopy Type Theory? An essential piece of HoTT is judgmental equality, which is how we state that two things are \"equal by definition\". In this video, I explain (what I consider to be) the most helpful intuition for judgmental equality: computational confluence. Two terms (or types) in HoTT are judgmentally equal if they can be computed to the same thing. This turns out to be a fruitful way to think of judgmental equality, particularly because computer formalization is important to us. Later on, we'll improve upon judgmental equality to get another notion of equality, propositional equality, which is the central object of study in homotopy type theory.\n\nVideo site for the series: https://intro-hott.video\nYoutube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq\nInstagram: @Intro_HoTT\nTwitter: @Intro_HoTT\n\nFormalization links:\n- Appeared in this video: https://github.com/jacobneu/HoTT-agda/blob/main/sandbox-02.agda\n- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda\n- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda\n- More up-to-date HoTT formalization in Agda: https://github.com/UniMath/agda-unimath\n\nHoTT textbooks:\n- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/\n- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory\n\n\nImage/audio credits:\n- \"Wholesome\" by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)\n\n\n\nHomotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!",
    "media:community": {
      "media:starRating": "",
      "media:statistics": ""
    }
  }
}