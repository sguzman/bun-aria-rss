{
  "title": "State of Dask",
  "link": "",
  "updated": "2015-05-19T00:00:00+00:00",
  "id": "https://mrocklin.github.io/blog/work/2015/05/19/State-of-Dask",
  "content": "<p><em>This work is supported by <a href=\"http://continuum.io\">Continuum Analytics</a>\nand the <a href=\"http://www.darpa.mil/program/XDATA\">XDATA Program</a>\nas part of the <a href=\"http://blaze.pydata.org\">Blaze Project</a></em></p>\n\n<p><strong>tl;dr</strong> We lay out the pieces of Dask, a system for parallel computing</p>\n\n<h2 id=\"introduction\">Introduction</h2>\n\n<p>Dask started five months ago as a parallel on-disk array; it has\nsince broadened out.  I’ve enjoyed <a href=\"http://matthewrocklin.com/blog/tags.html#dask-ref\">writing about its\ndevelopment</a> tremendously.\nWith the <a href=\"https://groups.google.com/a/continuum.io/d/topic/blaze-dev/HAoLbk2F0PI/discussion\">recent 0.5.0\nrelease</a>\nI decided to take a moment to give an overview of dask’s various pieces, their\nstate, and current development.</p>\n\n<h2 id=\"collections-graphs-and-schedulers\">Collections, graphs, and schedulers</h2>\n\n<p>Dask modules can be separated as follows:</p>\n\n<p><img src=\"https://mrocklin.github.io/blog/images/collections-schedulers.png\" width=\"70%\" align=\"right\" alt=\"Partitioned Frame design\" /></p>\n\n<p>On the left there are collections like arrays, bags, and dataframes.  These\ncopy APIs for NumPy, PyToolz, and Pandas respectively and are aimed towards\ndata science users, allowing them to interact with larger datasets.  Operations\non these dask collections produce task graphs which are recipes to compute the\ndesired result using many smaller computations that each fit in memory.  For\nexample if we want to sum a trillion numbers then we might break the numbers\ninto million element chunks, sum those, and then sum the sums.  A previously\nimpossible task becomes a million and one easy ones.</p>\n\n<p>On the right there are schedulers.  Schedulers execute task graphs in different\nsituations, usually in parallel.  Notably there are a few schedulers for a\nsingle machine, and a new prototype for a <a href=\"http://dask.pydata.org/en/latest/distributed.html\">distributed\nscheduler</a>.</p>\n\n<p>In the center is the directed acyclic graph.  This graph serves as glue between\ncollections and schedulers.  The dask graph format is simple and doesn’t\ninclude any dask classes; it’s just <a href=\"http://dask.readthedocs.org/en/latest/spec.html\">functions, dicts, and\ntuples</a> and so is easy to\nbuild on and low-tech enough to understand immediately.  This separation is very\nuseful to dask during development; improvements to one side immediately affect\nthe other and new developers have had surprisingly little trouble.  Also\ndevelopers from a variety of backgrounds have been able to come up to speed in\nabout an hour.</p>\n\n<p>This separation is useful to other projects too.  Directed acyclic graphs are\npopular today in many domains.  By exposing dask’s schedulers publicly, other\nprojects can bypass dask collections and go straight for the execution engine.</p>\n\n<p>A flattering quote from <a href=\"https://github.com/ContinuumIO/dask/issues/153#issuecomment-92520216\">a github\nissue</a>:</p>\n\n<p><em>dask has been very helpful so far, as it allowed me to skip implementing\nall of the usual graph operations. Especially doing the asynchronous\nexecution properly would have been a lot of work.</em></p>\n\n<h2 id=\"who-uses-dask\">Who uses dask?</h2>\n\n<p>Dask developers work closely with a few really amazing users:</p>\n\n<ol>\n  <li>\n    <p><a href=\"http://stephanhoyer.com/\">Stephan Hoyer</a> at Climate Corp has integrated\n<code class=\"language-plaintext highlighter-rouge\">dask.array</code> into <a href=\"xray.readthedocs.org\"><code class=\"language-plaintext highlighter-rouge\">xray</code></a> a library to manage large\nvolumes of meteorlogical data (and other labeled arrays.)</p>\n  </li>\n  <li>\n    <p><a href=\"http://scikit-image.org\">Scikit image</a> now includes an apply_parallel\noperation (<a href=\"https://github.com/scikit-image/scikit-image/pull/1493\">github PR</a>)\nthat uses dask.array to parallelize image processing routines.\n(work by <a href=\"https://github.com/cowlicks\">Blake Griffith</a>)</p>\n  </li>\n  <li>\n    <p><a href=\"http://www.marianotepper.com.ar/\">Mariano Tepper</a> a postdoc at Duke, uses\ndask in his research on matrix factorizations.  Mariano is also the primary\nauthor of the <code class=\"language-plaintext highlighter-rouge\">dask.array.linalg</code> module, which includes efficient and stable\nQR and SVD for tall and skinny matrices. See Mariano’s <a href=\"http://arxiv.org/abs/1505.04650\">paper on\narXiv</a>.</p>\n  </li>\n  <li>\n    <p>Finally I personally use dask on daily work related to the <a href=\"http://www.darpa.mil/program/XDATA\">XData\nproject</a>.  This tends to\ndrive some of the newer features.</p>\n  </li>\n</ol>\n\n<p>A few other groups pop up on github from time to time; I’d love to\nknow more detail about how people use dask.</p>\n\n<h2 id=\"what-works-and-what-doesnt\">What works and what doesn’t</h2>\n\n<p>Dask is modular.  Each of the collections and each of the schedulers are\neffectively separate projects.  These subprojects are at different states of\ndevelopment.  Knowing the stability of each subproject can help you to\ndetermine how you use and depend on dask.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">Dask.array</code> and <code class=\"language-plaintext highlighter-rouge\">dask.threaded</code> work well, are stable, and see constant use.\nThey receive relatively minor bug reports which are dealt with swiftly.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">Dask.bag</code> and <code class=\"language-plaintext highlighter-rouge\">dask.multiprocessing</code> undergo more API churn but are mostly\nready for public use with a couple of caveats.  Neither <code class=\"language-plaintext highlighter-rouge\">dask.dataframe</code> nor</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">dask.distributed</code> are ready for public use; they undergo significant API churn\nand have known errors.</p>\n\n<h2 id=\"current-work\">Current work</h2>\n\n<p>The current state of development as I see it is as follows:</p>\n\n<ol>\n  <li>Dask.bag and dask.dataframe are progressing nicely.  My personal work\ndepends on these modules, so they see a lot of attention.\n    <ul>\n      <li>At the moment I focus on grouping and join operations through fast\nshuffles; I hope to write about this problem soon.</li>\n      <li>The Pandas API is large and complex.  Reimplementing a subset of it\nin a blocked way is straightforward but also detailed and time consuming.\nThis would be a great place for community contributions.</li>\n    </ul>\n  </li>\n  <li>Dask.distributed is new.  It needs it tires kicked but it’s an exciting\ndevelopment.\n    <ul>\n      <li>For deployment we’re planning to bootstrap off of\n<a href=\"http://ipython.org/ipython-doc/dev/parallel/\">IPython parallel</a> which\nalready has decent coverage of many parallel job systems,\n(see <a href=\"https://github.com/ContinuumIO/dask/pull/208\">#208</a> by Blake)</li>\n    </ul>\n  </li>\n  <li>Dask.array development these days focuses on outreach.  We’ve found\napplication domains where dask is very useful; we’d like to find more.</li>\n  <li>The collections (Array, Bag, DataFrame) don’t cover all cases.  I would\nlike to start finding uses for the task schedulers in isolation.  They\nserve as a release valve in complex situations.</li>\n</ol>\n\n<h2 id=\"more-information\">More information</h2>\n\n<p>You can install dask with <code class=\"language-plaintext highlighter-rouge\">conda</code></p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>conda install dask\n</code></pre></div></div>\n\n<p>or with <code class=\"language-plaintext highlighter-rouge\">pip</code></p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip install dask\nor\npip install dask[array]\nor\npip install dask[bag]\n</code></pre></div></div>\n\n<p>You can read more about dask at <a href=\"https://dask.pydata.org/en/latest/\">the docs</a>\nor <a href=\"https://github.com/ContinuumIO/dask\">github</a>.</p>"
}