{
  "title": "Announcing Ursa Labs's partnership with NVIDIA",
  "link": "",
  "published": "2018-10-10T00:00:00-07:00",
  "updated": "2018-10-10T00:00:00-07:00",
  "author": {
    "name": "Wes McKinney"
  },
  "id": "tag:wesmckinney.com,2018-10-10:/blog/ursa-labs-partner-nvidia/",
  "summary": "<p>I'm excited to announce that <a href=\"https://nvidia.com\">NVIDIA AI Labs</a> has signed on as a supporter\nof <a href=\"https://ursalabs.org\">Ursa Labs</a>. NVIDIA's new open source <a href=\"https://RAPIDS.ai\">RAPIDS</a> data science platform\nuses <a href=\"http://arrow.apache.org\">Apache Arrow</a> for an interoperable representation of tabular data\n(data frames). We are looking forward to collaborating on our respective\ndevelopment roadmaps and growing â€¦</p>",
  "content": "<p>I'm excited to announce that <a href=\"https://nvidia.com\">NVIDIA AI Labs</a> has signed on as a supporter\nof <a href=\"https://ursalabs.org\">Ursa Labs</a>. NVIDIA's new open source <a href=\"https://RAPIDS.ai\">RAPIDS</a> data science platform\nuses <a href=\"http://arrow.apache.org\">Apache Arrow</a> for an interoperable representation of tabular data\n(data frames). We are looking forward to collaborating on our respective\ndevelopment roadmaps and growing the ecosystem of projects that use Arrow.</p>\n<p>This new financial support will enable us to grow our team of full-time open\nsource software developers.</p>\n<h2>Apache Arrow: An Open Standard for Columnar Data on the GPU</h2>\n<p>When NVIDIA and a group of startups embarked on the <a href=\"http://gpuopenanalytics.com\">GPU Open Analytics\nInitiative</a> last year to build libraries of pandas-style analytics for\nCUDA-powered GPU devices, they had to solve the problem of data portability\nbetween systems. The cost of serialization or memory copying can frequently\nexceed that of the underlying GPU kernel execution.</p>\n<p>Anyone who's been actively following my blog posts, presentations, and <a href=\"https://twitter.com/wesmckinn\">Twitter\nfeed</a> will know that Apache Arrow is fundamentally about making it easy to\nshare data and share algorithms.</p>\n<ul>\n<li>If you can't share data at zero cost, then crossing languages or computation\n  environments incurs a high penalty</li>\n<li>You generally cannot share algorithms (code) without utilizing common\n  in-memory data structures</li>\n</ul>\n<p>The Arrow columnar format is an ideal fit for in-memory analytics on GPUs. The\ncontiguous columnar memory layout is efficient for the manycore CUDA execution\nmodel.</p>\n<p>Since last year, I have been working to involve GPGPU community with the Apache\nArrow development community. Initially, <a href=\"https://graphistry.com\">Graphistry</a> contributed a\nTypeScript implementation of Arrow for use in JavaScript. I contributed\naccelerated Arrow-based data ingest to the <a href=\"https://github.com/omnisci/mapd-core\">MapD GPU database</a>. We now have\na CUDA Arrow extension library in C++ (with Python bindings) for managing\ninterprocess communication and CUDA device memory management.</p>\n<h2>Looking ahead</h2>\n<p>It's an exciting time both for the Apache Arrow community as well as GPGPU\ndevelopers who might be interested in powering up their feature engineering and\ndata preparation with GPU-enabled libraries.</p>\n<p>We're grateful for NVIDIA's support of Ursa Labs and look forward to growing a\nlarger team and continuing to make progress on the <a href=\"https://ursalabs.org/tech\">tech roadmap</a>.</p>\n<p>If you or your company would be interested in becoming a sponsor also, please\nget in touch with us at <a href=\"mailto:info@ursalabs.org\">info@ursalabs.org</a>.</p>"
}