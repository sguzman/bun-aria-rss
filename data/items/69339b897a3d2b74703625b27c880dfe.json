{
  "title": "17 Great Machine Learning Libraries",
  "link": "",
  "updated": "2013-10-08T00:00:00+00:00",
  "id": "http://daoudclarke.github.com/machine%20learning%20in%20practice/2013/10/08/machine-learning-libraries",
  "content": "<p><em>After wonderful feedback on my\n<a href=\"/machine%20learning%20in%20practice/2013/09/18/why-i-love-scikit-learn\">previous post on Scikit-learn</a>\nfrom the guys at\n<a href=\"http://www.reddit.com/r/MachineLearning/comments/1mq8fb/why_i_love_scikitlearn/\">/r/MachineLearning</a>,\nI decided to collect the list of machine learning libraries into this\nseperate note. Let me know if there’s a library that should be\nincluded here.</em></p>\n\n<hr />\n\n<p><strong>Update (15 May 2014):</strong> <em>thanks to Djalel Benbouzid and Dwayne Campbell\nfor additional suggestions. Sorry it’s taken me so long to add them…</em></p>\n\n<hr />\n\n<h3 id=\"python\">Python</h3>\n\n<ul>\n  <li><strong><a href=\"http://scikit-learn.org\">Scikit-learn</a></strong>: comprehensive and easy\nto use, I wrote <a href=\"/machine%20learning%20in%20practice/2013/09/18/why-i-love-scikit-learn\">a whole article</a>\non why I like this library.</li>\n  <li><strong><a href=\"http://pybrain.org/\">PyBrain</a></strong>: Neural networks are one thing\nthat are missing from SciKit-learn, but this module makes up for\nit.</li>\n  <li><strong><a href=\"http://nltk.org/\">nltk</a></strong>: really useful if you’re doing\nanything NLP or text mining related.</li>\n  <li><strong><a href=\"http://www.deeplearning.net/software/theano/\">Theano</a></strong>:\nefficient computation of mathematical expressions using\nGPU. Excellent for deep learning.</li>\n  <li><strong><a href=\"http://deeplearning.net/software/pylearn2/\">Pylearn2</a></strong>: machine\nlearning toolbox built on top of Theano - in very early stages of\ndevelopment.</li>\n  <li><strong><a href=\"http://mdp-toolkit.sourceforge.net/\">MDP</a></strong> (Modular toolkit for\nData Processing): a framework that is useful when setting up\nworkflows.</li>\n</ul>\n\n<h3 id=\"java\">Java</h3>\n\n<ul>\n  <li><strong><a href=\"http://spark.apache.org/\">Spark</a></strong>: Apache’s new upstart,\nsupposedly up to a hundred times faster than Hadoop, now includes\nMLLib, which contains a good selection of machine learning\nalgorithms, including classification, clustering and recommendation\ngeneration. Currently undergoing rapid development. Development can\nbe in Python as well as JVM languages.</li>\n  <li><strong><a href=\"https://mahout.apache.org/\">Mahout</a></strong>: Apache’s machine learning\nframework built on top of Hadoop, this looks promising, but comes\nwith all the baggage and overhead of Hadoop.</li>\n  <li><strong><a href=\"http://www.cs.waikato.ac.nz/ml/weka/\">Weka</a></strong>: this is a Java\nbased library with a graphical user interface that allows you to\nrun experiments on small datasets. This is great if you restrict\nyourself to playing around to get a feel for what is possible with\nmachine learning. However, I would avoid using this in production\ncode at all costs: the API is very poorly designed, the algorithms\nare not optimised for production use and the documentation is often\nlacking.</li>\n  <li><strong><a href=\"http://mallet.cs.umass.edu/\">Mallet</a></strong>: another Java based library\nwith an emphasis on document classification. I’m not so familiar\nwith this one, but if you have to use Java this is bound to be\nbetter than Weka.</li>\n  <li><strong><a href=\"https://code.google.com/p/java-statistical-analysis-tool/\">JSAT</a></strong>:\nstands for “Java Statistical Analysis Tool” - created by Edward\nRaff and was born out of his frustation with Weka (I know the\nfeeling). Looks pretty cool.</li>\n</ul>\n\n<h3 id=\"net\">.NET</h3>\n\n<ul>\n  <li><strong><a href=\"http://accord-framework.net/intro.html\">Accord.NET</a></strong>: this\nseems to be pretty comprehensive, and comes recommended by\n<a href=\"http://www.reddit.com/user/primaryobjects\">primaryobjects</a> on\nReddit. There is perhaps a slight slant towards image processing\nand computer vision, as it builds on the popular library\n<a href=\"http://www.aforgenet.com/\">AForge.NET</a> for this purpose.</li>\n  <li>Another option is to use one of the Java libraries compiled to .NET\nusing <a href=\"http://www.ikvm.net/\">IKVM</a> - I have used this approach\nwith success in production.</li>\n</ul>\n\n<h3 id=\"c\">C++</h3>\n\n<ul>\n  <li><strong><a href=\"https://github.com/JohnLangford/vowpal_wabbit\">Vowpal Wabbit</a></strong>:\ndesigned for very fast learning and released under a BSD license,\nthis comes recommended by\n<a href=\"http://www.reddit.com/user/terath\">terath</a> on Reddit.</li>\n  <li><strong><a href=\"http://www.multiboost.org/\">MultiBoost</a></strong>: a fast C++ framework\nimplementing some boosting algorithms as well as some cascades\n(like the Viola-Jones cascades). It’s mainly focused on AdaBoost.MH\nso it is multi-class/multi-label.</li>\n  <li><strong><a href=\"http://www.shogun-toolbox.org/\">Shogun</a></strong>: large machine\n learning library with a focus on kernel methods and support vector\n machines. Bindings to Matlab, R, Octave and Python.</li>\n</ul>\n\n<h3 id=\"general\">General</h3>\n\n<ul>\n  <li><a href=\"http://www.csie.ntu.edu.tw/~cjlin/libsvm/\"><strong>LibSVM</strong></a> and\n<a href=\"http://www.csie.ntu.edu.tw/~cjlin/liblinear/\"><strong>LibLinear</strong></a>:\nthese are C libraries for support vector machines; there are also\nbindings or implementations for many other languages. These are the\nlibraries used for support vector machine learning in Scikit-learn.</li>\n</ul>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>This article is a work in progress, so please send me your comments or\ncriticisms!</p>"
}