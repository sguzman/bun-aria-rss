{
  "title": "100 pandas tricks to save you time and energy",
  "description": "100 tricks that will save you time and energy every time you use pandas! Up-to-date with the latest version of pandas (0.25)",
  "link": "https://www.dataschool.io/python-pandas-tips-and-tricks/",
  "guid": "5d6eba158ed2730038ab86b3",
  "category": [
    "Python",
    "tutorial"
  ],
  "dc:creator": "Kevin Markham",
  "pubDate": "Thu, 05 Sep 2019 19:05:29 GMT",
  "content:encoded": "<!--kg-card-begin: markdown--><p>Below you'll find 100 tricks that will <strong>save you time and energy</strong> every time you use pandas! These the best tricks I've learned from 5 years of teaching the pandas library.</p>\n<blockquote>\n<p><em>\"Soooo many nifty little tips that will <strong>make my life so much easier!</strong>\"</em> - C.K.</p>\n<p><em>\"Kevin, these tips are so practical. I can say without hesitation that you provide the <strong>best resources for pandas</strong> I have ever used.\"</em> - N.W.</p>\n</blockquote>\n<!--\n> \"These tricks are so good!\" - S.K.\n> \"If you're not following Kevin, you're missing out on a steady stream of useful tips and tricks.\" - W.R.\n-->\n<p><strong>P.S.</strong> You can also watch a <a href=\"https://www.dataschool.io/python-pandas-tricks/\">video</a> of my top 25 tricks! &#x1F43C;&#x1F939;</p>\n<!--\n**Every weekday, I share a new \"pandas trick\" on social media.** Each trick takes only a minute to read, yet you'll learn something new that will save you time and energy in the future!\n\n**Here's my latest trick:**\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">üêºü§π‚Äç‚ôÇÔ∏è pandas trick #100! üéâ<br><br>Want to read a HUGE dataset into pandas but don't have enough memory?<br><br>Randomly sample the dataset *during file reading* by passing a function to \"skiprows\"<br><br>See example üëá<br><br>Thanks to <a href=\"https://twitter.com/TedPetrou?ref_src=twsrc%5Etfw\">@TedPetrou</a> for this trick! üôå<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/FOPxURbNgc\">pic.twitter.com/FOPxURbNgc</a></p>&mdash; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1207672613130121221?ref_src=twsrc%5Etfw\">December 19, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n**Want to read the 100 tricks that I've already posted?** See below üëá\n\n**Want to see the daily trick in your social media feed?** Follow me on [Twitter](https://twitter.com/justmarkham), [Facebook](https://www.facebook.com/DataScienceSchool/), [LinkedIn](https://www.linkedin.com/in/justmarkham/), and [YouTube](https://www.youtube.com/dataschool)\n\n**Want to watch a live demo of my top 25 tricks?** [Watch this video](https://www.dataschool.io/python-pandas-tricks/) üé•\n\n**Want to support daily pandas tricks?** Become a [Data School Insider](https://www.dataschool.io/join-data-school-insiders-on-patreon/) üôè\n\n-->\n<hr>\n<h2 id=\"categories\">Categories</h2>\n<ul>\n<li><a href=\"#readingfiles\">Reading files</a></li>\n<li><a href=\"#readingfromtheweb\">Reading from the web</a></li>\n<li><a href=\"#creatingexampledataframes\">Creating example DataFrames</a></li>\n<li><a href=\"#creatingcolumns\">Creating columns</a></li>\n<li><a href=\"#renamingcolumns\">Renaming columns</a></li>\n<li><a href=\"#selectingrowsandcolumns\">Selecting rows and columns</a></li>\n<li><a href=\"#filteringrowsbycondition\">Filtering rows by condition</a></li>\n<li><a href=\"#manipulatingstrings\">Manipulating strings</a></li>\n<li><a href=\"#workingwithdatatypes\">Working with data types</a></li>\n<li><a href=\"#encodingdata\">Encoding data</a></li>\n<li><a href=\"#extractingdatafromlists\">Extracting data from lists</a></li>\n<li><a href=\"#workingwithtimeseriesdata\">Working with time series data</a></li>\n<li><a href=\"#handlingmissingvalues\">Handling missing values</a></li>\n<li><a href=\"#usingaggregationfunctions\">Using aggregation functions</a></li>\n<li><a href=\"#usingcumulativefunctions\">Using cumulative functions</a></li>\n<li><a href=\"#randomsampling\">Random sampling</a></li>\n<li><a href=\"#mergingdataframes\">Merging DataFrames</a></li>\n<li><a href=\"#stylingdataframes\">Styling DataFrames</a></li>\n<li><a href=\"#exploringadataset\">Exploring a dataset</a></li>\n<li><a href=\"#handlingwarnings\">Handling warnings</a></li>\n<li><a href=\"#other\">Other</a></li>\n</ul>\n<h2 id=\"readingfiles\">Reading files</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>5 useful \"read_csv\" parameters that are often overlooked:<br><br>&#x27A1;&#xFE0F; names: specify column names<br>&#x27A1;&#xFE0F; usecols: which columns to keep<br>&#x27A1;&#xFE0F; dtype: specify data types<br>&#x27A1;&#xFE0F; nrows: # of rows to read<br>&#x27A1;&#xFE0F; na_values: strings to recognize as NaN<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1163533800841928711?ref_src=twsrc%5Etfw\">August 19, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>&#x26A0;&#xFE0F; Got bad data (or empty rows) at the top of your CSV file? Use these read_csv parameters:<br><br>&#x27A1;&#xFE0F; header = row number of header (start counting at 0)<br>&#x27A1;&#xFE0F; skiprows = list of row numbers to skip<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/t1M6XkkPYG\">pic.twitter.com/t1M6XkkPYG</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1168930165658914816?ref_src=twsrc%5Etfw\">September 3, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Two easy ways to reduce DataFrame memory usage:<br>1. Only read in columns you need<br>2. Use 'category' data type with categorical data.<br><br>Example:<br>df = <a href=\"https://t.co/Ib52aQAdkA\">https://t.co/Ib52aQAdkA</a>_csv('file.csv', usecols=['A', 'C', 'D'], dtype={'D':'category'})<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1142059583835447296?ref_src=twsrc%5Etfw\">June 21, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>You can read directly from a compressed file:<br>df = <a href=\"https://t.co/Ib52aQAdkA\">https://t.co/Ib52aQAdkA</a>_csv('https://t.co/3JAwA8h7FJ')<br><br>Or write to a compressed file:<a href=\"https://t.co/ySXYEf6MjY\">https://t.co/ySXYEf6MjY</a>_csv('https://t.co/3JAwA8h7FJ')<br><br>Also supported: .gz, .bz2, .xz<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1146764820697505792?ref_src=twsrc%5Etfw\">July 4, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #99:<br><br>Do you sometimes end up with an \"Unnamed: 0\" column in your DataFrame? &#x1F914;<br><br>Solution: Set the first column as the index (when reading)<br>Alternative: Don't save the index to the file (when writing)<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/WuUJb7fMPZ\">pic.twitter.com/WuUJb7fMPZ</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1207310131001790466?ref_src=twsrc%5Etfw\">December 18, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Are your dataset rows spread across multiple files, but you need a single DataFrame?<br><br>Solution:<br>1. Use glob() to list your files<br>2. Use a generator expression to read files and concat() to combine them<br>3. &#x1F973;<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/qtKpzEoSC3\">pic.twitter.com/qtKpzEoSC3</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1141697969131065344?ref_src=twsrc%5Etfw\">June 20, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #78:<br><br>Do you need to build a DataFrame from multiple files, but also keep track of which row came from which file?<br><br>1. List files w/ glob()<br>2. Read files w/ gen expression, create new column w/ assign(), combine w/ concat()<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/kXgXw69pSW\">pic.twitter.com/kXgXw69pSW</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1182286191028244480?ref_src=twsrc%5Etfw\">October 10, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #100! &#x1F389;<br><br>Want to read a HUGE dataset into pandas but don't have enough memory?<br><br>Randomly sample the dataset *during file reading* by passing a function to \"skiprows\"<br><br>See example &#x1F447;<br><br>Thanks to <a href=\"https://twitter.com/TedPetrou?ref_src=twsrc%5Etfw\">@TedPetrou</a> for this trick! &#x1F64C;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/FOPxURbNgc\">pic.twitter.com/FOPxURbNgc</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1207672613130121221?ref_src=twsrc%5Etfw\">December 19, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to quickly get data from Excel or Google Sheets into pandas?<br><br>1. Copy data to clipboard<br>2. df = <a href=\"https://t.co/Ib52aQAdkA\">https://t.co/Ib52aQAdkA</a>_clipboard()<br>3. &#x1F973;<br><br>See example &#x1F447;<br><br>Learn 25 more tips & tricks: <a href=\"https://t.co/6akbxXG6SI\">https://t.co/6akbxXG6SI</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/M2Yw0NAXRe\">pic.twitter.com/M2Yw0NAXRe</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1150752152811462656?ref_src=twsrc%5Etfw\">July 15, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #71:<br><br>Want to extract tables from a PDF into a DataFrame? Try tabula-py!<br><br>from tabula import read_pdf<br>df = read_pdf('test.pdf', pages='all')<br><br>Documentation: <a href=\"https://t.co/geQh9u4AEr\">https://t.co/geQh9u4AEr</a><br><br>Thanks for the trick <a href=\"https://twitter.com/Netchose?ref_src=twsrc%5Etfw\">@Netchose</a>! &#x1F64C;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1178674739503599616?ref_src=twsrc%5Etfw\">September 30, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"readingfromtheweb\">Reading from the web</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to read a JSON file from the web? Use read_json() to read it directly from a URL into a DataFrame! &#x1F60E;<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/gei6eeudiq\">pic.twitter.com/gei6eeudiq</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1171054819584462848?ref_src=twsrc%5Etfw\">September 9, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #68:<br><br>Want to scrape a web page? Try read_html()!<br><br>Definitely worth trying before bringing out a more complex tool (Beautiful Soup, Selenium, etc.)<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/sPKrea9wk1\">pic.twitter.com/sPKrea9wk1</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1174319137767575552?ref_src=twsrc%5Etfw\">September 18, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #74:<br><br>Are you scraping a webpage using read_html(), but it returns too many tables? &#x1F615;<br><br>Use the 'match' parameter to find tables that contain a particular string! &#x1F9F6;<br><br>See example &#x1F447;<br><br>Thanks to <a href=\"https://twitter.com/JrMontana08?ref_src=twsrc%5Etfw\">@JrMontana08</a> for the trick! &#x1F64C;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/4Ocbv6H3r7\">pic.twitter.com/4Ocbv6H3r7</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1179753810152919046?ref_src=twsrc%5Etfw\">October 3, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"creatingexampledataframes\">Creating example DataFrames</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to create an example DataFrame? Here are 3 easy options:<br><br>pd.DataFrame({'col_one':[10, 20], 'col_two':[30, 40]})<br>pd.DataFrame(np.random.rand(2, 3), columns=list('abc'))<br>pd.util.testing.makeMixedDataFrame()<br><br>See output &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/SSlZsd6OEj\">pic.twitter.com/SSlZsd6OEj</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1144593270149959682?ref_src=twsrc%5Etfw\">June 28, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to create a DataFrame for testing?<br><br>pd.util.testing.makeDataFrame() &#x27A1;&#xFE0F; contains random values<br>.makeMissingDataframe() &#x27A1;&#xFE0F; some values missing<br>.makeTimeDataFrame() &#x27A1;&#xFE0F; has DateTimeIndex<br>.makeMixedDataFrame() &#x27A1;&#xFE0F; mixed data types<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1148940650492170241?ref_src=twsrc%5Etfw\">July 10, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #91:<br><br>Need to create a time series dataset for testing? Use pd.util.testing.makeTimeDataFrame()<br><br>Need more control over the columns & data? Generate data with np.random & overwrite index with makeDateIndex()<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/fLrNWf1tsa\">pic.twitter.com/fLrNWf1tsa</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1197870359476879362?ref_src=twsrc%5Etfw\">November 22, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"creatingcolumns\">Creating columns</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to create new columns (or overwrite existing columns) within a method chain? Use \"assign\"!<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/y0wEfbz0VA\">pic.twitter.com/y0wEfbz0VA</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1173995596631478272?ref_src=twsrc%5Etfw\">September 17, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to create a bunch of new columns based on existing columns? Use this pattern:<br><br>for col in df.columns:<br> df[f'{col}_new'] = df[col].apply(my_function)<br><br>See example &#x1F447;<br><br>Thanks to <a href=\"https://twitter.com/pmbaumgartner?ref_src=twsrc%5Etfw\">@pmbaumgartner</a> for this trick!<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/7qvKn9UypE\">pic.twitter.com/7qvKn9UypE</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1173665673530269697?ref_src=twsrc%5Etfw\">September 16, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #73:<br><br>Need to remove a column from a DataFrame and store it as a separate Series? Use \"pop\"! &#x1F37E;<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/R45OEMbWVm\">pic.twitter.com/R45OEMbWVm</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1179384811896619008?ref_src=twsrc%5Etfw\">October 2, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #90:<br><br>Want to insert a new column into a DataFrame at a specific location? Use the \"insert\" method:<br><br>df.insert(location, name, value)<br><br>See example &#x1F447;<br><br>P.S. You can find the other 89 tricks here: <a href=\"https://t.co/TflgUtl6zD\">https://t.co/TflgUtl6zD</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/zmPvdLq7jG\">pic.twitter.com/zmPvdLq7jG</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1197517920433266688?ref_src=twsrc%5Etfw\">November 21, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"renamingcolumns\">Renaming columns</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>3 ways to rename columns:<br><br>1. Most flexible option:<br>df = df.rename({'A':'a', 'B':'b'}, axis='columns')<br><br>2. Overwrite all column names:<br>df.columns = ['a', 'b']<br><br>3. Apply string method:<br>df.columns = df.columns.str.lower()<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1151117787932364802?ref_src=twsrc%5Etfw\">July 16, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Add a prefix to all of your column names:<br>df.add_prefix('X_')<br><br>Add a suffix to all of your column names:<br>df.add_suffix('_Y')<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1138427282412978176?ref_src=twsrc%5Etfw\">June 11, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to rename all of your columns in the same way? Use a string method:<br><br>Replace spaces with _:<br>df.columns = df.columns.str.replace(' ', '_')<br><br>Make lowercase & remove trailing whitespace:<br>df.columns = df.columns.str.lower().str.rstrip()<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1143504595630645248?ref_src=twsrc%5Etfw\">June 25, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"selectingrowsandcolumns\">Selecting rows and columns</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>You can use f-strings (Python 3.6+) when selecting a Series from a DataFrame!<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://twitter.com/python_tip?ref_src=twsrc%5Etfw\">@python_tip</a> <a href=\"https://t.co/8qHEXiGBaB\">pic.twitter.com/8qHEXiGBaB</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1172579990296285185?ref_src=twsrc%5Etfw\">September 13, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to select multiple rows/columns? \"loc\" is usually the solution:<br><br>select a slice (inclusive):<br>df.loc[0:4, 'col_A':'col_D']<br><br>select a list:<br>df.loc[[0, 3], ['col_A', 'col_C']]<br><br>select by condition:<br>df.loc[df.col_A=='val', 'col_D']<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1146408709087739904?ref_src=twsrc%5Etfw\">July 3, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>\"loc\" selects by label, and \"iloc\" selects by position.<br><br>But what if you need to select by label *and* position? You can still use loc or iloc!<br><br>See example &#x1F447;<br><br>P.S. Don't use \"ix\", it has been deprecated since 2017.<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/SpFkjWYEE0\">pic.twitter.com/SpFkjWYEE0</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1156914155477241861?ref_src=twsrc%5Etfw\">August 1, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #82:<br><br>Want to select from a DataFrame by label *and* position?<br><br>Most readable approach is to chain \"loc\" (selection by label) and \"iloc\" (selection by position).<br><br>See example &#x1F447;<br><br>Thanks to <a href=\"https://twitter.com/Dean_La?ref_src=twsrc%5Etfw\">@Dean_La</a> for this trick!<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/FCbkmaG6uD\">pic.twitter.com/FCbkmaG6uD</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1192428355620130819?ref_src=twsrc%5Etfw\">November 7, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Reverse column order in a DataFrame:<br>df.loc[:, ::-1]<br><br>Reverse row order:<br>df.loc[::-1]<br><br>Reverse row order and reset the index:<br>df.loc[::-1].reset_index(drop=True)<br><br>Want more <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a>? Working on a video right now, stay tuned... &#x1F3A5;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1138783488864395265?ref_src=twsrc%5Etfw\">June 12, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #80:<br><br>Want to select multiple slices of columns from a DataFrame?<br><br>1. Use df.loc to select & pd.concat to combine<br>2. Slice df.columns & select using brackets<br>3. Use np.r_ to combine slices & df.iloc to select<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/IhbYbgpLKk\">pic.twitter.com/IhbYbgpLKk</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1191710484053016576?ref_src=twsrc%5Etfw\">November 5, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"filteringrowsbycondition\">Filtering rows by condition</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Filter DataFrame by multiple OR conditions:<br>df[(df.color == 'red') | (df.color == 'green') | (df.color == 'blue')]<br><br>Shorter way:<br>df[df.color.isin(['red', 'green', 'blue'])]<br><br>Invert the filter:<br>df[~df.color.isin(['red', 'green', 'blue'])]<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1139158451169517568?ref_src=twsrc%5Etfw\">June 13, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas tricks is back! &#x1F389;<br><br>Want to know the *count* of rows that match a condition?<br>(condition).sum()<br><br>Want to know the *percentage* of rows that match a condition?<br>(condition).mean()<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/COqZy4EB2S\">pic.twitter.com/COqZy4EB2S</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1191340126162567168?ref_src=twsrc%5Etfw\">November 4, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #76:<br><br>Want to filter a DataFrame to only include the largest categories?<br><br>1. Save the value_counts() output<br>2. Get the index of its head()<br>3. Use that index with isin() to filter the DataFrame<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/plzO4qesDH\">pic.twitter.com/plzO4qesDH</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1181223466353209344?ref_src=twsrc%5Etfw\">October 7, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #77:<br><br>Want to combine the smaller categories in a Series into a single category called \"Other\"?<br><br>1. Save the index of the largest values of value_counts()<br>2. Use where() to replace all other values with \"Other\"<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/FPxtuzwll4\">pic.twitter.com/FPxtuzwll4</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1181914705599836160?ref_src=twsrc%5Etfw\">October 9, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #93:<br><br>Want to combine the small categories in a Series (<10% frequency) into a single category?<br><br>1. Save the normalized value counts<br>2. Filter by frequency & save the index<br>3. Replace small categories with \"Other\"<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/z6w1x8s6qg\">pic.twitter.com/z6w1x8s6qg</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1204451833089015811?ref_src=twsrc%5Etfw\">December 10, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Are you trying to filter a DataFrame using lots of criteria? It can be hard to write &#x270F;&#xFE0F; and to read! &#x1F50D;<br><br>Instead, save the criteria as objects and use them to filter. Or, use reduce() to combine the criteria!<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/U9NV27RIjQ\">pic.twitter.com/U9NV27RIjQ</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1166702698869268480?ref_src=twsrc%5Etfw\">August 28, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to filter a DataFrame that doesn't have a name?<br><br>Use the query() method to avoid creating an intermediate variable!<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/NyUOOSr7Sc\">pic.twitter.com/NyUOOSr7Sc</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1154391633674350593?ref_src=twsrc%5Etfw\">July 25, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to refer to a local variable within a query() string? Just prefix it with the @ symbol!<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/PfXcASWDdC\">pic.twitter.com/PfXcASWDdC</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1161290417960300544?ref_src=twsrc%5Etfw\">August 13, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>If you want to use query() on a column name containing a space, just surround it with backticks! (New in pandas 0.25)<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/M5ZSRVr3no\">pic.twitter.com/M5ZSRVr3no</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1156216721990180864?ref_src=twsrc%5Etfw\">July 30, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"manipulatingstrings\">Manipulating strings</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to concatenate two string columns?<br><br>Option 1: Use a string method &#x1F9F6;<br>Option 2: Use plus signs &#x2795;<br><br>See example &#x1F447;<br><br>Which option do you prefer, and why?<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/SsjBAMqkxB\">pic.twitter.com/SsjBAMqkxB</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1164616017215201281?ref_src=twsrc%5Etfw\">August 22, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to split a string into multiple columns? Use str.split() method, expand=True to return a DataFrame, and assign it to the original DataFrame.<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/wZ4okQZ9Dy\">pic.twitter.com/wZ4okQZ9Dy</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1148580936449175553?ref_src=twsrc%5Etfw\">July 9, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #89:<br><br>Need to split names of variable length into first_name & last_name?<br><br>1. Use str.split(n=1) to split only once (returns a Series of lists)<br>2. Chain str[0] and str[1] on the end to select the list elements<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/fkikdaLkus\">pic.twitter.com/fkikdaLkus</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1197144405171412992?ref_src=twsrc%5Etfw\">November 20, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #75:<br><br>Need to count the number of words in a Series? Just use a string method to count the spaces and add 1!<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/U6quTmrvNT\">pic.twitter.com/U6quTmrvNT</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1180122892236926981?ref_src=twsrc%5Etfw\">October 4, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"workingwithdatatypes\">Working with data types</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Numbers stored as strings? Try astype():<br>df.astype({'col1':'int', 'col2':'float'})<br><br>But it will fail if you have any invalid input. Better way:<br>df.apply(<a href=\"https://t.co/H90jtE9QMp\">https://t.co/H90jtE9QMp</a>_numeric, errors='coerce')<br><br>Converts invalid input to NaN &#x1F389;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1140603888791379968?ref_src=twsrc%5Etfw\">June 17, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Select columns by data type:<a href=\"https://t.co/8c3VWfaERD\">https://t.co/8c3VWfaERD</a>_dtypes(include='number')<a href=\"https://t.co/8c3VWfaERD\">https://t.co/8c3VWfaERD</a>_dtypes(include=['number', 'category', 'object'])<a href=\"https://t.co/8c3VWfaERD\">https://t.co/8c3VWfaERD</a>_dtypes(exclude=['datetime', 'timedelta'])<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1139518333257158658?ref_src=twsrc%5Etfw\">June 14, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #94:<br><br>Want to save a *massive* amount of memory? Fix your data types:<br><br>&#x27A1;&#xFE0F; 'int8' for small integers<br>&#x27A1;&#xFE0F; 'category' for strings with few unique values<br>&#x27A1;&#xFE0F; 'Sparse' if most values are 0 or NaN<br><br>More info: <a href=\"https://t.co/yEJnaWnGfj\">https://t.co/yEJnaWnGfj</a> by <a href=\"https://twitter.com/itamarst?ref_src=twsrc%5Etfw\">@itamarst</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/jiBrkldFCt\">pic.twitter.com/jiBrkldFCt</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1204783572596535296?ref_src=twsrc%5Etfw\">December 11, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #81:<br><br>Does your object column contain mixed data types? Use df.col.apply(type).value_counts() to check!<br><br>See example &#x1F447;<br><br>Thanks to <a href=\"https://twitter.com/chris1610?ref_src=twsrc%5Etfw\">@chris1610</a> for inspiring this trick! Read more: <a href=\"https://t.co/N2vcNWFJ8t\">https://t.co/N2vcNWFJ8t</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/56gD5lqB4J\">pic.twitter.com/56gD5lqB4J</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1192065088318005248?ref_src=twsrc%5Etfw\">November 6, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #92:<br><br>Need to clean an object column with mixed data types? Use \"replace\" (not str.replace) and regex!<br><br>See example &#x1F447;<br><br>P.S. Not sure when to use \"replace\" versus \"str.replace\"? Read this: <a href=\"https://t.co/GF9l1IRzzi\">https://t.co/GF9l1IRzzi</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/qMV17MNvr3\">pic.twitter.com/qMV17MNvr3</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1204061428950405122?ref_src=twsrc%5Etfw\">December 9, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Two useful properties of ordered categories:<br>1&#xFE0F;&#x20E3; You can sort the values in logical (not alphabetical) order<br>2&#xFE0F;&#x20E3; Comparison operators also work logically<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/HeYZ3P3gPP\">pic.twitter.com/HeYZ3P3gPP</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1159436190799605760?ref_src=twsrc%5Etfw\">August 8, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #83:<br><br>Problem: Your dataset has many columns and you want to ensure the correct data types<br><br>Solution:<br>1. Create CSV of column names & dtypes<br>2. Read it into a DF<br>3. Convert it to dict<br>4. Use dict to specify dtypes of dataset<br><br>&#x1F447; Example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/10DeKtc6wj\">pic.twitter.com/10DeKtc6wj</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1192794326763474944?ref_src=twsrc%5Etfw\">November 8, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"encodingdata\">Encoding data</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to convert a column from continuous to categorical? Use cut():<br><br>df['age_groups'] = pd.cut(df.age, bins=[0, 18, 65, 99], labels=['child', 'adult', 'elderly'])<br><br>0 to 18 &#x27A1;&#xFE0F; 'child'<br>18 to 65 &#x27A1;&#xFE0F; 'adult'<br>65 to 99 &#x27A1;&#xFE0F; 'elderly'<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1146040449678925824?ref_src=twsrc%5Etfw\">July 2, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #72:<br><br>Need to convert a column from continuous to categorical?<br><br>&#x27A1;&#xFE0F; Use cut() to specify bin edges<br>&#x27A1;&#xFE0F; Use qcut() to specify number of bins (creates bins of approx. equal size)<br>&#x27A1;&#xFE0F; Both allow you to label the bins<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/2UhsNEIwDX\">pic.twitter.com/2UhsNEIwDX</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1179021844743118848?ref_src=twsrc%5Etfw\">October 1, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to dummy encode (or \"one hot encode\") your DataFrame? Use pd.get_dummies(df) to encode all object & category columns.<br><br>Want to drop the first level since it provides redundant info? Set drop_first=True.<br><br>See example & read thread &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/g0XjJ44eg2\">pic.twitter.com/g0XjJ44eg2</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1158364160478109696?ref_src=twsrc%5Etfw\">August 5, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #85:<br><br>Three useful ways to convert one set of values to another:<br><br>1. map() using a dictionary<br>2. factorize() to encode each value as an integer<br>3. comparison statement to return boolean values<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://twitter.com/python_tip?ref_src=twsrc%5Etfw\">@python_tip</a> <a href=\"https://t.co/9G5vcXW7ci\">pic.twitter.com/9G5vcXW7ci</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1194708511546105858?ref_src=twsrc%5Etfw\">November 13, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to apply the same mapping to multiple columns at once? Use \"applymap\" (DataFrame method) with \"get\" (dictionary method).<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/WU4AmeHP4O\">pic.twitter.com/WU4AmeHP4O</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1167494070790434816?ref_src=twsrc%5Etfw\">August 30, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"extractingdatafromlists\">Extracting data from lists</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Has your data ever been TRAPPED in a Series of Python lists? &#x1F512;<br><br>Expand the Series into a DataFrame by using apply() and passing it the Series constructor &#x1F513;<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/ZvysqaRz6S\">pic.twitter.com/ZvysqaRz6S</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1144233944281419776?ref_src=twsrc%5Etfw\">June 27, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Do you have a Series containing lists of items? Create one row for each item using the \"explode\" method &#x1F4A5;<br><br>New in pandas 0.25! See example &#x1F447;<br><br>&#x1F92F;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/ix5d8CLg57\">pic.twitter.com/ix5d8CLg57</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1161001631942684672?ref_src=twsrc%5Etfw\">August 12, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Does your Series contain comma-separated items? Create one row for each item:<br><br>&#x2702;&#xFE0F; \"str.split\" creates a list of strings<br>&#x2B05;&#xFE0F; \"assign\" overwrites the existing column<br>&#x1F4A5; \"explode\" creates the rows (new in pandas 0.25)<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/OqZNWdarP0\">pic.twitter.com/OqZNWdarP0</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1161621998994374657?ref_src=twsrc%5Etfw\">August 14, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>&#x1F4A5; \"explode\" takes a list of items and creates one row for each item (new in pandas 0.25)<br><br>You can also do the reverse! See example &#x1F447;<br><br>Thanks to <a href=\"https://twitter.com/EForEndeavour?ref_src=twsrc%5Etfw\">@EForEndeavour</a> for this tip &#x1F64C;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/4UBxbzHS51\">pic.twitter.com/4UBxbzHS51</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1162353777267138560?ref_src=twsrc%5Etfw\">August 16, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"workingwithtimeseriesdata\">Working with time series data</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>If you need to create a single datetime column from multiple columns, you can use to_datetime() &#x1F4C6;<br><br>See example &#x1F447;<br><br>You must include: month, day, year<br>You can also include: hour, minute, second<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/0bip6SRDdF\">pic.twitter.com/0bip6SRDdF</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1148217934298406912?ref_src=twsrc%5Etfw\">July 8, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #97:<br><br>Want to convert \"year\" and \"day of year\" into a single datetime column? &#x1F4C6;<br><br>1. Combine them into one number<br>2. Convert to datetime and specify its format<br><br>See example &#x1F447;<br><br>List of all format codes: <a href=\"https://t.co/SSd0dAWxM7\">https://t.co/SSd0dAWxM7</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/S7KlTo7rLE\">pic.twitter.com/S7KlTo7rLE</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1206589455961853958?ref_src=twsrc%5Etfw\">December 16, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>One reason to use the datetime data type is that you can access many useful attributes via \"dt\", like:<br>df.column.dt.hour<br><br>Other attributes include: year, month, day, dayofyear, week, weekday, quarter, days_in_month...<br><br>See full list &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/z405STKqKY\">pic.twitter.com/z405STKqKY</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1157274570220613632?ref_src=twsrc%5Etfw\">August 2, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to perform an aggregation (sum, mean, etc) with a given frequency (monthly, yearly, etc)?<br><br>Use resample! It's like a \"groupby\" for time series data. See example &#x1F447;<br><br>\"Y\" means yearly. See list of frequencies: <a href=\"https://t.co/oPDx85yqFT\">https://t.co/oPDx85yqFT</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/nweqbHXEtd\">pic.twitter.com/nweqbHXEtd</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1151846604216971264?ref_src=twsrc%5Etfw\">July 18, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #87:<br><br>Problem: You have time series data that you want to aggregate by day, but you're only interested in weekends.<br><br>Solution:<br>1. resample by day ('D')<br>2. filter by day of week (5=Saturday, 6=Sunday)<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/5yCPLpE6kr\">pic.twitter.com/5yCPLpE6kr</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1195336346279260160?ref_src=twsrc%5Etfw\">November 15, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to calculate the difference between each row and the previous row? Use df.col_name.diff()<br><br>Want to calculate the percentage change instead? Use df.col_name.pct_change()<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/5EGYqpNPC3\">pic.twitter.com/5EGYqpNPC3</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1166389736371576835?ref_src=twsrc%5Etfw\">August 27, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to convert a datetime Series from UTC to another time zone?<br><br>1. Set current time zone &#x27A1;&#xFE0F; tz_localize('UTC')<br>2. Convert &#x27A1;&#xFE0F; tz_convert('America/Chicago')<br><br>Automatically handles Daylight Savings Time!<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/ztzMXcgkFY\">pic.twitter.com/ztzMXcgkFY</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1156596371820072961?ref_src=twsrc%5Etfw\">July 31, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"handlingmissingvalues\">Handling missing values</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Calculate % of missing values in each column:<br>df.isna().mean()<br><br>Drop columns with any missing values:<br>df.dropna(axis='columns')<br><br>Drop columns in which more than 10% of values are missing:<br>df.dropna(thresh=len(df)*0.9, axis='columns')<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1141328289186951168?ref_src=twsrc%5Etfw\">June 19, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #95:<br><br>Want to know the *count* of missing values in a DataFrame?<br>&#x27A1;&#xFE0F; df.isna().sum().sum()<br><br>Just want to know if there are *any* missing values?<br>&#x27A1;&#xFE0F; df.isna().any().any()<br>&#x27A1;&#xFE0F; df.isna().any(axis=None)<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/BmmYJfk4xo\">pic.twitter.com/BmmYJfk4xo</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1205190863388852226?ref_src=twsrc%5Etfw\">December 12, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to fill missing values in your time series data? Use df.interpolate()<br><br>Defaults to linear interpolation, but many other methods are supported!<br><br>Want more pandas tricks? Watch this:<br>&#x1F449; <a href=\"https://t.co/6akbxXXHKg\">https://t.co/6akbxXXHKg</a> &#x1F448;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/JjH08dvjMK\">pic.twitter.com/JjH08dvjMK</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1149668977741688832?ref_src=twsrc%5Etfw\">July 12, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Do you need to store missing values (\"NaN\") in an integer Series? Use the \"Int64\" data type!<br><br>See example &#x1F447;<br><br>(New in v0.24, API is experimental/subject to change)<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/mN7Ud53Rls\">pic.twitter.com/mN7Ud53Rls</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1162002963835039750?ref_src=twsrc%5Etfw\">August 15, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"usingaggregationfunctions\">Using aggregation functions</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Instead of aggregating by a single function (such as 'mean'), you can aggregate by multiple functions by using 'agg' (and passing it a list of functions) or by using 'describe' (for summary statistics &#x1F4CA;)<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/Emg3zLAocB\">pic.twitter.com/Emg3zLAocB</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1152204706292408320?ref_src=twsrc%5Etfw\">July 19, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Did you know that \"last\" is an aggregation function, just like \"sum\" and \"mean\"?<br><br>Can be used with a groupby to extract the last value in each group. See example &#x1F447;<br><br>P.S. You can also use \"first\" and \"nth\" functions!<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/WKJtNIUxwz\">pic.twitter.com/WKJtNIUxwz</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1159841685175537666?ref_src=twsrc%5Etfw\">August 9, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #86:<br><br>Are you applying multiple aggregations after a groupby? Try \"named aggregation\":<br><br>&#x2705; Allows you to name the output columns<br>&#x274C; Avoids a column MultiIndex<br><br>New in pandas 0.25! See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/WIVQVcn4re\">pic.twitter.com/WIVQVcn4re</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1194972221707575297?ref_src=twsrc%5Etfw\">November 14, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Are you applying multiple aggregations after a groupby? Try \"named aggregation\":<br><br>&#x2705; Allows you to name the output columns<br>&#x274C; Avoids a column MultiIndex<br><br>New in pandas 0.25! See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/VXJz6ShZbc\">pic.twitter.com/VXJz6ShZbc</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1164167735275921408?ref_src=twsrc%5Etfw\">August 21, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to combine the output of an aggregation with the original DataFrame?<br><br>Instead of: df.groupby('col1').col2.func()<br>Use: df.groupby('col1').col2.transform(func)<br><br>\"transform\" changes the output shape<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/9dkcAGpTYK\">pic.twitter.com/9dkcAGpTYK</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1169235705933049856?ref_src=twsrc%5Etfw\">September 4, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"usingcumulativefunctions\">Using cumulative functions</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to calculate a running total (or \"cumulative sum\")? Use the cumsum() function! Also works with groupby()<br><br>See example &#x1F447;<br><br>Other cumulative functions: cummax(), cummin(), cumprod()<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/H4whqlV2ky\">pic.twitter.com/H4whqlV2ky</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1169951245873897479?ref_src=twsrc%5Etfw\">September 6, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to calculate a running count within groups? Do this:<br>df.groupby('col').cumcount() + 1<br><br>See example &#x1F447;<br><br>Thanks to <a href=\"https://twitter.com/kjbird15?ref_src=twsrc%5Etfw\">@kjbird15</a> and <a href=\"https://twitter.com/EForEndeavour?ref_src=twsrc%5Etfw\">@EForEndeavour</a> for this trick! &#x1F64C;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://twitter.com/python_tip?ref_src=twsrc%5Etfw\">@python_tip</a> <a href=\"https://t.co/jSz231QmmS\">pic.twitter.com/jSz231QmmS</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1171776545217814530?ref_src=twsrc%5Etfw\">September 11, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"randomsampling\">Random sampling</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Randomly sample rows from a DataFrame:<br>df.sample(n=10)<br>df.sample(frac=0.25)<br><br>Useful parameters:<br>&#x27A1;&#xFE0F; random_state: use any integer for reproducibility<br>&#x27A1;&#xFE0F; replace: sample with replacement<br>&#x27A1;&#xFE0F; weights: weight based on values in a column &#x1F60E;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/j2AyoTLRKb\">pic.twitter.com/j2AyoTLRKb</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1163809580213780486?ref_src=twsrc%5Etfw\">August 20, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to shuffle your DataFrame rows?<br>df.sample(frac=1, random_state=0)<br><br>Want to reset the index after shuffling?<br>df.sample(frac=1, random_state=0).reset_index(drop=True)<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1165998474464235524?ref_src=twsrc%5Etfw\">August 26, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Split a DataFrame into two random subsets:<br><br>df_1 = df.sample(frac=0.75, random_state=42)<br>df_2 = df.drop(df_1.index)<br><br>(Only works if df's index values are unique)<br><br>P.S. Working on a video of my 25 best <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a>, stay tuned! &#x1F4FA;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1140967304517378048?ref_src=twsrc%5Etfw\">June 18, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"mergingdataframes\">Merging DataFrames</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>When you are merging DataFrames, you can identify the source of each row (left/right/both) by setting indicator=True.<br><br>See example &#x1F447;<br><br>P.S. Learn 25 more <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> in 25 minutes: <a href=\"https://t.co/6akbxXG6SI\">https://t.co/6akbxXG6SI</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://t.co/tkb2LiV4eh\">pic.twitter.com/tkb2LiV4eh</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1153653794829418496?ref_src=twsrc%5Etfw\">July 23, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Merging datasets? Check that merge keys are unique in BOTH datasets:<br>pd.merge(left, right, validate='one_to_one')<br><br>&#x2705; Use 'one_to_many' to only check uniqueness in LEFT<br>&#x2705; Use 'many_to_one' to only check uniqueness in RIGHT<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1143868476609765376?ref_src=twsrc%5Etfw\">June 26, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"stylingdataframes\">Styling DataFrames</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Two simple ways to style a DataFrame:<br><br>1&#xFE0F;&#x20E3; <a href=\"https://t.co/HRqLVf3cWC\">https://t.co/HRqLVf3cWC</a>.hide_index()<br>2&#xFE0F;&#x20E3; <a href=\"https://t.co/HRqLVf3cWC\">https://t.co/HRqLVf3cWC</a>.set_caption('My caption')<br><br>See example &#x1F447;<br><br>For more style options, watch trick #25: <a href=\"https://t.co/6akbxXG6SI\">https://t.co/6akbxXG6SI</a> &#x1F4FA;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/8yzyQYz9vr\">pic.twitter.com/8yzyQYz9vr</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1158728502176337921?ref_src=twsrc%5Etfw\">August 6, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to add formatting to your DataFrame? For example:<br>- hide the index<br>- add a caption<br>- format numbers & dates<br>- highlight min & max values<br><br>Watch &#x1F447; to learn how!<br><br>Code: <a href=\"https://t.co/HKroWYVIEs\">https://t.co/HKroWYVIEs</a><br><br>25 more tricks: <a href=\"https://t.co/6akbxXG6SI\">https://t.co/6akbxXG6SI</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/AKQr7zVR7S\">pic.twitter.com/AKQr7zVR7S</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1151477232713555972?ref_src=twsrc%5Etfw\">July 17, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"exploringadataset\">Exploring a dataset</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to explore a new dataset without too much work?<br><br>1. Pick one:<br>&#x27A1;&#xFE0F; pip install pandas-profiling<br>&#x27A1;&#xFE0F; conda install -c conda-forge pandas-profiling<br><br>2. import pandas_profiling<br>3. df.profile_report()<br>4. &#x1F973;<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/srq5rptEUj\">pic.twitter.com/srq5rptEUj</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1155840938356432896?ref_src=twsrc%5Etfw\">July 29, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Need to check if two Series contain the same elements?<br><br>&#x274C; Don't do this:<br>df.A == df.B<br><br>&#x2705; Do this:<br>df.A.equals(df.B)<br><br>&#x2705; Also works for DataFrames:<br>df.equals(df2)<br><br>equals() properly handles NaNs, whereas == does not<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1143140214057111552?ref_src=twsrc%5Etfw\">June 24, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #69:<br><br>Need to check if two Series are \"similar\"? Use this:<br><br>pd.testing.assert_series_equal(df.A, df.B, ...)<br><br>Useful arguments include:<br>&#x27A1;&#xFE0F; check_names=False<br>&#x27A1;&#xFE0F; check_dtype=False<br>&#x27A1;&#xFE0F; check_exact=False<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/bdJBkiFxne\">pic.twitter.com/bdJBkiFxne</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1174679494470381568?ref_src=twsrc%5Etfw\">September 19, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #84:<br><br>My favorite feature in pandas 0.25: If DataFrame has more than 60 rows, only show 10 rows (saves your screen space!)<br><br>You can modify this: pd.set_option('min_rows', 4)<br><br>See example &#x1F447;<br><br>More info: <a href=\"https://t.co/8vwkHWxnPH\">https://t.co/8vwkHWxnPH</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/K7NXJXzIgY\">pic.twitter.com/K7NXJXzIgY</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1193907407287652352?ref_src=twsrc%5Etfw\">November 11, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to examine the \"head\" of a wide DataFrame, but can't see all of the columns?<br><br>Solution #1: Change display options to show all columns<br>Solution #2: Transpose the head (swaps rows and columns)<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/9sw7O7cPeh\">pic.twitter.com/9sw7O7cPeh</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1154036887834615812?ref_src=twsrc%5Etfw\">July 24, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to plot a DataFrame? It's as easy as:<br>df.plot(kind='...')<br><br>You can use:<br>line &#x1F4C8;<br>bar &#x1F4CA;<br>barh<br>hist<br>box &#x1F4E6;<br>kde<br>area<br>scatter <br>hexbin<br>pie &#x1F967;<br><br>Other plot types are available via pd.plotting!<br><br>Examples: <a href=\"https://t.co/fXYtPeVpZX\">https://t.co/fXYtPeVpZX</a><a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/dataviz?src=hash&ref_src=twsrc%5Etfw\">#dataviz</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/kp82wA15S4\">pic.twitter.com/kp82wA15S4</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1164881213317926913?ref_src=twsrc%5Etfw\">August 23, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #96:<br><br>Want to create interactive plots using pandas 0.25? &#x1F4CA;<br><br>1. Pick one:<br>&#x27A1;&#xFE0F; pip install hvplot<br>&#x27A1;&#xFE0F; conda install -c conda-forge hvplot<br><br>2. pd.options.plotting.backend = 'hvplot'<br>3. df.plot(...)<br>4. &#x1F973;<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/HjH9hTQGqD\">pic.twitter.com/HjH9hTQGqD</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1205498994136358914?ref_src=twsrc%5Etfw\">December 13, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"handlingwarnings\">Handling warnings</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Did you encounter the dreaded SettingWithCopyWarning? &#x1F47B;<br><br>The usual solution is to rewrite your assignment using \"loc\":<br><br>&#x274C; df[df.col == val1].col = val2<br>&#x2705; df.loc[df.col == val1, 'col'] = val2<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://twitter.com/python_tip?ref_src=twsrc%5Etfw\">@python_tip</a> <a href=\"https://t.co/6L6IukTpBO\">pic.twitter.com/6L6IukTpBO</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1171400622022844418?ref_src=twsrc%5Etfw\">September 10, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Did you get a \"SettingWithCopyWarning\" when creating a new column? You are probably assigning to a DataFrame that was created from another DataFrame.<br><br>Solution: Use the \"copy\" method when copying a DataFrame!<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/LrRNFyN6Qn\">pic.twitter.com/LrRNFyN6Qn</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1172139564141633536?ref_src=twsrc%5Etfw\">September 12, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"other\">Other</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #88:<br><br>Goal: Rearrange the columns in your DataFrame<br><br>Options:<br>1. Specify all column names in desired order<br>2. Specify columns to move, followed by remaining columns<br>3. Specify column positions in desired order<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://twitter.com/python_tip?ref_src=twsrc%5Etfw\">@python_tip</a> <a href=\"https://t.co/r739QtBims\">pic.twitter.com/r739QtBims</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1196797909389455360?ref_src=twsrc%5Etfw\">November 19, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #98:<br><br>Problem: Your DataFrame is in \"wide format\" (lots of columns), but you need it in \"long format\" (lots of rows)<br><br>Solution: Use melt()! &#x26C4;&#x27A1;&#xFE0F;&#x1F4A7;<br><br>See example &#x1F447;<br><br>Long format is better for analysis, transformation, merges...<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/4mmoiuFUGD\">pic.twitter.com/4mmoiuFUGD</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1206950457677094913?ref_src=twsrc%5Etfw\">December 17, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>If you've created a groupby object, you can access any of the groups (as a DataFrame) using the get_group() method.<br><br>See example &#x1F447;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/DataScience?src=hash&ref_src=twsrc%5Etfw\">#DataScience</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/6Ya0kxMpgk\">pic.twitter.com/6Ya0kxMpgk</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1168503762484416512?ref_src=twsrc%5Etfw\">September 2, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Do you have a Series with a MultiIndex?<br><br>Reshape it into a DataFrame using the unstack() method. It's easier to read, plus you can interact with it using DataFrame methods!<br><br>See example &#x1F447;<br><br>P.S. Want a video with my top 25 <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a>? &#x1F4FA;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://t.co/DKHwN03A7J\">pic.twitter.com/DKHwN03A7J</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1145682082112442369?ref_src=twsrc%5Etfw\">July 1, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939; pandas trick:<br><br>There are many display options you can change:<br>max_rows<br>max_columns<br>max_colwidth<br>precision<br>date_dayfirst<br>date_yearfirst<br><br>How to use:<br>pd.set_option('display.max_rows', 80)<br>pd.reset_option('display.max_rows')<br><br>See all:<br>pd.describe_option()<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1154736907974316032?ref_src=twsrc%5Etfw\">July 26, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Show total memory usage of a DataFrame:<a href=\"https://t.co/LkpMP7wWOi\">https://t.co/LkpMP7wWOi</a>(memory_usage='deep')<br><br>Show memory used by each column:<br>df.memory_usage(deep=True)<br><br>Need to reduce? Drop unused columns, or convert object columns to 'category' type.<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1147126063350407170?ref_src=twsrc%5Etfw\">July 5, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick #70:<br><br>Need to know which version of pandas you're using?<br><br>&#x27A1;&#xFE0F; pd.__version__<br><br>Need to know the versions of its dependencies (numpy, matplotlib, etc)?<br><br>&#x27A1;&#xFE0F; <a href=\"https://t.co/84gN00FdzJ\">https://t.co/84gN00FdzJ</a>_versions()<br><br>Helpful when reading the documentation! &#x1F4DA;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1175029249973075971?ref_src=twsrc%5Etfw\">September 20, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">&#x1F43C;&#x1F939;&#x200D;&#x2642;&#xFE0F; pandas trick:<br><br>Want to use NumPy without importing it? You can access ALL of its functionality from within pandas! See example &#x1F447;<br><br>This is probably *not* a good idea since it breaks with a long-standing convention. But it's a neat trick &#x1F60E;<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/pandas?src=hash&ref_src=twsrc%5Etfw\">#pandas</a> <a href=\"https://twitter.com/hashtag/pandastricks?src=hash&ref_src=twsrc%5Etfw\">#pandastricks</a> <a href=\"https://t.co/pZbXwuj6Kz\">pic.twitter.com/pZbXwuj6Kz</a></p>&#x2014; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1153290079089172480?ref_src=twsrc%5Etfw\">July 22, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<script async data-uid=\"d6d0f53c0f\" src=\"https://dataschool.ck.page/d6d0f53c0f/index.js\"></script><!--kg-card-end: markdown-->"
}