{
  "id": "tag:blogger.com,1999:blog-6755709643044947179.post-6649223125305893597",
  "published": "2022-10-24T09:01:00.001-07:00",
  "updated": "2022-10-24T09:01:00.137-07:00",
  "category": [
    "",
    ""
  ],
  "title": "Lyft reduced their code for UI components by as much as 60% using Jetpack Compose",
  "content": "<meta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWTpLaaX6IrwgAHHwWA0761RaRJwWg6WjTbcTGvr9kMNjXQOSS4I8sTNweAL1Mbg0XxjQ6eEit8xjvoyx5fEhk01x-9Si0F9nNJGecGouPi1C68yOQbrgSzdrbFvFgoDEHyZH3p8H4BukHzfCKfds2PMNpA2tosKAvLOGHARnyeeXf1GdU9pw1vVIW/s1600/image1.gif\" name=\"twitter:image\"></meta>\n<img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWTpLaaX6IrwgAHHwWA0761RaRJwWg6WjTbcTGvr9kMNjXQOSS4I8sTNweAL1Mbg0XxjQ6eEit8xjvoyx5fEhk01x-9Si0F9nNJGecGouPi1C68yOQbrgSzdrbFvFgoDEHyZH3p8H4BukHzfCKfds2PMNpA2tosKAvLOGHARnyeeXf1GdU9pw1vVIW/s1600/image1.gif\" style=\"display: none;\" />\n\n<div><h3><span><i>Learn why Lyft plans to shift entirely to Compose for future feature development</i></span></h3></div><p>\n  \n  <a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWTpLaaX6IrwgAHHwWA0761RaRJwWg6WjTbcTGvr9kMNjXQOSS4I8sTNweAL1Mbg0XxjQ6eEit8xjvoyx5fEhk01x-9Si0F9nNJGecGouPi1C68yOQbrgSzdrbFvFgoDEHyZH3p8H4BukHzfCKfds2PMNpA2tosKAvLOGHARnyeeXf1GdU9pw1vVIW/s1600/image1.gif\"><img alt=\"Lyft reduced their code for Ul components by as much as 60% using Jetpack Compose\" border=\"0\" data-original-height=\"800\" data-original-width=\"1058\" height=\"382\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWTpLaaX6IrwgAHHwWA0761RaRJwWg6WjTbcTGvr9kMNjXQOSS4I8sTNweAL1Mbg0XxjQ6eEit8xjvoyx5fEhk01x-9Si0F9nNJGecGouPi1C68yOQbrgSzdrbFvFgoDEHyZH3p8H4BukHzfCKfds2PMNpA2tosKAvLOGHARnyeeXf1GdU9pw1vVIW/w680-h382/image1.gif\" width=\"680\" /></a></p><p><span id=\"docs-internal-guid-e749f395-7fff-017e-7032-4ebd96d8b3a8\"></span></p><div><div style=\"text-align: left;\"><a href=\"https://www.lyft.com/\" target=\"_blank\">Lyft</a>, one of the largest ride-sharing companies in the U.S., is practically synonymous with one-tap transportation. Lyft has far outgrown its ride-hailing beginnings to now include everything from delivery services to additional modes of transportation such as bikes and scooters. With more than <a href=\"https://play.google.com/store/apps/details?id=me.lyft.android\" target=\"_blank\">50 million downloads</a> on Google Play, Lyft’s engineers are always exploring new ways to streamline the product's features and functionality to improve the user experience.</div></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">\nTo keep up with the modern trends in mobile development, multiple teams at Lyft used <a href=\"https://developer.android.com/jetpack/compose\" target=\"_blank\">Jetpack Compose</a> to replace some of their legacy frameworks, reduce boilerplate code, and streamline their workflow. They also used it for feature rollouts and have benefited from the implementation.</div><div style=\"text-align: left;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"315\" src=\"https://www.youtube.com/embed/QO6Cg9MSpE8\" width=\"800\" youtube-src-id=\"QO6Cg9MSpE8\"></iframe></div>\n<h3 style=\"text-align: left;\"><strong>Less code, easier UI feature rollouts</strong></h3>\n<p>\nLyft engineers adopted Compose for a UI overhaul and used a plugin framework that allowed developers to break down features into self-contained reusable modules. “<strong>Over 90% of all new feature code is now developed in Compose</strong>,” said Anton Tananaev, staff Android engineer at Lyft. This is in large part because Compose makes implementing new features a faster—and easier—process for engineers.\n</p>\n<p>\nLyft has a unified design across its web and mobile apps as well as a Figma library of components, making it quick and easy to develop new UI features using those building blocks. Lyft's internal UI framework, called Lyft Product Language (LPL), allows them to easily use their unified design system across Android, iOS, and the web. The LPL includes common UI components, like visual elements within the app, and more complex panels and dialogs. To ensure Lyft’s riders and drivers have the best user experience, this design system is implemented individually on each platform. Compose is built with the flexibility to support Material Design, custom design systems, and everything in between, so <strong>Lyft was able to easily build these UI components to meet their custom visual requirements</strong>. On top of that, using Compose instead of views has dramatically decreased the lines of code required. A button component on the Lyft app has gone from around 800 lines of code across three files plus 17 different XML files down to a single Kotlin file with 300 lines of code. They were able to reduce the lines of code by nearly two-thirds of what was needed with Views!\n</p>\n<p>\nThe team that’s working on the server-driven UI framework at Lyft also adopted Compose. Current systems only support static API response, but one key reason Lyft engineers prefer Compose is because it supports dynamic UI changes from the backend. <strong>Compose will automatically detect changes, so no additional client code is required to support dynamic content</strong>.\n</p>\n<h3 style=\"text-align: left;\"><strong>A welcome improvement for engineers</strong></h3><div style=\"text-align: left;\">Moving over to Compose allowed Lyft to increase developer productivity and velocity. Not only do developers need to write less code in Compose than with Views, they find it easier to understand and maintain, and faster to ship any needed changes. This translates to more time developing new features for Lyft drivers and riders, and less time fixing old features.</div>\n<p>\nLyft created their own unidirectional architecture, splitting the aspects of a UI into multiple pieces. That means they can pass the state needed for a UI independently of the actions to perform all while still taking advantage of other technologies used throughout their code like RxJava. Lyft's previous plugin system required several files with a lot of boilerplate code just to create a basic reusable component, but with Compose it can be a single file or even a simple Composable function in some cases.\n</p>\n<p>\nDevelopers at Lyft like Compose so much that nearly all new features are being developed in Compose, and they see it as the future of Android. Even in job interviews, Android engineer candidates show excitement at the possibility of using Compose and see it as a key indicator that Lyft is keeping current with modern Android technologies.\n</p>\n\n<div><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><center><img alt=\"Compose is clearly the future of Android development. It requires less code, and it's easier to understand and maintain.\nAnton Tananaev Staff Android Engineer at Lyft\" border=\"0\" data-original-height=\"1504\" data-original-width=\"720\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiM6MWzgP8fjxnn_Fw8Md5sohR2EXO9EuPwFZS6Eb9ElQygZai5HjuBGjB38P2JL0xN1bZREZJJZ7zIuHjjw6fMeoNTB3ErmVwexCuzg9fZHRAVIPoL3G9PyoaInkk-X2ffxEKhr6ra-Zsu8K3Dv6nMXR1tlLx6ZLMX81Jo2SOzqehsscwrNLfJV9EW/s1600/image2.png\" style=\"width: 100%;\" td=\"\" /></center></td></tr>\n<tr><td class=\"tr-caption\" style=\"text-align: center;\"></td></tr></tbody></table></div>\n\n<h3 style=\"text-align: left;\"><strong>Migrating to an easier-to-manage codebase</strong></h3>\n<p>\nCompose is fully interoperable with Views, so developers can build UI with as much or as little Compose as they’d like. The Lyft team enjoyed using Compose so much, however, that the engineers plan on migrating to Compose for nearly all of their features and are working on a plan to officially deprecate any new XML layouts so they can continue taking advantage of the benefits across the different parts of the app.\n</p>\n<p>\n“Compose is clearly the future of Android development, so the sooner we transition the better,” said Anton, “It requires less code, and it’s easier to understand and maintain.”\n</p>\n<h3 style=\"text-align: left;\"><strong>Streamline your feature code with Compose</strong></h3>\n<p>\nLearn how you can improve feature coding with <a href=\"https://developer.android.com/jetpack/compose\" target=\"_blank\">Jetpack Compose</a>.\n</p>\n\n<p></p><p></p><p></p>",
  "link": [
    "",
    "",
    ""
  ],
  "author": {
    "name": "Android Developers",
    "uri": "http://www.blogger.com/profile/08588467489110681140",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": ""
}