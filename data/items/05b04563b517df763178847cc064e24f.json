{
  "title": "e013: Staying alive",
  "link": "https://newrustacean.com/show_notes/e013/",
  "description": "<p>Reasoning about and using lifetimes in Rust (and why we need them)</p>\n\n<h2>Notes</h2>\n<p>Lifetimes are our way of reasoning about how long a given piece of data is\n<br />available and safe to use in Rust. The reason we don't have the dangling\n<br />pointer problem is that we <em>do</em> have lifetimes instead. They're not magic,\n<br />they're just a bit of semantics and syntax that let us specify the rules for\n<br />how long any given item lives, and how long references to data must be valid.</p>\n\n<h2>Links</h2>\n<ul>\n<li><a href=\"http://diesel.rs\">Diesel</a>\n<ul>\n<li><a href=\"http://diesel.rs/guides/getting-started/\">Tutorial</a></li>\n<li><a href=\"http://docs.diesel.rs/diesel/index.html\">API docs</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/carllerche/mio\">Mio, an I/O library</a>\n<ul>\n<li><a href=\"https://github.com/carllerche/mio/blob/getting-started/doc/getting-started.md\">Getting Started</a></li>\n<li><a href=\"http://rustdoc.s3-website-us-east-1.amazonaws.com/mio/master/mio/\">API Docs</a></li>\n</ul>\n</li>\n</ul>\n<table><thead><tr></tr></thead><tbody><tr></tr></tbody></table>\n<br />\n<h2>Sponsors</h2>\n<ul>\n<li>Aleksey Pirogov</li>\n<li><a href=\"http://red-oxide.org/\">Chris Palmer</a></li>\n<li><a href=\"https://twitter.com/derekmorr\">Derek Morr</a></li>\n<li>Hamza Sheikh</li>\n<li>Lachlan Collins</li>\n<li>Leif Arne Storset</li>\n<li>Luca Schmid</li>\n<li>Micael Bergeron</li>\n<li><a href=\"https://pascalhertleif.de/\">Pascal Hertleif</a></li>\n<li>Ralph Giles (\"rillian\")</li>\n<li>Ralph \"FriarTech\" Loizzo</li>\n<li>reddraggone9</li>\n<li>Ryan Ollos</li>\n<li>Vesa Kaihlavirta</li>\n<li><a href=\"http://willroe.me\">William Roe</a></li>\n</ul>\n\n<p>(Thanks to the couple people donating who opted out of the reward tier, as\n<br />well. You know who you are!)</p>\n\n<h3>Become a sponsor</h3>\n<ul>\n<li><a href=\"https://www.patreon.com/newrustacean\" rel=\"payment\">Patreon</a></li>\n<li><a href=\"https://venmo.com/chriskrycho\">Venmo</a></li>\n<li><a href=\"https://www.dwolla.com/hub/chriskrycho\">Dwolla</a></li>\n<li><a href=\"https://cash.me/$chriskrycho\">Cash.me</a></li>\n</ul>\n\n<h2>Contact</h2>\n<ul>\n<li>New Rustacean:\n<ul>\n<li>Twitter: <a href=\"https://www.twitter.com/newrustacean\">@newrustacean</a></li>\n<li>Email: <a href=\"mailto:hello@newrustacean.com\">hello@newrustacean.com</a></li>\n</ul>\n</li>\n<li>Chris Krycho\n<ul>\n<li>GitHub: <a href=\"https://github.com/chriskrycho\">chriskrycho</a></li>\n<li>Twitter: <a href=\"https://www.twitter.com/chriskrycho\">@chriskrycho</a></li>\n</ul>\n</li>\n</ul>",
  "pubDate": "Mon, 04 Apr 2016 17:52:21 -0600",
  "enclosure": "",
  "guid": "20F0A4EE-7D88-4C90-8BA5-7D28FB8AF0AD",
  "itunes:author": "Chris Krycho",
  "itunes:summary": "Reasoning about and using lifetimes in Rust (and why we need them) Notes Lifetimes are our way of reasoning about how long a given piece of data is available and safe to use in Rust. The reason we don't have the dangling pointer problem is that we do have lifetimes instead. They're not magic, they're just a bit of semantics and syntax that let us specify the rules for how long any given item lives, and how long references to data must be valid. Sponsors * Aleksey Pirogue * Chris Palmer * Derek Morr * Hamza Sheikh * Lachlan Collins * Leif Arne Storset * Luca Schmid * Micael Bergeron * Pascal Hertleif * Ralph Giles (\"gillian\") * Ralph \"FriarTech\" Loizzo * reddraggone9 * Ryan Oleos * Vesa Kaihlavirta * William Roe (Thanks to the couple people donating who opted out of the reward tier, as well. You know who you are!) Become a sponsor * Patreon.com/newrustacean * Venmo.com/chriskrycho * Dwolla.com/hub/chriskrycho * Cash.me/$chriskrycho Contact * New Rustacean: * Twitter: @newrustacean * Email: hello@newrustacean.com * Chris Krycho * GitHub: chriskrycho * Twitter: @chriskrycho",
  "itunes:duration": "17:40",
  "itunes:episodeType": "full"
}