{
  "title": "Using RSiteCatalyst With Microsoft PowerBI Desktop",
  "description": "<p>With pretty regular frequency I get emails asking if RSiteCatalyst can be used with <a href=\"https://powerbi.microsoft.com/en-us/\">Microsoft Power BI</a>. While admittedly I’m not a frequent user of the Windows operating system (nor dashboarding tools like Tableau or Power BI), I am pleased to report that it is fact possible to call the <a href=\"https://marketing.adobe.com/developer/documentation/analytics-reporting-1-4/whatsnew\">Adobe Analytics API</a> with Power BI via RSiteCatalyst!</p>",
  "pubDate": "Tue, 13 Mar 2018 00:00:00 +0000",
  "link": "http://randyzwitch.com/rsitecatalyst-powerbi-desktop-microsoft/",
  "guid": "http://randyzwitch.com/rsitecatalyst-powerbi-desktop-microsoft/",
  "content": "<p>With pretty regular frequency I get emails asking if RSiteCatalyst can be used with <a href=\"https://powerbi.microsoft.com/en-us/\">Microsoft Power BI</a>. While admittedly I’m not a frequent user of the Windows operating system (nor dashboarding tools like Tableau or Power BI), I am pleased to report that it is fact possible to call the <a href=\"https://marketing.adobe.com/developer/documentation/analytics-reporting-1-4/whatsnew\">Adobe Analytics API</a> with Power BI via RSiteCatalyst!</p>\n\n<h2 id=\"step-1-call-adobe-analytics-api-using-get-data-menu\">Step 1: Call Adobe Analytics API Using <code class=\"language-plaintext highlighter-rouge\">Get Data</code> Menu</h2>\n\n<p>The majority of getting RSiteCatalyst to work within Power BI desktop is getting the R script correct. From the <code class=\"language-plaintext highlighter-rouge\">Get Data</code> menu, choose the <code class=\"language-plaintext highlighter-rouge\">More...</code> menu option to bring up all of the data import tools that Power BI defines:</p>\n\n<p><img src=\"/assets/img/rsitecatalyst-powerbi-getdata.png\" alt=\"rsitecatalyst powerbi get data\" /></p>\n\n<p>Once you choose ‘R Script’, an input box will open where you can place your RSiteCatalyst function calls:</p>\n\n<p><img src=\"/assets/img/rsitecatalyst-powerbi-rscript.png\" alt=\"rsitecatalyst powerbi rscript\" /></p>\n\n<p>After hitting ‘OK’, Power BI will evaluate your R code, determining which statements return a <code class=\"language-plaintext highlighter-rouge\">data.frame</code> (which is the only allowable data structure imported into Power BI). You can choose which <code class=\"language-plaintext highlighter-rouge\">data.frame(s)</code> you want to import from the ‘Navigator’ window:</p>\n\n<p><img src=\"/assets/img/rsitecatalyst-powerbi-navigator.png\" alt=\"rsitecatalyst powerbi navigator\" /></p>\n\n<p>Once you hit ‘OK’, Power BI imports the data and you can use your Adobe Analytics data just as you would in R with RSiteCatalyst (or, like any other data source like CSV or database…)</p>\n\n<h2 id=\"limitations\">Limitations</h2>\n\n<p>While it’s possible to call RSiteCatalyst through Power BI, there are some limitations to keep in mind.</p>\n\n<p>First, RSiteCatalyst will only work with Microsoft Power BI <em>Desktop</em>, which is installed locally on your machine. The Power BI Service, which is more of a shared dashboard/data store environment, <a href=\"https://docs.microsoft.com/en-us/power-bi/service-r-packages-support#requirements-and-limitations-of-r-packages\">does not allow external API calls</a> as part of its security model. So while you can analyze your data locally, you cannot share dashboards to the Power BI Service.</p>\n\n<p>The second limitation I’ve noticed is that Power BI doesn’t read from from a <code class=\"language-plaintext highlighter-rouge\">.Renviron</code> file (at least, not from the default Windows location that R GUI reads). So you will need to place your credentials directly in the R script, which is never really ideal (though, may not be a big deal all things considered).</p>\n\n<p>Finally, the R script runs synchronously, so when placing multiple calls in the same R script you will need to wait for all of the <code class=\"language-plaintext highlighter-rouge\">data.frame</code> results before you can use them within Power BI. This is the same default behavior within R, sans using <a href=\"https://rstudio.github.io/promises/\">Promises</a> or parallelism of some sort, but it’s still important to keep in mind.</p>\n\n<h2 id=\"dashboards-dashboards-dashboards\">Dashboards, Dashboards, Dashboards!</h2>\n\n<p>With a few minutes work, I was able to create this rudimentary dashboard (<a href=\"/assets/r_code/rsitecatalyst_powerbi_example.R\">R code</a>):</p>\n\n<p><img src=\"/assets/img/rsitecatalyst-powerbi-dashboard.png\" alt=\"rsitecatalyst powerbi dashboard\" /></p>\n\n<p>Someone with more interesting/higher volume data could surely do better. But the most important thing in my opinion is that Microsoft has built an awesome integration with R and that creating dashboards in Power BI is <em>waaaaaay</em> easier than the last time I tried to create a dashboard using Excel and the Adobe Report Builder plugin.</p>\n\n<p>Happy dashboarding!</p>"
}