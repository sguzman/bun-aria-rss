{
  "title": "Geoffrey Hinton on max pooling (reddit AMA)",
  "link": "https://mirror2image.wordpress.com/2014/11/11/geoffrey-hinton-on-max-pooling-reddit-ama/",
  "dc:creator": "mirror2image",
  "pubDate": "Tue, 11 Nov 2014 07:59:58 +0000",
  "category": [
    "computer vision",
    "Deep Learnig",
    "arxiv",
    "Deep Learning",
    "machine learning"
  ],
  "guid": "http://mirror2image.wordpress.com/?p=1630",
  "description": "Geoffrey Hinton, neural networks, ML, deep learning pioneer answered &#8220;Ask Me Anything&#8221; on reddit: https://www.reddit.com/r/MachineLearning/comments/2lmo0l/ama_geoffrey_hinton/ His answers only: https://www.reddit.com/user/geoffhinton His most controversial answer is: The pooling operation used in convolutional neural networks is a big mistake and the fact that it works so well is a disaster. If the pools do not overlap, pooling loses [&#8230;]",
  "content:encoded": "<p>Geoffrey Hinton, neural networks, ML, deep learning pioneer answered &#8220;Ask Me Anything&#8221; on reddit:<br />\n<a href=\"https://www.reddit.com/r/MachineLearning/comments/2lmo0l/ama_geoffrey_hinton/\" rel=\"nofollow\">https://www.reddit.com/r/MachineLearning/comments/2lmo0l/ama_geoffrey_hinton/</a><br />\nHis answers only:<br />\n<a href=\"https://www.reddit.com/user/geoffhinton\" rel=\"nofollow\">https://www.reddit.com/user/geoffhinton</a></p>\n<p>His most controversial answer is:<br />\n<strong>The pooling operation used in convolutional neural networks is a big mistake and the fact that it works so well is a disaster.<br />\nIf the pools do not overlap, pooling loses valuable information about where things are. We need this information to detect precise relationships between the parts of an object. Its true that if the pools overlap enough, the positions of features will be accurately preserved by &#8220;coarse coding&#8221; (see my paper on &#8220;distributed representations&#8221; in 1986 for an explanation of this effect). But I no longer believe that coarse coding is the best way to represent the poses of objects relative to the viewer (by pose I mean position, orientation, and scale).<br />\nI think it makes much more sense to represent a pose as a small matrix that converts a vector of positional coordinates relative to the viewer into positional coordinates relative to the shape itself. This is what they do in computer graphics and it makes it easy to capture the effect of a change in viewpoint. It also explains why you cannot see a shape without imposing a rectangular coordinate frame on it, and if you impose a different frame, you cannot even recognize it as the same shape. Convolutional neural nets have no explanation for that, or at least none that I can think of.</strong></p>\n<p>It&#8217;s interesting though controversial opinion, and here is my take on it:<br />\nIt looks like Convolutional networks discriminate input by switching between activation subnetworks (<a href=\"http://arxiv.org/abs/1410.1165\" rel=\"nofollow\">http://arxiv.org/abs/1410.1165</a>, Understanding Locally Competitive Networks)<br />\nFrom that point of view <em>max pooling</em> operation is pretty natural &#8211; it provide both robustness to small deviations and switching between activation subsets. Aslo max pooling has a nice property to be semilinear to multiplication f(ax)=af(x) , which make all the layers stack but last cost layer semilinear, and if one use SVM/L2SVM as cost whole stack semilinear. Not sure if it help in discrimination, but it surely help in debugging.<br />\nAs alternative to pooling pyramid Geoffrey Hinton suggest to get somehow global rotation(or other transformation) matrix from the image.<br />\nGetting it from image or from image patch is actually possible with low-rank matrix factorization  from single image(Transform Invariant Low-rank Textures  by Zhang et al) and by optical flow (or direct matching) from set of images, but it&#8217;s quite expensive in performance term. It&#8217;s definitely possible  to combine those method with deep network, (ironically they are benefit using pooling pyramid)<br />\nbut:<br />\n1. They will be kind of image augmentation<br />\n2. Those are problem-specific methods, they may not help in other domains like NLP, speech etc.</p>\n<p>There are some work on using low-rank matrix factorization in deep networks, but they are mostly about fully connected, not convolutional layers. But IMHO if to try do factorization in conv layers, the pooling wouldn&#8217;t go away.</p>\n<p>PS (edit): Here is a video with Hinton alternative to pooling &#8211; &#8220;capsules&#8221;<br />\n<a href=\"http://techtv.mit.edu/collections/bcs/videos/30698-what-s-wrong-with-convolutional-nets\" rel=\"nofollow\">http://techtv.mit.edu/collections/bcs/videos/30698-what-s-wrong-with-convolutional-nets</a></p>\n",
  "media:content": {
    "media:title": "mirror2image"
  }
}