{
  "title": "Deployment of a Multi-stage Computer Vision model with SAS Event Stream Processing",
  "link": "https://blogs.sas.com/content/subconsciousmusings/2022/10/28/deployment-multi-stage-computer-vision-model-with-sas-esp/",
  "comments": "https://blogs.sas.com/content/subconsciousmusings/2022/10/28/deployment-multi-stage-computer-vision-model-with-sas-esp/#respond",
  "dc:creator": "Dragos Coles",
  "pubDate": "Fri, 28 Oct 2022 14:13:33 +0000",
  "category": [
    "Uncategorized",
    "aerial imagery",
    "Artificial Intelligence",
    "CASL",
    "computer vision",
    "deep learning",
    "Drone",
    "event stream processing",
    "Image Classification",
    "machine learning",
    "object detection",
    "python"
  ],
  "guid": "https://blogs.sas.com/content/subconsciousmusings/?p=13950",
  "description": "<p>I will show you how to deploy multi-stage deep learning (DL) models in SAS Event Stream Processing (ESP) and leverage ESP on Edge via Docker containers to identify events of interest.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blogs.sas.com/content/subconsciousmusings/2022/10/28/deployment-multi-stage-computer-vision-model-with-sas-esp/\">Deployment of a Multi-stage Computer Vision model with SAS Event Stream Processing</a> appeared first on <a rel=\"nofollow\" href=\"https://blogs.sas.com/content/subconsciousmusings\">The SAS Data Science Blog</a>.</p>\n",
  "content:encoded": "<p><em>This article is a follow-up to <a href=\"https://blogs.sas.com/content/subconsciousmusings/2022/08/12/multi-stage-computer-vision-model-detect-aerial-objects/\">Creating a Multi-stage Computer Vision model to detect objects on high-resolution imagery</a> by <a href=\"https://blogs.sas.com/content/author/neelav/\">Neela Vengateshwaran</a> and <a href=\"https://blogs.sas.com/content/author/robertblanchard/\">Robert Blanchard</a>.</em></p>\n<h2>Overview</h2>\n<p>If you’ve read <a href=\"https://blogs.sas.com/content/subconsciousmusings/2022/08/12/multi-stage-computer-vision-model-detect-aerial-objects/\">Robert and Neela's first article in this series</a>, you already know that the star of our show is Dr. Taco. He is a mischievous little dog who is always up to something fun like stealing a treat… even chocolate! We all know that chocolate is not good for dogs, so we need to stop him and keep him safe. Dr. Taco also loves accessorizing with different colored collars and scarves and we can use his fashion sense to our advantage. In this article, I will show you how to deploy multi-stage deep learning (DL) models in <a href=\"https://www.sas.com/en_us/software/event-stream-processing.html\">SAS Event Stream Processing (ESP)</a> and leverage ESP on Edge via Docker containers to identify events of interest. Then, we will talk about potential improvements and future possibilities.</p>\n<h2>Intro/review of the DL models</h2>\n<p>In the first part of this series, we saw how Neela and Robert used <a href=\"https://www.sas.com/en_us/software/visual-data-mining-machine-learning.html\">SAS Visual Data Mining and Machine Learning Software (VDMML)</a> capabilities to develop two deep learning models: a YOLOv2 model to first find Dr. Taco inside an image and a ResNet-50 model to identify Dr. Taco regardless of if he's wearing a different color scarf. We now have a video source that comes from a high-resolution drone camera that records Dr. Taco's activities and watches out for his scarf color. Our goal is to deploy these 2-stage DL models to process a high-resolution drone video capture. In stage one (the YOLOv2 model), we will find Dr. Taco, frame him, extract the frame and shrink it. Then, we will apply the second stage (the ResNet-50 model)  to catch the little thief in the act of stealing a chocolate treat and label the action according to Dr. Taco's collar color. If his collar is red, white or blue then he stole the treat, otherwise he hasn't stolen yet). To process and visualize the video stream, we will use SAS ESP deployed in a Docker container (with and without GPU support).</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/projectSetup-screenshot.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/projectSetup-screenshot-1024x579.png\" alt=\"\" width=\"702\" height=\"397\" class=\"aligncenter size-large wp-image-14342\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/projectSetup-screenshot-1024x579.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/projectSetup-screenshot-300x170.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/projectSetup-screenshot-768x434.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/projectSetup-screenshot.png 1401w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h2>How are we going to deploy the SAS DL models?</h2>\n<p>We will use a SAS ESP Engine to create an event stream processing project, deploy our 2-stage models and score the video stream while annotating. To build this project we can use XML code or we can use the SAS ESP Studio user-friendly UI and build the project with point-and-click functions. This ESP engine can easily process many modeling objects including DL model ASTOREs.</p>\n<h2>How are we going to deploy the SAS ESP Engine?</h2>\n<p>As with all projects, the setup is the most important part. For Dr. Taco, the setup would just be us forgetting some chocolate on the table; stealing it would be so easy for him! In our case, setting up the containers with ESP is the most important step. We must ask ourselves some key questions. Do we need a GPU to process this? Do we have a high enough resolution and framerate? These factors will also determine if it will be better to run the container locally or in the cloud (Azure in this case). Our video source is 60 FPS with a resolution over 3000x2000 and we will deploy both locally and in the cloud, just to get a sense of the difference. We have a couple of deployment options to decide between…</p>\n<h3>Option 1</h3>\n<p>SAS ESP Engine in an Azure NVIDIA GPU Virtual Machine deployed in a Docker container. The stream viewer is the video source that pushes the video stream through the ESP engine and allows us to view both the original video and the annotated video stream side-by-side.</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option1.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option1-1024x579.png\" alt=\"\" width=\"702\" height=\"397\" class=\"aligncenter size-large wp-image-14204\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option1-1024x579.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option1-300x170.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option1-768x434.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option1-1536x869.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option1.png 1574w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<p>We have a container for SAS ESP Studio UI which allows us to connect to different ESP servers, build our ESP project, deploy the DL models and use other stream processing features on events identified in the stream. We will deploy the SAS ESP Engine in a container inside an Azure NVIDIA GPU Virtual Machine and we will leverage the GPUs for faster processing. With this setup, the webUI that we use for the stream viewer will also be the source of our video stream, as the browser will be pushing the video through the ESP project via a little Python code.</p>\n<p>For testing the ESP project, we will capture some \"event\" frames and use those as the source to ensure that our models are deployed correctly and that the events of interest are identified and processed correctly.</p>\n<h3>Option 2</h3>\n<p>SAS ESP Engine in a local Docker container using a custom videoCapture plugin to stream the process video directly from the raw MP4 video source, allowing us to view the annotated stream through an HTML viewer.</p>\n<p>With this deployment option, the ESP project setup is almost identical to what we see in Option 1. The difference is that we are also defining an Input Publisher Connector to use the raw video as the video source instead of having an intermediary, the stream viewer, as the video source for the ESP project. We are not leveraging GPUs and therefore, we would have to accept that stream processing for this high-resolution video would be a bit slower. Using the input publisher will also allow us to view the stream in test mode.</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option2.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option2-1024x579.png\" alt=\"\" width=\"702\" height=\"397\" class=\"aligncenter size-large wp-image-14213\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option2-1024x579.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option2-300x170.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option2-768x434.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Option2.png 1436w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<p>With both options considered, we will proceed with Option 1.</p>\n<h2>Configure the ESP project step by step</h2>\n<h3>Step 1: ESP server connection and project variables</h3>\n<p><strong>Connect to the ESP server on the VM</strong>, go to 'ESP Servers' and add new:</p>\n<ul>\n<li>name = <your name></li>\n<li>host = FQDN from you Azure resource</li>\n<li>port = <your http port></li>\n</ul>\n<p><strong>Create project variables</strong> because they will help us configure nodes more easily and change project parameters without having to remember full file system paths on the VM. Ensure that no node is selected in your project (if you have an empty screen, you're good to go), click on the 'project' icon button on the top right corner, go to 'User-Defined Properties' and create the following variables. Make sure to assign your model names to the model variables and the file_input_name.</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step1.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step1.png\" alt=\"\" width=\"864\" height=\"552\" class=\"aligncenter size-full wp-image-14225\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step1.png 864w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step1-300x192.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step1-768x491.png 768w\" sizes=\"(max-width: 864px) 100vw, 864px\" /></a></p>\n<h3>Step 2: Building the ESP Studio Project</h3>\n<h4>Step 2.1 - Source Window -1- 'droneFootage'</h4>\n<p>We need this window for testing purposes only. To configure, add a source window node and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.1.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.1-1024x363.png\" alt=\"\" width=\"702\" height=\"249\" class=\"aligncenter size-large wp-image-14228\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.1-1024x363.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.1-300x106.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.1-768x272.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.1-1536x545.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.1.png 1890w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.2 - Functional Window -2- ‘addTimeStamp’ (optional)</h4>\n<p>This is to capture the timestamp for the event identified. To configure, add a functional window node and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.2.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.2-1024x419.png\" alt=\"\" width=\"702\" height=\"287\" class=\"aligncenter size-large wp-image-14231\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.2-1024x419.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.2-300x123.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.2-768x314.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.2-1536x629.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.2.png 1940w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.3 - Calculate Window -3- ‘resize’</h4>\n<p>We need to resize each high-resolution frame to adhere to YOLOv2's maximum of 416x416. The Calculate windows support multiple image processing functions and 'resize' and 'crop' are 2 of the functions supported. To configure, add a calculate window and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3-1024x490.png\" alt=\"\" width=\"702\" height=\"336\" class=\"aligncenter size-large wp-image-14234\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3-1024x490.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3-300x144.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3-768x368.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3-1536x735.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3-1078x516.png 1078w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3-702x336.png 702w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.3.png 1822w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.4 - Model Reader Window -4- 'yoloReader'</h4>\n<p>This is where we configure the use of our first ASTORE model in the 2-stage model process. The YOLOv2 model will score and help us find Dr. Taco and put a rectangular frame around the 'event' in the subsequent scoring step. To configure, add a model reader window and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4-1024x491.png\" alt=\"\" width=\"702\" height=\"337\" class=\"aligncenter size-large wp-image-14237\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4-1024x491.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4-300x144.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4-768x368.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4-1536x737.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4-1078x516.png 1078w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4-702x336.png 702w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.4.png 1960w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.5 - Scoring Window -5-  'isTacoThere'</h4>\n<p>This is where we start scoring the video feed against our first model (YOLOv2) to find Dr. Taco. To configure, add a score window and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.5.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.5-1024x580.png\" alt=\"\" width=\"702\" height=\"398\" class=\"aligncenter size-large wp-image-14240\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.5-1024x580.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.5-300x170.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.5-768x435.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.5.png 1532w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<p>If we test our project now, we will be able to find Dr. Taco (thank you YOLOv2 model) and track him in the video stream:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco-1024x490.png\" alt=\"\" width=\"702\" height=\"336\" class=\"aligncenter size-large wp-image-14243\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco-1024x490.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco-300x143.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco-768x367.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco-1536x735.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco-1078x516.png 1078w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco-702x336.png 702w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/TrackingDrTaco.png 1560w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.6 - Calculate Window – ‘cropTaco’</h4>\n<p>Now, we need to crop out Dr. Taco around the rectangle frame identified and set up by the YOLOv2 model. We will use YOLO coordinates because it will normalize the data so we don’t have to worry about resolution. The Calculate windows support multiple image processing functions and 'resize' and 'crop' are 2 of the functions supported. To configure, add a calculate window and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.6.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.6-1024x624.png\" alt=\"\" width=\"702\" height=\"428\" class=\"aligncenter size-large wp-image-14246\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.6-1024x624.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.6-300x183.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.6-768x468.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.6-1536x937.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.6.png 1748w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.7 - Calculate Window -7- 'resnetResize'</h4>\n<p> we need to resize each high-resolution frame to adhere to ResNet-50's maximum of 224x224 using the RECT coordinate type. The Calculate windows support multiple image processing functions and 'resize' and 'crop' are 2 of the functions supported. To configure, add a calculate window and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.7.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.7-1024x662.png\" alt=\"\" width=\"702\" height=\"454\" class=\"aligncenter size-large wp-image-14249\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.7-1024x662.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.7-300x194.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.7-768x496.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.7-1536x993.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.7.png 1584w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.8 - Model Reader Window -8- 'resnetReader'</h4>\n<p>This is where we configure the use of our second ASTORE model in the 2-stage model process. The ResNet-50 model will score and help us find what Dr. Taco is wearing and it will generate the second label for our annotation in the subsequent scoring step. To configure, add a calculate window and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.8.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.8-1024x708.png\" alt=\"\" width=\"702\" height=\"485\" class=\"aligncenter size-large wp-image-14252\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.8-1024x708.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.8-300x207.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.8-768x531.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.8.png 1498w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.9 - Scoring Window -9- 'findTheScarf'</h4>\n<p>This is where we start scoring the video feed against our second model (ResNet-50) to find the color of Dr. Taco's scarf. To configure, add a calculate window and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.9.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.9-1024x704.png\" alt=\"\" width=\"702\" height=\"483\" class=\"aligncenter size-large wp-image-14255\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.9-1024x704.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.9-300x206.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.9-768x528.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.9-1536x1056.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.9.png 1556w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<p>Testing the model now and outputting the stream from the ‘findTheScarf’ window, we see still only what the YOLO model gives us: Dr. Taco without the additional annotation of the scarf color. To get the classification from the ResNet model on the scarf Dr. Taco is wearing, we need one more functional window in the project…</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/FindTheScarf.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/FindTheScarf-1024x571.png\" alt=\"\" width=\"702\" height=\"391\" class=\"aligncenter size-large wp-image-14258\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/FindTheScarf-1024x571.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/FindTheScarf-300x167.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/FindTheScarf-768x428.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/FindTheScarf.png 1356w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<h4>Step 2.10 - Functional Window -10- 'annotateTaco'</h4>\n<p>Apply a concatenate function between the labels of the 2 models: 'drTaco' and 'scarf color'. To configure, add a calculate window and assign the following properties:</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.10.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.10-1024x715.png\" alt=\"\" width=\"702\" height=\"490\" class=\"aligncenter size-large wp-image-14261\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.10-1024x715.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.10-300x209.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.10-768x536.png 768w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.10-1536x1072.png 1536w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Step2.10.png 1642w\" sizes=\"(max-width: 702px) 100vw, 702px\" /></a></p>\n<p>In the final test, we now know what Dr. Taco is doing!</p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_white_scarf.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_white_scarf.png\" alt=\"\" width=\"936\" height=\"423\" class=\"aligncenter size-full wp-image-14264\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_white_scarf.png 1022w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_white_scarf-300x136.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_white_scarf-768x347.png 768w\" sizes=\"(max-width: 936px) 100vw, 936px\" /></a></p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_no_scarf.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_no_scarf.png\" alt=\"\" width=\"936\" height=\"525\" class=\"aligncenter size-full wp-image-14267\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_no_scarf.png 1042w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_no_scarf-300x168.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_no_scarf-1024x574.png 1024w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_no_scarf-768x430.png 768w\" sizes=\"(max-width: 936px) 100vw, 936px\" /></a></p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_blue_scarf.png\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_blue_scarf.png\" alt=\"\" width=\"936\" height=\"456\" class=\"aligncenter size-full wp-image-14273\" srcset=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_blue_scarf.png 936w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_blue_scarf-300x146.png 300w, https://blogs.sas.com/content/subconsciousmusings/files/2022/10/dr_taco_blue_scarf-768x374.png 768w\" sizes=\"(max-width: 936px) 100vw, 936px\" /></a></p>\n<h2>Step 3: Testing</h2>\n<p>To test this ESP project before deploying it to stream and score through the webUI, we need a different data source. We will use the same 'droneFootage' source window, but we will activate the input data publisher connector that we defined earlier in Step 2.1 which will make the source a Base64 converted file of the screenshot created in Step 0. The Base64 file should be at this location - '…/ESPAssets/Input'.</p>\n<p><strong>Run test:</strong></p>\n<ul>\n<li>Set publisher to 'Active'</li>\n<li>Enter test mode</li>\n<li>Run and monitor the source and the annotate windows.</li>\n</ul>\n<h2>Step 4: Running the ESP project</h2>\n<p>To deploy a new demo within the same infrastructure the IoT repo:</p>\n<ul>\n<li>All new assets will have been moved under \"…/ComputerVisionUI\" locations</li>\n<li>The ESP project XML file will need to be named 'Model.xml' and place under new folder location for the project under<br />\n“…/ComputerVisionUI/WebUI/Projects\" (this should have already been completed in Step 0)</li>\n<li><strong>Important!!!</strong> Before exporting the project XML from ESP Studio, uncheck the 'Activate' option for the input publisher connector defined in the source window</li>\n<li>To add a new project to the webUI, make sure it can read from the new project Example</li>\n<li>Place videos to stream in the video source location under “…/ComputerVisionUI/WebUI\"</li>\n</ul>\n<p>Now, we are ready to run our project:  </p>\n<p><a href=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Run-Project.gif\"><img loading=\"lazy\" src=\"https://blogs.sas.com/content/subconsciousmusings/files/2022/10/Run-Project.gif\" alt=\"\" width=\"800\" height=\"429\" class=\"aligncenter size-full wp-image-14300\" /></a></p>\n<h2>Final stream and conclusions</h2>\n<p>A quick recap:</p>\n<ul>\n<li>Neela and Robert used SAS Deep Learning technology to develop a 2-stage model to track down the thief Dr. Taco. They created a YOLO model to find and box-bind Dr. Taco’s activities. Once Dr. Taco was identified, they used a ResNet deep learning model to determine what Dr. Taco did by the color of the scarf he was wearing (we are going to great lengths to connect these dots; whatever color scarf Dr. Taco is wearing, that is the color of the chocolate that he stole).</li>\n<li>Once these models were developed, our expert modelers created the analytic stores of the models that they shared with me to implement and deploy through SAS ESP.</li>\n<li>To deploy those models, we first needed access to an ESP environment, and luckily, we have access to a couple. We have an ESP Engine on Edge container via a GPU-enabled Azure VM which gives us the option to experiment with GPUs or CPUs for processing the video stream. We also deployed ESP on Edge on a local container via Docker (no GPUs here though).</li>\n<li>We also have ESP Studio deployed in a local container which allows us to configure and connect to any ESP engine. ESP studio simplifies the creation of the ESP project, the deployment of the DL models and has point-and-click functions specific to manipulating and processing a video stream.</li>\n<li>Now, we are finally able to find Dr. Taco, track him and annotate his actions to the point that we now know exactly what he is up to.</li>\n</ul>\n<h3>Learn more</h3>\n<p>For more information on SAS Deep Learning and Event Stream Processing capabilities, please follow these links and don’t hesitate to contact us if you have any questions. Thanks for reading!</p>\n<ul>\n<li><a href=\"https://blogs.sas.com/content/subconsciousmusings/2020/04/06/getting-started-with-deep-learning-using-the-sas-language/\">Getting started with deep learning using the SAS Language</a></li>\n<li><a href=\"https://go.documentation.sas.com/doc/en/espcdc/6.2/espov/home.htm\">What Is SAS Event Stream Processing?</a></li>\n<li><a href=\"https://support.sas.com/documentation/prod-p/vdmml/zip/\">Deep Learning Models and Tools</a></li>\n</ul>\n<p>The post <a rel=\"nofollow\" href=\"https://blogs.sas.com/content/subconsciousmusings/2022/10/28/deployment-multi-stage-computer-vision-model-with-sas-esp/\">Deployment of a Multi-stage Computer Vision model with SAS Event Stream Processing</a> appeared first on <a rel=\"nofollow\" href=\"https://blogs.sas.com/content/subconsciousmusings\">The SAS Data Science Blog</a>.</p>\n",
  "wfw:commentRss": "https://blogs.sas.com/content/subconsciousmusings/2022/10/28/deployment-multi-stage-computer-vision-model-with-sas-esp/feed/",
  "slash:comments": 0,
  "enclosure": ""
}