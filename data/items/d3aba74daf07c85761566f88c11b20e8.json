{
  "title": "Visualizing Website Structure With Network Graphs",
  "description": "<p>Last week, <a href=\"http://randyzwitch.com/rsitecatalyst-version-1-4-release-notes/\">version 1.4 of RSiteCatalyst</a> was released, and now it’s possible to get site pathing information directly within R. Now, it’s easy to create impressive looking network graphs from your Adobe Analytics data using <a href=\"http://cran.r-project.org/web/packages/RSiteCatalyst/index.html\">RSiteCatalyst</a> and <a href=\"http://cran.r-project.org/web/packages/d3Network/index.html\">d3Network</a>. In this blog post, I will cover simple and force-directed network graphs, which show the pairwise representation between pages. In a follow-up blog post, I will show how to visualize longer paths using <a href=\"http://www.sankey-diagrams.com/\">Sankey diagrams</a>, also from the d3Network package.</p>",
  "pubDate": "Mon, 08 Sep 2014 06:40:38 +0000",
  "link": "http://randyzwitch.com/rsitecatalyst-d3-network-graphs/",
  "guid": "http://randyzwitch.com/rsitecatalyst-d3-network-graphs/",
  "content": "<p>Last week, <a href=\"http://randyzwitch.com/rsitecatalyst-version-1-4-release-notes/\">version 1.4 of RSiteCatalyst</a> was released, and now it’s possible to get site pathing information directly within R. Now, it’s easy to create impressive looking network graphs from your Adobe Analytics data using <a href=\"http://cran.r-project.org/web/packages/RSiteCatalyst/index.html\">RSiteCatalyst</a> and <a href=\"http://cran.r-project.org/web/packages/d3Network/index.html\">d3Network</a>. In this blog post, I will cover simple and force-directed network graphs, which show the pairwise representation between pages. In a follow-up blog post, I will show how to visualize longer paths using <a href=\"http://www.sankey-diagrams.com/\">Sankey diagrams</a>, also from the d3Network package.</p>\n\n<h2 id=\"obtainingpathing-data-with-queuepathing\">Obtaining Pathing Data With QueuePathing</h2>\n\n<p>Although the <code class=\"language-plaintext highlighter-rouge\">QueuePathing()</code> function is new to RSiteCatalyst, its syntax should feel familiar (even with all of the breaking changes we made!). In the case of creating our network graphs, we want to download all pairwise combinations of pages, which is easy to do using the <code class=\"language-plaintext highlighter-rouge\">::anything::</code> operator:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-r\" data-lang=\"r\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n</pre></td><td class=\"code\"><pre><span class=\"n\">library</span><span class=\"p\">(</span><span class=\"s2\">\"RSiteCatalyst\"</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">library</span><span class=\"p\">(</span><span class=\"s2\">\"d3Network\"</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\">#### Authentication</span><span class=\"w\">\n</span><span class=\"n\">SCAuth</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"secret\"</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\">#### Get Pathing data using ::anything:: wildcards</span><span class=\"w\">\n</span><span class=\"c1\"># Results are limited by the API to 50000</span><span class=\"w\">\n</span><span class=\"n\">pathpattern</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"s2\">\"::anything::\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"::anything::\"</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"n\">queue_pathing_pages</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">QueuePathing</span><span class=\"p\">(</span><span class=\"s2\">\"zwitchdev\"</span><span class=\"p\">,</span><span class=\"w\">\n                                    </span><span class=\"s2\">\"2014-01-01\"</span><span class=\"p\">,</span><span class=\"w\">\n                                    </span><span class=\"s2\">\"2014-08-31\"</span><span class=\"p\">,</span><span class=\"w\">\n                                    </span><span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"s2\">\"pageviews\"</span><span class=\"p\">,</span><span class=\"w\">\n                                    </span><span class=\"n\">element</span><span class=\"o\">=</span><span class=\"s2\">\"page\"</span><span class=\"p\">,</span><span class=\"w\">\n                                    </span><span class=\"n\">pathpattern</span><span class=\"p\">,</span><span class=\"w\">\n                                    </span><span class=\"n\">top</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">50000</span><span class=\"p\">)</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p>Because we are using a pathing pattern of <code class=\"language-plaintext highlighter-rouge\">(\"::anything::\", \"::anything::\")</code>, the data frame that is returned from this function will have three columns: <code class=\"language-plaintext highlighter-rouge\">step.1</code>, <code class=\"language-plaintext highlighter-rouge\">step.2</code> and <code class=\"language-plaintext highlighter-rouge\">count</code>, which is the number of occurrences of the path.</p>\n\n<h2 id=\"plotting-graph-using-d3simplenetwork\">Plotting Graph Using d3SimpleNetwork</h2>\n\n<p>Before jumping into the plotting, we need to do some quick data cleaning. Lines 1-5 below are optional; I don’t set the Adobe Analytics s.pageName on each of my blog pages (a worst practice if there ever was one!), so I use the <code class=\"language-plaintext highlighter-rouge\">sub()</code> function in Base R to strip the domain name from the beginning of the page. The other data frame modification is to remove the <code class=\"language-plaintext highlighter-rouge\">'Entered Site'</code> and <code class=\"language-plaintext highlighter-rouge\">'Exited Site'</code> from the pagename pairs. Although this is important information generally, these behaviors aren’t needed to show the pairwise relationship between pages.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-r\" data-lang=\"r\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td><td class=\"code\"><pre><span class=\"c1\">#Optional step: Cleaning my pagename URLs to remove to domain for graph clarity</span><span class=\"w\">\n</span><span class=\"n\">queue_pathing_pages</span><span class=\"o\">$</span><span class=\"n\">step.1</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s2\">\"http://randyzwitch.com/\"</span><span class=\"p\">,</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"w\">\n                                  </span><span class=\"n\">queue_pathing_pages</span><span class=\"o\">$</span><span class=\"n\">step.1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ignore.case</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">TRUE</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"n\">queue_pathing_pages</span><span class=\"o\">$</span><span class=\"n\">step.2</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s2\">\"http://randyzwitch.com/\"</span><span class=\"p\">,</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"w\">\n                                  </span><span class=\"n\">queue_pathing_pages</span><span class=\"o\">$</span><span class=\"n\">step.2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ignore.case</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">TRUE</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\">#### Remove Enter and Exit site values</span><span class=\"w\">\n</span><span class=\"c1\">#This information is important for analysis, but not related to website structure</span><span class=\"w\">\n</span><span class=\"n\">graph_links</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">subset</span><span class=\"p\">(</span><span class=\"n\">queue_pathing_pages</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">step.1</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"s2\">\"Entered Site\"</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">step.2</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"s2\">\"Exited Site\"</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\">#### First pass - Simple Network</span><span class=\"w\">\n</span><span class=\"c1\"># Setting standAlone = TRUE creates a full HTML file to view graph</span><span class=\"w\">\n</span><span class=\"c1\"># Set equal to FALSE to just get the d3 JavaScript</span><span class=\"w\">\n</span><span class=\"n\">simpleoutput1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"C:/Users/rzwitc200/Desktop/simpleoutput1.html\"</span><span class=\"w\">\n</span><span class=\"n\">d3SimpleNetwork</span><span class=\"p\">(</span><span class=\"n\">graph_links</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Source</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"step.1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Target</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"step.2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">height</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">600</span><span class=\"p\">,</span><span class=\"w\">\n                </span><span class=\"n\">width</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">750</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fontsize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">12</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">linkDistance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">charge</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">-50</span><span class=\"p\">,</span><span class=\"w\">\n                </span><span class=\"n\">linkColour</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"#666\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nodeColour</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"#3182bd\"</span><span class=\"p\">,</span><span class=\"w\">\n                </span><span class=\"n\">nodeClickColour</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"#E34A33\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">textColour</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"#3182bd\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">opacity</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">0.6</span><span class=\"p\">,</span><span class=\"w\">\n                </span><span class=\"n\">standAlone</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">TRUE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">simpleoutput1</span><span class=\"p\">)</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p>Running the above code results in the following graph:</p>\n\n<iframe src=\"http://randyzwitch.com/wp-content/uploads/2014/09/simpleoutput1.html\" width=\"750\" height=\"500\" frameborder=\"0\" scrolling=\"no\"></iframe>\n\n<p>Hmmm…looks like a blob of spaghetti, a common occurrence when creating graphs. We can do better.</p>\n\n<h2 id=\"pruning-edges-from-thegraph\">Pruning Edges From The Graph</h2>\n\n<p>There are many <a title=\"Pruning Edges from Network\" href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-31830-6_13\" target=\"_blank\">complex algorithms for determining how to prune edges/nodes from a network</a>. For the sake of simplicity, I’m going to use a very simple algorithm: each path has to occur more than 5 times for it to be included in the network. This will prune roughly 80% of the pairwise page combinations while keeping ~75% of the occurrences. This is simple to do using the <code class=\"language-plaintext highlighter-rouge\">subset()</code> function in R:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-r\" data-lang=\"r\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"code\"><pre><span class=\"c1\">#### Second pass: thin the spaghetti blob!</span><span class=\"w\">\n</span><span class=\"c1\">#Require path to happen more than some number of times (count &gt; x)</span><span class=\"w\">\n</span><span class=\"c1\">#What constitutes \"low volume\" will depend on your level of traffic</span><span class=\"w\">\n</span><span class=\"n\">simpleoutput2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"C:/Users/rzwitc200/Desktop/simpleoutput2.html\"</span><span class=\"w\">\n</span><span class=\"n\">d3SimpleNetwork</span><span class=\"p\">(</span><span class=\"n\">subset</span><span class=\"p\">(</span><span class=\"n\">graph_links</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"m\">5</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">Source</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"step.1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Target</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"step.2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">height</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">600</span><span class=\"p\">,</span><span class=\"w\">\n                </span><span class=\"n\">width</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">750</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fontsize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">12</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">linkDistance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">50</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">charge</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">-100</span><span class=\"p\">,</span><span class=\"w\">\n                </span><span class=\"n\">linkColour</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"#666\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nodeColour</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"#3182bd\"</span><span class=\"p\">,</span><span class=\"w\">\n                </span><span class=\"n\">nodeClickColour</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"#E34A33\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">textColour</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"#3182bd\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">opacity</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">0.6</span><span class=\"p\">,</span><span class=\"w\">\n                </span><span class=\"n\">standAlone</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">TRUE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">simpleoutput2</span><span class=\"p\">)</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p>The result of pruning the number of edges is a much less cluttered graph:</p>\n\n<iframe src=\"http://randyzwitch.com/wp-content/uploads/2014/09/simpleoutput2.html\" width=\"750\" height=\"500\" frameborder=\"0\" scrolling=\"no\"></iframe>\n\n<p>Even with fewer edges in the graph, we still lose some of the information about the pages, since we don’t know what topics/groups the pages represent. We can fix that using a slightly more complex version of the d3Network graph code.</p>\n\n<h2 id=\"force-directed-graphs\">Force-directed graphs</h2>\n\n<p>The graphs above outline the structure of randyzwitch.com, but they can be improved by adding color-coding to the nodes to represent the topic of the post, as well as making the edges thicker/thinner based on how frequently the path occurs. This can be done using the <code class=\"language-plaintext highlighter-rouge\">d3ForceNetwork()</code> function like so:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-r\" data-lang=\"r\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n</pre></td><td class=\"code\"><pre><span class=\"c1\">#### Force directed network</span><span class=\"w\">\n\n</span><span class=\"c1\">#Limit to more than 5 occurence like in simple network</span><span class=\"w\">\n</span><span class=\"n\">fd_graph_links</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">subset</span><span class=\"p\">(</span><span class=\"n\">graph_links</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"m\">5</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\">#Get unique values of page name to create nodes df</span><span class=\"w\">\n</span><span class=\"c1\">#Create an index value, starting at 0</span><span class=\"w\">\n</span><span class=\"n\">fd_nodes</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">as.data.frame</span><span class=\"p\">(</span><span class=\"n\">unique</span><span class=\"p\">(</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"n\">fd_graph_links</span><span class=\"o\">$</span><span class=\"n\">step.1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd_graph_links</span><span class=\"o\">$</span><span class=\"n\">step.2</span><span class=\"p\">)))</span><span class=\"w\">\n</span><span class=\"nf\">names</span><span class=\"p\">(</span><span class=\"n\">fd_nodes</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"s2\">\"name\"</span><span class=\"w\">\n</span><span class=\"n\">fd_nodes</span><span class=\"o\">$</span><span class=\"n\">nodevalue</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nf\">as.numeric</span><span class=\"p\">(</span><span class=\"n\">row.names</span><span class=\"p\">(</span><span class=\"n\">fd_nodes</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\">\n\n</span><span class=\"c1\">#Create groupings for node colors</span><span class=\"w\">\n</span><span class=\"c1\">#This is user-specific in terms of how to create these groupings</span><span class=\"w\">\n</span><span class=\"c1\">#Due to few number of pages/topics, I am manually coding this</span><span class=\"w\">\n\n</span><span class=\"n\">grouping</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"p\">){</span><span class=\"w\">\n\n  </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"(hadoop|hive|pig)\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"(julia|uaparser-jl)\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">((</span><span class=\"s2\">\"[r]?sitecatalyst|adobe-analytics|omniture\"</span><span class=\"p\">),</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"(wordpress|twenty-eleven|scrappy)\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">4</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"data-science|ec2\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">5</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"python\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">6</span><span class=\"p\">)</span><span class=\"w\">  \n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"(digital-analytics|google-analytics|web-analyst)\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">8</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"(macbook|iphone)\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">9</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"(randyzwitch|about|page)\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">grepl</span><span class=\"p\">(</span><span class=\"s2\">\"(rstudio|rcmdr|r-language|jsonlite|r-language-oddities|tag/r|automated-re-install-of-packages-for-r-3-0|learning-r-sas|creating-dummy-variables-data-frame-r)\"</span><span class=\"p\">,</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">perl</span><span class=\"o\">=</span><span class=\"kc\">TRUE</span><span class=\"p\">)){</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">7</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nf\">return</span><span class=\"p\">(</span><span class=\"m\">11</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"c1\">#Create group column</span><span class=\"w\">\n</span><span class=\"n\">fd_nodes</span><span class=\"o\">$</span><span class=\"n\">group</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">sapply</span><span class=\"p\">(</span><span class=\"n\">fd_nodes</span><span class=\"o\">$</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">grouping</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"c1\">#Append numeric nodeid to pagename</span><span class=\"w\">\n</span><span class=\"n\">fd_graph_links</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"p\">(</span><span class=\"n\">fd_graph_links</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd_nodes</span><span class=\"p\">[,</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">2</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">by.x</span><span class=\"o\">=</span><span class=\"s2\">\"step.1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">by.y</span><span class=\"o\">=</span><span class=\"s2\">\"name\"</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"nf\">names</span><span class=\"p\">(</span><span class=\"n\">fd_graph_links</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"s2\">\"step.1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"step.2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"value\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"source\"</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"n\">fd_graph_links</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"p\">(</span><span class=\"n\">fd_graph_links</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd_nodes</span><span class=\"p\">[,</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">2</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">by.x</span><span class=\"o\">=</span><span class=\"s2\">\"step.2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">by.y</span><span class=\"o\">=</span><span class=\"s2\">\"name\"</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"nf\">names</span><span class=\"p\">(</span><span class=\"n\">fd_graph_links</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"s2\">\"step.1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"step.2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"value\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"source\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"target\"</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"n\">d3output</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"C:/Users/rzwitc200/Desktop/fd_graph.html\"</span><span class=\"w\">\n</span><span class=\"c1\"># Create force-directed graph</span><span class=\"w\">\n</span><span class=\"n\">d3ForceNetwork</span><span class=\"p\">(</span><span class=\"n\">Links</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fd_graph_links</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Nodes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fd_nodes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Source</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"source\"</span><span class=\"p\">,</span><span class=\"w\">\n               </span><span class=\"n\">Target</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"target\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NodeID</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span><span class=\"w\">\n               </span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"group\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">opacity</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">0.8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"value\"</span><span class=\"p\">,</span><span class=\"w\">\n               </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">d3output</span><span class=\"p\">,</span><span class=\"w\">\n               </span><span class=\"n\">charge</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">-90</span><span class=\"p\">,</span><span class=\"w\">\n               </span><span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"m\">12</span><span class=\"p\">)</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p>Running the code results in the following force-directed graph:</p>\n\n<iframe src=\"http://randyzwitch.com/wp-content/uploads/2014/09/fd_graph.html\" width=\"750\" height=\"500\" frameborder=\"0\" scrolling=\"no\"></iframe>\n\n<h2 id=\"interpretation\">Interpretation</h2>\n\n<p>I’m not going to lie, all three of these diagrams are hard to interpret. Like wordclouds, network graphs can often be visually interesting, yet difficult to ascertain any concrete information. Network graphs also have the tendency to reinforce what you already know (you or someone you know designed your website, you should already have a feel for its structure!).</p>\n\n<p>However, in the case of the force-directed graph above, I do see some interesting patterns. Specifically, there are a considerable number of nodes that aren’t attached to the main network structure. This may be occurring due to my method of pruning the network edges. More likely is that these disconnected nodes represent “dead-ends” in my blog, either because few pages link to them, there are technical errors, these are high bounce-rate pages or represent one-off topics that satiate the reader.</p>\n\n<p>In terms of action I can take, I can certainly look up the bounce rate for these disconnected pages/nodes and re-write the content to make it more ‘sticky’. There’s also the case of the way my “Related Posts” plugin determines related pages. As far as I know, it’s quite naive, using the existing words on the page to determine relationships between posts. So one follow-up could be to create an actual recommender system to better suggest content to my readers. Perhaps that’s a topic for a different blog post.</p>\n\n<p>Regardless of the actions I’ll end up taking from this information, hopefully this blog post has piqued some ideas of how to use RSiteCatalyst in a non-standard way, to extend the standard digital analytics information you are capturing with Adobe Analytics into creating interesting visualizations and potential new insights.</p>\n\n<h4 id=\"example-data\">Example Data</h4>\n\n<p><em>For those of you who aren’t Adobe Analytics customers (or are, but don’t have API access), here are the <a href=\"/wp-content/uploads/2014/09/queue_pathing_pages.csv\">data from the <code class=\"language-plaintext highlighter-rouge\">queue_pathing_pages</code> data frame</a> above. Just read this data into R, then you should be able to follow along with the <code class=\"language-plaintext highlighter-rouge\">d3Network</code> code.</em></p>"
}