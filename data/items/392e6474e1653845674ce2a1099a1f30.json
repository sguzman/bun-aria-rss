{
  "title": "e005: Allocate it where?",
  "link": "https://newrustacean.com/show_notes/e005/",
  "description": "<p>Allocate it where?</p>\n<p><strong>Subject:</strong> Returning functions from other functions, and thinking about the stack, the heap, and reference types.</p>\n<li><a href=\"https://www.podtrac.com/pts/redirect.mp3/cdn.newrustacean.com/file/newrustacean/e005.mp3\">MP3</a></li>\n</ul></li>\n</ul>\n<h1 id=\"notes\">Notes</h1>\n<p>This episode, we look at returning functions from other functions, and as part of that discuss some basics about the stack and the heap—and why we need to care about them for returning functions.</p>\n<p>The functions themselves are not especially interesting; they just show you the basic form you use to return functions from other functions, and how to then use them in another function. You’ll want to take a detailed look instead at the documentation for each (or just read the <a href=\"/src/show_notes/e005.rs.html\">source</a>!), because that’s where the meat of the discussion in this week’s code is.</p>\n<h1 id=\"links\">Links</h1>\n<ul>\n<li><a href=\"http://blog.rust-lang.org/2015/10/29/Rust-1.4.html\">Rust 1.4 release announcement</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1214-projections-lifetimes-and-wf.md\">“Clarify (and improve) rules for projections and well-formedness”</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/1061\">MSVC support tracking issue</a></li>\n<li><a href=\"https://github.com/brson/rust/blob/relnotes/RELEASES.md\">Rust 1.4 full release notes</a></li>\n<li><a href=\"http://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap\">“What and where are the stack and the heap?”</a></li>\n</ul>\n<h1 id=\"sponsors\">Sponsors</h1>\n<ul>\n<li>reddraggone9</li>\n<li><a href=\"http://podcastinit.com\">Chris Patti</a></li>\n</ul>\n<h2 id=\"become-a-sponsor\">Become a sponsor</h2>\n<ul>\n<li><a href=\"https://www.patreon.com/newrustacean\" rel=\"payment\">Patreon</a></li>\n<li><a href=\"https://venmo.com/chriskrycho\">Venmo</a></li>\n<li><a href=\"https://www.dwolla.com/hub/chriskrycho\">Dwolla</a></li>\n<li><a href=\"https://cash.me/$chriskrycho\">Cash.me</a></li>\n</ul>\n<h1 id=\"follow\">Follow</h1>\n<ul>\n<li>New Rustacean:\n<ul>\n<li>Twitter: <a href=\"https://www.twitter.com/newrustacean\">@newrustacean</a></li>\n<li>App.net: <a href=\"https://alpha.app.net/newrustacean\">@newrustacean</a></li>\n<li>Email: <a href=\"mailto:hello@newrustacean.com\">hello@newrustacean.com</a></li>\n</ul></li>\n<li>Chris Krycho\n<ul>\n<li>Twitter: <a href=\"https://www.twitter.com/chriskrycho\">@chriskrycho</a></li>\n<li>App.net: <a href=\"https://alpha.app.net/chriskrycho\">@chriskrycho</a></li>\n</ul></li>\n</ul>",
  "pubDate": "Sun, 08 Nov 2015 13:15:53 -0700",
  "enclosure": "",
  "guid": "2BA666AD-2288-4599-AC61-7B545FD2C539",
  "itunes:author": "Chris Krycho",
  "itunes:subtitle": "Returning functions from other functions, and thinking about the stack, the heap, and reference types.",
  "itunes:summary": "Returning functions from other functions, and thinking about the stack, the heap, and reference types. NOTES This episode, we look at returning functions from other functions, and as part of that discuss some basics about the stack and the heap—and why we need to care about them for returning functions. The functions themselves are not especially interesting; they just show you the basic form you use to return functions from other functions, and how to then use them in another function. You’ll want to take a detailed look instead at the documentation for each (or just read the source!), because that’s where the meat of the discussion in this week’s code is. SPONSORS - reddraggone9 - Chris Patti Become a sponsor - Patreon.com/newrustacean - Venmo.com/chriskrycho - Dwolla.com/hub/chriskrycho - Cash.me FOLLOW - New Rustacean: - Twitter: @newrustacean - App.net: @newrustacean - Email: hello@newrustacean.com - Chris Krycho - Twitter: @chriskrycho - App.net: @chriskrycho",
  "itunes:duration": "18:30",
  "itunes:episodeType": "full"
}