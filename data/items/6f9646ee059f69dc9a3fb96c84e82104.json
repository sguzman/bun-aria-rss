{
  "title": "Things that used to be hard and are now easy",
  "link": "",
  "updated": "2022-02-20T09:00:36+00:00",
  "id": "https://jvns.ca/blog/2022/02/20/things-that-used-to-be-hard-and-are-now-easy/",
  "content": "\n\n<p>Hello! I was talking to some friends the other day about the types of\nconference talks we enjoyed.</p>\n\n<p>One category we came up with was &ldquo;you know this thing that used to be super\nhard? Turns out now it&rsquo;s WAY EASIER and maybe you can do it now!&ldquo;.</p>\n\n<p>So I asked on Twitter about <a href=\"https://twitter.com/b0rk/status/1494301227533967369?s=20&t=M_RYvWzEOymZ--YjE9jvpQ\">programming things that used to be hard and are now easy</a></p>\n\n<p>Here are some of the answers I got. Not all of them are equally &ldquo;easy&rdquo;, but I\nfound reading the list really fun and it gave me some ideas for things to\nlearn. Maybe it&rsquo;ll give you some ideas too.</p>\n\n<ul>\n<li>SSL certificates, with Let&rsquo;s Encrypt</li>\n<li>Concurrency, with async/await (in several languages)</li>\n<li>Centering in CSS, with flexbox/grid</li>\n<li>Building fast programs, with Go</li>\n<li>Image recognition, with <a href=\"https://simonwillison.net/2018/Oct/29/transfer-learning/\">transfer learning</a> (someone pointed out that the joke in <a href=\"https://xkcd.com/1425/\">this XKCD</a> doesn&rsquo;t make sense anymore)</li>\n<li>Building cross-platform GUIs, with Electron</li>\n<li>VPNs, with Wireguard</li>\n<li>Running your own code inside the Linux kernel, with eBPF</li>\n<li>Cross-compilation (Go and Rust ship with cross-compilation support out of the box)</li>\n<li>Configuring cloud infrastructure, with Terraform</li>\n<li>Setting up a dev environment, with Docker</li>\n<li>Sharing memory safely with threads, with Rust</li>\n</ul>\n\n<p>Things that involve hosted services:</p>\n\n<ul>\n<li>CI/CD, with GitHub Actions/CircleCI/GitLab etc</li>\n<li>Making useful websites by only writing frontend code, with a variety of &ldquo;serverless&rdquo; backend services</li>\n<li>Training neural networks, with Colab</li>\n<li>Deploying a website to a server, with Netlify/Heroku etc</li>\n<li>Running a database, with hosted services like RDS</li>\n<li>Realtime web applications, with Firebase</li>\n<li>Image recognition, with hosted ML services like Teachable Machine</li>\n</ul>\n\n<p>Things that I haven&rsquo;t done myself but that sound cool:</p>\n\n<ul>\n<li>Cryptography, with opinionated crypto primitives like libsodium</li>\n<li>Live updates to web pages pushed by the web server, with LiveView/Hotwire</li>\n<li>Embedded programming, with MicroPython</li>\n<li>Building videogames, with Roblox / Unity</li>\n<li>Writing code that runs on GPU in the browser (maybe with Unity?)</li>\n<li>Building IDE tooling with LSP (the language server protocol)</li>\n<li>Interactive theorem provers (not sure with what)</li>\n<li>NLP, with HuggingFace</li>\n<li>Parsing, with PEG or parser combinator libraries</li>\n<li>ESP microcontrollers</li>\n<li>Batch data processing, with Spark</li>\n</ul>\n\n<p>Language specific things people mentioned:</p>\n\n<ul>\n<li>Rust, with non-lexical lifetimes</li>\n<li>IE support for CSS/JS</li>\n</ul>\n\n<h3 id=\"what-else\">what else?</h3>\n\n<p>I&rsquo;d love more examples of things that have become easier over the years.</p>\n"
}