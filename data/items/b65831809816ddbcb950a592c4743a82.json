{
  "title": "Can Apache Spark process 100 terabytes of data in interactive mode?",
  "link": "https://fullstackml.com/can-apache-spark-process-100-terabytes-of-data-in-interactive-mode-3f856b583e90?source=rss----46e065078cc1---4",
  "guid": "https://medium.com/p/3f856b583e90",
  "category": [
    "apache-spark",
    "analytics",
    "big-data",
    "data-science"
  ],
  "dc:creator": "Dmitry Petrov",
  "pubDate": "Mon, 12 Oct 2015 15:43:00 GMT",
  "atom:updated": "2017-03-06T05:56:10.083Z",
  "content:encoded": "<p>Apache Spark innovates a lot of in the in-memory data processing area. With this framework, you are able to upload data to a cluster memory and work with this data extremely fast in the interactive mode (interactive mode is another important Spark feature btw…). One year back (10/10/2014) <a href=\"https://databricks.com/blog/2014/10/10/spark-petabyte-sort.html\">Databricks announced</a> that Apache Spark was able to sort 100 terabytes of data in 23 minutes.</p><p>Here is an interesting question — what is the limit for the amount of data you can process interactively in a cluster? What if you had <strong>100 terabytes of memory in your cluster?</strong> <strong>Memory is so quick you would think!</strong> Intuition tells you can use this memory to interactively process 100 terabytes of input data or at least half of this size. However, <strong>as usual in a distributed systems world, our intuition is wrong!</strong></p><figure><img alt=\"Interactive Apache Spark\" src=\"https://cdn-images-1.medium.com/max/660/0*Chky3nUkk-CGo27E.\" /><figcaption>Interactive Apache Spark</figcaption></figure><h3>1. Response time</h3><p>What would be a response time for a simple data processing scenario and for a more complicated one? Are we still in interactive mode? We’d like to think so but unfortunately, we are not. I saw in a practice scenario <strong>that response time for a simple scenario with a simple “where sum(), count() ” statements with 8 terabytes of data was 20–40 seconds</strong>. For a more complicated one and <strong>for more realistic scenarios (couple of “group bys” + couple of “joins”) response time was 3–5 minutes</strong>. This is definitely not what I call interactive mode!</p><p>In my daily life, I do analytics where the response time is critical. For me, I give it up to 3 or 10 seconds, okay perhaps even up to 15 seconds and still consider this interactive mode. Beyond this I would consider it actually batch mode. Several seconds or 3–5 minutes instead of 15–60 minutes might look like a incredible result compared to MapReduce-like on-disk processing. However, this is not interactive.</p><h3>2. Where the interactivity end?</h3><p>The maximum amount of memory I was able to process in the interactive mode with only a few seconds of delay<strong> was limited by 1 terabyte</strong>. With this, the efficiency was still good. However, beyond 1 Tb, I noticed that the response time was extremely delayed</p><p>My guess is that in order to improve efficiency (5–10 terrabytes with only several seconds delay) we would need to update our hardware (I’d like to try a cluster with the most powerful EC2 machines i2.8xlarge with 250 gigabytes of RAM memory) and tune software settings (Apache Spark driver settings, in-memory columnar format, and probably YARN settings)</p><p>Even with software and hardware upgrade, it is clear to me that <strong>the interactive mode limit doesn’t even come close to the 100 terabytes</strong>.</p><h3>3. Read data to memory first</h3><p>As you recall from previously, remember that it takes many seconds or even several minutes for each iteration of data processing. However, this is not the complete story. If you work in Ad Hoc analytics or create machine learning models your initial data set will most likely be stored in a cluster HDFS storage. This means that <strong>before the in-memory iterations you will be reading data from disks which takes much longer.</strong> The performance as usually depends on the hardware you have and the software settings. Most likely it will take between 15–30 minutes for an 5–8 terabytes data set. <strong>Even for 1 terabyte it might take 5 minutes or so.</strong></p><h3>Conclusion</h3><p>Before jumping into the Apache Spark in-memory processing it is worth to make a plan for your analytical scenarios and estimate response time especially if your data size is more than 1 terabyte.</p><p>Please offer feedback regarding your experience dealing with the maximum amount of memory you were able to work with in interactive mode.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3f856b583e90\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://fullstackml.com/can-apache-spark-process-100-terabytes-of-data-in-interactive-mode-3f856b583e90\">Can Apache Spark process 100 terabytes of data in interactive mode?</a> was originally published in <a href=\"https://fullstackml.com\">FullStackML</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"
}