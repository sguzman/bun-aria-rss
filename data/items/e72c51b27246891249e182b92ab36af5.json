{
  "title": "How to Create Interactive Climate Model Maps inÂ Python",
  "description": "<p>&ldquo;El NiÃ±o is likely this winter,&rdquo; the forecaster said. &ldquo;El NiÃ±o typically brings above normal winter cloudiness and rainfall across the southern U.S. and milder conditions to Canadaâ€¦&rdquo;\n<br/><br/>\nYou may have heard something like this spoken on your TV, radio, or written on the internet recently. Have you ever wondered how a meteorologist or climatologist comes to such conclusions?\n<br/><br/>\nIn this post, we&rsquo;ll show you how to create interactive climate maps using the <a href=\"https://climate.copernicus.eu/climate-data-store\" target=\"_blank\">Copernicus Data Store</a>, where you can visualize, examine, and explore the same data that your local forecaster sees.\n<br/><br/>\nCopernicus is a game-changing project that &ldquo;makes information about the past, present, and future climate freely available, and functions as a one-stop shop for users to explore climate data.&rdquo; Access to data is open, free and unrestricted.\n<br/><br/>\n<!-- more -->\n<figure class=\"tmblr-full\" data-orig-height=\"1496\" data-orig-width=\"3508\" data-orig-src=\"https://i.imgur.com/a155NQa.png\"><img src=\"https://64.media.tumblr.com/a42c506b4fcaafba4fff222b55585806/tumblr_inline_pmsz9rRNoy1srua81_540.png\" data-orig-height=\"1496\" data-orig-width=\"3508\" data-orig-src=\"https://i.imgur.com/a155NQa.png\"/></figure><br/><br/>\nWe have entered a golden age of freely available weather and climate data on the webâ€Š-â€Šspanning time horizons from the next few hours or days and even into the coming weeks or months. NOAA&rsquo;s <a href=\"https://nomads.ncep.noaa.gov/\" target=\"_blank\">NCEP NOMADS</a> is a treasure trove of such information and now ECMWF&rsquo;s [<a href=\"https://www.ecmwf.int/\" target=\"_blank\">European Centre for Medium Range Weather Forecasts</a>] <a href=\"https://climate.copernicus.eu/climate-data-store\" target=\"_blank\">Copernicus Climate Data Store</a> has burst onto the scene.\n<br/><br/>\nBefore we start mapping, let&rsquo;s get set up with Copernicus. We&rsquo;ll use their API to get the climate data for our visualizations.\n<br/><br/><b>Getting started is easy:</b>\n<br/><br/>\n1. Make an account <a href=\"https://climate.copernicus.eu/climate-data-store\" target=\"_blank\">here</a>.\n<br/>\n2. Navigate to the &rsquo;<a href=\"https://cds.climate.copernicus.eu/cdsapp#!/search?type=dataset\" target=\"_blank\">data store</a>&rsquo; portion of the site.\n<br/>\n3. In this post, &lsquo;seasonal forecast&rsquo; datasets will be considered (access <a href=\"https://cds.climate.copernicus.eu/cdsapp#!/search?type=dataset&amp;keywords=((%20%22Product%20type:%20Seasonal%20forecasts%22%20))\" target=\"_blank\">here</a>).\n<br/><br/>\nFor further weather and climate map inspiration, check out our post &rsquo;<a href=\"https://medium.com/@plotlygraphs/how-to-create-2d-and-3d-interactive-weather-maps-in-python-and-r-77ddd53cca8\" target=\"_blank\">How to Create 2D and 3D Interactive Weather Maps in Python and R</a>&rsquo;.\n<br/><br/></p><h2>1. Download your first dataset</h2>\n<br/><br/>\nIn the climate forecasting space, <i>anomalies</i> (difference from average) are often the most frequently examined data. While looking at raw outputs can be useful in some circumstances, understanding how much warmer, cooler, drier, or wetter than normal an area may be is the end goal. For the purposes of this post, we&rsquo;ll be looking at forecast <i>anomalies</i>.\n<br/><br/>\nIn order to download the data in NetCDF format (the file type you&rsquo;ll need to work with the climate data in Plotly, you will have to install the <a href=\"https://cds.climate.copernicus.eu/api-how-to\" target=\"_blank\">Climate Data Store Application Program Interface</a> (CDS API). For Python users, this step should be pretty straightforward:\n<br/><br/>\n1. Install the CDS API key and store it in your home directory.\n<br/><br/><figure class=\"tmblr-full\" data-orig-height=\"192\" data-orig-width=\"935\" data-orig-src=\"https://i.imgur.com/tmEYvlh.png\"><img src=\"https://64.media.tumblr.com/e8ced322b79e4324f35ac72d9e89f2c5/tumblr_inline_pmsz9r1GIj1srua81_540.png\" data-orig-height=\"192\" data-orig-width=\"935\" data-orig-src=\"https://i.imgur.com/tmEYvlh.png\"/></figure><br/><br/>\n2. Install the CDS API client &ldquo;pip install cdsapi.&rdquo;\n<br/><br/><figure class=\"tmblr-full\" data-orig-height=\"173\" data-orig-width=\"934\" data-orig-src=\"https://i.imgur.com/3aweK2H.png\"><img src=\"https://64.media.tumblr.com/7cb8fffae516c9280a1838215199c78d/tumblr_inline_pmsz9r5Ri51srua81_540.png\" data-orig-height=\"173\" data-orig-width=\"934\" data-orig-src=\"https://i.imgur.com/3aweK2H.png\"/></figure><br/><br/>\nNow let&rsquo;s download some data ðŸ‘Œ\n<br/><br/>\nWe&rsquo;ll start off with a sea surface temperature dataset from the <a href=\"https://www.ecmwf.int/\" target=\"_blank\">ECMWF model</a>, often considered the gold standard when it comes to weather and climate prediction. Follow <a href=\"https://cds.climate.copernicus.eu/cdsapp#!/dataset/seasonal-postprocessed-single-levels?tab=overview\" target=\"_blank\">this link</a> to the data and navigate to the &ldquo;Download Data&rdquo; tab in the page.\n<br/><br/>\nUnder the &ldquo;Download Data&rdquo; tab, you&rsquo;ll find a form where you can specify the data you&rsquo;d like to download through the API. Selections in this form will create an API request for the desired data. To view this request, fill out the form and click the red &ldquo;Show API request&rdquo; button at the bottom-left beneath the form.\n<br/><br/>\nFill out your form like this:\n<br/><br/><figure class=\"tmblr-full\" data-orig-height=\"797\" data-orig-width=\"1033\" data-orig-src=\"https://i.imgur.com/jeH7YUx.png\"><img src=\"https://64.media.tumblr.com/21fd0e4deed6b7d3f840bef07970ba3e/tumblr_inline_pmsz9sviX11srua81_540.png\" data-orig-height=\"797\" data-orig-width=\"1033\" data-orig-src=\"https://i.imgur.com/jeH7YUx.png\"/></figure><br/><br/><figure class=\"tmblr-full\" data-orig-height=\"663\" data-orig-width=\"1029\" data-orig-src=\"https://i.imgur.com/aMxu6XI.png\"><img src=\"https://64.media.tumblr.com/4b68f0f39ccb59bbf6548007a622fd88/tumblr_inline_pmsz9s12KF1srua81_540.png\" data-orig-height=\"663\" data-orig-width=\"1029\" data-orig-src=\"https://i.imgur.com/aMxu6XI.png\"/></figure><br/><br/><figure class=\"tmblr-full\" data-orig-height=\"702\" data-orig-width=\"1047\" data-orig-src=\"https://i.imgur.com/v968hIA.png\"><img src=\"https://64.media.tumblr.com/52b569ea191354a7036184afa99b29f2/tumblr_inline_pmsz9tw7N11srua81_540.png\" data-orig-height=\"702\" data-orig-width=\"1047\" data-orig-src=\"https://i.imgur.com/v968hIA.png\"/></figure><br/><br/>\nThen, click the &ldquo;Show API request&rdquo; to reveal your request. (&ldquo;Hide API request&rdquo; tucks it away again.)\n<br/><br/>\nNext, copy the API request and paste it into a Jupyter notebook. Remember when we mentioned that it needs to be in NetCDF format? This is where we&rsquo;ll take change the requested file format from <a href=\"https://en.wikipedia.org/wiki/GRIB\" target=\"_blank\">GRIB</a> to <a href=\"https://en.wikipedia.org/wiki/NetCDF\" target=\"_blank\">NetCDF</a>:\n<br/><br/><figure class=\"tmblr-full\" data-orig-height=\"374\" data-orig-width=\"823\" data-orig-src=\"https://i.imgur.com/V32wH7C.png\"><img src=\"https://64.media.tumblr.com/cddc99e7f2524c1b04634f170e035c7f/tumblr_inline_pmsz9tQu7V1srua81_540.png\" data-orig-height=\"374\" data-orig-width=\"823\" data-orig-src=\"https://i.imgur.com/V32wH7C.png\"/></figure><br/>\nClick <a href=\"https://plot.ly/~Dreamshot/9351/import-xarray-as-xr-import-plotlyplotly/#/\" target=\"_blank\">HERE</a> for an example Jupyter Notebook to download and process the climate data.\n<br/><br/><h2>2. Your first plot: Sea Surface Temperature Anomaly</h2>\n<br/><br/>\nNow you should have your dataset in your home directory! Next, we leverage the power of Python with Plotly to view and inspect climate data in a new, interactive format that enables you to zoom to low levels for greater detail.\n<br/><br/>\nGone are the days of worrying about whether data for your country will show, in this case we&rsquo;ll produce a world map with data that covers the Earth ðŸ‘Œ ðŸ—º\n<br/><br/>\nThe first plot shows sea surface temperature anomalies, or a difference from the average sea surface temperature at a given location (or grid box).\n<br/><br/>\nSea surface temperature anomalies are particularly important in the tropical oceans, as anomalies help to modify the <a href=\"https://en.wikipedia.org/wiki/Walker_circulation\" target=\"_blank\">Walker Circulation</a>, whose behavior play a major role in precipitation (and temperature) patterns across the global tropics (and to a lesser extent the middle latitudes).\n<br/><br/>\nEarly in 2019, we have an El NiÃ±o signature in the tropical Pacific Ocean. The warmest sea surface temperatures (and anomalies) are located across the west-central equatorial Pacific, which has been an area of consistent atmospheric lift, increased cloud cover, and precipitation.\n<br/><br/>\nYou can download the Jupyter Notebook <a href=\"https://plot.ly/~Dreamshot/9351/import-xarray-as-xr-import-plotlyplotly/#/\" target=\"_blank\">here</a> and use it to make all the plots below.\n<br/><br/><p><iframe width=\"640\" height=\"500\" frameborder=\"0\" seamless=\"seamless\" scrolling=\"no\" src=\"https://plot.ly/~Dreamshot/9345.embed?width=640&amp;height=500\"></iframe></p>\n<br/><br/><h2>3. Air Temperature Anomaly</h2><br/><br/>\nThis plot looks at the forecast temperature anomaly, in Celsius, for the month of March 2019. The model data again comes from the ECMWF, although the Copernicus data store hosts four additional models from institutions across Europe: UK Met Office (UKMO), MÃ©tÃ©o France, Deutscher Wetterdienst (DWD), and Centro Euro-Mediterraneo sui Cambiamenti Climatici (CMCC).\n<br/><br/>\nRed colors show warmer-than-average temperatures while blue indicates below-average temperatures.\n<br/><br/><p><iframe width=\"640\" height=\"500\" frameborder=\"0\" seamless=\"seamless\" scrolling=\"no\" src=\"https://plot.ly/~Dreamshot/9349.embed?width=640&amp;height=500\"></iframe></p>\n<br/><br/><h2>4. Precipitation Anomaly</h2><br/><br/>\nThis plot examines precipitation rate anomaly in mm/second for the month of March 2019.\n<br/><br/>\nPrecipitation is often considered one of the most challenging parameters to forecast. Generally speaking, precipitation outlooks have lower confidence than temperature outlooks.\n<br/><br/>\nThis is because precipitation (rain, snow) can be irregular in coverage and intensity. There may be sharp differences in amounts over short distances, depending on the lay of the land (e.g. more in the mountain ranges, less in the valleys). Compared to temperature, it is generally much less uniform and therefore a more frequent forecast challenge.\n<br/><br/>\nIn the chart below, negative values (blues) indicate below-normal monthly precipitation while positive values (yellows, oranges) indicate above-normal monthly precipitation.\n<br/><br/><p><iframe width=\"640\" height=\"500\" frameborder=\"0\" seamless=\"seamless\" scrolling=\"no\" src=\"https://plot.ly/~Dreamshot/9347.embed?width=640&amp;height=500\"></iframe></p>\n<br/><br/>\nSo, with this wealth of climate data at your fingertips, get graphing with Plotly and start exploring your world in a new way!",
  "link": "https://blog.plotly.com/post/182754641327",
  "guid": "https://blog.plotly.com/post/182754641327",
  "pubDate": "Tue, 12 Feb 2019 02:53:19 -0500",
  "category": [
    "weather",
    "climate",
    "ecmwf",
    "python",
    "plotly",
    "data science",
    "big data"
  ]
}