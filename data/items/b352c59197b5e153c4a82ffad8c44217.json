{
  "id": "tag:blogger.com,1999:blog-5825758052688213474.post-4732004365167765860",
  "published": "2017-04-17T17:02:00.001-07:00",
  "updated": "2017-04-19T13:39:40.083-07:00",
  "title": "Our quest for robust time series forecasting at scale",
  "content": "by ERIC TASSONE, FARZAN ROHANI<br /><br /><i>We were part of a team of data scientists in Search Infrastructure at Google that took on the task of developing robust and automatic large-scale time series forecasting for our organization. In this post, we recount how we approached the task, describing initial stakeholder needs, the business and engineering contexts in which the challenge arose, and theoretical and pragmatic choices we made to implement our solution.</i><br /><h2>Introduction</h2>Time series forecasting enjoys a rich and luminous history, and today is an essential element of most any business operation. So it should come as no surprise that Google has compiled and forecast time series for a long time. For instance, the image below from the Google Visitors Center in Mountain View, California, shows hand-drawn time series of “Results Pages” (essentially search query volume) dating back nearly to the founding of the company on 04 September 1998.<br /><div><br /></div><div><br /><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><img height=\"291\" src=\"https://lh6.googleusercontent.com/Vrd24K6K6UMR_QZuk1SV-PKSLG6PPLL3bbXaTsEDlmRSGFUrm2h9B5UlDsNbDT7z81hCr4kSmVoaq9W2PoNM2iyuHljlyQdkvqsN4BIEFVyJX3kJwQwJ1wa4MzuArXTFTEGqSC-n\" style=\"margin-left: auto; margin-right: auto;\" width=\"640\" /></td></tr><tr><td class=\"tr-caption\"><br /></td></tr></tbody></table></div><div><span style=\"font-size: 12.8px; text-align: center;\">Hand-Drawn Time Series of Google “Results Pages”, November 1998 through July 2004. Due to multiple changes to the scale of the values depicted on the vertical axis, “Results Pages” values, which reflect search query volume, at the rightward end of the plot (corresponding to July 2004) are 2000 times larger than the values depicted at the leftward end (corresponding to November 1998).</span><br /><span style=\"font-size: 12.8px; text-align: center;\"><br /></span><br />The demand for time series forecasting at Google grew rapidly along with the company over its first decade. Various business and engineering needs led to a multitude of forecasting approaches, most reliant on direct analyst support. The volume and variety of the approaches, and in some cases their inconsistency, called out for an attempt to unify, automate, and extend forecasting methods, and to distribute the results via tools that could be deployed reliably across the company. That is, for an attempt to develop methods and tools that would facilitate accurate large-scale time series forecasting at Google. <br /><br />Our team of data scientists and software engineers in Search Infrastructure was already engaged in a particular type of forecasting. For us, demand for forecasts emerged from a determination to better understand business growth and health, more efficiently conduct day-to-day operations, and optimize longer-term resource planning and allocation decisions. Because our team was already forecasting a large number of time series for which direct analyst implementation and supervision were impractical, it was well positioned to attempt such a unification, automation, and distribution of forecasting methods.<br /><br />In the balance of this post, we will discuss and demonstrate aspects of our forecasting approach.<br /><ul><li>We begin by describing our general framework for thinking about our task, which entails carefully defining the overall forecasting problem -- what it is and what it is not -- and decomposing the problem into tractable subproblems whenever possible.&nbsp;</li><li>We then detail subproblems resulting from the decomposition, and our approaches to solving them.</li><ul><li>Adjustments to clean the data: missing values, anomalies, level changes, and transformations.</li><li>Adjustments for effects: holiday, seasonality, and day-of-week effects.</li><li>Disaggregation of the time series into subseries and reconciliation of the subseries forecasts.</li><li>Selection and aggregation of forecasts from an ensemble of models to produce a final forecast.</li><li>Quantification of forecast uncertainty via simulation-based prediction intervals.</li></ul></ul>We conclude with an example of our forecasting routine applied to publicly available Turkish Electricity data.</div><br /><h2>GENERAL FRAMEWORK</h2>A critical learning from our forecasting endeavor was the value of careful thought about the environment in which both the problem and potential solutions arise. The challenge, of course, is in the details: What problem are we trying to solve and -- just as importantly -- what problems are we not trying to solve? How do we carefully delineate and separate where possible the various subproblems that make up the problem we are trying to solve? Which subproblems should be decoupled and treated independently to better attack them or for ease of implementation?<br /><div><br /><h3>Our Forecasting Problem</h3>Our typical use case was to produce a time series forecast at the daily level for a 12-24 month forecast horizon based on a daily history two or more years long. On occasion, we might be interested in forecasting based on weekly totals or a move to a more refined temporal resolution, such as hours or minutes, but the norm was daily totals. Other times we might be asked to make a forecast based on a shorter history.<br /><br />In terms of scope, we sought to forecast a large number of time series, and to do so frequently. We wanted to forecast a variety of quantities: overall search query volume and particular types of queries; revenue; views and minutes of video watched on Google-owned YouTube (which recently <a href=\"https://youtube.googleblog.com/2017/02/you-know-whats-cool-billion-hours.html\">reached a billion hours daily</a>); usage of sundry internal resources; and more. Additionally, we often had an independent interest in subseries of those quantities, such as disaggregated by locale (e.g., into &gt;100 countries or regions), device type (e.g., by desktop, mobile, and tablet), and operating system, as well as combinations of all these (e.g., locale-by-device type.) Given the assortment of quantities and their combinatorial explosion into subseries, our forecasting task was easily on the order of tens of thousands of forecasts. And then we wanted to forecast these quantities every week, or in some cases more often.</div><div><br />The variety and frequency of forecasts demanded robust, automatic methods --- robust in the sense of dramatically reducing the chance of a poor forecast regardless of the particular characteristics of the time series being forecast (e.g., its growth profile) and automatic in the sense of not requiring human intervention before or after running the forecast.<br /><br />Another important domain constraint was that our time series were the result of some aggregate human phenomenon --- search queries, YouTube videos viewed, or (as in our example) electricity consumed in Turkey. Unlike physical phenomena such as earthquakes or the tides, the time series we forecast are shaped by the rhythms of human civilization and its weekly, annual, and at-times irregular and evolving cycles. Calendaring was therefore an explicit feature of models within our framework, and we made considerable investment in maintaining detailed regional calendars.<br /><br /><h3>Non-Problems</h3>\"Forecasting\" is in many ways an overloaded word, with many potential meanings. We certainly were not trying to handle all forecasting possibilities, which sometimes vexed our colleagues who had turned to us for assistance. So what did \"forecasting\" not mean to us?<br /><br />Our initial use case did not involve explanatory variables, instead relying only the time series histories of the variables being forecast. Our rationale was in accord with the views expressed in the online forecasting book by Hyndman and Athana­sopou­los [1], who after mentioning the potential utility of an \"explanatory model\" write:<br /><br /><i>However, there are several reasons a forecaster might select a time series model rather than an explanatory model. First, the system may not be understood, and even if it was understood it may be extremely difficult to measure the relationships that are assumed to govern its behavior. Second, it is necessary to know or forecast the various predictors in order to be able to forecast the variable of interest, and this may be too difficult. Third, the main concern may be only to predict what will happen, not to know why it happens. Finally, the time series model may give more accurate forecasts than an explanatory or mixed model.</i></div><div><br />\"Forecasting\" for us also did not mean using time series in a causal inference setting. There are tools for this use case, such as Google-supported <a href=\"http://www.unofficialgoogledatascience.com/2015/09/causal-attribution-in-era-of-big-time.html\">CausalImpact</a>.<br /><br />CausalImpact is powered by <a href=\"https://cran.r-project.org/web/packages/bsts/index.html\">bsts</a> (“Bayesian Structural Time Series”), also from Google, which is a time series regression framework using dynamic linear models fit using Markov chain Monte Carlo techniques. The regression-based bsts framework can handle predictor variables, in contrast to our approach. Facebook in a recent blog post unveiled <a href=\"https://research.fb.com/prophet-forecasting-at-scale/\">Prophet</a>, which is also a regression-based forecasting tool. But like our approach, Prophet aims to be an automatic, robust forecasting tool.<br /><br />At lastly, \"forecasting\" for us did not mean anomaly detection. Tools such as Twitter’s <a href=\"https://blog.twitter.com/2015/introducing-practical-and-robust-anomaly-detection-in-a-time-series\">AnomalyDetection</a> or <a href=\"https://github.com/Netflix/Surus\">RAD</a> (\"Robust Anomaly Detection\") from Netflix, as their names suggest, target this type of problem.</div><br /><h2>Decomposing our problem</h2>Our ultimate objective is to accurately forecast the expected growth trends of our time series. To do so, we have found it useful to make a variety of cleaning adjustments and effects adjustments to better isolate the underlying growth trend. Both cleaning and effects adjustments allow for better estimation of underlying trend. The difference is that cleaning is to remove unpredictable nuisance artifacts whereas the effects are regular patterns we wish to capture explicitly. Thus our forecasting routine decomposes our overall problem into subproblems along these very lines. <br /><br /><h3>Cleaning Adjustments</h3>At the start of our process, we make several cleaning adjustments to the observed time series. Four major cleaning adjustments that we treat as separate problems are (a) missing values, (b) presumed anomalies, (c) accounting for abrupt level changes in the time series history, and (d) any transformations likely to result in improved forecast performance. Pre-processing our time series with these cleaning adjustments helps them to better conform to the assumptions of forecasting models to be fit later, such as stationarity. <br /><br />Missing values and putative anomalous values may present as a dramatic spike or drop not explained by a launch, seasonality effect, or holiday impact. They can arise from data collection errors or other unlikely-to-repeat causes such as an outage somewhere on the Internet. If unaccounted for, these data points can have an adverse impact on forecast accuracy by disrupting seasonality, holiday, or trend estimation. <br /><br />Level changes are different in that they represent a more permanent change in the level of the time series, in contrast to anomalies, where the time series returns to its previous level at trend after a brief period. They may result from launches, logging changes, or external events. At a minimum, adjusting for level changes results in a longer effective time series, and often makes trend estimation easier when the models are finally fit.<br /><br />We also permit transformations, such as a Box-Cox transformation. These can be automatic (the default setting for some models) or user-specified. These too can help with meeting model assumptions and with eventual forecast accuracy (final forecasts must be re-transformed to the original scale, of course).<br /><br /><h3>Effect Adjustments</h3>Typically we also adjust for several effects before fitting our models (an exception being seasonality in STL models which the models directly handled [2]). There are three major effects that we decouple and treat as subproblems: holiday effects, seasonality effects, and day-of-week effects. Whereas cleaning adjustments pre-process the data and are mostly targeted at one-off incidents, the other effects we attempt to adjust for are typically repeated patterns. <br /><br />For the effect adjustments we seek to: quantify the effect; remove the effect from the time series; forecast the time series without the effect; and re-apply the effect to that forecast post hoc. By contrast, for cleaning adjustments, we seek only to quantify, so as to remove. In addition, for the effect adjustments, we typically have business-knowledge or day-to-day-operations motivations for wanting to know the magnitude of the effect; this is not always the case for cleaning adjustments.<br /><br />Though not cleanly separated conceptually, holiday effects and seasonality effects are partially distinguished in that seasonality effects are defined as occurring during the same numerical week of the year, whereas holiday effects are specific to the day of the occurrence and adjacent \"shoulder\" days. That said, some holidays fall on the same calendar day but on a different day of the week each year, such as Independence Day falling on the 4th of July in the United States; some fall on the same day of the week and week of the year, but on a different calendar day, such as Thanksgiving Day falling on the fourth Thursday of November in the United States; and some vary with solar or lunar phenomena, such as <a href=\"https://www.timeanddate.com/calendar/determining-easter-date.html\">the Easter Sunday holiday</a> celebrated in many countries around the world, which can fall anywhere from late March to late April. Due to these differences, some holiday effects and seasonality effects may not be identifiable. But note the use of \"week\" as the germane unit of time for seasonality and \"day\" for holidays: We estimate holiday effects from the adjusted daily data, but then roll up daily values to weekly totals before estimating seasonality effects. <br /><br />Estimating holiday and seasonality effects is more art than science due to the paucity of relevant historical data. For instance, to estimate the effect of Independence Day when it falls on a weekday versus a weekend, you can accrue observations only so fast! And the effect may evolve as, say, smart phones proliferate and people begin doing more Google Maps searches the evening of Independence Day. Our experience with holiday adjustments is that ad hoc methods which work well and are easily interpretable (if only for debugging) are preferred to elegant, comprehensive mathematical models which may not deliver nor are amenable to a postmortem when something (inevitably) goes wrong.<br /><br />The plots below illustrate a toy example of cleaning and effects adjustments in action. In the first plot, the raw weekly actuals (in red) are adjusted for a level change in September 2011 and an anomalous spike near October 2012. The cleaned weekly actuals (in green) are much smoother, but still show strong seasonal and holiday effects. As noted above, these are estimated, removed, the long-term trend is forecast, and then the seasonal and holiday effects are added back, producing the weekly forecast (in blue), as shown in the second plot.<br /><div><br /></div><div><span id=\"docs-internal-guid-24f75ce0-7a8b-e38d-ca12-daa781a893b3\"><span style=\"font-family: &quot;roboto&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><img alt=\"clean2.png\" height=\"316\" src=\"https://lh3.googleusercontent.com/3LtD75mI6oUE0DF45dpiHKXuC0EBfZ-seX6WyuZmp5NuNgvoyO5APIakOpN7JeG04k9TmHUcwC2sL7eDDwpPtZFHoo0H1kMIP7jlM1y2Bzw_9n5Gsp-n_JqWqXwMGJJKucYo1133\" style=\"border: none; transform: rotate(0rad);\" width=\"640\" /></span></span></div><div><span id=\"docs-internal-guid-24f75ce0-7a8c-0d09-a254-b686abb5a363\"><span style=\"font-family: &quot;roboto&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><img alt=\"forecast_2.png\" height=\"320\" src=\"https://lh6.googleusercontent.com/dvH-hGQf9feP95xgJV2DMM7svI-dWG5dhDN00oLnFnMSzGMkrIRoYytPFzBTxpZcNZpu41mevlEcBb-zZAYsdkbgRbW0MRg9Yg87zR72bvSXSF6ExUfpqlJ9_z_4qEoBPLDt6Bbj\" style=\"border: none; transform: rotate(0rad);\" width=\"640\" /></span></span></div><div><br /></div><div>The block diagram below shows where these cleaning and effects adjustments occur in the overall sequence of our forecast procedure:</div><div><br /></div><div><span id=\"docs-internal-guid-24f75ce0-7a8d-4867-28d1-1ba41a8c45e5\"><span style=\"font-family: &quot;roboto&quot;; font-size: 11pt; vertical-align: baseline; white-space: pre-wrap;\"><img alt=\"workflow.png\" height=\"298\" src=\"https://lh6.googleusercontent.com/Pgb1HVq9tvdKBsvNbfGGXnloDVy21YxGqhhcA00Rrl0ht4kMX0avZa0dBBqvn0iwuKvCr5rpjaCykCA_QIFxD5nZ5jYCLK19RVXYJkKnOxxNbxpM5ZnBAnyYE_5z43KZ-74ih9xM\" style=\"border: none; transform: rotate(0rad);\" width=\"640\" /></span></span></div><div><br /></div><br /><h3>Day-of-Week Effects</h3>By \"day-of-week effects\" we mean a contributor to the multiple seasonalities of daily data typically observed --- there is often one pattern with period seven and then one or more patterns with much larger periods corresponding to an annual cycle. There are often multiple calendars operating within any geography (to name just two possible calendars, Islamic and Gregorian calendars have different periods and often produce more than one annual cycle in certain locales). Again, we decompose our overall problem and treat this day-of-week effect as its own problem, on its own terms. That is, after the cleaning adjustments and after de-holidaying and de-seasoning the data, our initial output is a weekly forecast from rolled-up weekly totals. Thus for daily forecasts we are left with distributing weekly totals to daily values.<br /><div><br />In our experience there are great dividends in treating the forecasting task, with its priority on growth trend estimation, separately from the day-of-week effect. By decomposing the overall problem, we can focus on methods that best solve the specific subproblem. For us, forecasting the trend from less noisy weekly data (again, and importantly, after cleaning and effect adjustments) results in better growth trend estimation compared to all-in-one methods. Methods that attempt to simultaneously estimate all relevant parameters in a unified framework may be vulnerable to omission, overfitting, confounding of effects, or something else going awry which subsequently impairs the method's ability to accurately estimate the growth trend.<br /><br />Likewise, by treating the day-of-week effect on its own we can deploy methods targeted to capturing its important aspects. For instance, in our data we often see secular trends as well as annual seasonality in the amplitude of the weekly cycle i.e., long-term changes to the proportions of the weekly total going to each day of the week and intra-year cycles in these proportions. A model general enough to accommodate such phenomena, and everything else, along with the data to identify all relevant parameters is for us too much to ask. Such a model risks conflating important aspects, notably the growth trend, with other less critical aspects. <br /><br /><h2>Disaggregation And Reconciliation</h2>Apart from the cleaning and effect adjustments, we may decompose our overall problem for other reasons.  Earlier we mentioned that we often had an independent interest in subseries of a parent time series, such as disaggregated by locale, device type, operating system, and combinations of these. Yet even when we do not have an independent interest in the subseries, forecasting the constituent parts (and indeed the entire <a href=\"https://www.otexts.org/fpp/9/4\">hierarchy</a> that results from this type of disaggregation) and then reconciling all those forecasts in some manner to produce a final forecast of the parent time series is typically more accurate and robust than only forecasting the parent time series itself directly. This type of decomposition is quite literal --- we turn the task of forecasting one time series into that of forecasting many subseries and then reconciling them.<br /><br />Consider, for example, Global search queries. The first step, disaggregation, is quite natural. Search queries are logged with many attributes, and we typically use at least geography and device type. This aspect is easy. Next, forecasting the many subseries: Again, this is easy --- our forecast methodology is designed to be robust and automatic, so dramatically increasing the number of forecasts is not overly risky, either. Lastly, however, we need a method to take this collection of forecasts and reconcile them. This is more challenging.<br /><br />A simple solution is to forecast only at the bottom of the hierarchy and simply sum the forecasts to produce an overall parent forecast (and indeed forecasts all throughout the hierarchy.) This can be quite effective, as the important differences in growth profiles tend to arise across the geography-by-device-type boundaries, and forecasting them independently as a first step frees them.<br /><br />An obvious requisite property of reconciliation is arithmetic coherence across the hierarchy (which is implicit in the sum-up-from-the-bottom possibility in the previous paragraph), but more sophisticated reconciliation may induce statistical stability of the constituent forecasts and improve forecast accuracy across the hierarchy. While we use reconciliation methods tailored to our specific context, similar techniques have been implemented in the R package <a href=\"https://cran.r-project.org/web/packages/hts/index.html\">hts</a>&nbsp;and written about in the literature.<br /><br /><h2>Ensemble Methods</h2>In keeping with our goals of robustness and automation, we turned to <a href=\"https://en.wikipedia.org/wiki/Ensemble_learning\">ensemble methods</a> to forecast growth trends. In a time series context, ensemble methods generally fit multiple forecast models and derive a final forecast from the ensemble, perhaps via a weighted average, in an attempt to produce better forecast accuracy than might result from any individual model.<br /><br />Though more sophisticated, more mathematically alluring options are available for producing a final forecast from an ensemble, such as Bayesian Model Averaging, we opt for simple approaches. The confluence of our beliefs about the world, underlying theoretical results, and empirical performance compel us toward deriving a final forecast from the ensemble via a simple measure of central tendency (i.e., a mean or median) after some effort to remove outliers (which could be as simple as trimming or winsorizing.) Crucially, our approach does not rely on model performance on holdout samples. Details follow, but first an exploration of why such an embarrassingly simple and seemingly ad hoc approach might do so well in this setting.<br /><br /></div><div><h3><span style=\"text-align: justify; vertical-align: baseline;\">Why do simple methods perform well? </span></h3>When it comes to obtaining a final forecast from an ensemble, the following quote from Clemen [3] gives us the lay of a land not entirely welcoming to the mathematical statistician (emphasis added):<br /><br /><i>In many studies, the average of the individual forecasts has performed best or almost best. Statisticians interested in modeling forecasting systems may find this state of affairs <b><u>frustrating</u></b>. The questions that need to be answered are (1) why does the simple average work so well, and (2) under what conditions do other specific methods work better?</i><br /><br />Clemen then homes in on a contradiction inherent in the pursuit of sophisticated combination strategies (emphasis added):<br /><br /><i>From a conventional forecasting point of view, using a combination of forecasts amounts to an admission that the forecaster is unable to build a properly specified model. Trying ever more elaborate combining models <b><u>seems only to add insult of injury</u></b>, as the more complicated combinations do not generally perform all that well.</i><br /><br />With that context, consider an example inspired by Bates and Granger [4] and by [3]. Define two independent random variables  $X_1 \\sim N(0, 1)$ and $X_2 \\sim N(0, 2)$. For this simple vignette, we might regard $X_1$ and $X_2$ as errors from a measuring scale and note that $X_2$ is not as precise an instrument as $X_1$. Define</div><div>$$<br />X_A = \\frac{1}{2} X_1 + \\frac{1}{2} X_2<br />$$From basic theory, $X_A \\sim ~ N(0, \\frac{3}{4})$. In other words, the simple, unweighted average of these particular $X_1$ and $X_2$ has smaller variance than $X_1$ even though we combined $X_1$ in equal measure with a less precise instrument, $X_2$. Now, if the variances of $X_1$ and&nbsp;$X_2$ were truly known to be $1$ and $2$, respectively, [4] would suggest we form $$<br />X_C = k X_1 + (1 - k) X_2<br />$$with $k = 2/3$ to minimize the variance of $X_C$. Thus $X_C \\sim N(0, \\frac{2}{3})$, which would be a superior instrument compared to $X_A$ with its variance of $\\frac{3}{4}$.</div><div><br />However, consider another scenario. Suppose $X_1$ and $X_2$ are independent as before, but now suppose we only know that one of $X_1$ and $X_2$ is distributed as $N(0, 1)$ and the other as $N(0, 2)$, and we do not know which is which. Thus with equal chance we might have $X_1 \\sim N(0, 1)$ and $X_2 \\sim N(0, 2)$ or &nbsp;$X_1 \\sim N(0, 2)$ and $X_2 \\sim N(0, 1)$. Let’s again form $X_A$ and $X_C$ as before. $X_A$ is unchanged, regardless of how $X_1$ and $X_2$ are actually distributed, with $X_A \\sim N(0, \\frac{3}{4})$. If $X_1$ has the lower variance we once again have $X_C \\sim N(0, \\frac{2}{3})$. But if it is the case that $X_1 \\sim N(0, 2)$ and $X_2 \\sim N(0, 1)$, then the variance of $X_C$ would be $1$. This would be an inferior instrument compared to $X_A$ with its variance of $\\frac{3}{4}$.<br /><br />Overall, when the weights are placed correctly $X_C$ is a slightly better instrument compared to $X_A$, but when the weights are placed incorrectly, $X_C$ is substantially inferior to $X_A$. In other words, there is an asymmetry of risk-reward when there exists the possibility of misspecifying the weights in $X_C$. Consequently, our confidence in departing from a simple, unweighted average of models in favor of preferential weighting should be shaped by how much we believe (or can demonstrate) that we can know the <b>future</b> precision of the instruments we deploy, as well as our risk tolerance.<br /><br />In our forecasting routine, we face a similar conundrum: Do we believe (or can we demonstrate) that the performance of the models in the ensemble on what is often a short holdout period is sufficiently predictive of relative future forecast accuracy of the ensemble’s models to warrant a departure from a simple average based on equal weights? Relatedly, what do we believe about the process that generates the data we see? <br /><br />In our view, the data we observe are not from a deterministic casino game with known probabilities or from physical laws embedded in the fabric of the Universe. Our data arise from a complex, human process; our data depend on \"fads and fashions\"; our data are infused with all the psychology and contradiction that is human existence; our data will eventually reflect -- and more likely, soon reflect! -- unknowable unknowns, future ideas and inventions yet to be developed, novel passions and preferences; in short, our data are far from stationary. It is worth quoting Makridakis and Hibon [5] extensively here, for we share their view:<br /><br /><i>The reason for the anomalies between the theory and practice of forecasting is that real-life time series are not stationary while many of them also contain structural changes as fads, and fashions can change established patterns and affect existing relationships. Moreover, the randomness in such series is high as competitive actions and reactions cannot be accurately predicted and as unforeseen events (e.g., extreme weather conditions) affecting the series involved can and do occur. Finally, many time series are influenced by strong cycles of varying duration and lengths whose turning points cannot be predicted, making them behave like a random walk.</i><br /><br />When the context in which the data arises changes, even a well-executed cross validation provides inadequate protection against overfitting. Instead of overfitting to the observed data in the usual sense, the risk is in overfitting to a context that has changed. In our view, this is fundamentally what makes our forecasting problem different from other prediction problems.<br /><br />For such reasons, we place strong prior belief on simple methods to convert the ensemble into a final forecast. The decision not to rely on performance in a holdout sample was no mere implementation convenience. Rather, it best reflects our beliefs about the state of the world -- “that real-life time series are not stationary” -- while also best conforming to our overarching goal of an automatic, robust forecasting routine that minimizes the chance of any catastrophically bad forecast.<br /><br /><h3>What’s in our ensemble?</h3>So, what models do we include in our ensemble? Pretty much any reasonable model we can get our hands on! Specific models include variants on many well-known approaches, such as the <a href=\"https://en.wikipedia.org/wiki/Bass_diffusion_model\">Bass Diffusion Model</a>, the <a href=\"http://www.sciencedirect.com/science/article/pii/S0169207000000662\">Theta Model</a>, <a href=\"https://en.wikipedia.org/wiki/Logistic_function\">Logistic models</a>, <a href=\"https://cran.r-project.org/web/packages/bsts/index.html\">bsts</a>, <a href=\"http://search.proquest.com/openview/cc5001e8a0978a6c029ae9a41af00f21/1\">STL</a>, <a href=\"https://en.wikipedia.org/wiki/Exponential_smoothing#Triple_exponential_smoothing\">Holt-Winters</a> and other <a href=\"https://en.wikipedia.org/wiki/Exponential_smoothing\">Exponential Smoothing</a> models, Seasonal and other other <a href=\"https://en.wikipedia.org/wiki/Autoregressive_integrated_moving_average\">ARIMA</a>-based models, Year-over-Year growth models, custom models, and more. Indeed, model diversity is a specific objective in creating our ensemble as it is essential to the success of model averaging. Our aspiration is that the models will produce something akin to a representative and not overly repetitive covering of the space of reasonable models. Further, by using well-known, well-vetted models, we attempt to create not merely a \"<a href=\"https://en.wikipedia.org/wiki/The_Wisdom_of_Crowds\">wisdom of crowds</a>\" but a \"wisdom of crowds of experts\" scenario, in the spirit of Mannes [6]. <br /><br />As an implementation detail, though, we provide flags in our code so that an analyst could abandon the default settings and force any particular model to be in or out of the ensemble. This imbues the forecasting routine with two attractive properties. First, an analyst who wishes to add a new model to the ensemble can do so with little risk of degrading the performance of the ensemble as a whole. In fact, the expectation is that a good-faith addition of a new model will do no harm and may improve the overall performance of a final forecast from the ensemble. Such future-proofing is a virtue. Second, if an analyst is insistent on running only their own new model it will now sit in the middle of the entire production pipeline that will handle all the adjustments previously discussed. In other words, their new model will not be at a disadvantage in terms of the adjustments.</div><div><br /><h3>Selection and aggregation: from ensemble to final forecast</h3>For each week of the forecast horizon, we convert the models into a final forecast for that week. Though more sophisticated possibilities exist, in our initial approach we treat the collection of forecasts in the ensemble for a given week independently of other weeks. We then compute a simple trimmed mean of all the models passing some basic sanity checks. Since there is always the risk of an absurd forecast (e.g., going to zero or zooming off toward infinity) from any member of the ensemble, due to numerical problems or something else, we recommend an approach with some form of outlier removal. With such an approach, it is not uncommon for the final forecast to achieve predictive accuracy superior to any individual model. Over the many time series we forecast it is typically at or near the top -- delivering the type of robustness we desire.<br /><br /><h2>Prediction Intervals</h2>A statistical forecasting system should not lack uncertainty quantification. In addition, there is often interest in probabilistic estimates of tail events, i.e., how high could the forecast reasonably go? In our setup some of our previous choices, notably ensembling, break any notion of a closed-form prediction interval. Instead, we use simulation-based methods to produce prediction intervals. <br /><br />Our approach (illustrated below) uses historical k-week-out errors to drive the simulations. In a simple case the one-week-out errors suffice, and the simulation proceeds iteratively: forecast one week forward, perturb this forecast with a draw from the error distribution, and repeat 52 times for a one-year realization; then do this, say, $1000$ or $10,000$ times and take quantiles of the realizations as uncertainty estimates. The process is inherently parallel: Each realization can be produced independently by a different worker machine. Empirical coverage checks are recommended, of course, as is assessment of any autocorrelation in the k-week-out errors.<br /><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><img height=\"230\" src=\"https://lh3.googleusercontent.com/YqsFWE_Lgy750INBFz7hMRPCdyu2WraVWsYHb3F4ajadhkfo-AerrYg09SEDKyMs13XUAnPqlrAhd6FxdOKyHi0G49MVoX8TwBQMC7FNrv7uTHw-j593LBRheVbD7j9TB708vptb\" style=\"margin-left: auto; margin-right: auto;\" width=\"640\" /></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Simulating prediction errors</td></tr></tbody></table><br />While producing prediction intervals is computationally intensive, the Google environment features abundant, fast parallel computing. This shaped the evolution of our approach, making possible and selecting out as advantageous such a computationally intensive technique. Please see [7]&nbsp;for additional details.</div><div><br /><h2>Example: Turkish Electricity data</h2>To better illuminate our forecasting routine, we provide an example based on Turkish electricity data presented in De Livera [8] and available as a .csv file <a href=\"http://robjhyndman.com/data/turkey_elec.csv\">here</a>. Below are daily and weekly totals of electricity demand (in MV) in Turkey from the start of 2000 through the end of 2008. As noted by [8], these data exhibit complex, multiple, and non-nested seasonal patterns owing to two annual seasonalities induced by the Islamic and Gregorian calendars as well as a weekly cycle that differs during the year. There is also apparent long-term trend and holiday impacts, and in principle these and the aforementioned seasonal patterns could be changing over time.<br /><br /><img height=\"426\" src=\"https://lh6.googleusercontent.com/Gr4xBQ6AgTOReou_izfUl1zeNuhcyl90KbCXUQcztSA7lKavk5Ucz9DnDuQ6o56xpQBHqFVlQlgqMDcKzfJQAZUciyDjn-ww_zV8kGVkDsc4TDo2m7X5DRSpDakmsKBqixeiTN2C\" width=\"640\" /><br /><br /><img height=\"426\" src=\"https://lh6.googleusercontent.com/OSwjPVzOpl3Q6eKQLkLYFca1kaYe90CfdB0E8WLtDANpXTQUH3oq3hP6jYcC6YsRlK8LyhbZHNIexwZfsI61v5FQfy9GP4-JYN8wNaV3ikcB0OaJ-B9SPgZHSBDx4Chyv6X5FCA1\" width=\"640\" /><br /><br />We forecast this time series from the middle of 2006 through the end of the data, for a 30-month forecast horizon. Our procedure first cleans the daily actuals as described above and then estimates holiday effects (based on a human-curated list). The two plots below show daily and weekly cleaned and de-holidayed values. After that, we conclude our forecast preparation by switching to weekly totals and accounting for seasonality effects (quantified at the bottom of this post). <br /><br /><img height=\"424\" src=\"https://lh3.googleusercontent.com/kp0i9z7R9PazY2KUFC8Ar_4iE4SFoFEiyv2l80Yp2q6QpkspYjOPusLWYqyALq_X7GUlyuJqsw-V6H3Dohay6leecm96W_HiHWj1gXA2iNRXhIS35lxqxBYeTZqxk1gglGq-thQg\" width=\"640\" /></div><div><br /><img height=\"418\" src=\"https://lh3.googleusercontent.com/kq1k95XyrdMu5f1RfbYTaKGgmkX4SPJqdyXWrbIKWGjr_BfqP7MCDmucUuE9UnkplBs-o5PZIZD8U73E2S_Z2xlrWjz3JX5CaGleYV9GO9fC_aKXnmAr9P3lqw_uPCNYBA8sZDKf\" width=\"640\" /><br /><br />We then fit the models in our ensemble to the cleaned, de-holidayed, de-seasoned weekly time series. Once the individual models in our ensemble are fit to the time series, we can display the resulting forecasts from every model in the ensemble in the spaghetti-like plot below. The thicker, red line is the final forecast based on our selection and aggregation method while the other lines are the forecasts from individual models in the ensemble. The hope is that the diverse array of models will 'bracket the truth', in the sense described by Larrick and Soll (2006), leading to a better and more robust final forecast.<br /><br /><br /><img height=\"426\" src=\"https://lh6.googleusercontent.com/st2LEgT_jVD8y1Fw16OOWSCVnhSftVqNM5kSOLPjwOlX2J4CKcn_I2hFTN6PsfkfS4UBllJClsxZ47rXkCaOItmAh8-g2j0kCpBxzcPB55gOKIvCsadQK3vxMpn8GlM3bXHDvtRp\" width=\"640\" /><br /><br />After converting our ensemble to a final forecast for each week of the forecast horizon, we re-season the data, distribute the weekly totals to the constituent days of the week for every week, and re-holiday the resulting daily values. From these we output final daily and weekly forecasts, as depicted below. <br /><br />The plot below shows the entire time series and weekly forecasts for a 30-month forecast horizon starting in mid-2006.<br /><br /><img height=\"426\" src=\"https://lh6.googleusercontent.com/a4ntrWNn74MOuh_KIVAx5tIXGSZTlIbxLi1QrcXdq2OUtSBcQP-SdVuAmrxbu9W5jkWm6FTyI4T7cEQwO_ykLQFuIXhq-dv88N5z0JNb7pwoqPRh0HMYPOy7IXKNOp2A0LrNg2ov\" width=\"640\" /></div><div><br />This next plot, also weekly, zooms in to focus on only the forecast period. This plot reveals reasonable forecast performance until about September 2008, ostensibly due to&nbsp;<a href=\"https://fred.stlouisfed.org/series/NAEXKP01TRQ652S\">the impact in Turkey</a>&nbsp;of the global&nbsp;<a href=\"https://en.wikipedia.org/wiki/Great_Recession\">Great Recession of 2008</a>.<br /><br /><img height=\"426\" src=\"https://lh5.googleusercontent.com/7XWe3ZV-K1g4_zESZKKLQi23hi2cPj7s1HgGy_rg7Cn4p6LHcRQjAHhM8bJPDwrIoqJV5tlVdbNFjfZaw4LBC_jzbHuxTlIvaDYnKSOUE9vES3kWjWFKUReZlFOQfqFgFDlFLUXz\" width=\"640\" /></div><div><br />Now we show the daily forecast and observed data for a three-month period in mid-2008, covering a period 21 to 24 months into the forecast horizon.<br /><br /><img height=\"426\" src=\"https://lh3.googleusercontent.com/0dOPM4wOD1ZOo0GYBihr2nWBTBwEKf_LVfd0t2THzeMZXlKygRQWb3tvtH5jV-LCtwxcACFObH2BHtBpmcLOsc3q8UnakZX2UzsyQMxKXScLez_Er68rnbBP31CbWUPkXhkgJYxC\" width=\"640\" /><br /><br />Before the onset of the Great Recession’s impacts, the interquartile range of the percentage errors for the weekly forecast was 2.7%, from -1.2% to 1.5%. Corresponding numbers for the daily forecast were 3.2%, from -1.6% to 1.6%. The 10th and 90th percentiles were -3.5% and 2.8% for the weekly forecast, and -3.9% and 3.3% for the daily forecast. The median of the weekly percentage errors was 0.1% and was the same (0.1%) for the daily percentage errors. Absolute Percentage Errors told a similar story. Overall, the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Mean_absolute_percentage_error\">Mean Absolute Percentage Errors</a>&nbsp;were 1.9% for the weekly forecast and 2.3% for the daily forecast.<br /><br />Beyond the forecasts, our routine produces ancillary information with business relevance. For instance, immediately below we show the estimated holiday impacts for Eid al-Adha and Eid al-Fitr over a span of about 14 days surrounding the particular holiday (anchored about a 'zero' day on the horizontal axis.) Farther below, we show annual estimated seasonality (weekly resolution), past and forecast. Both estimated holiday impacts and seasonal adjustment factors are expressed on relative scales. While important to business understanding in their own right, it is worth saying one last time that doing a good job estimating seasonal and holiday effects reduces the burden on the models in the ensemble, helping them to better identify long-term growth trends. <br /><br /><br /><img height=\"158\" src=\"https://lh5.googleusercontent.com/5Mes4_hqbvXHAmfxQdNHY3SoV4cUUqKolqlOUF5SJJQb4He1W8WrK87q61ANNhIhorffQCHdrMPJ2nldTJ_Jmb0kqdSIBtJspQu4HSnV-uO-1l9OaIB6YWplnAQo6v4gGCosXeuN\" width=\"640\" /><br /><br /><br /><br /><br /><img height=\"384\" src=\"https://lh5.googleusercontent.com/G8GKQbauH1XAee374ogqQf8sXnpT1Fr-L9I1I9AWoCwX1zP52g5lfws4hRzk37wfk0zX1-pOBxjZIiQToHfOqngJ--Q-v7VBycbTy0DqDQYcNEeCJQle736PA5a5qS42EbZOrTJu\" width=\"640\" /><br /><br /><br /><h2>Conclusion</h2></div><div>To summarize, key to our own attempt at a robust, automatic forecasting methodology was to divide and (hopefully) conquer where possible as well as to implement ensemble methods in accord with our risk tolerance and our beliefs about the data generating mechanism. But as anyone involved real-world forecasting knows, this is a complex space. We are eager to hear from practicing data scientists about their forecasting challenges --- how they might be similar to or differ from our problem. We hope this blog post is the start of such a dialogue.</div><div><span id=\"docs-internal-guid-24f75ce0-7abf-827b-0ce4-0df55867e529\"></span><br /><span id=\"docs-internal-guid-24f75ce0-7abf-827b-0ce4-0df55867e529\"></span></div><div><h3>References</h3>[1] Hyndman, Rob J., and George Athanasopoulos. Forecasting: principles and practice. OTexts, 2014. <a href=\"http://otexts.org/fpp/\">http://otexts.org/fpp/</a>. Accessed on 20 March 2017. Specifically, see \"1.4 Forecasting data and methods\".<br /><br />[2] Cleveland, Robert B., William S. Cleveland, and Irma Terpenning. \"STL: A seasonal-trend decomposition procedure based on loess.\" Journal of Official Statistics 6.1 (1990): 3.<br /><br />[3] Clemen, Robert T. \"Combining forecasts: A review and annotated bibliography.\" International journal of forecasting 5.4 (1989): 559-583<br /><br />[4] Bates, John M., and Clive WJ Granger. \"The combination of forecasts.\" Journal of the Operational Research Society 20.4 (1969): 451-468.<br /><br />[5] Makridakis, Spyros, and Michele Hibon. \"The M3-Competition: results, conclusions and implications.\" International journal of forecasting 16.4 (2000): 451-476.<br /><br />[6] Mannes, Albert E., Jack B. Soll, and Richard P. Larrick. \"The wisdom of select crowds.\" Journal of personality and social psychology 107.2 (2014): 276.<br /><br />[7] Murray Stokely, Farzan Rohani, and Eric Tassone. “<a href=\"https://research.google.com/pubs/pub37483.html\">Large-Scale Parallel Statistical Forecasting Computations in R</a>”, Google Research report.</div><div><br />[8] De Livera, Alysha M., Rob J. Hyndman, and Ralph D. Snyder. \"Forecasting time series with complex seasonal patterns using exponential smoothing.\" Journal of the American Statistical Association 106.496 (2011): 1513-1527.<br /><br />[9] Larrick, Richard P., and Jack B. Soll. \"Intuitions about combining opinions: Misappreciation of the averaging principle.\" Management science 52.1 (2006): 111-127. APA<br /><div><span id=\"docs-internal-guid-24f75ce0-7a80-671c-7149-d5778c8fc95f\"></span><br /><div><span id=\"docs-internal-guid-24f75ce0-7a80-671c-7149-d5778c8fc95f\"><span style=\"font-family: &quot;roboto&quot;; font-size: 10pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></span></div><span id=\"docs-internal-guid-24f75ce0-7a80-671c-7149-d5778c8fc95f\"></span></div></div>",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Amir Najmi",
    "uri": "http://www.blogger.com/profile/18174523203317227640",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": "",
  "thr:total": 18
}