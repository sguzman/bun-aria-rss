{
  "title": "e004: Functionalized",
  "link": "https://newrustacean.com/show_notes/e004/",
  "description": "<li><strong>Date:</strong> October 29, 2015</li>\n<p><strong>Subject:</strong> Functions, methods, closures, and function as arguments!</p>\n<h1 id=\"notes\">Notes</h1>\n<p>This week’s episode covers the basics of all sorts of functions: normal functions, methods, and closures.</p>\n<h2 id=\"closures\">Closures</h2>\n<ul>\n<li><a href=\"http://martinfowler.com/bliki/Lambda.html\">An explanation (in Ruby) by Martin Fowler</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/closures.html\">Rust book</a></li>\n<li><a href=\"http://rustbyexample.com/fn/closures.html\">Rust by Example</a></li>\n<li><a href=\"http://programmers.stackexchange.com/questions/40454/what-is-a-closure\">“What is a closure?” (Progammers Stack Exchange)</a> – the first answer is the best, but the second answer may be a helpful stepping stone for people just getting their heads around this and coming from OOP languages like C++ or Java (even though I disagree with the explanation in some ways).</li>\n<li><a href=\"http://stackoverflow.com/questions/36636/what-is-a-closure\">“What is a closure?” (Stack Overflow)</a> – careful, thorough answer using JavaScript as an example.</li>\n</ul>\n<h1 id=\"links\">Links</h1>\n<ul>\n<li><a href=\"http://exercism.io/languages/rust\">Exercism</a> (hat tip: <a href=\"https://github.com/Lechindianer\">Lechindanier on GitHub</a>)</li>\n<li><a href=\"https://github.com/ctjhoa/rust-learning\">Rust Learning</a></li>\n<li><a href=\"http://www.chriskrycho.com/2015/rust-and-swift-viii.html\">Rust and Swift (viii)</a></li>\n</ul>\n<h1 id=\"followsupport\">Follow/Support</h1>\n<ul>\n<li>New Rustacean:\n<ul>\n<li>Twitter: <a href=\"https://www.twitter.com/newrustacean\">@newrustacean</a></li>\n<li>App.net: <a href=\"https://alpha.app.net/newrustacean\">@newrustacean</a></li>\n<li><a href=\"https://www.patreon.com/newrustacean\" rel=\"payment\">Patreon</a></li>\n<li><a href=\"https://www.dwolla.com/hub/chriskrycho\">Dwolla</a></li>\n<li>Email: <a href=\"mailto:hello@newrustacean.com\">hello@newrustacean.com</a></li>\n</ul></li>\n<li>Chris Krycho\n<ul>\n<li>Twitter: <a href=\"https://www.twitter.com/chriskrycho\">@chriskrycho</a></li>\n<li>App.net: <a href=\"https://alpha.app.net/chriskrycho\">@chriskrycho</a></li>\n</ul></li>\n</ul>\n",
  "pubDate": "Thu, 29 Oct 2015 20:45:12 -0600",
  "enclosure": "",
  "guid": "BC4D9C42-0F4C-4497-9059-436A8906657E",
  "itunes:author": "Chris Krycho",
  "itunes:subtitle": "Functions, methods, closures, and function as arguments!",
  "itunes:summary": "Functions, methods, closures, and function as arguments! NOTES This week’s episode covers the basics of all sorts of functions: normal functions, methods, and closures. Closures - An explanation (in Ruby) by Martin Fowler - Rust book - Rust by Example - “What is a closure?” (Progammers Stack Exchange) ‚Äì the first answer is the best, but the second answer may be a helpful stepping stone for people just getting their heads around this and coming from OOP languages like C++ or Java (even though I disagree with the explanation in some ways). - “What is a closure?” (Stack Overflow) – careful, thorough answer using JavaScript as an example. LINKS - Exercism (hat tip: Lechindanier on GitHub) - Rust Learning - Rust and Swift (viii) FOLLOW/SUPPORT - New Rustacean: - Twitter: @newrustacean - App.net: @newrustacean - Patreon.com/chriskrycho - Dwolla.com/hub/chriskrycho - Email: hello@newrustacean.com - Chris Krycho - Twitter: @chriskrycho - App.net: @chriskrycho",
  "itunes:duration": "17:07",
  "itunes:episodeType": "full"
}