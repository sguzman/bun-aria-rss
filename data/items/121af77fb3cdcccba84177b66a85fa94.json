{
  "title": "Launching a new Chromium-based WebView for Android",
  "link": "https://engineering.fb.com/2022/09/30/android/launching-a-new-chromium-based-webview-for-android/",
  "dc:creator": "",
  "pubDate": "Fri, 30 Sep 2022 17:00:40 +0000",
  "category": [
    "Android",
    "Open Source",
    "Web"
  ],
  "guid": "https://engineering.fb.com/?p=19421",
  "description": "<p>Our in-app browser for Facebook on Android has historically relied on an Android System WebView based on Chromium, the open source project that powers many browsers on Android and other operating systems. On other mobile operating systems, the System WebView component cannot be updated without updating the entire operating system. On Android, this works differently, [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2022/09/30/android/launching-a-new-chromium-based-webview-for-android/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2022/09/30/android/launching-a-new-chromium-based-webview-for-android/\">Launching a new Chromium-based WebView for Android</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
  "content:encoded": "<p><span style=\"font-weight: 400;\">Our in-app browser for Facebook on Android has historically relied on an Android System WebView based on </span><a href=\"https://www.chromium.org/chromium-projects/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">Chromium</span></a><span style=\"font-weight: 400;\">, the open source project that powers many browsers on Android and other operating systems. On other mobile operating systems, the System WebView component cannot be updated without updating the entire operating system. On Android, this works differently, allowing the System WebView component and the Chrome app to be updated via Google Play instead of with operating system updates, which is preferable to ensure that users are able to access critical security updates. Despite this, over the past few years, we’ve observed that many Android users are updating their Facebook app but not updating their Chrome and WebView apps, which may result in security risks and a negative user experience.  </span></p>\n<p><span style=\"font-weight: 400;\">For example, people with outdated versions of the Chrome and WebView apps may be more susceptible to zero day exploits and other security holes that might have been fixed in newer versions of Chromium. In addition, we also observed that, due to the way Android loads the System WebView, when users were updating the System WebView app, they were experiencing a Facebook app crash. </span></p>\n<p><span style=\"font-weight: 400;\">To help solve these issues <b>– </b>and following the precedent of browser vendors such as Microsoft Edge, Samsung Internet, and Mozilla Firefox who all ship custom browser engines on Android &#8211; we have been building and testing a separate Chromium-Based WebView for a few years. This will act as an alternative for the System WebView for the in-app browser for Facebook on Android. This WebView</span><span style=\"font-weight: 400;\"> can update in sync with Facebook app updates, and function as a drop-in replacement for the System WebView inside the Facebook app without compromising or changing the user experience in any way.</span></p>\n<p><span style=\"font-weight: 400;\">We have been conducting early tests on this Chromium-Based WebView, and we will begin rolling out this version to more Facebook app users that have compatible devices. </span></p>\n<h2>More security, stability, and better performance</h2>\n<h3><span style=\"font-weight: 400;\">Security</span></h3>\n<p><span style=\"font-weight: 400;\">Because we are now able to bundle updates to our WebView alongside our app, we can ensure that people who are using our Chromium-Based WebView receive the latest Chromium security patches, which immediately helps mitigate security risks. Additionally, our WebView runs in the same manner as the System WebView.</span></p>\n<p><span style=\"font-weight: 400;\">Keeping in line with best industry practices, we perform rebases of our WebView onto the latest versions of Chromium at regular intervals. This helps us ensure that our WebView has the latest Chromium security patches.</span></p>\n<h3><span style=\"font-weight: 400;\">Stability</span></h3>\n<p><span style=\"font-weight: 400;\">Android loads the System WebView code into an app’s memory when the component is in use. Once the code is loaded, the app can use the WebView API to interact with the WebView component code in the app’s memory. This has tangible user benefits since it means that one app’s use of the WebView component will not influence or slow down another. It also has security benefits because, with this type of isolation, apps are unable to see what people are doing inside of WebView components in other apps.</span></p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-large wp-image-19443\" src=\"https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-1.png?w=1024\" alt=\"\" width=\"1024\" height=\"417\" srcset=\"https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-1.png 1703w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-1.png?resize=916,373 916w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-1.png?resize=768,313 768w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-1.png?resize=1024,417 1024w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-1.png?resize=1536,626 1536w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-1.png?resize=96,39 96w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-1.png?resize=192,78 192w\" sizes=\"(max-width: 992px) 100vw, 62vw\" /></p>\n<figure id=\"attachment_19446\" aria-describedby=\"caption-attachment-19446\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><img decoding=\"async\" loading=\"lazy\" class=\"size-large wp-image-19446\" src=\"https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-5.png?w=1024\" alt=\"\" width=\"1024\" height=\"417\" srcset=\"https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-5.png 1703w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-5.png?resize=916,373 916w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-5.png?resize=768,313 768w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-5.png?resize=1024,417 1024w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-5.png?resize=1536,626 1536w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-5.png?resize=96,39 96w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-5.png?resize=192,78 192w\" sizes=\"(max-width: 992px) 100vw, 62vw\" /><figcaption id=\"caption-attachment-19446\" class=\"wp-caption-text\">How the System WebView gets loaded</figcaption></figure>\n<p><span style=\"font-weight: 400;\">When the WebView app gets updated, Android needs to ensure that all instances of the WebView are stopped, otherwise an application might have an outdated version of the WebView that is incompatible with code that was downloaded during the System WebView app’s update. In order to solve this issue, Android will cause apps that have used the System WebView to crash when the System WebView is updated. On Android there is no way to cleanly unload such components from an app’s memory, so this means that if an app used any WebView API at any point it would crash even if the user is not currently looking at a WebView, which creates a negative user experience.</span></p>\n<p><span style=\"font-weight: 400;\">Our WebView fixes this by allowing us to rely on Chromium that’s loaded from our app’s storage instead of the System WebView app’s storage. Thus, Android no longer needs to load the System WebView code into the Facebook app’s memory, which means that Android no longer needs to crash the app in order to allow the System WebView to fully update.</span><img decoding=\"async\" loading=\"lazy\" class=\"alignnone wp-image-19444 size-large\" style=\"font-size: 1rem;\" src=\"https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-2.png?w=1024\" alt=\"\" width=\"1024\" height=\"417\" srcset=\"https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-2.png 1703w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-2.png?resize=916,373 916w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-2.png?resize=768,313 768w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-2.png?resize=1024,417 1024w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-2.png?resize=1536,626 1536w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-2.png?resize=96,39 96w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-2.png?resize=192,78 192w\" sizes=\"(max-width: 992px) 100vw, 62vw\" /></p>\n<figure id=\"attachment_19445\" aria-describedby=\"caption-attachment-19445\" style=\"width: 1024px\" class=\"wp-caption alignnone\"><img decoding=\"async\" loading=\"lazy\" class=\"wp-image-19445 size-large\" src=\"https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-3.png?w=1024\" alt=\"\" width=\"1024\" height=\"417\" srcset=\"https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-3.png 1703w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-3.png?resize=916,373 916w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-3.png?resize=768,313 768w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-3.png?resize=1024,417 1024w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-3.png?resize=1536,626 1536w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-3.png?resize=96,39 96w, https://engineering.fb.com/wp-content/uploads/2022/09/Chromium-Browser-3.png?resize=192,78 192w\" sizes=\"(max-width: 992px) 100vw, 62vw\" /><figcaption id=\"caption-attachment-19445\" class=\"wp-caption-text\">How our WebView gets loaded</figcaption></figure>\n<h3><span style=\"font-weight: 400;\">Performance</span></h3>\n<p><span style=\"font-weight: 400;\">Our Webview also improves on rendering performance. Modern browser engines have a component called a compositor, which is the part of a browser engine that is used to figure out how to display a page. Typically on modern browser engines the compositor runs in a separate GPU process and is able to run asynchronously from other parts of the browser. However, the System WebView compositor needs to account for the various ways Android allows apps to display it. Because of this, it needs to run synchronously with the Android widget layout, which means that it is unable to run in a separate GPU process.</span></p>\n<p><span style=\"font-weight: 400;\">Because we are able to constrain how the WebView gets displayed within our apps, we can enable the GPU process for our WebView. This improves rendering performance and stability of web pages and </span><a href=\"https://www.facebook.com/fbgaminghome/developers/instant-games\"><span style=\"font-weight: 400;\">Instant Games</span></a><span style=\"font-weight: 400;\">. </span></p>\n<h2>Our open source commitment</h2>\n<p><span style=\"font-weight: 400;\">Meta has a strong history of commitment to open source, particularly when it comes to web standards as well as upstream Chromium contributions. For example the </span><a href=\"https://engineering.fb.com/2019/04/22/developer-tools/isinputpending-api/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">isInputPending</span></a><span style=\"font-weight: 400;\"> and </span><a href=\"https://engineering.fb.com/2019/06/20/web/browser-contributions/#:~:text=Self%2Dprofiling%20API%20for%20JavaScript\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">JavaScript Self Profiling</span></a><span style=\"font-weight: 400;\"> APIs are two standards that Meta helped originate, draft and then commit upstream to Chromium, so all Chromium-based browsers could ship these new APIs. Meta is also leading many of the efforts on the </span><a href=\"https://engineering.fb.com/2019/05/01/ai-research/f8-2019-day-2/#:~:text=Unlocking%20the%20Future%20of%20WebXR\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">WebXR standard</span></a><span style=\"font-weight: 400;\">. While this engine enables us to experiment with new web standards, we intend to continue to submit any major changes to upstream Chromium. </span></p>\n<h2>Not a developer? Key things to know</h2>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">We are making a backend update to improve the user experience of loading web content in Facebook’s in-app browser on Android devices. </span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">This change will improve security and performance and reduce app crashes when people view websites in our Facebook app.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Other companies like Mozilla, Microsoft and Samsung already have custom browser engines on Android. </span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">This update does not impact people&#8217;s existing privacy choices on Meta services. </span></li>\n</ul>\n<p><span style=\"font-weight: 400;\">Learn more about our in-app browsers in our <a href=\"https://www.facebook.com/business/help/206578174518231\" target=\"_blank\" rel=\"noopener\">Help Center</a>.</span></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2022/09/30/android/launching-a-new-chromium-based-webview-for-android/\">Launching a new Chromium-based WebView for Android</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
  "post-id": 19421
}