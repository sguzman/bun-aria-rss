{
  "title": "Trie based classifiers evaluation",
  "link": "https://mathematicaforprediction.wordpress.com/2022/08/25/trie-based-classifiers-evaluation/",
  "comments": "https://mathematicaforprediction.wordpress.com/2022/08/25/trie-based-classifiers-evaluation/#respond",
  "dc:creator": "Anton Antonov Antonov",
  "pubDate": "Thu, 25 Aug 2022 19:52:43 +0000",
  "category": [
    "Mathematica",
    "Naive Bayesian Classifier",
    "Tries (Prefix Trees)",
    "Classification",
    "ROC"
  ],
  "guid": "http://mathematicaforprediction.wordpress.com/?p=1261",
  "description": "In this notebook we show how to evaluate Machine Learning (ML) classifiers based on Tries with frequencies created over a well known ML dataset. The computations are done with packages and functions from the Wolfram Language (WL) ecosystem.",
  "content:encoded": "<h2 id=\"introduction\">Introduction</h2>\n<p>In this notebook we show how to evaluate Machine Learning (ML)&nbsp;classifiers based on <a href=\"https://en.wikipedia.org/wiki/Trie\">Tries</a> with frequencies, [AA1,&nbsp;AA2, AAp1], created&nbsp;over a well known ML&nbsp;dataset. The computations are done with packages&nbsp;and functions from the Wolfram Language (WL) ecosystem.</p>\n<p>The classifiers based on <a href=\"https://mathematicaforprediction.wordpress.com/2013/12/06/tries-with-frequencies-for-data-mining/\">Tries with frequencies</a> can be seen as&nbsp;generalized <a href=\"https://mathematicaforprediction.wordpress.com/2013/10/18/generation-of-naive-bayesian-classifiers/\">Naive&nbsp;Bayesian Classifiers (NBCs)</a>.</p>\n<p>We use the workflow summarized in this flowchart:</p>\n<div id=\"cb1\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb1-1\"><span class=\"fu\">Import</span><span class=\"op\">[</span><span class=\"st\">\"https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/master/MarkdownDocuments/Diagrams/A-monad-for-classification-workflows/Classification-workflow-horizontal-layout.jpg\"</span><span class=\"op\">]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/08tac97m1v31b.png\"></p>\n<p>For more details on classification workflows see the article <a href=\"https://mathematicaforprediction.wordpress.com/2018/05/15/a-monad-for-classification-workflows/\">“A&nbsp;monad&nbsp;for classification workflows”</a>, [AA3].</p>\n<p><strong>Remark:</strong> This notebook is the Mathematica counterpart&nbsp;of the Raku computable Markdown document with the same name [AA7,&nbsp;AA6].</p>\n<p><strong>Remark:</strong> Mathematica and WL are used as synonyms in&nbsp;this notebook.</p>\n<hr>\n<h2 id=\"data\">Data</h2>\n<p>In this section we obtain a dataset to make classification&nbsp;experiments with.</p>\n<p>Through the Wolfram Function Repository (WFR) function <a href=\"https://resources.wolframcloud.com/FunctionRepository/resources/ExampleDataset/\">ExampleDataset </a>we can get data for <a href=\"https://en.wikipedia.org/wiki/Wreck_of_the_Titanic\">the Titanic&nbsp;ship wreck</a>:</p>\n<div id=\"cb2\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb2-1\">dsTitanic0 <span class=\"ex\">=</span> ResourceFunction<span class=\"op\">[</span><span class=\"st\">\"ExampleDataset\"</span><span class=\"op\">][{</span><span class=\"st\">\"MachineLearning\"</span><span class=\"op\">,</span> <span class=\"st\">\"Titanic\"</span><span class=\"op\">}]</span>;</span>\n<span id=\"cb2-2\">dsTitanic0<span class=\"op\">[[</span><span class=\"dv\">1</span> ;; <span class=\"dv\">4</span><span class=\"op\">]]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/0m4somgwuj73s.png\"></p>\n<p><strong>Remark:</strong> ExampleDataset uses <a href=\"https://reference.wolfram.com/language/ref/ExampleData.html\">ExampleData</a>.&nbsp;Datasets from the ExampleData’s “MachineLearning” and “Statistics”&nbsp;collections are processed in order to obtain Dataset objects.</p>\n<p>Instead of using the built-in Titanic data we use a version of it&nbsp;(which is used in <a href=\"https://github.com/antononcube/MathematicaVsR\">Mathematica-vs-R&nbsp;comparisons</a>, [AAr1]):</p>\n<div id=\"cb3\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb3-1\">dsTitanic<span class=\"op\">[[</span><span class=\"dv\">1</span> ;; <span class=\"dv\">4</span><span class=\"op\">]]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/0yvrxcu8fjfuv.png\"></p>\n<p>Here is a summary of the data:</p>\n<div id=\"cb4\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb4-1\">ResourceFunction<span class=\"op\">[</span><span class=\"st\">\"RecordsSummary\"</span><span class=\"op\">][</span>dsTitanic<span class=\"op\">]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/1jqv1g8o5a2uw.png\"></p>\n<hr>\n<h2 id=\"make-tries\">Make tries</h2>\n<p>In this section for demonstration purposes let us create a&nbsp;<em>shorter</em> trie and&nbsp;display it in tree form.</p>\n<p>Here we drop the identifier column and take the record fields in a&nbsp;particular order, in which “passengerSurvival” is the last field:</p>\n<div id=\"cb5\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb5-1\">lsRecords <span class=\"ex\">=</span> Normal@dsTitanic<span class=\"op\">[</span><span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"fu\">Prepend</span><span class=\"op\">[</span>KeyDrop<span class=\"op\">[</span>#<span class=\"op\">,</span> <span class=\"st\">\"id\"</span><span class=\"op\">],</span> <span class=\"st\">\"passengerAge\"</span> <span class=\"ot\">-></span> <span class=\"fu\">ToString</span><span class=\"op\">[</span>#passengerAge<span class=\"op\">]]</span> &<span class=\"op\">][</span><span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"op\">{</span><span class=\"st\">\"passengerClass\"</span><span class=\"op\">,</span> <span class=\"st\">\"passengerSex\"</span><span class=\"op\">,</span> <span class=\"st\">\"passengerAge\"</span><span class=\"op\">,</span> <span class=\"st\">\"passengerSurvival\"</span><span class=\"op\">}][</span>Values<span class=\"op\">]</span>;</span></code></pre>\n</div>\n<p>Here is a sample:</p>\n<div id=\"cb6\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb6-1\"><span class=\"fu\">RandomSample</span><span class=\"op\">[</span>lsRecords<span class=\"op\">,</span> <span class=\"dv\">3</span><span class=\"op\">]</span></span>\n<span id=\"cb6-2\"></span>\n<span id=\"cb6-3\"><span class=\"co\">(*{{\"3rd\", \"female\", \"-1\", \"died\"}, {\"1st\", \"female\", \"50\", \"survived\"}, {\"3rd\", \"male\", \"30\", \"died\"}}*)</span></span></code></pre>\n</div>\n<p>Here make a trie <em>without</em> the field “passengerAge”:</p>\n<div id=\"cb7\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb7-1\">trTitanic <span class=\"ex\">=</span> TrieCreate<span class=\"op\">[</span>lsRecords<span class=\"op\">[[</span><span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"op\">{</span><span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"dv\">4</span><span class=\"op\">}]]]</span>;</span>\n<span id=\"cb7-2\">TrieForm<span class=\"op\">[</span>trTitanic<span class=\"op\">,</span> <span class=\"fu\">AspectRatio</span> <span class=\"ot\">-></span> <span class=\"dv\">1</span><span class=\"sc\">/</span><span class=\"dv\">4</span><span class=\"op\">,</span> <span class=\"fu\">ImageSize</span> <span class=\"ot\">-></span> <span class=\"dv\">900</span><span class=\"op\">]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/0aczl0mnjpi4x.png\"></p>\n<p>Here is a corresponding mosaic plot, [AA4, AAp3]:</p>\n<div id=\"cb8\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb8-1\">MosaicPlot<span class=\"op\">[</span>lsRecords<span class=\"op\">[[</span><span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"op\">{</span><span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"dv\">4</span><span class=\"op\">}]]]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/157jxydgclea9.png\"></p>\n<p><strong>Remark:</strong> The function MosaicPlot uses tries with&nbsp;frequencies in its implementation. Observing and reasoning with mosaic&nbsp;plots should make it clear that tries with frequencies are (some sort&nbsp;of) generalized Naive Bayesian classifiers.</p>\n<hr>\n<h2 id=\"trie-classifier\">Trie classifier</h2>\n<p>In this section we create a Trie-based classifier.</p>\n<p>In order to make certain reproducibility statements for the kind&nbsp;of&nbsp;experiments shown here, we use random seeding (with&nbsp;SeedRandom)&nbsp;before any computations that use pseudo-random numbers.&nbsp;Meaning, one&nbsp;would expect WL code that starts with a SeedRandom&nbsp;statement&nbsp;(e.g.&nbsp;SeedRandom[89]) to produce the same pseudo random&nbsp;numbers&nbsp;if it is executed multiple times (without changing it.)</p>\n<div id=\"cb9\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb9-1\"><span class=\"fu\">SeedRandom</span><span class=\"op\">[</span><span class=\"dv\">12</span><span class=\"op\">]</span>;</span></code></pre>\n</div>\n<p>Here we split the data into training and testing data in a stratified manner (a split for each label):</p>\n<div id=\"cb10\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb10-1\">aSplit1 <span class=\"ex\">=</span> GroupBy<span class=\"op\">[</span>lsRecords<span class=\"op\">,</span> #<span class=\"op\">[[</span><span class=\"sc\">-</span><span class=\"dv\">1</span><span class=\"op\">]]</span> &<span class=\"op\">,</span> AssociationThread<span class=\"op\">[{</span><span class=\"st\">\"training\"</span><span class=\"op\">,</span> <span class=\"st\">\"testing\"</span><span class=\"op\">},</span> TakeDrop<span class=\"op\">[</span><span class=\"fu\">RandomSample</span><span class=\"op\">[</span>#<span class=\"op\">],</span> <span class=\"fu\">Round</span><span class=\"op\">[</span><span class=\"fl\">0.75</span><span class=\"sc\">*</span><span class=\"fu\">Length</span><span class=\"op\">[</span>#<span class=\"op\">]]]]</span> &<span class=\"op\">]</span>;</span>\n<span id=\"cb10-2\"><span class=\"fu\">Map</span><span class=\"op\">[</span><span class=\"fu\">Length</span><span class=\"op\">,</span> aSplit1<span class=\"op\">,</span> <span class=\"op\">{</span><span class=\"dv\">2</span><span class=\"op\">}]</span></span>\n<span id=\"cb10-3\"></span>\n<span id=\"cb10-4\"><span class=\"co\">(*<|\"survived\" -> <|\"training\" -> 375, \"testing\" -> 125|>, \"died\" -> <|\"training\" -> 607, \"testing\" -> 202|>|>*)</span></span></code></pre>\n</div>\n<p>Here we aggregate training and testing data (and show the&nbsp;corresponding sizes):</p>\n<div id=\"cb11\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb11-1\">aSplit2 <span class=\"ex\">=</span> <<span class=\"sc\">|</span></span>\n<span id=\"cb11-2\">    <span class=\"st\">\"training\"</span> <span class=\"ot\">-></span> <span class=\"fu\">Join</span> @@ <span class=\"fu\">Map</span><span class=\"op\">[</span>#training &<span class=\"op\">,</span> aSplit1<span class=\"op\">],</span> </span>\n<span id=\"cb11-3\">    <span class=\"st\">\"testing\"</span> <span class=\"ot\">-></span> <span class=\"fu\">Join</span> @@ <span class=\"fu\">Map</span><span class=\"op\">[</span>#testing &<span class=\"op\">,</span> aSplit1<span class=\"op\">]</span><span class=\"sc\">|</span>>;</span>\n<span id=\"cb11-4\"><span class=\"fu\">Length</span> <span class=\"sc\">/</span>@ aSplit2</span>\n<span id=\"cb11-5\"></span>\n<span id=\"cb11-6\"><span class=\"co\">(*<|\"training\" -> 982, \"testing\" -> 327|>*)</span></span></code></pre>\n</div>\n<p>Here we make a trie with the training data (and show the node&nbsp;counts):</p>\n<div id=\"cb12\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb12-1\">trTitanic <span class=\"ex\">=</span> TrieNodeProbabilities<span class=\"op\">[</span>TrieCreate<span class=\"op\">[</span>aSplit2<span class=\"op\">[</span><span class=\"st\">\"training\"</span><span class=\"op\">]]]</span>;</span>\n<span id=\"cb12-2\">TrieNodeCounts<span class=\"op\">[</span>trTitanic<span class=\"op\">]</span></span>\n<span id=\"cb12-3\"></span>\n<span id=\"cb12-4\"><span class=\"co\">(*<|\"total\" -> 142, \"internal\" -> 60, \"leaves\" -> 82|>*)</span></span></code></pre>\n</div>\n<p>Here is the trie in tree form:<br />\n<img src=\"https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/1hdocpn5z00u2.png\"></p>\n<p>Here is an example <em>decision</em>-classification:</p>\n<div id=\"cb13\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb13-1\">TrieClassify<span class=\"op\">[</span>trTitanic<span class=\"op\">,</span> <span class=\"op\">{</span><span class=\"st\">\"1st\"</span><span class=\"op\">,</span> <span class=\"st\">\"female\"</span><span class=\"op\">}]</span></span>\n<span id=\"cb13-2\"></span>\n<span id=\"cb13-3\"><span class=\"co\">(*\"survived\"*)</span></span></code></pre>\n</div>\n<p>Here is an example <em>probabilities</em>-classification:</p>\n<div id=\"cb14\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb14-1\">TrieClassify<span class=\"op\">[</span>trTitanic<span class=\"op\">,</span> <span class=\"op\">{</span><span class=\"st\">\"1st\"</span><span class=\"op\">,</span> <span class=\"st\">\"female\"</span><span class=\"op\">},</span> <span class=\"st\">\"Probabilities\"</span><span class=\"op\">]</span></span>\n<span id=\"cb14-2\"></span>\n<span id=\"cb14-3\"><span class=\"co\">(*<|\"survived\" -> 0.962264, \"died\" -> 0.0377358|>*)</span></span></code></pre>\n</div>\n<p>We want to classify across all testing data, but not all testing&nbsp;data-records might be present in the trie. Let us check that such&nbsp;testing&nbsp;records are few (or none):</p>\n<div id=\"cb15\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb15-1\"><span class=\"fu\">Tally</span><span class=\"op\">[</span><span class=\"fu\">Map</span><span class=\"op\">[</span>TrieKeyExistsQ<span class=\"op\">[</span>trTitanic<span class=\"op\">,</span> #<span class=\"op\">]</span> &<span class=\"op\">,</span> aSplit2<span class=\"op\">[</span><span class=\"st\">\"testing\"</span><span class=\"op\">]]]</span></span>\n<span id=\"cb15-2\"></span>\n<span id=\"cb15-3\"><span class=\"co\">(*{{True, 321}, {False, 6}}*)</span></span></code></pre>\n</div>\n<p>Let us remove the records that cannot be classified:</p>\n<div id=\"cb16\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb16-1\">lsTesting <span class=\"ex\">=</span> <span class=\"fu\">Pick</span><span class=\"op\">[</span>aSplit2<span class=\"op\">[</span><span class=\"st\">\"testing\"</span><span class=\"op\">],</span> <span class=\"fu\">Map</span><span class=\"op\">[</span>TrieKeyExistsQ<span class=\"op\">[</span>trTitanic<span class=\"op\">,</span> #<span class=\"op\">]</span> &<span class=\"op\">,</span> aSplit2<span class=\"op\">[</span><span class=\"st\">\"testing\"</span><span class=\"op\">]]]</span>;</span>\n<span id=\"cb16-2\"><span class=\"fu\">Length</span><span class=\"op\">[</span>lsTesting<span class=\"op\">]</span></span>\n<span id=\"cb16-3\"></span>\n<span id=\"cb16-4\"><span class=\"co\">(*321*)</span></span></code></pre>\n</div>\n<p>Here we classify all testing records and show a sample of the&nbsp;obtained actual-predicted pairs:</p>\n<div id=\"cb17\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb17-1\">lsClassRes <span class=\"ex\">=</span> <span class=\"op\">{</span><span class=\"fu\">Last</span><span class=\"op\">[</span>#<span class=\"op\">],</span> TrieClassify<span class=\"op\">[</span>trTitanic<span class=\"op\">,</span> <span class=\"fu\">Most</span><span class=\"op\">[</span>#<span class=\"op\">]]}</span> & <span class=\"sc\">/</span>@ lsTesting;</span>\n<span id=\"cb17-2\"><span class=\"fu\">RandomSample</span><span class=\"op\">[</span>lsClassRes<span class=\"op\">,</span> <span class=\"dv\">6</span><span class=\"op\">]</span></span>\n<span id=\"cb17-3\"></span>\n<span id=\"cb17-4\"><span class=\"co\">(*{{\"survived\", \"survived\"}, {\"died\", \"survived\"}, {\"died\", \"died\"}, {\"survived\", \"survived\"}, {\"survived\", \"died\"}, {\"survived\", \"survived\"}}*)</span></span></code></pre>\n</div>\n<p>Here we cross tabulate the actual vs predicted labels using WFR’s <a href=\"https://resources.wolframcloud.com/FunctionRepository/resources/CrossTabulate\">CrossTabulate</a>:</p>\n<div id=\"cb18\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb18-1\">ResourceFunction<span class=\"op\">[</span><span class=\"st\">\"CrossTabulate\"</span><span class=\"op\">][</span>lsClassRes<span class=\"op\">]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/192nfe8h97k9k.png\"></p>\n<p>The cross-tabulation results look bad because the default decision&nbsp;threshold is used. We get better results by selecting a decision&nbsp;threshold via <a href=\"https://en.wikipedia.org/wiki/Receiver_operating_characteristic\">Receiver&nbsp;Operating Characteristic (ROC)</a> plots.</p>\n<hr>\n<h2 id=\"trie-classification-with-roc-plots\">Trie classification with ROC&nbsp;plots</h2>\n<p>In this section we systematically evaluate the Trie-based classifier&nbsp;using the <a href=\"https://en.wikipedia.org/wiki/Receiver_operating_characteristic\">Receiver&nbsp;Operating Characteristic (ROC) framework</a>.</p>\n<p>Here we classify all testing data records. For each&nbsp;record:</p>\n<ul>\n<li>Get probabilities association</li>\n<li>Add to that association the actual label</li>\n<li>Make sure the association has both survival labels</li>\n</ul>\n<div id=\"cb19\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb19-1\">lsClassRes <span class=\"ex\">=</span> <span class=\"fu\">Map</span><span class=\"op\">[</span><span class=\"fu\">Join</span><span class=\"op\">[</span><<span class=\"sc\">|</span><span class=\"st\">\"survived\"</span> <span class=\"ot\">-></span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"st\">\"died\"</span> <span class=\"ot\">-></span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"st\">\"actual\"</span> <span class=\"ot\">-></span> #<span class=\"op\">[[</span><span class=\"sc\">-</span><span class=\"dv\">1</span><span class=\"op\">]]</span><span class=\"sc\">|</span>><span class=\"op\">,</span> TrieClassify<span class=\"op\">[</span>trTitanic<span class=\"op\">,</span> #<span class=\"op\">[[</span><span class=\"dv\">1</span> ;; <span class=\"sc\">-</span><span class=\"dv\">2</span><span class=\"op\">]],</span> <span class=\"st\">\"Probabilities\"</span><span class=\"op\">]]</span> &<span class=\"op\">,</span> lsTesting<span class=\"op\">]</span>;</span></code></pre>\n</div>\n<p>Here we make a ROC record, [AA5, AAp4]:</p>\n<div id=\"cb20\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb20-1\">ToROCAssociation<span class=\"op\">[{</span><span class=\"st\">\"survived\"</span><span class=\"op\">,</span> <span class=\"st\">\"died\"</span><span class=\"op\">},</span> #actual & <span class=\"sc\">/</span>@ lsClassRes<span class=\"op\">,</span> <span class=\"fu\">Map</span><span class=\"op\">[</span><span class=\"fu\">If</span><span class=\"op\">[</span>#survived ><span class=\"ex\">=</span> <span class=\"fl\">0.5</span><span class=\"op\">,</span> <span class=\"st\">\"survived\"</span><span class=\"op\">,</span> <span class=\"st\">\"died\"</span><span class=\"op\">]</span> &<span class=\"op\">,</span> lsClassRes<span class=\"op\">]]</span></span>\n<span id=\"cb20-2\"></span>\n<span id=\"cb20-3\"><span class=\"co\">(*<|\"TruePositive\" -> 71, \"FalsePositive\" -> 14, \"TrueNegative\" -> 184, \"FalseNegative\" -> 52|>*)</span></span></code></pre>\n</div>\n<p>Here we obtain the range of the label “survived”:</p>\n<div id=\"cb21\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb21-1\">lsVals <span class=\"ex\">=</span> <span class=\"fu\">Map</span><span class=\"op\">[</span>#survived &<span class=\"op\">,</span> lsClassRes<span class=\"op\">]</span>;</span>\n<span id=\"cb21-2\">MinMax<span class=\"op\">[</span>lsVals<span class=\"op\">]</span></span>\n<span id=\"cb21-3\"></span>\n<span id=\"cb21-4\"><span class=\"co\">(*{0, 1.}*)</span></span></code></pre>\n</div>\n<p>Here we make list of decision thresholds:</p>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/0n9qun2v81o7r.png\"></p>\n<p>In the following code cell for each threshold:</p>\n<ul>\n<li>For each classification association decide on “survived” if the&nbsp;corresponding value is greater or equal to the threshold</li>\n<li>Make threshold’s ROC-association</li>\n</ul>\n<div id=\"cb22\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb22-1\">lsROCs <span class=\"ex\">=</span> <span class=\"fu\">Table</span><span class=\"op\">[</span></span>\n<span id=\"cb22-2\">    ToROCAssociation<span class=\"op\">[{</span><span class=\"st\">\"survived\"</span><span class=\"op\">,</span> <span class=\"st\">\"died\"</span><span class=\"op\">},</span> #actual & <span class=\"sc\">/</span>@ lsClassRes<span class=\"op\">,</span> <span class=\"fu\">Map</span><span class=\"op\">[</span><span class=\"fu\">If</span><span class=\"op\">[</span>#survived ><span class=\"ex\">=</span> th<span class=\"op\">,</span> <span class=\"st\">\"survived\"</span><span class=\"op\">,</span> <span class=\"st\">\"died\"</span><span class=\"op\">]</span> &<span class=\"op\">,</span> lsClassRes<span class=\"op\">]],</span> </span>\n<span id=\"cb22-3\">    <span class=\"op\">{</span>th<span class=\"op\">,</span> lsThresholds<span class=\"op\">}]</span>;</span></code></pre>\n</div>\n<p>Here is the obtained ROCs dataset:</p>\n<div id=\"cb23\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb23-1\">Dataset<span class=\"op\">[</span><span class=\"fu\">MapThread</span><span class=\"op\">[</span><span class=\"fu\">Prepend</span><span class=\"op\">[</span>#<span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"st\">\"Threshold\"</span> <span class=\"ot\">-></span> #<span class=\"dv\">2</span><span class=\"op\">]</span> &<span class=\"op\">,</span> <span class=\"op\">{</span>lsROCs<span class=\"op\">,</span> lsThresholds<span class=\"op\">}]]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/1xlmbkphhwhsf.png\"></p>\n<p>Here is the corresponding ROC plot:</p>\n<div id=\"cb24\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb24-1\">ROCPlot<span class=\"op\">[</span><span class=\"st\">\"FPR\"</span><span class=\"op\">,</span> <span class=\"st\">\"TPR\"</span><span class=\"op\">,</span> lsThresholds<span class=\"op\">,</span> lsROCs<span class=\"op\">,</span> <span class=\"fu\">GridLines</span> <span class=\"ot\">-></span> <span class=\"cn\">Automatic</span><span class=\"op\">,</span> <span class=\"fu\">ImageSize</span> <span class=\"ot\">-></span> <span class=\"fu\">Large</span><span class=\"op\">]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/0jlvgunwaouqi.png\"></p>\n<p>We can see the Trie-based classifier has reasonable prediction&nbsp;abilities –&nbsp;we get ≈ 80% True Positive Rate (TPR) for a relatively small&nbsp;False&nbsp;Positive Rate (FPR), ≈ 20%.</p>\n<hr>\n<h2 id=\"confusion-matrices\">Confusion matrices</h2>\n<p>Using ClassifierMeasurements we can produce the corresponding&nbsp;confusion matrix plots (using “made on the spot” <a href=\"https://reference.wolfram.com/language/ref/Manipulate.html\">Manipulate </a>interface):</p>\n<div id=\"cb25\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb25-1\"><span class=\"fu\">DynamicModule</span><span class=\"op\">[{</span>lsThresholds <span class=\"ex\">=</span> lsThresholds<span class=\"op\">,</span> lsClassRes <span class=\"ex\">=</span> lsClassRes<span class=\"op\">,</span> lsClassRes2<span class=\"op\">},</span> </span>\n<span id=\"cb25-2\">  <span class=\"fu\">Manipulate</span><span class=\"op\">[</span></span>\n<span id=\"cb25-3\">   lsClassRes2 <span class=\"ex\">=</span> <span class=\"fu\">Map</span><span class=\"op\">[{</span>#actual<span class=\"op\">,</span> <span class=\"fu\">If</span><span class=\"op\">[</span>#survived ><span class=\"ex\">=</span> lsThresholds<span class=\"op\">[[</span><span class=\"fu\">i</span><span class=\"op\">]],</span> <span class=\"st\">\"survived\"</span><span class=\"op\">,</span> <span class=\"st\">\"died\"</span><span class=\"op\">]}</span> &<span class=\"op\">,</span> lsClassRes<span class=\"op\">]</span>; </span>\n<span id=\"cb25-4\">   <span class=\"fu\">Append</span><span class=\"op\">[</span><span class=\"fu\">DeleteCases</span><span class=\"op\">[</span>ClassifierMeasurements<span class=\"op\">[</span>lsClassRes2<span class=\"op\">[[</span><span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"dv\">1</span><span class=\"op\">]],</span> lsClassRes2<span class=\"op\">[[</span><span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"dv\">2</span><span class=\"op\">]],</span> <span class=\"st\">\"ConfusionMatrixPlot\"</span><span class=\"op\">],</span> <span class=\"fu\">ImageSize</span> <span class=\"ot\">-></span> _<span class=\"op\">],</span> <span class=\"fu\">ImageSize</span> <span class=\"ot\">-></span> <span class=\"fu\">Medium</span><span class=\"op\">],</span> </span>\n<span id=\"cb25-5\">   <span class=\"op\">{{</span><span class=\"fu\">i</span><span class=\"op\">,</span> <span class=\"fu\">Flatten</span><span class=\"op\">[</span><span class=\"fu\">Position</span><span class=\"op\">[</span>lsThresholds<span class=\"op\">,</span> <span class=\"fu\">Nearest</span><span class=\"op\">[</span>lsThresholds<span class=\"op\">,</span> <span class=\"fl\">0.3</span><span class=\"op\">][[</span><span class=\"dv\">1</span><span class=\"op\">]]]][[</span><span class=\"dv\">1</span><span class=\"op\">]],</span> <span class=\"st\">\"index:\"</span><span class=\"op\">},</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"fu\">Length</span><span class=\"op\">[</span>lsThresholds<span class=\"op\">],</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"fu\">Appearance</span> <span class=\"ot\">-></span> <span class=\"st\">\"Open\"</span><span class=\"op\">},</span> </span>\n<span id=\"cb25-6\">   <span class=\"op\">{{</span>normalizeQ<span class=\"op\">,</span> <span class=\"cn\">False</span><span class=\"op\">,</span> <span class=\"st\">\"normalize?:\"</span><span class=\"op\">},</span> <span class=\"op\">{</span><span class=\"cn\">False</span><span class=\"op\">,</span> <span class=\"cn\">True</span><span class=\"op\">}}</span> </span>\n<span id=\"cb25-7\">  <span class=\"op\">]</span> </span>\n<span id=\"cb25-8\"> <span class=\"op\">]</span></span></code></pre>\n</div>\n<p><img src=\"https://github.com/antononcube/MathematicaForPrediction/raw/master/MarkdownDocuments/Diagrams/Trie-based-classifiers-evaluation/0e2tg6vw1ssh1.png\"></p>\n<hr>\n<h2 id=\"references\">References</h2>\n<h3 id=\"articles\">Articles</h3>\n<p>[AA1] Anton Antonov, <a href=\"https://mathematicaforprediction.wordpress.com/2013/12/06/tries-with-frequencies-for-data-mining/\">“Tries&nbsp;with frequencies for data&nbsp;mining”</a>, (2013), <a href=\"https://mathematicaforprediction.wordpress.com\">MathematicaForPrediction&nbsp;at WordPress</a>.</p>\n<p>[AA2] Anton Antonov, <a href=\"https://mathematicaforprediction.wordpress.com/2017/01/31/tries-with-frequencies-in-java/\">“Tries&nbsp;with frequencies in Java”</a>, (2017), <a href=\"https://mathematicaforprediction.wordpress.com\">MathematicaForPrediction&nbsp;at WordPress</a>.</p>\n<p>[AA3] Anton Antonov, <a href=\"https://mathematicaforprediction.wordpress.com/2018/05/15/a-monad-for-classification-workflows/\">“A&nbsp;monad for classification&nbsp;workflows”</a>, (2018), <a href=\"https://mathematicaforprediction.wordpress.com\">MathematicaForPrediction&nbsp;at WordPress</a>.</p>\n<p>[AA4] Anton Antonov, <a href=\"https://mathematicaforprediction.wordpress.com/2014/03/17/mosaic-plots-for-data-visualization/\">“Mosaic&nbsp;plots for data visualization”</a>, (2014), <a href=\"https://mathematicaforprediction.wordpress.com\">MathematicaForPrediction&nbsp;at WordPress</a>.</p>\n<p>[AA5] Anton Antonov, <a href=\"https://mathematicaforprediction.wordpress.com/2016/10/12/basic-example-of-using-roc-with-linear-regression/\">“Basic&nbsp;example of using ROC with Linear regression”</a>, (2016), <a href=\"https://mathematicaforprediction.wordpress.com\">MathematicaForPrediction&nbsp;at WordPress</a>.</p>\n<p>[AA6] Anton Antonov, <a href=\"https://github.com/antononcube/RakuForPrediction-book/blob/main/Articles/Trie-based-classifiers-evaluation.md\">“Trie&nbsp;based classifiers evaluation”</a>, (2022), <a href=\"https://github.com/antononcube/RakuForPrediction-book\">RakuForPrediction-book&nbsp;at GitHub/antononcube</a>.</p>\n<p>[AA7] Anton Antonov, <a href=\"https://rakuforprediction.wordpress.com/2022/07/07/trie-based-classifiers-evaluation/\">“Trie&nbsp;based classifiers evaluation”</a>, (2022), <a href=\"https://rakuforprediction.wordpress.com\">RakuForPrediction at&nbsp;WordPress</a>.</p>\n<h3 id=\"packages\">Packages</h3>\n<p>[AAp1] Anton Antonov, <a href=\"https://github.com/antononcube/MathematicaForPrediction/blob/master/TriesWithFrequencies.m\">TriesWithFrequencies&nbsp;Mathematica package</a>, (2014-2022), <a href=\"https://github.com/antononcube/MathematicaForPrediction\">MathematicaForPrediction&nbsp;at GitHub/antononcube</a>.</p>\n<p>[AAp2] Anton Antonov, <a href=\"https://github.com/antononcube/MathematicaForPrediction/blob/master/ROCFunctions.m\">ROCFunctions&nbsp;Mathematica package</a>, (2016), <a href=\"https://github.com/antononcube/MathematicaForPrediction\">MathematicaForPrediction&nbsp;at GitHub/antononcube</a>.</p>\n<p>[AAp3] Anton Antonov, <a href=\"https://github.com/antononcube/MathematicaForPrediction/blob/master/MosaicPlot.m\">MosaicPlot&nbsp;Mathematica package</a>, (2014), <a href=\"https://github.com/antononcube/MathematicaForPrediction\">MathematicaForPrediction&nbsp;at GitHub/antononcube</a>.</p>\n<h3 id=\"repositories\">Repositories</h3>\n<p>[AAr1] Anton Antonov, <a href=\"https://github.com/antononcube/MathematicaVsR\">Mathematica vs.&nbsp;R&nbsp;project</a>, (2018-2022), <a href=\"https://github.com/antononcube\">GitHub/antononcube</a>.</p>\n<hr>\n<h2 id=\"setup\">Setup</h2>\n<div id=\"cb26\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb26-1\"><span class=\"fu\">Import</span><span class=\"op\">[</span><span class=\"st\">\"https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/master/TriesWithFrequencies.m\"</span><span class=\"op\">]</span>;</span>\n<span id=\"cb26-2\"><span class=\"fu\">Import</span><span class=\"op\">[</span><span class=\"st\">\"https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/master/ROCFunctions.m\"</span><span class=\"op\">]</span>;</span>\n<span id=\"cb26-3\"><span class=\"fu\">Import</span><span class=\"op\">[</span><span class=\"st\">\"https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/master/MosaicPlot.m\"</span><span class=\"op\">]</span>;</span></code></pre>\n</div>\n<div id=\"cb27\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb27-1\">dsTitanic <span class=\"ex\">=</span> <span class=\"fu\">Import</span><span class=\"op\">[</span><span class=\"st\">\"https://raw.githubusercontent.com/antononcube/MathematicaVsR/master/Data/MathematicaVsR-Data-Titanic.csv\"</span><span class=\"op\">,</span> <span class=\"st\">\"Dataset\"</span><span class=\"op\">,</span> HeaderLines <span class=\"ot\">-></span> <span class=\"dv\">1</span><span class=\"op\">]</span>;</span></code></pre>\n</div>\n",
  "wfw:commentRss": "https://mathematicaforprediction.wordpress.com/2022/08/25/trie-based-classifiers-evaluation/feed/",
  "slash:comments": 0,
  "media:thumbnail": "",
  "media:content": [
    {
      "media:title": "0aczl0mnjpi4x"
    },
    {
      "media:title": "antononcube"
    },
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ]
}