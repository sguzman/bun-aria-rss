{
  "id": "yt:video:_yRW4nQFrB8",
  "yt:videoId": "_yRW4nQFrB8",
  "yt:channelId": "UC6biysICWOJ-C3P4Tyeggzg",
  "title": "Don't Make This ONE SIMPLE MISTAKE When Learning to Code in C (it'll be the END...ian)",
  "link": "",
  "author": {
    "name": "Low Level Learning",
    "uri": "https://www.youtube.com/channel/UC6biysICWOJ-C3P4Tyeggzg"
  },
  "published": "2022-09-19T19:18:54+00:00",
  "updated": "2022-09-21T01:15:30+00:00",
  "media:group": {
    "media:title": "Don't Make This ONE SIMPLE MISTAKE When Learning to Code in C (it'll be the END...ian)",
    "media:content": "",
    "media:thumbnail": "",
    "media:description": "When programming, it's easy to take certain things for granted. One of the easiest things for people to take for granted is the order that memory is stored in. What happens if we forget to consider this when sending data over the network? If a little endian and big endian system mix without properly accounting for byte order, bad things can happen.\n\nIn this video, I show you what endianness is, and what it means. I'll show you how endianness can manifest as a bug in a program when not considering communication between systems of differing endianness.\n\n🏫 COURSES 🏫\nhttps://www.udemy.com/course/c-programming-101-for-aspiring-embedded-developers\n\n🔥🔥🔥 SOCIALS 🔥🔥🔥\nLow Level Merch!: https://www.linktr.ee/lowlevellearning\nFollow me on Twitter: https://twitter.com/lowlevellearni1\nFollow me on Twitch: https://twitch.tv/lowlevellearning\nJoin me on Discord!: https://discord.gg/gZhRXDdBYY",
    "media:community": {
      "media:starRating": "",
      "media:statistics": ""
    }
  }
}