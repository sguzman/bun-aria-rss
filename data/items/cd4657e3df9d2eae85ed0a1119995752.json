{
  "title": "Solving Convex Smooth Function Constrained Optimization Is Almost As Easy As Unconstrained Optimization. (arXiv:2210.05807v3 [math.OC] UPDATED)",
  "link": "http://arxiv.org/abs/2210.05807",
  "description": "<p>Consider applying first-order methods to solve the smooth convex constrained\noptimization problem of the form $\\min_{x \\in X} F(x).$ For a simple closed\nconvex set $X$ which is easy to project onto, Nesterov proposed the Accelerated\nGradient Descent (AGD) method to solve the constrained problem as efficiently\nas an unconstrained problem in terms of the number of gradient computations of\n$F$ (i.e., oracle complexity). For a more complicated $\\mathcal{X}$ described\nby function constraints, i.e., $\\mathcal{X} = \\{x \\in X: g(x) \\leq 0\\}$, where\nthe projection onto $\\mathcal{X}$ is not possible, it is an open question\nwhether the function constrained problem can be solved as efficiently as an\nunconstrained problem in terms of the number of gradient computations for $F$\nand $g$. In this paper, we provide an affirmative answer to the question by\nproposing a single-loop Accelerated Constrained Gradient Descent (ACGD) method.\nThe ACGD method modifies the AGD method by changing the descent step to a\nconstrained descent step, which adds only a few linear constraints to the prox\nmapping. It enjoys almost the same oracle complexity as the optimal one for\nminimizing the optimal Lagrangian function, i.e., the Lagrangian multiplier\n$\\lambda$ being fixed to the optimal multiplier $\\lambda^*$. These upper oracle\ncomplexity bounds are shown to be unimprovable under a certain optimality\nregime with new lower oracle complexity bounds. To enhance its efficiency for\nlarge-scale problems with many function constraints, we introduce an ACGD with\nSliding (ACGD-S) method which replaces the possibly computationally demanding\nconstrained descent step with a sequence of basic matrix-vector\nmultiplications. The ACGD-S method shares the same oracle complexity as the\nACGD method, and its computation complexity, measured by the number of\nmatrix-vector multiplications, is also unimprovable.\n</p>",
  "dc:creator": "<a href=\"http://arxiv.org/find/math/1/au:+Zhang_Z/0/1/0/all/0/1\">Zhe Zhang</a>, <a href=\"http://arxiv.org/find/math/1/au:+Lan_G/0/1/0/all/0/1\">Guanghui Lan</a>"
}