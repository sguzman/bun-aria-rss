{
  "title": "Your First MLOps System: What Does Good Look Like? With Andy McMahon",
  "link": "https://neptune.ai/blog/first-mlops-system-with-andy-mcmahon",
  "dc:creator": "Stephen Oladele",
  "pubDate": "Wed, 19 Oct 2022 10:48:09 +0000",
  "category": [
    "MLOps",
    "mlops"
  ],
  "guid": "https://neptune.ai/?p=72034",
  "description": "<p>This article was originally an episode of the MLOps Live, an interactive Q&A session where ML practitioners answer questions from other ML practitioners.&#160; Every episode is focused on one specific ML topic, and during this one, we talked to Andy McMahon about your first MLOps system.&#160; You can watch it on YouTube: Or listen to [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://neptune.ai/blog/first-mlops-system-with-andy-mcmahon\">Your First MLOps System: What Does Good Look Like? With Andy McMahon</a> appeared first on <a rel=\"nofollow\" href=\"https://neptune.ai\">neptune.ai</a>.</p>\n",
  "content:encoded": "\n<p>This article was originally an episode of the <a href=\"/events\">MLOps Live</a>, an interactive Q&A session where ML practitioners answer questions from other ML practitioners.&nbsp;</p>\n\n\n\n<p>Every episode is focused on one specific ML topic, and during this one, we talked to Andy McMahon about<strong> your first MLOps system.</strong>&nbsp;</p>\n\n\n\n<p>You can watch it on YouTube:</p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe class=\"youtube-player\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/fge5I_SZu5Y?version=3&#038;rel=1&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;fs=1&#038;hl=en-US&#038;autohide=2&#038;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\" sandbox=\"allow-scripts allow-same-origin allow-popups allow-presentation\"></iframe>\n</div></figure>\n\n\n\n<p>Or listen to it as a podcast on:</p>\n\n\n<div class=\"custom-point-list\">\n<ul><li><a href=\"https://open.spotify.com/episode/7u4qCqEO1q1UlWTkB08RFq\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Spotify</a></li><li><a href=\"https://podcasts.apple.com/us/podcast/your-first-mlops-system-what-does-good-look-like-with/id1622835619?i=1000576346323\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Apple Podcasts&nbsp;</a></li></ul>\n</div>\n\n\n<p>But if you prefer a written version, here it is!&nbsp;</p>\n\n\n\n<p>You’ll learn about:</p>\n\n\n<div class=\"case-study-numbered-list\">\n    <h2></h2>\n    <ul>\n                    <li><span>1</span>What is an MLOps system?<br />\n</li>\n                    <li><span>2</span>What does a good MLOps system look like?<br />\n</li>\n                    <li><span>3</span>How to implement it?</li>\n                    <li><span>4</span>How to scale an MLOps system?</li>\n                    <li><span>5</span>And much more!</li>\n            </ul>\n</div>\n\n\n\n<p><strong>Sabine: </strong>We are joined today by our esteemed guest, <a href=\"https://www.linkedin.com/in/andymcmahon629/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Andy McMahon</a>, and our topic will be &#8220;Your first MLOps system. What does good look like?&#8221; Andy, welcome to the show.</p>\n\n\n\n<p><strong>Andy McMahon: </strong>Thank you so much for having me.</p>\n\n\n\n<p><strong>Sabine: </strong>Andy, you have an educational background in some interesting stuff. Master of Science in Simulation of Materials and a Ph.D. in Physics, and then you got more into the machine learning side of things. You have a bunch of experience with data science and ML engineering. Currently, you&#8217;re the machine learning engineering lead at <a href=\"https://www.natwestgroup.com/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">NatWest Group</a>, Banking, and Insurance Holding Company. You&#8217;ve also published a book titled “Machine Learning Engineering With Python”, and you&#8217;re doing a podcast called<a href=\"https://open.spotify.com/show/4bRuzmU97MWPDTf2FxkEEc\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"> “AI Right”</a> Podcast. Is there anything you&#8217;re not doing in the space of machine learning?</p>\n\n\n\n<p><strong>Andy: </strong>Thank you. Sleeping is the main one.&nbsp;</p>\n\n\n\n<h2>What is an MLOps system?</h2>\n\n\n\n<p><strong>Sabine: </strong>Fair enough. We do hope you get to rest every now and then. Okay, to warm you up, Andy, how would you explain to us MLOps Systems in one minute? We will time you.</p>\n\n\n\n<p><strong>Andy: </strong>To me, MLOps Systems are software solutions that basically allow you to do good operational practices for machine learning products. What that means, in a sense, is building ML solutions that are:</p>\n\n\n<div class=\"case-study-numbered-list\">\n    <h2></h2>\n    <ul>\n                    <li><span>1</span>reusable, <br />\n</li>\n                    <li><span>2</span>scalable, <br />\n</li>\n                    <li><span>3</span>and reproducible. </li>\n            </ul>\n</div>\n\n\n\n<p>Contained within that are several different sub-practices, some of which are very important, in particular, to machine learning software solutions, like:</p>\n\n\n<div class=\"custom-point-list\">\n<ul><li>Model monitoring, </li><li>How do you know your machine learning model is performing at the appropriate performance criteria? </li><li>How are you retraining? </li><li>How do you trigger retraining? </li><li>How often are you retraining? </li><li>Are you scheduling it? </li><li>Et cetera.</li></ul>\n</div>\n\n\n<p>You then also have model management practices. You need to <a href=\"/blog/ml-metadata-store\" target=\"_blank\" rel=\"noreferrer noopener\">track and manage the metadata associated with your model artifacts</a> and make sure that is clearly labeled and articulated. Then all of that has to come together in a sustainable set of practices and processes that have a very clear route to life within it so that you can take machine learning models from ideation through to production. That, to me, is <a href=\"/blog/mlops\" target=\"_blank\" rel=\"noreferrer noopener\">MLOps </a>systems.</p>\n\n\n\n<p><strong>Sabine: </strong>Excellent. That was just a few seconds over one minute, and it was very nicely encapsulated. Nicely done.&nbsp;</p>\n\n\n\n<h2>What does a good MLOps system look like?</h2>\n\n\n\n<p><strong>Stephen: </strong>I also like to preface with trying to understand what good looks like because I think it&#8217;s one of the key things we&#8217;re emphasizing in the title. What is a good MLOps system? Especially when you&#8217;re trying to build it for the first time. Let&#8217;s start from there.</p>\n\n\n\n<p><strong>Andy:</strong> I think what&#8217;s really important for this is making sure that it makes your life easier.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>The worst thing we can do as a community is build MLOps systems and solutions because we feel we have to. Just because it&#8217;s the latest fad or the latest trend, I should incorporate MLOps tools or build my own MLOps processes is in place. That&#8217;s not true. You need to understand that we are solving a particular set of problems fundamentally.</em></strong></p></blockquote>\n\n\n\n<p>I think what good looks like is when you feel that your MLOps systems and solutions are making your life as a data scientist or an ML engineer easier. We&#8217;ll go through, I suppose, through the chat, the iterations that I can go through and how you can start small and scale up.</p>\n\n\n\n<p>Fundamentally for me, you&#8217;re doing this well if it&#8217;s making your life easier. That can manifest in multiple ways, which you can dive into, but it could just be a developer experience is easier, but also you see an uptick in things like the <a href=\"https://www.cloudbees.com/blog/dora-devops-metrics-bandwagon'\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">DORA metrics</a> from the DevOps world.&nbsp;</p>\n\n\n<div class=\"case-study-numbered-list\">\n    <h2></h2>\n    <ul>\n                    <li><span>1</span>Is your time to live reducing? <br />\n</li>\n                    <li><span>2</span>Is the number of field deployments reducing? <br />\n</li>\n                    <li><span>3</span>Is the general performance improving? </li>\n            </ul>\n</div>\n\n\n\n<p>These things are not just making your lives easier but also for your customers&#8217; lives easier. Good to me looks like it&#8217;s something that helps you do ML more repeatably and scalably but also ultimately impacts your customers in a positive way.</p>\n\n\n\n<h2>How to set up a good MLOps system?</h2>\n\n\n\n<p><strong>Stephen: </strong>Great. What does it take to set up a good system? At the high level anyways.</p>\n\n\n\n<p><strong>Andy:</strong> I think you need to break down the problem into its constituent parts. I mentioned some of that before, but your first system should always be, I think, relatively rudimentary<strong>.</strong> I&#8217;m a huge believer in bootstrapping your capability, as I call it. I&#8217;ve spoken about this in the past, so you shouldn&#8217;t go into this problem thinking, I want to solve all of those pieces I mentioned at the top of the call and one goal because you&#8217;ll do that for five years, and by that time, your business problems disappeared, your customer base is gone. It&#8217;s very important that you pick what&#8217;s the most pressing pain point for me, as a group, as a team, as a data scientist, and as an organization, and chase that first.</p>\n\n\n\n<p>Your initial MLOps systems, in my view, should always be ones that do the very basics in terms of<strong> <a href=\"/blog/machine-learning-model-management\" target=\"_blank\" rel=\"noreferrer noopener\">model management</a> </strong>and<strong> <a href=\"/blog/ml-experiment-tracking\" target=\"_blank\" rel=\"noreferrer noopener\">experiment tracking</a></strong> first. You need to have some way of understanding the experiments you&#8217;ve run when you&#8217;re building the model. There are tons of tools that do this, we can go into specific tools later, but you need to really have a way of tracking the different experiments you&#8217;ve got.</p>\n\n\n\n<p>You then need to have a way of tracking, as I mentioned before that the model artifacts you generate through those processes. You don&#8217;t just want to run a thousand experiments trying different hyperparameters. You also need to say, this is the best model, how do I store it somewhere in the target so I can use it later?</p>\n\n\n\n<p>You then need to have a way of monitoring your ML solution. You need to start thinking, How do I know when the performance is drifting? What does performance drift look like for me? That can be very basic, again, it can be very much, you define one performance metric that you think is the most important, you then define some scheduled thing that goes and pulls relevant data, runs a simple query on it, and then outputs to a file somewhere. That&#8217;s you still doing MLOps, it&#8217;s not the most sophisticated approach in the world, but it&#8217;s good enough for that version zero.</p>\n\n\n\n<div id=\"blog-cta-intext-block_75e4bbc58e460172e3812aa4d68a0c28\" class=\"blog-cta-intext\">\n  <h3 class=\"blog-cta-intext__title\">May interest you</h3>\n  <div class=\"blog-cta-intext__content\"><p><img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f449.png\" alt=\"👉\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <a href=\"/blog/best-ml-experiment-tracking-tools\" target=\"_blank\" rel=\"noopener\">15 Best Tools for ML Experiment Tracking and Management</a></p>\n<p><img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f449.png\" alt=\"👉\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <a href=\"/blog/ml-model-monitoring-best-tools\" target=\"_blank\" rel=\"noopener\">Best Tools to Do ML Model Monitoring</a></p>\n</div>\n  </div>\n\n\n<p>Then I think you need to fundamentally, just think as well, what are the practices you need to develop to keep building on top of that. Do you have the right software engineering capability in your team? Do you have the right understanding of integration points, et cetera, et cetera? I think you start small and then iterate up, I would say. Again, you should see the uptick in those different metrics that you&#8217;ve hopefully typified at the beginning of your journey.</p>\n\n\n\n<h2>Difference between an ML system and an MLOps system</h2>\n\n\n\n<p><strong>Stephen:</strong> Is there any clear difference between me talking about an ML system and an MLOps system? Because the way I think is I just want to deploy something out there. I&#8217;m not thinking of any experiment tracking and anything like that, I just want to put a model out there. Maybe you can give that a clear distinction.</p>\n\n\n\n<p><strong>Andy: </strong>Absolutely,<strong> </strong>I think it&#8217;s a really good question, actually.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>You can take machine learning models through to production or build a solution and think you&#8217;re not doing MLOps, but realistically, you&#8217;re just doing MLOps very badly.&nbsp;</em></strong></p></blockquote>\n\n\n\n<p>What I mean by that is, you build your model, you ramp up in a pipeline, you&#8217;ve run that pipeline in some way, if you don&#8217;t have any tracking of your experiments, any tracking of the model artifacts, if you&#8217;re not monitoring the end result, you&#8217;re almost not doing MLOps, but the MLOps you&#8217;re doing is just the most basic possible, which is where I assume everything operationally is fine. It&#8217;s like MLOps version 0.00.</p>\n\n\n\n<p>I think it is important that some element of this from the ground up, any ML solution to my main task has to have some element of MLOps in it. Now whether you disentangle that into a different system is an interesting question.&nbsp;</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>MLOps, to me, is a bit more general than just I know, as we&#8217;re focusing on systems tonight, but it&#8217;s also a set of holistic practices and a way of viewing the world right. It&#8217;s like DevOps was for software engineering, it&#8217;s just about understanding that the solution you&#8217;re building won&#8217;t just be built, and then you can forget about it. It&#8217;s a living, breathing thing.</em></strong></p></blockquote>\n\n\n\n<p>That&#8217;s very particular in ML and machine learning, obviously, where we have retraining requirements, et cetera. You could separate it into different systems and have it kind of hook in multiple places in your ML solution, but to me, MLOps practices should be embedded within what you&#8217;re doing as an ML practitioner anyway. Then it&#8217;s just a question for that particular organization, team, et cetera, whether it&#8217;s separate systems or it&#8217;s just embedded within the tools you&#8217;re using.</p>\n\n\n\n<h2>How to scale an MLOps system</h2>\n\n\n\n<p><strong>Stephen: </strong>I think we have a clear distinction now. You spoke about the very basic version 0.00. How would you differentiate the very basic V0 to V1? How can we start thinking that we are at V0, how is it different from moving to V1, V2, and then start iterating going forward?</p>\n\n\n\n<p><strong>Andy: </strong>Any problem you&#8217;re solving you will optimize in certain dimensions versus others. You only have finite time, energy, and effort to expend.&nbsp;</p>\n\n\n\n<p>To my mind,<strong> version zero</strong> is about maybe dropping down on repeatability, scalability in a sense and just optimizing for understanding the basic principles and really going through the process end to end.</p>\n\n\n\n<div id=\"blog-cta-intext-block_b6b94a504b5ac70423a9171fcd58f799\" class=\"blog-cta-intext\">\n  <h3 class=\"blog-cta-intext__title\">Read also </h3>\n  <div class=\"blog-cta-intext__content\"><p><a href=\"/blog/how-to-scale-ml-projects\">How to Scale ML Projects – Lessons Learned from Experience</a></p>\n</div>\n  </div>\n\n\n<p>I often think that in any team I&#8217;ve built up or worked in, the first problem we go through, all of you probably on the call can sympathize with this. It&#8217;s not great when I look back, but the point was to go through that process the first time. In MLOps, what that means is just doing some basic exporting of your models somewhere and just solving the problem in any way. Again, it could be very rudimentary, but is it simply the case of the name of your pickle or the joblibfile telling you the model version? That can be very much version zero because what you&#8217;re optimizing the first time is what the entire end-to-end process looks like.</p>\n\n\n\n<p>Then for me,<strong> version 1, 2, 3</strong>, et cetera is about starting to move the other way and upping the quality, repeatability, and scalability. It&#8217;s up to you and your particular use case, which you optimize first. I think just anything you can do to make it as simple as possible will help in all these dimensions. If the code you&#8217;re building&#8217;s modular, if the systems you&#8217;re building reference good architecture patterns if everything&#8217;s quite distinct and embodies separation of concerns, that&#8217;s often a good sign. Once you get to the most sophisticated, so version N, where N is quite large, I&#8217;d say you&#8217;re very much at the case where scaling from one use case to 1000 use cases shouldn&#8217;t scare you too much.</p>\n\n\n\n<p>There are some problems maybe to work out there. Maybe the bill you&#8217;ll have to fit for the infrastructures concerning you, but you know that the processes and toolset you&#8217;ve put in place is one that can scale that way. And that’s the stage I am in NatWest as we’ve built our MLOps capabilities that way.. I&#8217;d say it&#8217;s about that, version zero is about optimizing, just understanding the process, building out the initial principles, and learning a lot. Version 1, 2, and 3 are about iterating on that and building something much more repeatable.</p>\n\n\n\n<h2>What should small teams prioritize while building an MLOps system?</h2>\n\n\n\n<p><strong>Stephen: </strong>I think one thing this podcast focuses a lot on is the <strong>reasonable scale teams</strong>. In the<a href=\"https://www.youtube.com/watch?v=YeTjgzllGqw&ab_channel=NeptuneAI\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"> second episode</a>, we have this call with <a href=\"https://www.linkedin.com/in/jacopotagliabue/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Jacopo</a>, and I think it was similar, a lot of things we discussed building, just starting small, putting out something there that solves a problem, and iterating going forward.</p>\n\n\n\n<div id=\"blog-cta-intext-block_b384a17fc089e13404a15b3515a68908\" class=\"blog-cta-intext\">\n  <h3 class=\"blog-cta-intext__title\">Check the podcast&#8217;s written version</h3>\n  <div class=\"blog-cta-intext__content\"><p><a href=\"/blog/mlops-reasonable-scale-jacopo-tagliabue\" target=\"_blank\" rel=\"noopener\">Setting up MLOps at a Reasonable Scale With Jacopo Tagliabue</a></p>\n</div>\n  </div>\n\n\n<p>In your opinion, if we are looking at a team that has six people, maybe two data scientists, three data scientists, one Ops engineer, and then they have just, say, three, four, or a handful of models of production. They are building starters.&nbsp;</p>\n\n\n\n<p>What advice would you have for such a team? Just thinking about that problem first, and then thinking about what components they need to start setting up first just to ensure that they&#8217;re showing that immediate ROI before they start thinking about, &#8220;Oh, I want to build a bigger platform and house lots of models and scale up,&#8221; and things like that.</p>\n\n\n\n<p><strong>Andy: </strong>I was actually in a similar scenario a few years ago. When I started out, I was in a scale-up of 12 people. I was head of data science and machine learning, which meant I was in charge of just myself because I was the only data scientist. Very similar scenario, very resource-constrained, and had a few software engineers who would help. I think in that scenario, you have to really think about how to not reinvent the wheel. I mentioned doing things in a very rudimentary way. Thankfully, now, there are so many tools, and packages out there that you can do things in a rudimentary way in terms of you&#8217;ve maybe not solved all of the scaling issues you know you&#8217;ll come up against, but you can at least leverage what&#8217;s out there.</p>\n\n\n\n<p>There are lots of great packages in Python, there are lots of great tools that have open-source or freemium models where you can at least get started. I&#8217;d recommend doing your research and understanding which of these can you leverage and which of these can you use in a way that means you build a minimal set of workaround that really leverages it as much as possible. Harking back to some of the stuff we&#8217;ve already mentioned, keep it simple as well. I believe this for&nbsp; ML model development as well, always start with the simplest case. If you can solve it with linear regression, don&#8217;t go to a neural network.</p>\n\n\n\n<p>The same thing applies to MLOps systems. If you can solve it from a cron job and a Python script, do a cron job and a Python script first and then start probing it, understanding in the later iterations. &#8220;Why would that fall down, or cron&#8217;s not very stable?&#8221; &#8220;It&#8217;s got some issues, I should go this way.&#8221; Maybe move towards more sophisticated orchestration pieces or whatever the particular part of the problem you want to go after is.</p>\n\n\n\n<p>One thing that is not covered there is that I think any ML team at that scale has to really focus on data quality upfront because that&#8217;s very intimately tied to the MLOps challenge. If you have very poor data quality, no matter how good your ML engineers and your AI engineers are, your performance is going to be all over the place. You&#8217;re going to be triggering incidents. You&#8217;re going to be retraining and debugging that model all the time.</p>\n\n\n\n<p>That&#8217;s just not something that you can do when you&#8217;re that small. You can&#8217;t absorb all your time doing these instant management issues.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>I think making sure the data quality is really good upfront is also an important one that I would say applies to any skill, but particularly when you&#8217;re small and when you&#8217;re very resource constrained.</em></strong></p></blockquote>\n\n\n\n<h2>Baseline tool stack for an MLOps system</h2>\n\n\n\n<p><strong>Stephen: </strong>I would love to zoom into your early experience a little bit, before NatWest. What&#8217;s your typical baseline tool stack? You are thinking about this problem firsthand, and then you just want to put a few things together. What are those components you really prioritize just on a general level? Are there hidden blind spots that teams would often miss when thinking about the components they need to put together for their first MLOps systems?</p>\n\n\n\n<p><strong>Andy:</strong> Good question. I think we can often in this field get very attracted by the shiniest tools that seem to have the slickest videos or really cool demos and cool UI. That sometimes belies the importance of more fundamental things like you&#8217;re mentioning. For me, one huge thing that I always come up against and I always think is fundamentally important is <strong><a href=\"/blog/best-workflow-and-pipeline-orchestration-tools\" target=\"_blank\" rel=\"noreferrer noopener\">orchestration</a></strong>. If you have a very clean orchestration layer, a very simplified orchestration layer, and <a href=\"https://airflow.apache.org/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Apache Airflow</a> in particular is amazing for this. In my book, I talk about managed workflows with Apache Airflow, the AWS-managed service for this.</p>\n\n\n\n<p>If you have that orchestration layer in place and you can schedule your pipelines and create the processes that will then trigger other processes, you can then start building very sophisticated things very quickly. Even if you don&#8217;t have a tool that has an amazing bias or explainability tool set or an amazing model monitoring capability, you can do what I mentioned before and have the basic Python script running. Something like Airflow, a really good orchestration layer, means that you&#8217;re still doing that from a very solid foundation and solid base.</p>\n\n\n\n<p>Then eventually, you can swap out a simple Python script for a very fancy ML tool. I think my baseline tool stack is to solve your orchestration problem and then solve for me almost the other two I mentioned, the model management and model monitoring problem is really important. Again, just start small, and do that from simple Python scripts first. A very important one that is a blind spot, I think, is how complex it is to do model management. Things like<a href=\"https://mlflow.org/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"> MLflow,</a> <a href=\"https://www.comet.com/site/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Comet</a>, and lots of other tools, are solving a very acute problem. The quicker you can use something like that, I think you&#8217;ll find that it makes your life a lot easier.</p>\n\n\n\n<div id=\"blog-cta-intext-block_f088eabe24df38fb7b65665e29abcefb\" class=\"blog-cta-intext\">\n  <h3 class=\"blog-cta-intext__title\">Check also </h3>\n  <div class=\"blog-cta-intext__content\"><p>Deep dive into the differences between <a href=\"/vs/comet\">Neptune and Comet</a>, and <a href=\"/vs/mlflow\">Neptune and MLflow</a>.</p>\n</div>\n  </div>\n\n\n<p>I&#8217;d almost chase after model management before I would monitor. It&#8217;s far easier for me to imagine how to code up some monitoring logic and vanilla Python than it is to build a model management piece of software. That&#8217;s a very complex problem. In the previous teams I worked in, that was always a challenge for us, as we didn&#8217;t have a tool necessarily off the shelf ready for us. We spent a lot of time building these horrible JSONs that tracked where our model artifacts were and what data we used for things. Say, if we can get orchestration, then model management sorted, everything else you can do in the first instance with quite a vanilla Python, it&#8217;s my feeling. Then you can build on that as much as you need to.</p>\n\n\n\n<h2>Solving the buying vs. building dilemma</h2>\n\n\n\n<p><strong>Stephen: </strong>I think the reality of most teams is that maybe they hire one data scientist or an ML engineer to come and beat the full system. We have this argument in the community that platforms are not enough. You have platforms that claim to be able to solve the end-to-end problem, and so forth, and then you find that inflexibility. Do you have any argument against buying platforms as a system or something, especially for early-stage teams?</p>\n\n\n\n<p><strong>Andy:</strong> I love this question because it&#8217;s a perennial debate. I think it relates to what I said about the shiny new tools and the fixation we sometimes have.&nbsp;</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>I think tools, platforms, SaaS, PaaS, all of these solutions will only help if you know what you&#8217;re doing in the first place. If you subscribe to a silver bullet methodology where you think, &#8220;You know what, I buy this thing, I spend a million dollars,&#8221; or I&#8217;m a much smaller company, few thousand dollars or whatever, &#8220;I&#8217;m going to buy this tool that&#8217;s going to solve things.&#8221; You&#8217;ll just find that you&#8217;re facing the same challenges, but now in front of a shiny UI, and you&#8217;re burning through lots of cash.</em></strong></p></blockquote>\n\n\n\n<p>Back to the point, we mentioned before, I would much rather teams go through building up what they can themselves, the exception maybe being the orchestration piece and model management piece. There are lots of open-source tools that do this. There are lots of open-source tools that are able to help you with those things. So, I would say, see what you can get with open-source tooling. There&#8217;s also great open-source tooling for generally building ML and MLOps pipelines as well.</p>\n\n\n\n<p>If you can get to a stage where you&#8217;re like, &#8220;Actually, there&#8217;s an acute need for something else,&#8221; then invest the money. If you put the cart before the horse, as it were, you&#8217;ll just burn a lot of money and be very disappointed because you&#8217;ve not solved the fundamental problem. The fundamental problems are often more process-specific and architecture-design-specific, but not really what&#8217;s the best tool. You can always spend more money on tools, but if you don&#8217;t stick them together properly, I think you&#8217;re going to run into trouble.</p>\n\n\n\n<h2>How to implement an MLOps system well while being an early-stage team?</h2>\n\n\n\n<p><strong>Stephen: </strong>Yes, and speaking about the processes, what are some practices that you think would enable these early-stage teams to think about these systems properly and properly implement them?</p>\n\n\n\n<p>I watched one of <a href=\"https://www.youtube.com/watch?v=l1uhE9fEfo8&ab_channel=MLOps.community\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">your podcasts with the MLOps community</a>, and there, you talked about the chasm between idea and production, and in the middle there, you have this bridge, this gap that needs to be filled. I think beyond just the tool which you&#8217;ve spoken about, there are also some practices that can make things work. Some, like culture, you can view as a team of try thinking the more systems properly. What are those practices that you think the teams should start thinking about at the early stage when thinking about systems?</p>\n\n\n\n<p><strong>Andy: </strong>I&#8217;m glad someone watched that podcast. The thing that I often come back to is what I call the four P&#8217;s:</p>\n\n\n<div class=\"case-study-numbered-list\">\n    <h2></h2>\n    <ul>\n                    <li><span>1</span>people, <br />\n</li>\n                    <li><span>2</span>process,</li>\n                    <li><span>3</span>pattern, <br />\n</li>\n                    <li><span>4</span>products. </li>\n            </ul>\n</div>\n\n\n\n<p>Just covering them very quickly. I think you can never be too early thinking about this.&nbsp;</p>\n\n\n\n<p>On the <strong>people </strong>front, and we alluded to this earlier, we should always avoid thinking there&#8217;s a unicorn person out there who can do everything we need. We need hybrid teams, blended teams that have very complementary capabilities. You can do that with any skill. As long as you have two or even three people, you can still get that blend of to have the software, engineering knowledge, the ML knowledge, and then something maybe in the middle, or a translation layer towards the business, et cetera. People are such an important part of that. Who are the people you have, do they complement each other and work well together?</p>\n\n\n\n<p><strong>Product </strong>is about just really what this whole podcast is about, ensuring you understand that you&#8217;re building intense systems that eventually impact customers, and how are you going to think about that differently from just a normal piece of prototype code? Well, you understand the products, people expect them to work. That implies that you should be testing a lot. Do you have testing processes in place? Are you already thinking about unit testing, integration testing, or regression testing? If you&#8217;re not, start thinking about them because that&#8217;s the only way to build scalable and usable products.</p>\n\n\n\n<p>Then also, think about the user experience. The user, in this case, might not be an actual person but maybe another system. There they have a clear interface and clear contract to consume from. It could be something as simple as, does the other system have access to the same S3 bucket, or is done by results? That&#8217;s the sort of thing you sometimes have to think about in that product space, but then to your particular question around process and patterns, which I think is really linked.</p>\n\n\n\n<p><strong>Pattern,</strong> for me, is about, whether you are using really well-known architecture patterns, or at least ones that make sense, using microservice architectures, or using architectures that are already there and used by some of the best companies out there?&nbsp;</p>\n\n\n\n<p>Then on the <strong>process </strong>side, do you have clearer development guardrails? Do you know how to develop high-quality codes? Do you at least know how you&#8217;ll improve the quality of your code? Can you do anything you can to automate? The earlier you can embed CI/CD practices. I think anything, <a href=\"https://github.com/features/actions\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">GitHub actions</a> are a great example, <a href=\"https://www.jenkins.io/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Jen</a>kins, and all of these other tools for having CI/CD servers in place means that that process can go faster and faster.</p>\n\n\n\n<p>I think the earlier you think about all of these things together, you&#8217;ll start doing the right things that then put you in place for the future. When you&#8217;re challenged more on issues like massive scale structure of things like account security, networking, et cetera, this can come a bit later.&nbsp;</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>Those four P&#8217;s for me is fundamental that you should always think about for any team really, but it’s especially pertinent into ML and MLOps teams, I think, that people, pattern and process and product viewpoints.</em></strong></p></blockquote>\n\n\n\n<h2>Skill set required for building an MLOps system</h2>\n\n\n\n<p><strong>Stephen: </strong>I think if you speak to teams about this, most teams would agree that it&#8217;s really hard, just linking these four P&#8217;s together and just trying to coordinate around the people, the process, the product, and the pattern itself. How do you think that teams can appropriately achieve this? A good follow-up question as well to that is, who should I hire for us to build up that system, my first MLOps system? Should I hire a data scientist or an MLOps engineer or an ML engineer or stuff like that?</p>\n\n\n\n<p><strong>Andy: </strong>Good. In terms of who you should hire first, the challenges there are, it’s a trick question. If you&#8217;re hiring one person, you&#8217;re already in unicorn thinking, which I think we should avoid. If you&#8217;re hiring two people, which I would always recommend, a minimum viable team, at least, I think you need <strong>someone with a good data engineering mindset</strong>. As I mentioned, data is super important.</p>\n\n\n\n<p>Then it could be a data scientist, ML engineer, MLOps engineer, it doesn&#8217;t matter what they call themselves, but I think <strong>someone that complements that data knowledge quite strongly with the knowledge of pipelining</strong>, for example. How do you build ML pipelines? How do you build MLOps pipelines? By which we mean all the things we mentioned before, something that runs into some monitoring, something that checks what model version to build, but that will require a few basic things.</p>\n\n\n\n<p>They&#8217;ll need to understand models and maybe even build those models or use the off-the-shelf model. Even if it&#8217;s an ML engineer, but they&#8217;re reusing hugging face models, that&#8217;s absolutely fine as well, but there needs to be someone who understands models because how else can you build the monitoring logic behind that and understand what you&#8217;re doing with model artifact management.</p>\n\n\n\n<p>They also need to have enough software engineering capability that they can start building these systems that are robust and reliable. That&#8217;s the whole point of Ops and MLOps, is, you&#8217;re not just doing a flash in the pan, you&#8217;re building something that has to work again and again and again. You really need that software engineering capability there as well. I think, how can they coordinate? That is, it&#8217;s always a challenge, but I think splitting it out into those four P&#8217;s helps me rationalize it often and always break down the problem.</p>\n\n\n\n<p>From the people side, we&#8217;ve just discussed that we&#8217;ve got the complementary capabilities, the cover-off, the key things, and patterns. Again, leverage what&#8217;s out there, don&#8217;t reinvent the wheels. AWS has their architecture LENS framework, I think it&#8217;s called<a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses.html\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"> AWS LENS</a>, where they publish a lot of really well-detailed architectures. Even if you&#8217;re not on AWS, you can at least see them and see the different components and how they interact together. That ticks off patterns.</p>\n\n\n\n<p>Product is really the end goal, constantly iterating towards the business goal, but just always thinking about reliability and robustness, not just breach testing. Then, in terms of process, it&#8217;s back to that point of it starting small and iterating. Go through the first cycle, constantly iterate working, and you improve. A lot of those problems will not be new problems, there will be problems solved in software engineering. Leverage the software development and software engineering ecosystem as well.</p>\n\n\n\n<h2>Is simple Ops the right first step?</h2>\n\n\n\n<p><strong>Stephen: </strong>This is something that is quite popular in the MLOps community, and the thing is to keep the first model simple, or you should try to get the infrastructure right, especially when you&#8217;re trying to deploy your first model or just deploy your first iteration pushing it out there. Can you elaborate on something like this, this particular statement?</p>\n\n\n\n<p><strong>Andy: </strong>Yes, definitely. I 100% agree with this, we should always start simple Ops. The key difference that I maybe alluded to earlier between just doing some research-based data science and machine learning versus building a product with MLOps at its core is that you are thinking about it as something that has to work again and again and again.</p>\n\n\n\n<p>Your <strong>simple sklearn model</strong> that does some regression, you could take one of them, the Boston housing data set, that&#8217;s a very simple thing, lots of tutorials on that. Building that ML model is really easy. What is difficult is if you start saying something like this can be particular to the business use case, but how am I going to serve a request to score with that across 50,000 or 100,000 users? How am I going to run that, maybe as a batch or maybe as a live microservice that can be requested by API?&nbsp;</p>\n\n\n\n<div id=\"blog-cta-intext-block_ca33202763b86fbf1ba2333bbb68e79c\" class=\"blog-cta-intext\">\n  <h3 class=\"blog-cta-intext__title\">May be useful</h3>\n  <div class=\"blog-cta-intext__content\"><p>Check how you can <a href=\"https://docs.neptune.ai/integrations/sklearn/\" target=\"_blank\" rel=\"noopener\">track and analyze sklearn model training</a>.</p>\n</div>\n  </div>\n\n\n<p>I think all of that may be flavored by the business you&#8217;re operating in.</p>\n\n\n<div class=\"custom-point-list\">\n<ol><li>If you know you&#8217;re supporting a customer-facing web application, you&#8217;re maybe going to naturally go down the REST API microservices route.</li><li>If you&#8217;re servicing a very large organization, as a lot of overnight processes, like we often do, you&#8217;re maybe thinking more in a batch way and thinking about using far more scalable technologies like PySpark, et cetera.&nbsp;</li></ol>\n</div>\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>Just mapping out what your business challenges are going to be then automatically starts helping you make architecture and design decisions.</em></strong></p></blockquote>\n\n\n\n<p>Then the model piece becomes, again, something that you can always iterate on, but fundamentally, it&#8217;s probably relatively simple compared to these other choices you&#8217;ve had to make. Then you start thinking, &#8220;Right, how do I set that up in a minimum viable product fashion? How do I stick it all together back to the orchestrator and make sure that it&#8217;s all running at the right time, et cetera?&#8221; Definitely, I agree with that, and I think always draw back to the business problem you&#8217;re trying to solve.</p>\n\n\n\n<p>That also drives your operational considerations and what MLOps looks like for you.&nbsp;</p>\n\n\n<div class=\"custom-point-list\">\n<ol><li>Again, if you&#8217;re running a big batch process every night, do you really need some sort of complicated live streaming of metrics for your model? No, that&#8217;s overkill. You maybe just need, again, a nightly report that runs just after your batch production.&nbsp;</li><li>If you&#8217;re doing a very scalable, customer-facing application, if you do need some more real-time metrics, and you maybe also need to resurrect and be aware of some of the metrics or just classic from DevOps, who&#8217;s the memory, the CPU utilization, all of these things, and not just what&#8217;s the recall of my model.</li></ol>\n</div>\n\n\n<p>Then another challenge that, this just came to mind, I think it&#8217;s important as well, that comes from the business problem is, you&#8217;ll also be able to put constraints on those processes in a different way. Something I&#8217;ve come up across quite a lot is the business once they understand what you&#8217;re trying to do with MLOps will often say, &#8220;Right. I want to know how the model&#8217;s doing every single day.&#8221; I&#8217;ll say, &#8220;Right. How often can I get the truth data for this model,&#8221; and they&#8217;ll say every month. Automatically, there&#8217;s a disconnect between the business, the technology, and how it&#8217;s all implemented together. Just always drawing back to the business problem really helps hone that in a bit and understand what choices you need to make.</p>\n\n\n\n<h2>Busting myths about MLOps systems</h2>\n\n\n\n<p><strong>Stephen:</strong> Curious, are there any misconceptions in the MLOps community about MLOps systems that you don&#8217;t agree with? Let&#8217;s trash it out here.&nbsp;</p>\n\n\n\n<p><strong>Andy: </strong>Oh, that I don&#8217;t agree with? I think the tooling obsession annoys me a bit. I think we do forget as a community the importance of just good design, good processes, and good software development techniques. We often get obsessed about the latest demos and the latest big announcements, and I do it as well. I&#8217;ll sign up for about 10 webinars that I&#8217;ll never attend on all these different technologies because there&#8217;s a new release or a new version, but I think we often forget just how relatively simple the problem we&#8217;re trying to solve in MLOps is.</p>\n\n\n\n<p>To my mind, there are only a few different pipelines you&#8217;re building,&nbsp;</p>\n\n\n<div class=\"case-study-numbered-list\">\n    <h2></h2>\n    <ul>\n                    <li><span>1</span>You&#8217;re building your training pipeline to reach in the model. <br />\n</li>\n                    <li><span>2</span>You&#8217;re building the inference pipeline to bring out the results. <br />\n</li>\n                    <li><span>3</span>And then you&#8217;re building an MLOps type link to do the other bits. </li>\n            </ul>\n</div>\n\n\n\n<p>That&#8217;s it fundamentally. I think I do sometimes dislike how we will oversell the importance of specific tool choices.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>You should very much be comfortable swapping out tools as you progress through your journey, as they solve slightly different flavors of the problem.</em></strong></p></blockquote>\n\n\n\n<p>Your model management software starts with the open-source version, then you say, &#8220;Actually, I want the benefit of being supported at an enterprise level, so I&#8217;ll switch to a paid model with this provider,&#8221; but it should not fundamentally change the design you have. If your design is tightly coupled to your tool choice, you&#8217;ve made a massive error I think, because it should really be a swap out. You&#8217;re just doing a different API call, or you&#8217;re just writing to a different location.</p>\n\n\n\n<p>You shouldn&#8217;t be so tied to a product that you suffer from lock-in, which is one of the other dangers you can have as well. Either with cloud providers or specific tools, you can just become so wedded to it that when you have to change because the companies went bust or the tool&#8217;s no longer available because of major upgrades, you have to fix so much technical depth.&nbsp;</p>\n\n\n\n<p>I think that the big bugbear for me is the obsession with tooling. I am maybe being too harsh, there are a lot of people I know who work in the community on really amazing tools, and there are amazing tools out there, especially in the open-source community.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>I just think as practitioners trying to build these solutions for organizations, we shouldn&#8217;t just think there&#8217;s a silver bullet out there. We really need to bring it back to basics while the processes we need to develop how we&#8217;re making sure they&#8217;re robust and monitored, then we have good metrics for their performance, and then just work against that.</em></strong></p></blockquote>\n\n\n\n<h2>Role of MLOps in scaling a system</h2>\n\n\n\n<p><strong>Stephen: </strong>We have a question from the MLOps Community. This person says, &#8220;I&#8217;m working towards building a restaurant<strong> recommendation system</strong> that provides the restaurant&#8217;s business similarity between two people&#8217;s tastes. I&#8217;m planning to deploy it as a web app. How should I proceed towards this, knowing that I&#8217;ll be scaling this to 50 or more users? Then how does MLOps come into this particular scenario?&#8221;</p>\n\n\n\n<p><strong>Andy: </strong>It sounds like this person&#8217;s thinking of a very particular use case which is great for bringing this to life. If you&#8217;re building a web application that&#8217;s going to have 50 or 50,000 users, and you have to run this ML process in the background, this recommendation engine. What&#8217;s important to my mind at the beginning is not putting all that together in your head because you&#8217;ll be a bit overwhelmed, and you&#8217;ll probably try and solve it all at the one time and create some spaghetti code or something that&#8217;s not very modular.</p>\n\n\n\n<div id=\"blog-cta-intext-block_c3c2395fa6512dd9a6aca3bde60feb94\" class=\"blog-cta-intext\">\n  <h3 class=\"blog-cta-intext__title\">Read also </h3>\n  <div class=\"blog-cta-intext__content\"><p><img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f449.png\" alt=\"👉\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <a href=\"/blog/recommender-systems-lessons-from-building-and-deployment\" target=\"_blank\" rel=\"noopener\">Recommender Systems: Lessons From Building and Deployment</a></p>\n<p><img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f449.png\" alt=\"👉\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <a href=\"/blog/how-to-test-recommender-system\" target=\"_blank\" rel=\"noopener\">How to Test a Recommender System</a></p>\n</div>\n  </div>\n\n\n<p>If you separate out all those pieces, you can start breaking down the problem and understanding how to solve each one. The front end, right, how you&#8217;re going to scale the front end to 50,000 users? This is done all the time, so look online and see how that&#8217;s done for general web applications, that&#8217;s not something new. You have the frontend system, you have the application database that stores the right data needed to run the actual web interface. Think about that user experience, get good UX design in place if possible. That&#8217;s a solved problem, but that&#8217;s the first piece, that&#8217;s only the entry point to the rest of the solution.&nbsp;</p>\n\n\n\n<p>You then have to run your recommendation engine updates, your retraining, your re-running and I&#8217;m not a recommendation engine expert at all. I&#8217;ll just assume that&#8217;s a black box in a sense. You fundamentally have this process that you need to run a very large scale that can often be very computationally intense. Put that on one side.&nbsp;</p>\n\n\n<div class=\"custom-point-list\">\n<ul><li>How do you solve that problem, and how often are you going to run those updates?</li><li>Do you have the infrastructure you need in place?</li><li>Do you need to think about things like auto-scaling for particularly chunky or compute updates et cetera?&nbsp;</li><li>Do you need to think about moving to the cloud in order to service these questions?</li></ul>\n</div>\n\n\n<p>I think you think about that recommendation engine update as its own process and separate that as well.&nbsp;</p>\n\n\n\n<p>You then have the interaction between the two. This is something I love talking about is interfaces and contracts.&nbsp;</p>\n\n\n<div class=\"custom-point-list\">\n<ul><li>What&#8217;s the contract going to be between your frontend and your recommendation engine?&nbsp;</li><li>Is it a direct API call to some basic Flask app or something else that just surfaces the results of the recommendation engine?&nbsp;</li><li>Is it going to be something a bit more complex?</li><li>Is it actually going to be that a recommendation engine can work in a batch offline modes and the web application just needs to pick up the results from some S3 bucket or other location?</li></ul>\n</div>\n\n\n<p>Then where MLOps comes into really is making sure all that hangs together from the ML point of view. The recommendation engine,&nbsp;</p>\n\n\n<div class=\"custom-point-list\">\n<ul><li>How do you know that&#8217;s performant?&nbsp;</li><li>How are you going to check in on the status of that?&nbsp;</li><li>Then what actions are you going to take based on it – that&#8217;s your model monitoring process?&nbsp;</li><li>How often are you going to run that as well if it&#8217;s a nightly batch process?&nbsp;</li><li>Do you run the MLOps pipeline every night as well to check the monitoring performance or do you run that less frequently?&nbsp;</li><li>How do you manage the actual versions of the recommendation engine as well because you might want to do rollbacks if something goes wrong? You start thinking about that as well.</li></ul>\n</div>\n\n\n<p>Then finally, I think in this scenario, orchestration comes in through again that decision about it is a dynamic request that triggers an ML process. In which case, you&#8217;re thinking about event-driven architectures things like <a href=\"https://kafka.apache.org/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Kafka </a>and <a href=\"https://cloud.google.com/pubsub/architecture#:~:text=Pub%2FSub%20is%20divided%20into,servers%20on%20the%20data%20plane.\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Pub/Sub </a>architectures. Is it actually again it&#8217;s really about retrieving results on the back of a user request? It&#8217;s on a batch schedule which case you could do a cron job or some other scheduler or go back to Apache Airflow, which I mentioned earlier.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>I think the key thing is breaking it down into those constituent parts and then working out how you solve each of those problems individually. Then which are the most pressing problems you&#8217;re not sure how to solve go and get the results and help you need to understand that.</em></strong>&nbsp;</p></blockquote>\n\n\n\n<p>For me, the bit that I would be less comfortable with is the frontend. I have no UX skills, and no understanding of how to build a good front end at all, so I would need help to do that. The other pieces, I&#8217;d probably know. MLOps is really about managing that back end and just making sure it&#8217;s monitored, looked after, and then retrained appropriately when necessary.</p>\n\n\n\n<h2>Building a strong foundation for future scalability</h2>\n\n\n\n<p><strong>Stephen: </strong>Yes, and following up to that particular question, I think one of the challenges when building your first ML system, for example, is that when you want to scale, it literally just breaks. Especially if you don&#8217;t take that scale into account, your system just breaks apart. Maybe you&#8217;re running a cron job and a Python script, and then you don&#8217;t know how to handle 50k requests, 100k requests because all of a sudden, the business has grown. How do you start thinking about scalability at the onset when building a good first MLOps system?</p>\n\n\n\n<p><strong>Andy:</strong> There are some choices you can make earlier to help with these things. If your problem lends you to, say a batch process type architecture, or at least some element of batch processing, doing things like building everything around PySpark, for example, means that scalability is really a question of how much infrastructure you&#8217;re willing to pay for.</p>\n\n\n\n<p>I&#8217;ll come back to AWS just because it&#8217;s the one I&#8217;m most familiar with, but it applies to the other cloud providers. If I use their own cloud smart clusters, the <a href=\"https://aws.amazon.com/emr/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Elastic Map Reduce</a> clusters, you can start putting in things like auto-scaling policies and scaling up that infrastructure as and when you need it, and the fundamentals of your code don&#8217;t need to change. I think that&#8217;s a decision you can make early on because I can run PySpark on my laptop, it&#8217;s probably not much use, it&#8217;s a very small cluster, but I can also run it on a 10,000-node cluster if I have the capability to pay for it, so even though choices like that.</p>\n\n\n\n<p>If you think more about the microservice architecture we were talking a little bit about before, you start thinking about things like load balancers.&nbsp;</p>\n\n\n<div class=\"custom-point-list\">\n<ul><li>Do you start bringing in load balancers?&nbsp;</li><li>Do you have the expertise for that?&nbsp;</li><li>Do you understand how to write this traffic appropriately, the networking, and the questions that come from that?&nbsp;</li><li>Then are you able to spawn up the processes you need to maybe run your ML model?&nbsp;</li></ul>\n</div>\n\n\n<p>Then I would start leveraging things like maybe cloud functions or Lambda as it is in AWS, so very lightweight pieces of code that you can run in an extremely scalable fashion where you don&#8217;t have to think about that underlying infrastructure.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>I think in general the cloud just helps with scalability, you pay a little bit of a premium per unit but you just sleep better at night because you know scaling is very much easier there. I would always recommend that you at least explore and understand the options available in cloud. Then if you are building in a more on-prem or local way, you at least do know whether you know you can port up to clouds.</em></strong></p></blockquote>\n\n\n\n<p>A great example there is PySpark. Even if I&#8217;m running on my laptop but building everything in PySpark porting it up to use a very scalable cloud service later is not a big deal. Whereas it would be a big deal if I had written everything in vanilla Python and serial Python, and then I had to refactor for scalability. There are some choices and thoughts you can make early in the process that should help, I think.</p>\n\n\n\n<h2>Timeline for the entire project and managing expectations</h2>\n\n\n\n<p><strong>Sabine: </strong>We have a question in chat from Penny Johnson. Penny is asking, &#8220;Can you give an insight into actual timescales in the field from model ideation to solution delivery, monitoring cycles, and improvements? Also, how do you manage the business expectations for these?&#8221;</p>\n\n\n\n<p><strong>Andy: </strong>Oh, great question. This is what my job is. I was worried about this. I&#8217;ve actually just finished a webinar on the work we&#8217;ve done on decreasing our time to value in that way, so I can mention some of the figures and things now because it&#8217;s in the public domain.&nbsp;</p>\n\n\n\n<p>Typically for us, we have a finding before we adopt some of the basic practices on tooling, one, on the cloud. We were roughly a year to get a model from ideation to production. Now, that is long, and the big factor there for us was being in financial services, there&#8217;s a lot of governance and all the things we have to go through.</p>\n\n\n\n<p>In my previous job, we were delivering a model every quarter, roughly, and I would say that&#8217;s more feasible, for every few months taking something through ideation to production. If you&#8217;re talking about iterative improvements on models rather than a full, which I think, Penny, you&#8217;re asking about the whiteboard through to a solution, iterative improvements, I think, can be a sprint or sub-sprint level if you&#8217;ve got good CI/CD practices in place.</p>\n\n\n\n<p>We&#8217;ve now been able in NatWest to get that down to around three months, that once-a-quarter level, for any particular team because we invested time, energy, and effort in building out an MLOps platform that used SageMaker and surrounding ecosystems. That was a case of harking back to what I mentioned before. We understood how to do the processes well first, then we understood the fundamentals and what good design looked like. We upgraded everything and were able to refactor all of the internal processes as well for that.</p>\n\n\n\n<p>I&#8217;d say, for me, that a once-a-quarter piece is reasonable for most scaled organizations. The scale factor comes in for larger organizations because they can do a lot in parallel, so, for a smaller company, once a quarter means literally one ML model for the company, for a huge organization like NatWest, it might mean hundreds per quarter. MLOps building, et cetera, should just be part of that process, so as long as you&#8217;ve got the understanding, the design, the architecture in place, you should be able to also incorporate that into that once-a-quarter cycle. That&#8217;s just my view. I think there&#8217;ll be a million different views in this across the piece.</p>\n\n\n\n<p>Managing expectations is the fun part, so I think you&#8217;ve got a few challenges you need to overcome.&nbsp;</p>\n\n\n<div class=\"custom-point-list\">\n<ol><li>One is really making sure that your stakeholders, your customers, your colleagues understand the benefits of machine learning in the first place, but they also understand why MLOps is important. It&#8217;s one thing to solve a problem using a machine learning algorithm.&nbsp;</li><li>The next thing is to make sure you can solve it every day for the rest of the time, and that&#8217;s where the MLOps piece comes in.</li></ol>\n</div>\n\n\n<p>You need to win hearts and minds so that they understand why you&#8217;re investing time, energy, effort, and money into developing these extra bits of the solution, the monitoring capabilities, the model management pieces, et cetera. I think you really need to do that. Then they understand why you&#8217;re investing all of that in those extra pieces, but again, it comes down to just simplifying, making sure they understand the basics of what you&#8217;re doing and you&#8217;re constantly updating them and making sure they understand when you&#8217;re running into issues and where the bottlenecks are. That means you can then iterate on that for your next set of projects.</p>\n\n\n\n<p>I&#8217;ve had to do that many a time where we thought we&#8217;d deliver in three months, and then it&#8217;s taken a lot longer. As long as you&#8217;re clearly communicating with your stakeholders, they&#8217;ll understand that those expectations are shifting, and they&#8217;ll buy into that, I think. That&#8217;s a really great question. I think it&#8217;s one of the most important challenges is stakeholder management.</p>\n\n\n\n<h2>Fitting retraining scenario in an MLOps system</h2>\n\n\n\n<p><strong>Sabine: </strong>Yes, for sure. It&#8217;s not just about the tech stack, but sometimes, it&#8217;s about the people and communications and all of that. We have another question from Nabil Belgasmi. &#8220;If we want our ML models to be retrained automatically on new data, what is the impact of this requirement on a simple MLOps workflow?&#8221;</p>\n\n\n\n<p><strong>Andy:&nbsp;</strong></p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p><strong><em>If you want it trained on new data every single time, first of all, you could challenge that assumption, &#8220;Do I really need it trained on new data every time, or do I just need it trained when there&#8217;s a shift in the distribution of the data or when there&#8217;s a drop in performance”.</em></strong></p></blockquote>\n\n\n\n<p>Let&#8217;s assume the build for your question we&#8217;ve settled on when new data is in we want to train the model. The downstream impacts on your MLOps processes and system are going to be that, okay, retrain the model, but what do I do with it? What is your process for determining if it&#8217;s the actual model that goes through into production?</p>\n\n\n\n<p>What you don&#8217;t want to do is just automatically push it to production. That&#8217;s the first got you, because it could be retrained, and it&#8217;s really bad, terrible. It&#8217;s basically absolute garbage. You push it through production, everything goes down, so you need some mechanism to view the performance of that newly trained model, not just the one already in production. That&#8217;s again where your model management and other tools come in. Can you try the appropriate metadata and the metrics for the training run?</p>\n\n\n\n<p>I think what&#8217;s important as well, if you are thinking about pushing a specific model into production, is, &#8220;Have you actually simulated production-like conditions? Do you have a test environment setup that runs in the same way as your production model?&#8221;</p>\n\n\n\n<p>Actually, I missed this earlier from your question, Stephen, but I&#8217;ve seen a lot of developer models with a particular set of assumptions. They have five years of data, for example. They&#8217;ve done their training, test, and validation split. Then they think it&#8217;s going to work in production, but actually, in production, you get a thousand new records every single day, and they don&#8217;t know what the fluctuation of behavior is going to be like. I think you need to make sure that if going to Nabil, retraining, and then pushing a model into production, you have some testing that&#8217;s available that shows how it will work on production-like data coming in at the cadence and the frequency that it will.</p>\n\n\n\n<p>Then, underpinning all of that, back to the process point earlier, is you need a good MLOps process in place to say, &#8220;That&#8217;s actually okay. That fits within our operational risk profiles. That&#8217;s on the governance control.&#8221; Whatever the mechanism is. You need basically a way to say, &#8220;Push the button. Push it into production.&#8221; I would say all of that has to be factored into what your MLOps system looks like and is capable of doing.</p>\n\n\n\n<p>It&#8217;s a really good question. A lot of people come up against this very quickly, and I think the most important pieces there are operating or testing in some sort of production-like environment and then having a good process for saying, &#8220;Everything&#8217;s okay. I can now push it into production.&#8221; Things like blue-green deployments, as you might sometimes hear about if you give that a google, it talks about how you can run basically the two solutions in parallel, but one&#8217;s in an air-gapped environment. Then, once you&#8217;re happy, just swap them around seamlessly. Building in processes like that is often a really good MLOps practice as well.</p>\n\n\n\n<h2>Other questions</h2>\n\n\n\n<p><strong>Stephen: </strong>We have another question from the MLOps community. This time it&#8217;s from Jeremy.</p>\n\n\n\n<p>Jeremy says he&#8217;s walking on with a very early-stage startup with a single model and pretty low inference volume. What&#8217;s the best training work to put in place? In the old days, he&#8217;d wrap the model in a Flask API, make an image, push it to a K-cluster as part of a CI/CD process. Now, he&#8217;d have an Airflow script as well that will daily retrain the model with new data from production. He would do regression testing and then trigger the deployment process. He&#8217;d have a data warehouse where he keeps inference data to be able to run the performance queries and stuff like that. This seems like a lot for him.&nbsp;</p>\n\n\n\n<p>He&#8217;s thinking, &#8220;What&#8217;s the easiest way to do this today?&#8221; Is there something that consolidates this entire- his very, very modular paths? What&#8217;s your opinion?</p>\n\n\n\n<p><strong>Andy: </strong>The first thing I&#8217;m thinking is that Jeremy seems to know what he&#8217;s talking about, which is good. I think this perfectly embodies what I mentioned earlier about learning the basics and the fundamentals first. What Jeremy&#8217;s mapped out there is all of the correct processes and the correct handovers, so you&#8217;ve got the model. How is that hosting, and what infrastructures are running on? How is that all being updated? That&#8217;s all the <strong>Flask</strong>, <a href=\"https://kubernetes.io/docs/concepts/overview/components/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"><strong>K</strong></a>AS, and the CI/CD. Then, starting to think about Airflow, he mentioned all the right words around regression testing, et cetera.</p>\n\n\n\n<p>This question then is about how you then simplify and improve that moving forward. One thing I would say is look at the tooling out there to see what can take some of those pain points away for you. If you&#8217;re on particularly low inference volumes, are you maybe able to do that as a matching process that&#8217;s easily scheduled? Are you also overcomplicating given tools out there, how do the pipelines all stick together? I don&#8217;t think he mentioned that too much, but a great example is SageMaker.</p>\n\n\n\n<p><a href=\"https://aws.amazon.com/sagemaker/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">AWS SageMaker</a> is their MLOps tool, but it also provides really good, strong, opinionated guidance on writing good pipelines. An open-source thing that does a very similar thing is <a href=\"https://zenml.io/home\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">ZenML</a>. There&#8217;s a lot of tooling out there that may be able to simplify some of the development activities he&#8217;s doing.&nbsp;</p>\n\n\n\n<p>Then, in terms of the <a href=\"https://kubernetes.io/docs/concepts/overview/components/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">KAS cluster</a>, which is really about the hosting, you can start thinking again about if you were on SageMaker, for example, which takes care of the hosting and the underlying infrastructure for you. You can put in scaling policies.</p>\n\n\n\n<p>There are solutions out there that take away some of that pain for you, but it sounds like he&#8217;s got all the right pieces in place, it&#8217;s just about maybe now moving onto that question of what particular bit I should invest the time and effort in optimizing.</p>\n\n\n\n<p>I&#8217;m not sure Jeremy&#8217;s maybe not on, but I&#8217;m not sure where the particular pain point is. If it&#8217;s really scaling out that Flask API, maybe moving away from a Flask API, SageMaker endpoint, or some other tooling that provides a similar way to host the model is a good idea. Could you do it all in a cloud function or an AWS Lambda? Actually, it keeps all the rest of the pieces, but actually, you&#8217;ve got really vast scalability because it&#8217;s a very simple sklearnmodel. You could host that in AWS Lambda very easily.</p>\n\n\n\n<p>I think he has to be strategic about what pieces he solves, but there are a lot of tools and capabilities out there that will help. Now that he&#8217;s got that fundamental design piece in place. Now I&#8217;m okay with tooling, I know before I poo-pooed it, but I think he&#8217;s got the fundamental design in place. You can now iterate and find open-source and paid-for tooling that will solve some of these problems.</p>\n\n\n\n<p><strong>Stephen: </strong>Right, and we have another question from the MLOps community. This time from Fatima, and she asks, &#8220;What are the challenges they are going to face if they want to shift an SME, a small and medium scale enterprise, from Level 0 MLOps that&#8217;s their typical Google reference, Level 0 MLOps to Level say 1 or 2 MLOps of end-to-end automation for example and stuff like that? They have a very basic system which works manually, but then they want to move things to automate the end-to-end pipeline.”</p>\n\n\n\n<p><strong>Andy: </strong>I like this because I reference the same maturity model in my job, so that&#8217;s good. A big piece of that is inherent, and the question is automation versus the manual piece, as you put it, Stephen. For me, that is a question of orchestration and CI/CD practices. How do you orchestrate the different processes you&#8217;re going to need? I&#8217;m assuming you&#8217;ve gone through level zero and you&#8217;ve done that work we mentioned earlier where you&#8217;ve got. You&#8217;ve gone through the processes end to end the first time, which maybe similar to Jeremy&#8217;s question. You know how to solve all of these in principle, what you&#8217;re now moving to is to do it in a really scalable fashion.</p>\n\n\n\n<p>For it to be automated, it needs to all be orchestrated in a way that&#8217;s very safe if a component fails and also one that you can monitor quite successfully. All of that needs to come together. Then I think back to Nabil&#8217;s question quite nicely earlier, did you start thinking about what&#8217;s triggering the automated process, and how are you doing that triggering? Is it off of a Kafka topic, or is it off of drift in your monitoring metrics? Is it still a manual process? Because you could automate a lot of stuff but still have a manual person pulling the trigger and pushing the button at the beginning.</p>\n\n\n\n<p>Sometimes that&#8217;s good if you have specific requirements for risk and control governance behaviors like we do in financial services. Sometimes it&#8217;s important to have a human in that process. It&#8217;s not completely automated, but it&#8217;s pretty much, I&#8217;m happy, goal, and then everything&#8217;s automated.</p>\n\n\n\n<p>I think the key things that will move the needle for you, Fatima are those orchestration questions, the triggering questions, and then the CI/CD questions as well that will help you move towards a more continuous and automated way of iterating your solution.</p>\n\n\n\n<p><strong>Stephen: </strong>Cool, and we have one final question from the community, and this person asks, &#8220;Should I worry about the reliability of my MLOps system when building it at an early stage? Since my use case is mission critical, I am currently building an ML product for the healthcare industry.&#8221;</p>\n\n\n\n<p><strong>Andy: </strong>Yes, so should you care about the reliability of your MLOps system? Absolutely because if you don&#8217;t have a reliable MLOps system, how do you know you have a reliable ML system full stop?&nbsp;</p>\n\n\n\n<p>I think in a mission-critical scenario like this, and I&#8217;ve not worked in healthcare, but I&#8217;ve worked for a distributed energy provider before where we were building models that would detect if a generator would catch fire, so I&#8217;d call that mission-critical as well. What we found was that, again, pulling it back to the very simplest, most basic, and robust things we wanted to track really helped because then what you can do is work very closely with the people with the domain knowledge and your business colleagues to really understand what are the one or two metrics that we absolutely must track.</p>\n\n\n\n<p>I think that helps with reliability because you&#8217;re not going to build a super complex MLOps system, right? You&#8217;re not going to build something with 10 million lines of code that&#8217;s doing 100,000 different metrics. You&#8217;re going to just focus on the one or two that&#8217;s absolutely critical to know the system is performing and is doing things in the right way.&nbsp;</p>\n\n\n\n<p>Then I think you need to make sure that you&#8217;re checking in on that MLOps system as well. The MLOps system is there to monitor your ML system, but how do you get a view of how everything is performing? To me, that comes naturally from just having an MLOps system because if you&#8217;re going to look at the results of your MLOps process either in a dashboard or some other database that you&#8217;re querying, just the act of doing that is you checking that your MLOps system is working.</p>\n\n\n\n<p>I think you should worry about the reliability of it, but the main thing that will help you reduce the worry is simplifying it down to the key metrics, the KPIs just building the minimum viable product that does that robustly, and then testing the hell out of it. Make sure you test it until you&#8217;ve broken it in a million different ways, and you&#8217;re very happy that this small minimum viable product will not break. Then you&#8217;re good to go, I think.</p>\n\n\n\n<p><strong>Sabine: </strong>It&#8217;s time to wrap things up. I&#8217;m sure there would have been a lot more, we would have loved to pick Andy&#8217;s brain about. Thank you so much, Andy, you really demystified MLOps, at least for me, so thanks very much.</p>\n\n\n\n<p>Before we wrap it up, Andy, how can people follow what you&#8217;re doing online and maybe connect with you?</p>\n\n\n\n<p><strong>Andy: </strong>Yes, so you can find me on LinkedIn. Just search <a href=\"https://www.linkedin.com/in/andymcmahon629/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Andy McMahon</a>, you&#8217;ll hopefully work out which one it is. On Twitter, I&#8217;m <a href=\"https://twitter.com/electricweegie\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">@ElectricWeegie</a>. I also have a website, a blog that I&#8217;ve not updated in a while, which is electricweegie.com. Then finally, you can follow and subscribe to the <a href=\"https://open.spotify.com/show/4bRuzmU97MWPDTf2FxkEEc\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">“AI Right?” Podcast</a>, it&#8217;s on Spotify, Acast or wherever you get your podcasts.</p>\n\n\n\n<p>Then you&#8217;ll hear me, <a href=\"https://www.linkedin.com/in/megan-a-stamper/?originalSubdomain=uk\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Megan Stamper</a>, who&#8217;s one of the heads of machine learning at the BBC, and <a href=\"https://www.linkedin.com/in/krismcfadyen/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Kris </a>McFadyen, who&#8217;s someone I know very well, who does a lot of recruitment. You&#8217;ll hear us talk about the Scottish tech team if that&#8217;s your particular interest, but we talk about lots of really cool stuff in ML and MLOps there as well. Those are the main places to find me.</p>\n\n\n\n<p><strong>Sabine</strong>: Right, so plenty of channels to run into you. We&#8217;ll be back in two weeks on August 3rd, and next time our guest will be<a href=\"https://www.linkedin.com/in/aesroka/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"> Adam Sroka</a>, we&#8217;ll be talking about <a href=\"https://www.youtube.com/watch?v=iykUtOagU_8&list=PLKePQLVx9tOczB07_oyDkdQqdNiqLV-zX&index=10&ab_channel=NeptuneAI\" target=\"_blank\" rel=\"noreferrer noopener\">building an MLOps culture on your team</a>.</p>\n\n\n\n\n<div id=\"author-box-new-format-block_4d615ecfebd44bf7e7f2c691dbf2d3b4\" class=\"article__footer article__author\">\n  <div class=\"article__authorImage\">\n          <img width=\"230\" height=\"230\" src=\"https://i0.wp.com/neptune.ai/wp-content/uploads/Andy-McMahon.jpeg?fit=230%2C230&ssl=1\" class=\"article__authorImage-img\" alt=\"Andy McMahon\" decoding=\"async\" data-attachment-id=\"72084\" data-permalink=\"https://neptune.ai/your-first-mlops-system-with-andy-mcmahon/attachment/andy-mcmahon\" data-orig-file=\"https://i0.wp.com/neptune.ai/wp-content/uploads/Andy-McMahon.jpeg?fit=800%2C800&ssl=1\" data-orig-size=\"800,800\" data-comments-opened=\"0\" data-image-meta=\"{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\"}\" data-image-title=\"Andy McMahon\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/neptune.ai/wp-content/uploads/Andy-McMahon.jpeg?fit=300%2C300&ssl=1\" data-large-file=\"https://i0.wp.com/neptune.ai/wp-content/uploads/Andy-McMahon.jpeg?fit=800%2C800&ssl=1\" />      </div>\n\n  <div class=\"article__authorContent\">\n          <h3 class=\"article__authorContent-name\">Andy McMahon</h3>\n    \n          <p class=\"article__authorContent-text\">Head of MLOps at NatWest Group. A data scientist and ML engineer with extensive experience of taking analytics solutions from ideation to production, particularly interested in the challenge of deploying machine learning based software products at scale. \n Author of the book “Machine Learning Engineering with Python”.</p>\n    \n          <ul class=\"article__authorSocial\">\n        <li class=\"article__authorSocial-single article__authorSocial-name\">Follow me on</li>\n                  <li class=\"article__authorSocial-single\"><a href=\"https://twitter.com/electricweegie\" class=\"article__authorSocial-tw\" target=\"_blank\"></a></li>\n        \n                  <li class=\"article__authorSocial-single\"><a href=\"https://www.linkedin.com/in/andrew-p-mcmahon/\" class=\"article__authorSocial-lk\" target=\"_blank\"></a></li>\n        \n                  <li class=\"article__authorSocial-single\"><a href=\"electricweegie.com\" class=\"article__authorSocial-www\" target=\"_blank\"></a></li>\n              </ul>\n    \n  </div>\n</div>\n\n\n<div class=\"is-layout-flow wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<hr class=\"wp-block-separator has-css-opacity\"/>\n\n\n\n<p class=\"has-text-color\" style=\"color:#4455a6\"><strong>READ NEXT</strong></p>\n\n\n\n<h2>MLOps at a Reasonable Scale [The Ultimate Guide]</h2>\n\n\n\n<p class=\"has-small-font-size\">9 mins read | Author Jakub Czakon | Updated July 27th, 2022</p>\n\n\n<div id=\"block_5ffc75def9f8e\" class=\"separator separator-10\"></div>\n\n\n\n<p>For a couple of years now,&nbsp;<a href=\"https://neptune.ai/blog/mlops\">MLOps</a>&nbsp;is probably the most (over)used term in the ML industry. The more models people want to deploy to production, the more they think about how to organize the Ops part of this process.&nbsp;</p>\n\n\n\n<p>Naturally, the way to do&nbsp;<strong>MLOps has been shaped by the big players</strong>&nbsp;on the market – companies like Google, Netflix, and Uber. What they did for the community was (and is) great, but they were solving their MLOps problems.&nbsp;</p>\n\n\n\n<p>And most companies don’t have their problems. The&nbsp;<strong>majority of ML teams operate on a smaller scale</strong>&nbsp;and have different challenges. Yet they are the biggest part of the ML industry, and they want to know what’s the best way to do MLOps at their scale, with their resources and limitations.&nbsp;</p>\n\n\n\n<p>The<strong>&nbsp;reasonable scale MLOps</strong>&nbsp;is addressing this need. “Reasonable scale” is a<a href=\"https://towardsdatascience.com/ml-and-mlops-at-a-reasonable-scale-31d2c0782d9c\" target=\"_blank\" rel=\"noreferrer noopener\">&nbsp;term coined last year by Jacopo Tagliabue</a>, and it refers to the companies that:</p>\n\n\n<div class=\"custom-point-list\">\n<ul><li>have ml models that generate hundreds of thousands to tens of millions of USD per year (rather than hundreds of millions or billions)</li><li>have dozens of engineers (rather than hundreds or thousands)</li><li>deal with terabytes (rather than petabytes or exabytes)</li><li>have a finite amount of computing budget</li></ul>\n</div>\n\n\n<p>In this guide, you’ll learn more about the MLOps at a reasonable scale, and you’ll get to know the best practices, templates, and examples that will help you understand how to implement them in your work.&nbsp;</p>\n\n\n\n<p>Before that, let’s do a few steps back and see why we even talk about reasonable scale.</p>\n\n\n<a class=\"button continous-post blue-filled\" href=\"/blog/mlops\" target=\"_blank\">\n    Continue reading -></a>\n\n\n\n<hr class=\"wp-block-separator has-css-opacity\"/>\n</div></div>\n<p>The post <a rel=\"nofollow\" href=\"https://neptune.ai/blog/first-mlops-system-with-andy-mcmahon\">Your First MLOps System: What Does Good Look Like? With Andy McMahon</a> appeared first on <a rel=\"nofollow\" href=\"https://neptune.ai\">neptune.ai</a>.</p>\n",
  "post-id": 72034
}