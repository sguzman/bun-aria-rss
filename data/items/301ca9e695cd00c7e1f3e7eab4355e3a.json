{
  "title": "Spaced repetition can allow for infinite recall",
  "link": "",
  "published": "2022-08-07T00:00:00-07:00",
  "updated": "2022-08-07T00:00:00-07:00",
  "author": {
    "name": "Jonathan Landy"
  },
  "id": "tag:efavdb.com,2022-08-07:/memory recall",
  "summary": "<p align=\"center\">\n         <img src=\"images/jeopardy.jpg\">\n</p>\n\n<p>My friend Andrew is an advocate of the &#8220;spaced repetition&#8221; technique for\nmemorization of a great many facts [1].  The ideas behind this are&nbsp;two-fold:</p>\n<ul>\n<li>\n<p>When one first &#8220;learns&#8221; a new fact, it needs to be reviewed frequently in\n  order to not forget it.  However, with each additional review, the …</p></li></ul>",
  "content": "<p align=\"center\">\n         <img src=\"images/jeopardy.jpg\">\n</p>\n\n<p>My friend Andrew is an advocate of the &#8220;spaced repetition&#8221; technique for\nmemorization of a great many facts [1].  The ideas behind this are&nbsp;two-fold:</p>\n<ul>\n<li>\n<p>When one first &#8220;learns&#8221; a new fact, it needs to be reviewed frequently in\n  order to not forget it.  However, with each additional review, the fact can\nbe retained longer before a refresher is needed to maintain it in&nbsp;recall.</p>\n</li>\n<li>\n<p>Because of this, one can maintain a large, growing body of facts in recall\n  through daily review:  Each day, one need only review for ten minutes or so,\ncovering a small number of facts. The facts included should be sampled from the\nfull library in a way that prefers newer entries, but that also sprinkles in\nolder facts often enough so that none are ever forgotten.  Apps have been\nwritten to intelligently take care of the sampling process for&nbsp;us.</p>\n</li>\n</ul>\n<p>Taking this framework as correct motivates questioning exactly how far it can\nbe pushed:  <em>Would an infinitely-long-lived, but forgetful person be able to\nrecall an infinite number of facts using this method? </em>  <span class=\"math\">\\(\\ldots\\)</span> Below, we\nshow that the answer is: <em><span class=\"caps\">YES</span>!</em></p>\n<h5>Proof:</h5>\n<p>We first posit that the number of days <span class=\"math\">\\(T\\)</span> that a fact can be retained before\nit needs to be reviewed grows as a power-law in <span class=\"math\">\\(s\\)</span>, the number of times it&#8217;s\nbeen reviewed so&nbsp;far,</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{1}\\label{1}\nT(s) \\sim s^{\\gamma},\n\\end{eqnarray}</div>\n<p>\nwith <span class=\"math\">\\(\\gamma &gt; 0\\)</span>. With this assumption, if <span class=\"math\">\\(N(t)\\)</span> facts are to be recalled\nfrom <span class=\"math\">\\(t\\)</span> days ago, one can show that the amount of work needed today to retain\nthese will go like (see appendix for a proof of this&nbsp;line)</p>\n<div class=\"math\">\\begin{eqnarray}\\tag{2}\\label{2}\nw(t) \\sim \\frac{N(t)}{t^{\\gamma / (\\gamma + 1)}}.\n\\end{eqnarray}</div>\n<p>\nThe total work needed today is then the sum of work needed for each past day&#8217;s&nbsp;facts,</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{3} \\label{3}\nW(total) = \\int_1^{\\infty} \\frac{N(t)}{t^{\\gamma / (\\gamma + 1)}} dt.\n\\end{eqnarray}</div>\n<p>\nNow, each day we only have a finite amount of time to study.  However, the\nabove total work integral will diverge at large <span class=\"math\">\\(t\\)</span> unless it decays faster\nthan <span class=\"math\">\\(1/t\\)</span>.  To ensure this, we can limit the number of facts retained from\nfrom <span class=\"math\">\\(t\\)</span> days ago to go&nbsp;as</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{4} \\label{4}\nN(t) \\sim \\frac{1}{t^{\\epsilon}} \\times \\frac{1}{t^{1 / (\\gamma + 1)}},\n\\end{eqnarray}</div>\n<p>\nwhere <span class=\"math\">\\(\\epsilon\\)</span> is some small, positive constant.  Plugging (\\ref{4}) into\n(\\ref{3}) shows that we are guaranteed a finite required study time each day.\nHowever, after <span class=\"math\">\\(t\\)</span> days of study, the total number of facts retained scales&nbsp;as</p>\n<div class=\"math\">\\begin{eqnarray}\nN_{total}(t) &amp;\\sim &amp; \\int_1^{t} N(t) dt \\\\\n&amp;\\sim &amp; \\int_0^{t} \\frac{1}{t^{1 / (\\gamma + 1)}} \\\\\n&amp;\\sim &amp; t^{ \\gamma / (\\gamma + 1)}. \\tag{5} \\label{5}\n\\end{eqnarray}</div>\n<p>\nBecause we assume that <span class=\"math\">\\(\\gamma &gt; 0\\)</span>, this grows without bound over time,\neventually allowing for an infinitely large&nbsp;library.</p>\n<p>We conclude that &#8212; though we can&#8217;t remember a fixed number of facts from each\nday in the past using spaced repetition &#8212; we can ultimately recall an infinite\nnumber of facts using this method.  To do this only requires that we gradually\ncurate our previously-introduced facts so that the scaling (\\ref{4}) holds at\nall&nbsp;times.</p>\n<h3>Appendix: Proof of&nbsp;(2)</h3>\n<p>Recall that we assume <span class=\"math\">\\(N(s)\\)</span> facts have been reviewed exactly <span class=\"math\">\\(s\\)</span> times.  On a\ngiven day, the number of these that need to be reviewed then goes&nbsp;like</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{A1}\\label{A1}\nW(s) \\sim \\frac{N(s)}{T(s)}.\n\\end{eqnarray}</div>\n<p>\nwhere <span class=\"math\">\\(T(s)\\)</span> is given in (\\ref{1}).  This holds because each of the <span class=\"math\">\\(N(s)\\)</span>\nfacts that have been studied <span class=\"math\">\\(s\\)</span> times so far must be reviewed within <span class=\"math\">\\(T(s)\\)</span>\ndays, or one will be forgotten.  During these <span class=\"math\">\\(T(s)\\)</span> days, each will move to\nhaving been reviewed <span class=\"math\">\\(s+1\\)</span> times.&nbsp;Therefore,</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{A2} \\label{A2}\n\\frac{ds}{dt} &amp;\\sim &amp; \\frac{1}{T(s)}\n\\end{eqnarray}</div>\n<p>\nIntegrating this gives <span class=\"math\">\\(s\\)</span> as a function of <span class=\"math\">\\(t\\)</span>,</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{A3} \\label{A3}\ns \\sim t^{1 / (\\gamma + 1)}\n\\end{eqnarray}</div>\n<p>Plugging this last line and (1) into (A1), we get&nbsp;(2).</p>\n<h2>References</h2>\n<p>[1] See Andrew&#8217;s blog post on spaced repetition <a\nhref=\"https://andrewjudson.com/spaced-repitition/2022/06/03/spaced-repitition.html\">\nhere</a>.</p>\n<script type=\"text/javascript\">if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {\n    var align = \"center\",\n        indent = \"0em\",\n        linebreak = \"false\";\n\n    if (false) {\n        align = (screen.width < 768) ? \"left\" : align;\n        indent = (screen.width < 768) ? \"0em\" : indent;\n        linebreak = (screen.width < 768) ? 'true' : linebreak;\n    }\n\n    var mathjaxscript = document.createElement('script');\n    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';\n    mathjaxscript.type = 'text/javascript';\n    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';\n\n    var configscript = document.createElement('script');\n    configscript.type = 'text/x-mathjax-config';\n    configscript[(window.opera ? \"innerHTML\" : \"text\")] =\n        \"MathJax.Hub.Config({\" +\n        \"    config: ['MMLorHTML.js'],\" +\n        \"    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" +\n        \"    jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" +\n        \"    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" +\n        \"    displayAlign: '\"+ align +\"',\" +\n        \"    displayIndent: '\"+ indent +\"',\" +\n        \"    showMathMenu: true,\" +\n        \"    messageStyle: 'normal',\" +\n        \"    tex2jax: { \" +\n        \"        inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" +\n        \"        displayMath: [ ['$$','$$'] ],\" +\n        \"        processEscapes: true,\" +\n        \"        preview: 'TeX',\" +\n        \"    }, \" +\n        \"    'HTML-CSS': { \" +\n        \"        availableFonts: ['STIX', 'TeX'],\" +\n        \"        preferredFont: 'STIX',\" +\n        \"        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" +\n        \"        linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" +\n        \"    }, \" +\n        \"}); \" +\n        \"if ('default' !== 'default') {\" +\n            \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n            \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n        \"}\";\n\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);\n}\n</script>",
  "category": ""
}