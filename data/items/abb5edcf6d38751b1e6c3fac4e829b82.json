{
  "title": "An Interactive Tutorial on Numerical Optimization",
  "link": "",
  "updated": "2016-11-25T00:00:00-08:00",
  "id": "http://www.benfrederickson.com/numerical-optimization/",
  "content": "\n        \n            <img src=\"http://www.benfrederickson.com/images/fmin/cities.gif\" width=\"100%\" style=\"max-width:500px\">\n        \n        <p>Numerical Optimization is one of the central techniques in Machine Learning. For many problems it is hard to figure out the best solution directly, but it is relatively easy to set up a loss function that \nmeasures how good a solution is - and then minimize the parameters of that function to find the solution. \n<!--\nThe parameters here could be the weights inside a neural network, or\nfactors inside a [matrix factorization model](/matrix-factorization/).\n--></p>\n\n<p>I ended up writing a bunch of numerical optimization routines <a href=\"/venn-diagrams-with-d3.js/\">back when I was first trying to learn\njavascript</a>.\nSince I had all this code lying around anyway, I thought that it might be fun to provide some\ninteractive visualizations of how these algorithms work.</p>\n\n<p>The cool thing about this post is that the code is all running in the browser, meaning you can\ninteractively set hyper-parameters for each algorithm, change the initial location, and change\n what function is being called to get a better sense of how these algorithms work.</p>\n\n<p>All the code for this post is up on <a href=\"https://github.com/benfred/fmin\">github</a> if you want to\n check it out, it has both the minimization functions as well as all of the visualizations.</p>\n\n<p class='more'><a href='http://www.benfrederickson.com/numerical-optimization/'>Read more ...</a></p>\n     "
}