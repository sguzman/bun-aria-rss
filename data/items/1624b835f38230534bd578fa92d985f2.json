{
  "title": "Exploring NBA Data with Python",
  "description": "<!--kg-card-begin: markdown--><p>After a long weekend of NBA All-Star game festivities I stumbled upon <a href=\"http://www.gregreda.com/2015/02/15/web-scraping-finding-the-api/\">Greg Reda's excellent blog post about web scraping</a> on Twitter. In it he goes over how to find and use API's to scrape data from webpages. The example he uses is the NBA'</p>",
  "link": "https://www.danielforsyth.me/exploring_nba_data_in_python/",
  "guid": "5d24af011e693a0017f5e5f7",
  "category": [
    "Python",
    "Pandas",
    "SportsVu"
  ],
  "dc:creator": "Daniel Forsyth",
  "pubDate": "Wed, 18 Feb 2015 05:38:42 GMT",
  "content:encoded": "<!--kg-card-begin: markdown--><p>After a long weekend of NBA All-Star game festivities I stumbled upon <a href=\"http://www.gregreda.com/2015/02/15/web-scraping-finding-the-api/\">Greg Reda's excellent blog post about web scraping</a> on Twitter. In it he goes over how to find and use API's to scrape data from webpages. The example he uses is the NBA's very own stats website, which to my surprise provides a lot of very interesting data. I decided to dig a little deeper and see what I could find.</p>\n<p><img src=\"https://31.media.tumblr.com/e78ff845b3838af04b145bbe105d6cb8/tumblr_njug3cyss71rqkpceo1_500.gif\" alt=\"alt\" loading=\"lazy\"></p>\n<p>The shot log API from NBA.com returns data about every shot a player took during a game. These data points include how much time was left in the game when the shot was taken, time on the shot clock when the shot was taken, dribbles taken before the shot, and even the closest defender when the shot was taken. The information I found the most interesting and focused on collecting were the distance the shot was taken from, the distance of the closest defender, the number of dribbles taken before the shot was taken, and the amount of time the player possessed the ball before shooting. The API takes a player ID and returns all of the data for each shot in every game this season unless specified otherwise. So my first step was creating a dictionary of all the players I wanted to collect data on. I chose to use every player who has played in at least seventy percent of his team's games as this is the minimum the NBA uses to qualify players as a scoring leader [1]. Below is an example of the Washington Wizard's dictionary with the player name as the key and the players id as the value, I wont show every team for the sake of space.</p>\n<pre><code>teams ={'wizards':{\n                   'garrett temple':'202066',\n                   'andre miller':'1889',\n                   'kevin seraphin':'202338',\n                   'otto porter':'203490',\n                   'rasual butler':'2446',\n                   'kris humphries':'2743',\n                   'nene hilario':'2403',\n                   'paul pierce':'1718',\n                   'marcin gortat':'101162',\n                   'bradley beal':'203078',\n                   'john wall':'202322'\n                   }\n</code></pre>\n<p>After having all of the player ID's ready I wrote a function to take each players ID, get the data from the API, find the players averages for the year and then add all of this into a dictionary for each players.</p>\n<pre><code>import requests\nimport json\nimport pandas as pd\n\nplayers = []\nplayer_stats = {'name':None,'avg_dribbles':None,'avg_touch_time':None,'avg_shot_distance':None,'avg_defender_distance':None}\n\ndef find_stats(name,player_id):\n    #NBA Stats API using selected player ID\n    url = 'http://stats.nba.com/stats/playerdashptshotlog?'+ \\\n    'DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&' + \\\n    'Location=&Month=0&OpponentTeamID=0&Outcome=&Period=0&' + \\\n    'PlayerID='+player_id+'&Season=2014-15&SeasonSegment=&' + \\\n    'SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision='\n    \n    #Create Dict based on JSON response\n    response = requests.get(url)\n    shots = response.json()['resultSets'][0]['rowSet']\n    data = json.loads(response.text)\n    \n    #Create df from data and find averages \n    headers = data['resultSets'][0]['headers']\n    shot_data = data['resultSets'][0]['rowSet']\n    df = pd.DataFrame(shot_data,columns=headers) \n    avg_def = df['CLOSE_DEF_DIST'].mean(axis=1)\n    avg_dribbles = df['DRIBBLES'].mean(axis=1)\n    avg_shot_distance = df['SHOT_DIST'].mean(axis=1)\n    avg_touch_time = df['TOUCH_TIME'].mean(axis=1)\n     \n    #add Averages to dictionary then to list\n    player_stats['name'] = name\n    player_stats['avg_defender_distance']=avg_def\n    player_stats['avg_shot_distance'] = avg_shot_distance\n    player_stats['avg_touch_time'] = avg_touch_time\n    player_stats['avg_dribbles'] = avg_dribbles\n    players.append(player_stats.copy())\n</code></pre>\n<p>The next step was getting all of the data. I did this by iterating over every player in the teams dictionary and calling the <code>find_stats</code> function.</p>\n<pre><code>for x in teams:\n    for y in teams[x]:\n        find_stats(y,teams[x][y])\n</code></pre>\n<p>Now that I had all of the data in place I created a pandas dataframe to make sorting through everything much easier.</p>\n<pre><code>cols = ['name','avg_defender_distance','avg_dribbles','avg_shot_distance','avg_touch_time']\ndf = pd.DataFrame(players,columns = cols)\n</code></pre>\n<p>Sanity Check</p>\n<pre><code>df.head()\n</code></pre>\n<p><img src=\"https://www.danielforsyth.me/content/images/2015/02/Screen-Shot-2015-02-17-at-10-41-06-PM.png\" alt=\"alt\" loading=\"lazy\"></p>\n<p>With everything in place it was time to start answering some questions with the data. The first thing I was interested in finding was which player had the largest average defender distance when they shot.</p>\n<pre><code>defender_distance = df[['name','avg_defender_distance']]\ndefender_distance.sort('avg_defender_distance',ascending=False)\n</code></pre>\n<p><img src=\"https://www.danielforsyth.me/content/images/2015/02/Screen-Shot-2015-02-17-at-11-49-50-PM.png\" alt=\"alt\" loading=\"lazy\"></p>\n<p>As you can see Mike Miller of the Cavaliers has the highest average distance of just over six feet. Defenders are basically daring Miller to take open shots, which makes sense given his .33 field goal percentage which is less than half that of league leader DeAndre Jordan who's .725 field goal percentage has defenders guarding him from an average of just under three feet away.</p>\n<pre><code>defender_distance.loc[df['name'] == 'deandre jordan']\n</code></pre>\n<p><img src=\"https://www.danielforsyth.me/content/images/2015/02/Screen-Shot-2015-02-18-at-12-09-15-AM.png\" alt=\"alt\" loading=\"lazy\"></p>\n<p>The next question I was interested in answering was which player is shooting from distance the most?</p>\n<pre><code>shot_distance = df[['name','avg_shot_distance']]\nshot_distance.sort('avg_shot_distance',ascending=False)\n</code></pre>\n<p><img src=\"https://www.danielforsyth.me/content/images/2015/02/Screen-Shot-2015-02-18-at-12-43-17-AM.png\" alt=\"alt\" loading=\"lazy\"></p>\n<p>Mike Miller is back again with an average shot distance of twenty three and a half feet, which makes his average shot a three-pointer.</p>\n<p>The last question I was interested in answering was who was holding the ball the longest before they shot? I used the average dribbles before the shot and average possession time before the shot for this.</p>\n<pre><code>dribbles = df[['name','avg_dribbles']]\ndribbles.sort('avg_dribbles',ascending=False)\navg_time = df[['name','avg_touch_time']]\navg_time.sort('avg_touch_time',ascending=False)\n</code></pre>\n<p><img src=\"https://www.danielforsyth.me/content/images/2015/02/Untitled-3.jpg\" alt=\"alt\" loading=\"lazy\"></p>\n<p>As you can see average dribbles before shot and time of possession before shot are very closely correlated, with each dribble taking about one second. Almost all of the players on both lists are also point guards which makes sense because they're going to have the ball in their hand the most out of anyone on the court.</p>\n<p>Looking at all of this data has been very interesting and there is still a lot left to explore. Some other things I would like to look into are which players are taking the big shots, shots taken with only a few seconds left on the play clock, and also take a look at these types of data points on a team level.</p>\n<p>If you have any questions, feedback, advice, or corrections please get in touch with me on <a href=\"https://twitter.com/Daniel_Forsyth1\">Twitter</a> or email me at <a href=\"mailto:danforsyth1@gmail.com\">danforsyth1@gmail.com</a>.</p>\n<!--kg-card-end: markdown-->"
}