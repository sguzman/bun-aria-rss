{
  "id": "tag:blogger.com,1999:blog-6755709643044947179.post-4805062828559402052",
  "published": "2022-10-24T09:02:00.003-07:00",
  "updated": "2022-10-26T15:10:19.158-07:00",
  "category": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "title": "What’s new in Jetpack Compose",
  "content": "<meta content=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgD57qOWeCNuSagChKRfqBBNn3IN1j7SEbohUhWXXzEwtsM6m9uHkzv_N5yCsBcLDhJhDV1J-7Omwf9vFe7DP31UNxnFzooj8JWgL9DRNvgHuoF7BtnKl38yqoZ5NGR0AnkXxeOO1-XCm8jzwtqbHhooKkqLZg28idBo1QHhGWXaAk3vOtHpAzQjhUw/s1600/ADS_22%20-%20What_s%20new%20in%20Jetpack%20Compose%20ADS22-SOCIAL.png\" name=\"twitter:image\"></meta>\n<img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgD57qOWeCNuSagChKRfqBBNn3IN1j7SEbohUhWXXzEwtsM6m9uHkzv_N5yCsBcLDhJhDV1J-7Omwf9vFe7DP31UNxnFzooj8JWgL9DRNvgHuoF7BtnKl38yqoZ5NGR0AnkXxeOO1-XCm8jzwtqbHhooKkqLZg28idBo1QHhGWXaAk3vOtHpAzQjhUw/s1600/ADS_22%20-%20What_s%20new%20in%20Jetpack%20Compose%20ADS22-SOCIAL.png\" style=\"display: none;\" />\n\n<p><em>Posted by <a href=\"https://twitter.com/lojanda\" target=\"_blank\">Jolanda Verhoef</a>, Android Developer Relations Engineer</em></p><p>\n\n<a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8DjU1NkAz6KDyTpTK2bNnJDk67OwdEQiaBN5d2pMmMCd0B77D2S-gCqrT6ZDvojuhSrj9KGSqip3o0DFCsGmtgv3DF2j1Nr1tsaglwnBwO4UIVl9LRHei4B6XVlHGMjoWwdm9NPm5U7W_g7oXsg0hL49cwU51VbyKwUyLfEIE0zYFbYGIXM9zGypI/s1600/ADS_22%20-%20What_s%20new%20in%20Jetpack%20Compose%20ADS22.png\"><img border=\"0\" data-original-height=\"800\" data-original-width=\"1058\" height=\"204\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8DjU1NkAz6KDyTpTK2bNnJDk67OwdEQiaBN5d2pMmMCd0B77D2S-gCqrT6ZDvojuhSrj9KGSqip3o0DFCsGmtgv3DF2j1Nr1tsaglwnBwO4UIVl9LRHei4B6XVlHGMjoWwdm9NPm5U7W_g7oXsg0hL49cwU51VbyKwUyLfEIE0zYFbYGIXM9zGypI/w687-h204/ADS_22%20-%20What_s%20new%20in%20Jetpack%20Compose%20ADS22.png\" width=\"687\" /></a>\n  \n  </p><p>\nWe launched <a href=\"https://developer.android.com/jetpack/compose\" target=\"_blank\">Jetpack Compose</a> over a year ago, and have been busy improving it ever since. We’ve added new features and invented powerful tools to make your experience developing Android UI as productive, intuitive and fun as possible. So, if you're starting a new app, it's time to write it with Compose! With Material Design 3 support, new Bill Of Materials, <a href=\"https://android-developers.googleblog.com/2022/07/compose-for-wear-os-10-stable.html\" target=\"_blank\">Compose WearOS Stable</a> and Android TV (alpha), Compose Camp, and many other pieces of news… It's an exciting release! \n</p>\n<h2>Compose in the Community</h2>\n\n\n<div style=\"text-align: left;\">\nIn the last year, we’ve seen many companies <a href=\"https://developer.android.com/jetpack/compose/adopt#what-developers-are-saying\" target=\"_blank\">developing with Compose at scale</a>, implementing new features and migrating screens from views to Compose. For example, we talked to the engineers at Lyft, who told us that<strong> over 90% of their new feature code is written in Compose, and <a href=\"https://android-developers.googleblog.com/2022/10/lyft-reduced-their-code-for-ui-components-using-jetpack-compose.html\" target=\"_blank\">moving to Compose made their code much simpler and easier to maintain</a></strong>. They also shared <em>“We rewrote the button component in our app using Compose. Before it required 800 lines of code across three files plus 17 different XML files, and it is now down to a single Kotlin file with 300 lines of code. This is a 60% reduction in the Kotlin code alone“.</em> The team at Zepeto has also been implementing Compose across many features, and are enjoying the experience, as <em>“Compose simplified our UI layer logic, making it <a href=\"https://android-developers.googleblog.com/2022/10/zepeto-plans-to-migrate-80-percent-of-apps-ui-to-jetpack-compose.html\">easier to understand code written by my colleagues</a>.”</em></div><div style=\"text-align: left;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"315\" src=\"https://www.youtube.com/embed/QO6Cg9MSpE8\" width=\"800\" youtube-src-id=\"QO6Cg9MSpE8\"></iframe></div><div style=\"text-align: left;\">It’s great to see how these teams experience faster development cycles, and also feel their UI code is more concise and readable. And they’re not the only ones. Since this year’s Google I/O, the number of top 1000 apps on Google Play using Compose has increased by 50%! To help your team follow in the footsteps of the teams at Lyft, Zepeto, and others, we published a guide on <a href=\"https://developer.android.com/jetpack/compose/adopt/for-large-teams\" target=\"_blank\">How to Adopt Compose for your Team</a>. It outlines how and where to start, and shows the areas of development where Compose can bring huge added value.</div><p><br /></p>\n<h2>Compose, October ‘22 release</h2>\n\n\n<p>\nToday we’re releasing a new stable version of Compose, with some exciting features and news.\n</p>\n<p>\nFirst of all, we’ve heard from you how it can be daunting to track versions across different artifacts that might go on different release schedules, so we’re now publishing, together with every Stable release of any of the Compose artifacts, a Bill of Materials, or BOM, to make your life easier. \n</p>\n<p>\nOur first BOM release, Compose October ‘22, brings support for Staggered Grids, drawing Text directly to Canvas, Pull to Refresh, as well as performance improvements and bug fixes.\n</p><p><br /></p>\n<h3 style=\"text-align: left;\">Compose Bill of Materials</h3>\n\n\n<p>\nA BOM is a Maven module that declares a set of libraries with their versions. It will greatly simplify the way you define Compose library versions in your Gradle dependencies block, especially now that we <a href=\"https://android-developers.googleblog.com/2022/06/independent-versioning-of-Jetpack-Compose-libraries.html\" target=\"_blank\">moved the various Jetpack Compose libraries to independent versioning schemes</a>. Instead of defining each version separately, which can become cumbersome and prone to errors when library versions start to differ, you now only need to define one BOM version and all Compose library versions will be extracted from that. We will publish a new version of the BOM every time a Compose artifact has a new stable release, so moving from stable release to stable release is going to be much simpler.\n</p><p><span id=\"docs-internal-guid-50e8e6d1-7fff-02b4-b0d7-3d3c98d386b3\"></span></p><div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"><table style=\"border-collapse: collapse; border: none;\"><colgroup><col width=\"719\"></col></colgroup><tbody><tr style=\"height: 0pt;\"><td style=\"background-color: #f0f0f0; border-bottom: solid #000000 1pt; border-color: rgb(0, 0, 0); border-left: solid #000000 1pt; border-right: solid #000000 1pt; border-style: solid; border-top: solid #000000 1pt; border-width: 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt; vertical-align: top;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: courier;\"><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">dependencies {</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">&nbsp; &nbsp; </span><span style=\"background-color: #f0f0f0; color: #888888; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">// Import the Compose BOM</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">&nbsp; &nbsp; </span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">implementation</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> platform(</span><span style=\"background-color: #f0f0f0; color: #880000; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">'androidx.compose:compose-bom:2022.10.00'</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">)</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">&nbsp; &nbsp; </span><span style=\"background-color: #f0f0f0; color: #888888; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">// Declare dependencies for the desired Compose libraries without versions</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">&nbsp; &nbsp; </span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">implementation</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> </span><span style=\"background-color: #f0f0f0; color: #880000; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">'androidx.compose.foundation:foundation'</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">&nbsp; &nbsp; androidTestImplementation </span><span style=\"background-color: #f0f0f0; color: #880000; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">'androidx.compose.ui:ui-test-junit4'</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">&nbsp; &nbsp; ...</span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"background-color: #f0f0f0; color: #444444; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">}</span></span></p></td></tr></tbody></table><br /></div>We’ve added the instructions on how to add the Compose BOM to our <a href=\"https://developer.android.com/jetpack/compose/setup\" target=\"_blank\">Quick start guide</a>. Note that you can still choose to define your dependencies using hard-coded versions. The BOM is added as a useful way to simplify dependencies and make upgrades easier.<div><span>&nbsp;&nbsp; &nbsp;</span></div><div><br />\n<h3 style=\"text-align: left;\">Modifiers on overdrive</h3>\n\n\n<p>\nBehind the scenes, we’re always working on improving Compose performance.  The October ‘22  release includes a major refactor of how Modifiers work under the hood. While you will not notice anything changing in the APIs, this refactor paves the way for greatly improving Modifier performance. Learn more about the rationale behind the changes, and what’s planned for the near future in the ADS talk <a href=\"https://developer.android.com/events/dev-summit/technical-talks\" target=\"_blank\">Compose Modifiers deep dive</a>.<iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"312\" src=\"https://www.youtube.com/embed/BjGX2RftXsU\" width=\"800\" youtube-src-id=\"BjGX2RftXsU\"></iframe></p><p></p><div style=\"text-align: left;\"><br /></div><h3 style=\"text-align: left;\">Popup &amp; Dialog elevation change</h3><p></p>\n\n\n<p>\nAccessibility  is always a first-class citizen for Compose, and this release contains a behavior change that helps fix an Accessibility bug with Popups and Dialogs: their maximum elevation is decreased from 30dp to 8dp. Your app will be impacted only if it uses a custom dialog or popup implementation with an elevation higher than 8dp. The <a href=\"https://developer.android.com/jetpack/androidx/releases/compose-ui\" target=\"_blank\">release notes</a> contain more information about the change, including a way to override the new behavior as an interim solution (keep in mind that we always recommend using 8dp maximum when customizing popups or dialogs).\n</p><p><br /></p>\n<h3 style=\"text-align: left;\">New features</h3>\n\n\n<div><p>\nWe added a lot of new functionality to Compose. Here are some highlights:\n</p><ul style=\"text-align: left;\"><li>\nImplement staggered grids using the new <code><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/foundation/lazy/staggeredgrid/package-summary#LazyHorizontalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells,androidx.compose.ui.Modifier,androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,androidx.compose.foundation.layout.PaddingValues,androidx.compose.foundation.layout.Arrangement.Vertical,androidx.compose.foundation.layout.Arrangement.Horizontal,androidx.compose.foundation.gestures.FlingBehavior,kotlin.Boolean,kotlin.Function1)\" target=\"_blank\"><span style=\"font-family: courier; font-size: medium;\">LazyHorizontalStaggeredGrid</span></a></code> and <code><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/foundation/lazy/staggeredgrid/package-summary#LazyVerticalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells,androidx.compose.ui.Modifier,androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,androidx.compose.foundation.layout.PaddingValues,androidx.compose.foundation.layout.Arrangement.Vertical,androidx.compose.foundation.layout.Arrangement.Horizontal,androidx.compose.foundation.gestures.FlingBehavior,kotlin.Boolean,kotlin.Function1)\" target=\"_blank\"><span style=\"font-family: courier; font-size: medium;\">LazyVerticalStaggeredGrid</span></a></code></li><li>Draw text directly to Canvas using <code><span style=\"font-family: courier; font-size: medium;\"><a href=\"http://DrawScope.drawText\" target=\"_blank\">DrawScope.drawText</a></span></code></li><li>You can add a <a href=\"https://fonts.google.com/knowledge/topics/variable_fonts\" target=\"_blank\">variable font</a> to your app and change its properties using the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/ui/text/font/FontVariation\" target=\"_blank\"><span style=\"font-family: courier; font-size: medium;\">FontVariation</span></a></code> object.</li><li>Add a <a href=\"https://developer.android.com/reference/kotlin/androidx/compose/ui/text/UrlAnnotation\" target=\"_blank\"><span style=\"font-family: courier; font-size: medium;\">UrlAnnotation</span></a><span style=\"font-family: courier;\">&nbsp;</span>to your annotated string to improve Accessibility services interacting with the text.</li><li>Add hyphenation to your text using the new&nbsp;<span style=\"font-family: courier;\"><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/ui/text/style/LineBreak\" target=\"_blank\"><span style=\"font-size: medium;\">LineBreak</span></a> </span>API.</li><li><a href=\"https://material.io/design/platform-guidance/android-swipe-to-refresh\" target=\"_blank\">Swipe to refresh</a> with the new <code><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/material/pullrefresh/package-summary#(androidx.compose.ui.Modifier).pullRefresh(androidx.compose.material.pullrefresh.PullRefreshState,kotlin.Boolean)\" target=\"_blank\"><span style=\"font-family: courier; font-size: medium;\">pullRefresh</span></a></code> modifier.</li><li>Add snapping behavior to your lazy lists using <a href=\"https://developer.android.com/reference/kotlin/androidx/compose/foundation/gestures/snapping/SnapFlingBehavior\" target=\"_blank\">SnapFlingBehavior</a>.</li><li><code><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/ui/layout/package-summary#LookaheadLayout(kotlin.Function1,androidx.compose.ui.Modifier,androidx.compose.ui.layout.MeasurePolicy)\" target=\"_blank\"><span style=\"font-family: courier; font-size: medium;\">LookAheadLayout</span></a></code> is a new type of layout that provides information about final measurement and placement of its children so you can decide on intermediate layouts.</li></ul></div>\n  \n  <div><h2>Compose Material 3 stable</h2></div>\n  <a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhBITldrbxnjPjiWhqzeO4ftBFoVNxXHLpqmk7OpJMfsCbNd1s6H4NHEKn1k1MNCFHumWnBIDKx3DJKd3IL_fV9oftKghZp3-fNe4ReDb6MiLQbmhBPtgC2pPA8qGtvR_66cTImgqHnHRXhtmph98ILXH62b_QB409tisYkKZpoMsL4exIkVixvQHB-/s1600/image2.png\" style=\"text-align: center;\"><img border=\"0\" data-original-height=\"800\" data-original-width=\"1058\" height=\"357\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhBITldrbxnjPjiWhqzeO4ftBFoVNxXHLpqmk7OpJMfsCbNd1s6H4NHEKn1k1MNCFHumWnBIDKx3DJKd3IL_fV9oftKghZp3-fNe4ReDb6MiLQbmhBPtgC2pPA8qGtvR_66cTImgqHnHRXhtmph98ILXH62b_QB409tisYkKZpoMsL4exIkVixvQHB-/w640-h357/image2.png\" width=\"640\" /></a>\n  <div><p>Today we also announce the first stable release of the <a href=\"https://developer.android.com/jetpack/androidx/releases/compose-material3\" target=\"_blank\">Compose Material 3 library</a>! You can build an app using Compose and theme it according to <a href=\"https://m3.material.io/\" target=\"_blank\">Material Design 3</a>, our latest iteration of Material Design. Use Material Design 3 to further customize your app’s colors, typography and shapes to make your brand stand out! The library contains fresh and updated versions of many UI components, such as buttons, cards, checkboxes, switches, navigation bars, drawers, and many more, with support for others on its way. See a list of all the supported components in the <a href=\"https://developer.android.com/reference/kotlin/androidx/compose/material3/package-summary#overview\" target=\"_blank\">documentation</a>&nbsp;and learn more in <a href=\"https://android-developers.googleblog.com/2022/10/material-design-3-compose-stable.html\">this blog post</a>.</p></div>\n<p>\nTo help you adopt Material 3 check out our new <a href=\"https://developer.android.com/jetpack/compose/themes/material2-material3\" target=\"_blank\">migration guide</a> with clear guidance on how Material 2 concepts translate to Material 3. The default template in Android Studio Flamingo now uses Material 3, to get you up and running in no time. We’ve also updated many of our sample apps, tutorials, templates, and codelabs to use Material 3 so you can learn as you go!\n</p>\n<h2 style=\"text-align: left;\">New tools</h2>\n\n\n<p>\nDeveloping your app using Jetpack Compose is much easier with the new and improved tools around it. We’ve added tons of new features to Android Studio to improve your workflow and efficiency:\n</p>\n<p>\n<a href=\"https://developer.android.com/studio/releases#new_in_compose\" target=\"_blank\">Android Studio Dolphin</a> is the latest <strong>stable release</strong>, bringing you: \n</p>\n<ul>\n\n<li>Animation Coordination\n\n</li><li>Multipreview annotations\n\n</li><li>Recomposition counts in Layout Inspector\n</li>\n</ul>\n<p>\n<a href=\"https://developer.android.com/studio/preview/features#2022.1.1\" target=\"_blank\">Android Studio Electric Eel</a> contains <strong>beta features</strong>, like:\n</p>\n<ul>\n\n<li>Live Edit (experimental)\n\n</li><li>Composition rendering highlighting\n\n</li><li>Configuring Preview devices\n\n</li><li>Live updates in Previews\n</li>\n</ul>\n<p>\n<a href=\"https://developer.android.com/studio/preview/features#2022.2.1\" target=\"_blank\">Android Studio Flamingo</a> contains <strong>canary features</strong> such as:\n</p>\n<ul>\n\n<li>New project templates use Compose and Material 3 by default\n\n</li><li>Live Edit turned on by default\n\n</li><li>Improved composition tracing to help you better inspect performance issues.</li></ul><br /><ul>\n</ul>\n<h3 style=\"text-align: left;\"><strong>Relay</strong></h3><p>\nToday we also launch the first alpha version of <a href=\"https://relay.material.io/\" target=\"_blank\">Relay</a>, a design-to-code solution for improving designer-developer collaboration. Designers create UI components using the <a href=\"https://www.figma.com/community/plugin/1041056822461507786\" target=\"_blank\">Figma plugin</a>, and developers use the <a href=\"https://plugins.jetbrains.com/plugin/19721-relay-for-android-studio/\" target=\"_blank\">Android Studio plugin</a> to automatically use these components in their apps. The generated components are composable functions and can be integrated directly into your Compose app. Learn more about Relay in the <a href=\"https://developer.android.com/jetpack/compose/tooling/relay\" target=\"_blank\">documentation</a>.\n</p><p><br /></p>\n<h2 style=\"text-align: left;\">Compose on WearOS, Large Screens and TV</h2>\n\n\n<p>\nIn July we released the first Stable version of <a href=\"https://android-developers.googleblog.com/2022/07/compose-for-wear-os-10-stable.html\" target=\"_blank\">Wear Compose</a>, ready to build production apps. <strong>Compose for Wear OS is our recommended approach for building UIs for Wear OS apps</strong>. We’ve included over twenty Compose UI components that were designed specifically for Wearables, like <code><span style=\"font-family: courier; font-size: medium;\">TimeText</span></code>, <code><span style=\"font-family: courier; font-size: medium;\">PositionIndicator</span></code>, and <code><span style=\"font-family: courier; font-size: medium;\">ScalingLazyColumn</span></code>. \n</p>\n<p>\nWe’re also continuing to make it easier to design, develop, and test <strong>apps for large screens</strong> such as foldables, tablets, and Chrome OS. The <code><a href=\"https://developer.android.com/jetpack/androidx/releases/compose-material3\" target=\"_blank\"><span style=\"font-family: courier; font-size: medium;\">material3-window-size-class</span></a></code> library graduated to Stable, giving you a set of opinionated viewport breakpoints to work with. Large screen designs often contain staggered grids, and the addition of <code><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/foundation/lazy/staggeredgrid/package-summary#LazyHorizontalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells,androidx.compose.ui.Modifier,androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,androidx.compose.foundation.layout.PaddingValues,androidx.compose.foundation.layout.Arrangement.Vertical,androidx.compose.foundation.layout.Arrangement.Horizontal,androidx.compose.foundation.gestures.FlingBehavior,kotlin.Boolean,kotlin.Function1)\" target=\"_blank\"><span style=\"font-family: courier; font-size: medium;\">LazyHorizontalStaggeredGrid</span></a></code> and&nbsp;<span style=\"font-family: courier; font-size: medium;\"><a href=\"https://developer.android.com/reference/kotlin/androidx/compose/foundation/lazy/staggeredgrid/package-summary#LazyVerticalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells,androidx.compose.ui.Modifier,androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,androidx.compose.foundation.layout.PaddingValues,androidx.compose.foundation.layout.Arrangement.Vertical,androidx.compose.foundation.layout.Arrangement.Horizontal,androidx.compose.foundation.gestures.FlingBehavior,kotlin.Boolean,kotlin.Function1)\" target=\"_blank\">LazyVerticalStaggeredGrid</a></span><span style=\"font-size: medium;\">&nbsp;</span>will help implement these.</p><span><a name='more'></a></span><p><br /></p><p><br /></p><p>Feedback from the Android community always moves us forward. With your input we have updated our <a href=\"https://developer.android.com/jetpack/androidx/compose-roadmap\" target=\"_blank\">roadmap</a>, focusing on areas that will help you implement Compose successfully. We’re now focusing on supporting more advanced use cases, covering more Material 3 components, improving platform support, tooling and performance.</p><p><br /></p>\n<h2>New and updated guidance</h2>\n\n\n<p>\nNo matter where you are in your learning journey, we’ve got you covered! We added and revamped a lot of the guidance on Compose:\n</p><ul style=\"text-align: left;\"><li>\nFor hands-on work, head on to the revamped <a href=\"https://developer.android.com/courses/jetpack-compose/course\" target=\"_blank\">Compose for Android Developers course.</a> It covers a wide range of topics, from basics to advanced.</li><li>If you prefer watching videos, check out the <a href=\"https://youtube.com/playlist?list=PLWz5rJ2EKKc-CG9riunK996aI6cRhXFDC\" target=\"_blank\">MAD Skills: Compose Basics</a> series and of course, all the Compose talks at the <a href=\"https://developer.android.com/events/dev-summit/technical-talks#modern-android-development\" target=\"_blank\">Android Dev Summit</a></li><li>Read the expanded documentation on <a href=\"https://developer.android.com/jetpack/compose/graphics\" target=\"_blank\">Images and Graphics</a>.</li><li>Wondering what animation to use? The new <a href=\"https://storage.googleapis.com/android-stories/compose/Compose_Animation_Cheat_Sheet.pdf\" target=\"_blank\">animation cheat sheet</a> has the answer!</li><li>Learn how to find and fix performance issues with the new debugging recomposition <a href=\"https://youtu.be/SWBN0y0lFNY\" target=\"_blank\">screencast</a> and <a href=\"https://medium.com/androiddevelopers/jetpack-compose-debugging-recomposition-bfcf4a6f8d37\" target=\"_blank\">blog post</a>.</li><li>If you’re considering adopting Compose to your existing app, read the expanded <a href=\"https://developer.android.com/jetpack/compose/interop\" target=\"_blank\">Adopting Compose in your app</a> guide.</li><p>&nbsp;</p></ul>\n<h2 style=\"text-align: left;\">Compose Camp<a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjyzO_YzBiL1Ra0oykI6xunLmAPY_8aTKOvxH5o_Nei5Dyk8qStI9Jx2Q69zcMq7w2A_-NyM6YOhPo6Fsj_kdxV0e9Ot-AnWQA7tjCj9DIeNrWRDZI-qAjic6P7uOmH5d2dnN7aJYWroRZoN_7wwtWM9W7Kts01HB5LEfQ2eTj3szscWnbtbzy29NJC/s1600/ComposeCamp_AndroidBlogHeader_4209x1253.png\"><img border=\"0\" data-original-height=\"800\" data-original-width=\"1058\" height=\"203\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjyzO_YzBiL1Ra0oykI6xunLmAPY_8aTKOvxH5o_Nei5Dyk8qStI9Jx2Q69zcMq7w2A_-NyM6YOhPo6Fsj_kdxV0e9Ot-AnWQA7tjCj9DIeNrWRDZI-qAjic6P7uOmH5d2dnN7aJYWroRZoN_7wwtWM9W7Kts01HB5LEfQ2eTj3szscWnbtbzy29NJC/w683-h203/ComposeCamp_AndroidBlogHeader_4209x1253.png\" width=\"683\" /></a></h2><p>\nRunning from September through December is a world-wide community-organized event series called <a href=\"https://developer.android.com/compose-camp\" target=\"_blank\">Compose Camp</a>! With both a beginner and an experienced track, developers of all levels can join Compose Camp to learn together with others. We already see lots of <a href=\"https://twitter.com/search?q=%23ComposeCamp&amp;src=typeahead_click\" target=\"_blank\">traction</a>, with many <a href=\"https://www.youtube.com/results?search_query=compose%20camp\" target=\"_blank\">videos</a> being posted by GDGs and GDSCs all over the globe, and many events hosted on our Community platform. \n</p><p><br /></p>\n<h2 style=\"text-align: left;\">Happy Composing!</h2>\n\n\n<p>\nWe hope that you’re as excited by these developments as we are! If you haven't started yet, it's time to learn <a href=\"https://developer.android.com/jetpack/compose\" target=\"_blank\">Jetpack Compose</a> and see how your team and development process can benefit from it. Get ready for improved velocity and developer productivity. Happy Composing!\n</p>\n\n<p></p><p></p></div>",
  "link": [
    "",
    "",
    ""
  ],
  "author": {
    "name": "Android Developers",
    "uri": "http://www.blogger.com/profile/08588467489110681140",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": ""
}