{
  "title": "Real-time Data Integration from Oracle to Google BigQuery Using Striim",
  "link": "https://cloud.google.com/blog/products/data-analytics/data-integration-from-oracle-to-google-bigquery-using-striim/",
  "description": "<html><head></head><body><div class=\"block-paragraph\"><div class=\"rich-text\"><p><i><b>Editor’s notes</b>: In this guest blog, we have the pleasure of inviting <a href=\"https://www.linkedin.com/in/pareekalok/\" target=\"_blank\">Alok Pareek</a>, Founder &amp; EVP Products, at <a href=\"https://www.striim.com/\" target=\"_blank\">Striim</a> to share latest experimental results from a performance study on real-time data integration from Oracle to Google Cloud BigQuery using Striim. </i></p><hr/><p>Relational databases like Oracle are designed to store data, but they aren’t well suited for supporting analytics at scale. Google Cloud <a href=\"https://cloud.google.com/bigquery\">BigQuery</a> is a serverless, scalable cloud data warehouse that is ideal for analytics use cases. To ensure timely and accurate analytics, it is essential to be able to continuously move data streams to BigQuery with minimal latency. </p><p>The best way to stream data from databases to BigQuery is through <a href=\"https://www.striim.com/blog/log-based-change-data-capture/\" target=\"_blank\">log-based Change Data Capture</a>(CDC). Log-based CDC works by directly reading the transaction logs to collect DML operations, such as inserts, updates, and deletes. Unlike other <a href=\"https://www.striim.com/blog/change-data-capture-cdc-what-it-is-and-how-it-works/\" target=\"_blank\">CDC methods</a>, log-based CDC provides a non-intrusive approach to streaming database changes that puts minimal load on the database.</p><p>Striim — a unified real-time data integration and streaming platform — comes with out-of-the-box log-based CDC readers that can move data from various databases (including Oracle) to BigQuery in real-time. Striim enables teams to act on data quickly, producing new insights, supporting optimal customer experiences, and driving innovation. </p><p>In this blog post, we will outline experimental results cited in Striim’s recent <a href=\"https://go2.striim.com/real-time-data-streaming-from-oracle-to-google-bigquery-pdf\" target=\"_blank\">white paper</a>, Real-Time Data Integration from Oracle to Google BigQuery: A Performance Study. </p><h3>Building a Data Pipeline from Oracle to Google BigQuery with Striim: Components</h3></div></div><div class=\"block-image_full_width\"><div class=\"article-module h-c-page\"><div class=\"h-c-grid\"><figure class=\"article-image--large h-c-grid__col h-c-grid__col--6 h-c-grid__col--offset-3 \"><img alt=\"1 Striim.jpg\" src=\"https://storage.googleapis.com/gweb-cloudblog-publish/images/1_Striim.max-1000x1000.jpg\"/></figure></div></div></div><div class=\"block-paragraph\"><div class=\"rich-text\"><p>We used the following components to build a data pipeline to move data between an Oracle database to BigQuery in real time:</p><p><b>Oracle CDC Adapters</b></p><p>A Striim adapter is a process that connects the Striim platform to a specific type of external application or file. Adapters enable various data sources to be connected to target systems with streaming data pipelines for real-time data integration.</p><p>Striim comes with two Oracle CDC adapters to help manage different workloads.</p><ul><li><p>LogMiner-based Oracle CDC Reader uses Oracle LogMiner to ingest database changes on the server side and replicate them to the streaming platform. This adapter is ideal for low and medium workloads.</p></li><li><p>OJet adapter uses a high-performance log mining API to support high volumes of database changes on the source and replicate them in real time.   This adaptor is ideal for high volume high throughput CDC workloads.</p></li></ul><p>With two types of Oracle adapters to choose from, when is it advisable to use one over the other?</p><p>Our results show that if your DB workload profile is between 20GB and 80GB of CDC data per hour, the LogMiner based Oracle CDC reader is a good choice. If you work with a higher amount of data, then the OJet adapter is better; currently, it’s the fastest Oracle CDC Reader available. Here’s a table and chart that shows the latency (read-lag)  for both adapters:</p></div></div><div class=\"block-image_full_width\"><div class=\"article-module h-c-page\"><div class=\"h-c-grid\"><figure class=\"article-image--large h-c-grid__col h-c-grid__col--6 h-c-grid__col--offset-3 \"><img alt=\"2 Striim.jpg\" src=\"https://storage.googleapis.com/gweb-cloudblog-publish/images/2_Striim.max-1000x1000.jpg\"/></figure></div></div></div><div class=\"block-image_full_width\"><div class=\"article-module h-c-page\"><div class=\"h-c-grid\"><figure class=\"article-image--large h-c-grid__col h-c-grid__col--6 h-c-grid__col--offset-3 \"><img alt=\"3 Striim.jpg\" src=\"https://storage.googleapis.com/gweb-cloudblog-publish/images/3_Striim.max-1000x1000.jpg\"/></figure></div></div></div><div class=\"block-paragraph\"><div class=\"rich-text\"><p><b>BigQuery Writer</b></p><p>Striim’s BigQuery Writer is designed to save time and storage; it takes advantage of partitioned tables on the target BigQuery system and supports partition pruning in its merge queries. </p><p><b>Database Workload</b></p><p>For our experiment, we used a custom-built, high-scale database workload simulation. This workload, SwingerMultiOps, is based on Swingbench — a popular workload for Oracle databases. It’s a multithreaded JDBC (Java Database Connectivity) application that generates concurrent DB sessions against the source database. We took the Order Entry (OE) schema of the Swingbench workload. In SwingerMultiOps, we continued to add more tables until we reached a total of 50 tables. Each of these tables comprised of  varying data types.</p><h3>Building the Data Pipeline: Steps</h3><p>We built the data pipeline for our experiment following these steps:</p><p><b>1. Configure the source database and profile the workload</b></p><p>Striim’s Oracle adapters connect to Oracle server instances to mine for redo data. Therefore it’s important to have the source database instance tuned for optimum redo mining performance. Here’s what you need to keep in mind about the configuration:</p><ul><li><p>Profile the DB workload to measure the load it generates on the source database</p></li><li><p>Redo log sizes to a reasonably large value of 2G per log group</p></li><li><p>For the OJet adapter, set a large size for the DB streams_pool_size to mine redo as quickly as possible</p></li><li><p>For an extremely high CDC data rate of around 150 Gb/hour, set streams_pool_size to 4G</p></li></ul><p><b>2. Configure the Oracle adapter</b></p><p>For both adapters, default settings are enough to get started. The only configuration required is to set the DB endpoints to read data from the source database. Based on your need, you can use Striim to perform any of the following:</p><ul><li><p>Handle large transactions</p></li><li><p>Read and write data to a downstream database</p></li><li><p>Mine from a specific SCN or timestamp</p></li></ul><p>Regardless of which Oracle adapter you choose, only one adapter is needed to collect all data streams from the source database. This practice helps to cut the overhead incurred by both adapters.</p><p><b>3. Configure the BigQuery Writer</b></p><p>Use BigQuery Writer to configure how your data moves from source to database. For instance, you can set your writers to work with a specified dataset to move large amounts of data in parallel.</p><p>For performance improvement, you can use multiple BigQuery writers to integrate incoming data in parallel. Using a router ensures that events are distributed such that a single event isn’t sent to multiple writers.</p><p>Tuning the number of writers and their properties helps to ensure that data is moved from Oracle to BigQuery in real time. Since we’re dealing with large volumes of incoming streams, we configure 20 BigQuery Writers in our experiment. There are many other BigQuery Writer properties that can help you to move and control data. You can learn about them in <a href=\"https://www.striim.com/docs/en/bigquery-writer.html\" target=\"_blank\">detail here</a>.</p><h3>How to Execute the Striim App and Analyze Results</h3><p>We used a Google BigQuery dataset to run our data integration infrastructure. We performed the following tasks to run our simulation and capture results for analysis:</p><ol><li><p>Start the Striim app on the Striim server</p></li><li><p>Start monitoring our app components using the <a href=\"https://www.striim.com/docs/en/console-commands.html\" target=\"_blank\">Tungsten Console</a> by passing a simple script</p></li><li><p>Start the Database Workload</p></li><li><p>Capture all DB events in the Striim app, and let the app commit all incoming data to the BigQuery target</p></li><li><p>Analyze the app performance</p></li></ol><p>The Striim UI image below shows our app running on the Striim server. From this UI, we can monitor the app throughput and latency in real time.</p></div></div><div class=\"block-image_full_width\"><div class=\"article-module h-c-page\"><div class=\"h-c-grid\"><figure class=\"article-image--large h-c-grid__col h-c-grid__col--6 h-c-grid__col--offset-3 \"><img alt=\"4 Striim.jpg\" src=\"https://storage.googleapis.com/gweb-cloudblog-publish/images/4_Striim.max-1000x1000.jpg\"/></figure></div></div></div><div class=\"block-paragraph\"><div class=\"rich-text\"><h3>Results Analysis: Comparing the Performance of two Oracle Readers</h3><p>At the end of the DB workload run, we looked at our captured performance data and analyzed the performance. Details are tabulated below for each of the source adapter types.</p></div></div><div class=\"block-image_full_width\"><div class=\"article-module h-c-page\"><div class=\"h-c-grid\"><figure class=\"article-image--large h-c-grid__col h-c-grid__col--6 h-c-grid__col--offset-3 \"><img alt=\"2 Striim.jpg\" src=\"https://storage.googleapis.com/gweb-cloudblog-publish/images/2_Striim.max-1000x1000.jpg\"/><figcaption class=\"article-image__caption \"><div class=\"rich-text\"><i>*LEE =&gt; <a href=\"https://www.striim.com/docs/en/monitoring-end-to-end-lag--lee-.html\">Lag End-to-End</a></i></div></figcaption></figure></div></div></div><div class=\"block-paragraph\"><div class=\"rich-text\"><p>The charts below show how the CDC reader lag varies with the input rate as the workload progresses on the DB server.</p><p>Lag chart for Oracle Reader:</p></div></div><div class=\"block-image_full_width\"><div class=\"article-module h-c-page\"><div class=\"h-c-grid\"><figure class=\"article-image--large h-c-grid__col h-c-grid__col--6 h-c-grid__col--offset-3 \"><img alt=\"6 Striim.jpg\" src=\"https://storage.googleapis.com/gweb-cloudblog-publish/images/6_Striim.max-1000x1000.jpg\"/></figure></div></div></div><div class=\"block-paragraph\"><div class=\"rich-text\"><p>Lag chart for OJet Reader:</p></div></div><div class=\"block-image_full_width\"><div class=\"article-module h-c-page\"><div class=\"h-c-grid\"><figure class=\"article-image--large h-c-grid__col h-c-grid__col--6 h-c-grid__col--offset-3 \"><img alt=\"7 Striim.jpg\" src=\"https://storage.googleapis.com/gweb-cloudblog-publish/images/7_Striim.max-1000x1000.jpg\"/></figure></div></div></div><div class=\"block-paragraph\"><div class=\"rich-text\"><h3>Use Striim to Move Data in Real Time to Google Cloud BigQuery</h3><p>This experiment showed how to use Striim to move large amounts of data in real time from Oracle to BigQuery. Striim offers two high-performance Oracle CDC readers to support data streaming from Oracle databases. We demonstrated that Striim’s OJet Oracle reader is optimal for larger workloads, as measured by read-lag, end-to-end lag, and CPU and memory utilization. For smaller workloads, Striim’s LogMiner-based Oracle reader offers excellent performance. For more in-depth information, please refer to the <a href=\"https://go2.striim.com/real-time-data-streaming-from-oracle-to-google-bigquery-pdf\" target=\"_blank\">white paper</a>, <a href=\"https://go2.striim.com/see-demo-google-bigquery\" target=\"_blank\">check out a demo</a>, <a href=\"https://console.cloud.google.com/marketplace/product/striim/striim-cloud-for-bigquery?project=athos-test\">Striim’s Marketplace listing</a> or <a href=\"mailto:google@striim.com\">contact</a> Striim.</p></div></div></body></html>",
  "pubDate": "Tue, 01 Nov 2022 16:00:00 -0000",
  "guid": "https://cloud.google.com/blog/products/data-analytics/data-integration-from-oracle-to-google-bigquery-using-striim/",
  "category": [
    "Google Cloud",
    "Data Analytics"
  ],
  "media:content": "",
  "og": {
    "type": "article",
    "title": "Real-time Data Integration from Oracle to Google BigQuery Using Striim",
    "description": "A performance study on real-time data Integration from Oracle to Google BigQuery Using Striim",
    "image": "https://storage.googleapis.com/gweb-cloudblog-publish/images/da_2022.max-600x600.jpg",
    "site_name": "Google",
    "url": "https://cloud.google.com/blog/products/data-analytics/data-integration-from-oracle-to-google-bigquery-using-striim/"
  },
  "author": [
    {
      "name": "Sudhir Hasbe",
      "title": "Sr. Director of Product Management, Google Cloud",
      "department": "",
      "company": ""
    },
    {
      "name": "Alok Pareek",
      "title": "Founder & EVP Products, Striim",
      "department": "",
      "company": ""
    }
  ]
}