{
  "title": "Hinton's Dropout in 3 Lines of Python",
  "description": "<p><b>Summary:</b> Dropout is a vital feature in almost every state-of-the-art neural network implementation. This tutorial teaches how to install Dropout into a neural network in only a few lines of Python code. Those who walk through this tutorial will finish with a working Dropout implementation and will be empowered with the intuitions to install it and tune it in any neural network they encounter.</p>\n\n<p><b>Followup Post:</b> I intend to write a followup post to this one adding popular features leveraged by <a href=\"http://rodrigob.github.io/are_we_there_yet/build/classification_datasets_results.html\">state-of-the-art approaches</a>. I'll tweet it out when it's complete <a href=\"https://twitter.com/iamtrask\">@iamtrask</a>. Feel free to follow if you'd be interested in reading more and thanks for all the feedback!</p>\n\n<p><h3>Just Give Me The Code:</h3>\n<pre class=\"brush:python; highlight:[4,9,10]\">\nimport numpy as np\nX = np.array([ [0,0,1],[0,1,1],[1,0,1],[1,1,1] ])\ny = np.array([[0,1,1,0]]).T\nalpha,hidden_dim,dropout_percent,do_dropout = (0.5,4,0.2,True)\nsynapse_0 = 2*np.random.random((3,hidden_dim)) - 1\nsynapse_1 = 2*np.random.random((hidden_dim,1)) - 1\nfor j in xrange(60000):\n    layer_1 = (1/(1+np.exp(-(np.dot(X,synapse_0)))))\n    if(do_dropout):\n        layer_1 *= np.random.binomial([np.ones((len(X),hidden_dim))],1-dropout_percent)[0] * (1.0/(1-dropout_percent))\n    layer_2 = 1/(1+np.exp(-(np.dot(layer_1,synapse_1))))\n    layer_2_delta = (layer_2 - y)*(layer_2*(1-layer_2))\n    layer_1_delta = layer_2_delta.dot(synapse_1.T) * (layer_1 * (1-layer_1))\n    synapse_1 -= (alpha * layer_1.T.dot(layer_2_delta))\n    synapse_0 -= (alpha * X.T.dot(layer_1_delta))\n</pre>\n</p>\n\n<h2 class=\"section-heading\">Part 1: What is Dropout?</h2>\n\n<p>As discovered in the <a href=\"http://iamtrask.github.io/2015/07/27/python-network-part2/\">previous post</a>, a neural network is a glorified search problem. Each node in the neural network is searching for correlation between the input data and the correct output data.</p>\n\n<p><img class=\"img-responsive\" width=\"100%\" src=\"/img/sgd_randomness_ensemble.png\" alt=\"\" /></p>\n\n<p>\nConsider the graphic above from the previous post. The line represents the error the network generates for every value of a particular weight. The low-points (READ: low error) in that line signify the weight \"finding\" points of correlation between the input and output data. The balls in the picture signify various weights. They are trying to find those low points.</p>\n\n<p>Consider the color. The ball's initial positions are randomly generated (just like weights in a neural network). If two balls randomly start in the same colored zone, they will converge to the same point. This makes them redundant! They're wasting computation and memory! This is exactly what happens in neural networks.\n</p>\n\n<p><b>Why Dropout:</b> Dropout helps prevent weights from converging to identical positions. It does this by <b>randomly turning nodes off</b> when forward propagating. It then back-propagates with all the nodes turned on. Letâ€™s take a closer look.</p>\n\n<h2 class=\"section-heading\">Part 2: How Do I Install and Tune Dropout?</h2>\n\n<p>The highlighted code above demonstrates how to install dropout. To perform dropout on a layer, you randomly set some of the layer's values to 0 during forward propagation. This is demonstrated on <b>line 10</b>.</p>\n\n<p><b>Line 9:</b> parameterizes using dropout at all. You see, you only want to use Dropout during <b>training</b>. Do not use it at runtime or on your testing dataset.  </p>\n\n<p><b>EDIT: Line 9:</b> has a second portion to increase the size of the values being propagated forward. This happens in proportion to the number of values being turned off. A simple intuition is that if you're turning off half of your hidden layer, you want to double the values that ARE pushing forward so that the output compensates correctly. Many thanks to <a href=\"https://twitter.com/karpathy\">@karpathy</a> for catching this one.</p>\n\n<h3>Tuning Best Practice</h3>\n\n<p><b>Line 4:</b> parameterizes the dropout_percent. This affects the probability that any one node will be turned off. A good initial configuration for this for hidden layers is 50%. If applying dropout to an input layer, it's best to not exceed 25%.</p>\n\n<p>Hinton advocates tuning dropout in conjunction with tuning the size of your hidden layer. Increase your hidden layer size(s) with dropout turned off until you perfectly fit your data. Then, using the same hidden layer size, train with dropout turned on. This should be a nearly optimal configuration. Turn off dropout as soon as you're done training and voila! You have a working neural network!</p>\n\n<!-- \n<h3 class=\"section-heading\">Part 3: Why does Dropout Work?</h3>\n\n<i> (This section builds upon concepts laid out in the <a href=\"http://iamtrask.github.io/2015/07/27/python-network-part2/\">previous post</a>.)</i>\n\n<p>Imagine that you had two identical values in your hidden layer. By \"idential\", I mean that their input weights were the same, so they turned on and off at exactly the same time. Given what we learned in Section 1 of this post, we know that this is a very real possibility.</p>\n\n<p>This means that each weight was contributing half of an identical \"vote\" to the output. What if we turned one off and kept training? In this case, the network would start making errors because it was trained to expect two nodes to make this vote. In response, it would <b>turn up the volume</b> on the node that was still turned on until it was casting a <i>full vote</i> instead of a <i>half vote</i>.</p>\n\n<p>So, what happens to the node that's turned off? Well, under the dropout approach, it's not turned off all the time. It's only turned off in the \"forward propagation\" step. It's not turned off in the \"backward propagation\" step. This means that it still updates its weights to account for the error in the network. However, since it's turned off, each of its updates doesn't actually affect the error of the network. So, we're updating a weight that's actually quite irrelevant to the quality of the network. Why would we do this?</p>\n\n<p>Remember that when we update a weight, it converges to reduce the error. Once it has reduced the error, the network doesn't backprop anything in that direction anymore. So, when our \"turned on\" node starts having a \"full vote\", the \"turned off\" node doesn't feel the pull in that direction anymore.</p>\n\n<p>So if the turned off node is feeling the pull of the network's error, EXCEPT for the pull in the direction of the \"turned on\" node, then it is free to ESCAPE to find a unique position in the network! <b>This is why dropout works!</b></p>\n\n<p>Another intuitive perspective on dropout is that it is a form of <b>model averaging</b>. Basically, if you force the network to converge using random subsets of its hidden nodes, you're forcing nodes to not have to \"rely\" on each other, because you don't know if your neighbor is going to be turned on or off. This forces each node to be a very valuable \"individual contributer\" instead of converging to similar places as its neighbors. (This is the more common explanation.)</p>\n\n<p><b>Wallah!</b> Now we know how dropout works! Well done!</p>\n\n<img class=\"img-responsive\" width=\"100%\" src=\"/img/ford.jpg\" alt=\"\">\n\n<hr />\n -->\n<h2 class=\"section-heading\">Want to Work in Machine Learning?</h2>\n\n<p>\nOne of the best things you can do to learn Machine Learning is to have a job where you're <b>practicing Machine Learning professionally</b>. I'd encourage you to check out the <a href=\"http://www.digitalreasoning.com/careers\">positions at Digital Reasoning</a> in your job hunt. If you have questions about any of the positions or about life at Digital Reasoning, feel free to send me a message on <a href=\"https://www.linkedin.com/profile/view?id=226572677&amp;trk=nav_responsive_tab_profile\">my LinkedIn</a>. I'm happy to hear about where you want to go in life, and help you evaluate whether Digital Reasoning could be a good fit.\n</p>\n\n<p>If none of the positions above feel like a good fit. Continue your search! Machine Learning expertise is one of the <b>most valuable skills in the job market today</b>, and there are many firms looking for practitioners. Perhaps some of these services below will help you in your hunt.\n\n<style type=\"text/css\">#indJobContent{padding-bottom: 5px;}#indJobContent .company_location{font-size: 11px;overflow: hidden;display:block;}#indJobContent.wide .job{display:block;float:left;margin-right: 5px;width: 135px;overflow: hidden}#indeed_widget_wrapper{position: relative;font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif;font-size: 13px;font-weight: normal;line-height: 18px;padding: 10px;height: auto;overflow: hidden;}#indeed_widget_header{font-size:18px; padding-bottom: 5px; }#indeed_search_wrapper{clear: both;font-size: 12px;margin-top: 5px;padding-top: 5px;}#indeed_search_wrapper label{font-size: 12px;line-height: inherit;text-align: left; margin-right: 5px;}#indeed_search_wrapper input[type='text']{width: 100px; font-size: 11px; }#indeed_search_wrapper #qc{float:left;}#indeed_search_wrapper #lc{float:right;}#indeed_search_wrapper.stacked #qc, #indeed_search_wrapper.stacked #lc{float: none; clear: both;}#indeed_search_wrapper.stacked input[type='text']{width: 150px;}#indeed_search_wrapper.stacked label{display: block;padding-bottom: 5px;}#indeed_search_footer{width:295px; padding-top: 5px; clear: both;}#indeed_link{position: absolute;bottom: 1px;right: 5px;clear: both;font-size: 11px; }#indeed_link a{text-decoration: none;}#results .job{padding: 1px 0px;}#pagination { clear: both; }</style><style type=\"text/css\">\n#indeed_widget_wrapper{ width: 50%; height: 600px; background: #FFFFFF;}\n#indeed_widget_wrapper{ border: 1px solid #DDDDDD; }\n#indeed_widget_wrapper, #indeed_link a{ color: #000000;}\n#indJobContent, #indeed_search_wrapper{ border-top: 1px solid #DDDDDD; }\n#indJobContent a { color: #00c; }\n#indeed_widget_header{ color: #000000; }\n</style>\n<script type=\"text/javascript\">\nvar ind_pub = '9172611916208179';\nvar ind_el = 'indJobContent';\nvar ind_pf = '';\nvar ind_q = 'Machine Learning';\nvar ind_l = '';\nvar ind_chnl = 'none';\nvar ind_n = 15;\nvar ind_d = 'http://www.indeed.com';\nvar ind_t = 40;\nvar ind_c = 30;\n</script>\n<script type=\"text/javascript\" src=\"http://www.indeed.com/ads/jobroll-widget-v3.js\"></script>\n\n<div id=\"indeed_widget_wrapper\" style=\"\">\n<div id=\"indeed_widget_header\">Machine Learning Jobs</div>\n\n<div id=\"indJobContent\" class=\"\"></div>\n\n<div id=\"indeed_search_wrapper\">\n<script type=\"text/javascript\">\nfunction clearDefaults() {\nvar formInputs = document.getElementById('indeed_jobform').elements;\nfor(var i = 0; i < formInputs.length; i++) {\nif(formInputs[i].value == 'title, keywords' || formInputs[i].value == 'city, state, or zip') {\nformInputs[i].value = '';\n}\n}\n}\n</script>\n<form onsubmit=\"clearDefaults();\" method=\"get\" action=\"http://www.indeed.com/jobs\" id=\"indeed_jobform\" target=\"_new\">\n<div id=\"qc\"><label>What:</label><input type=\"text\" onfocus=\"this.value=&quot;&quot;\" value=\"title, keywords\" name=\"q\" id=\"q\" /></div>\n<div id=\"lc\"><label>Where:</label><input type=\"text\" onfocus=\"this.value=&quot;&quot;\" value=\"city, state, or zip\" name=\"l\" id=\"l\" /></div>\n<div id=\"indeed_search_footer\">\n<div style=\"float:left\"><input type=\"submit\" value=\"Find Jobs\" class=\"findjobs\" /></div>\n</div>\n<input type=\"hidden\" name=\"indpubnum\" id=\"indpubnum\" value=\"9172611916208179\" />\n</form>\n</div>\n\n<div id=\"indeed_link\">\n<a title=\"Job Search\" href=\"http://www.indeed.com/\" target=\"_new\">jobs by <img alt=\"Indeed\" src=\"http://www.indeed.com/p/jobsearch.gif\" style=\"border: 0;vertical-align: bottom;\" />\n</a>\n</div>\n</div>\n\n\n<div style=\"position:absolute; margin-top:-600px; margin-left:400px\" id=\"MonsterJobSearchResultPlaceHolderNXAAAA_e_e\" class=\"xmns_distroph\"></div>\n<script type=\"text/javascript\">\n(function() {\n  var oScript = document.createElement('script');\n  oScript.type = 'text/javascript';\n  oScript.async = true;\n  oScript.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'publisher.monster.com/Services/WidgetHandler.ashx?WidgetID=EAAQUeLsOxB7mqhf97nwIpkVXQ--&Verb=Initialize';\n  var oParent = document.getElementsByTagName('script')[0];\n  oParent.parentNode.insertBefore(oScript, oParent);\n})();\n</script>\n<a id=\"monsterBrowseLinkNXAAAA_e_e\" class=\"monsterBrowseLink fnt4\" href=\"http://jobsearch.monster.com/jobs/?q=Machine-Learning\">View More Job Search Results</a>\n\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/shCore.css\" />\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/shThemeDefault.css\" />\n<script src=\"/js/shCore.js\"></script>\n<script src=\"/js/shLegacy.js\"></script>\n<script src=\"/js/shBrushPython.js\"></script>\n\n\n<script type=\"text/javascript\">\n\t// SyntaxHighlighter.config.bloggerMode = true;\n\tSyntaxHighlighter.config.toolbar = true;\n    SyntaxHighlighter.all();\n</script>\n</p>",
  "pubDate": "Tue, 28 Jul 2015 12:00:00 +0000",
  "link": "https://iamtrask.github.io/2015/07/28/dropout/",
  "guid": "https://iamtrask.github.io/2015/07/28/dropout/"
}