{
  "title": "Traffic patterns of the year: 2014 edition",
  "link": "",
  "published": "2014-10-21T23:47:00-07:00",
  "updated": "2014-10-21T23:47:00-07:00",
  "author": {
    "name": "Dustin McIntosh"
  },
  "id": "tag:efavdb.com,2014-10-21:/traffic-patterns-of-the-year-2014-edition",
  "summary": "<p><a href=\"https://efavdb.com/wp-content/uploads/2014/10/Mode1.png\"><img alt=\"Mode1\" src=\"https://efavdb.com/wp-content/uploads/2014/10/Mode1.png\"></a></p>\n<p><a href=\"https://efavdb.com/wp-content/uploads/2014/10/Mode2.png\"><img alt=\"Mode2\" src=\"https://efavdb.com/wp-content/uploads/2014/10/Mode2.png\"></a></p>\n<p>As we mentioned in the last post, there are currently over 2000 active speed loop detectors within the Bay Area highway system.  The information provided by these loops is often highly redundant because speeds at neighboring sites typically differ little from one another.  This observation suggests that a higher level …</p>",
  "content": "<p><a href=\"https://efavdb.com/wp-content/uploads/2014/10/Mode1.png\"><img alt=\"Mode1\" src=\"https://efavdb.com/wp-content/uploads/2014/10/Mode1.png\"></a></p>\n<p><a href=\"https://efavdb.com/wp-content/uploads/2014/10/Mode2.png\"><img alt=\"Mode2\" src=\"https://efavdb.com/wp-content/uploads/2014/10/Mode2.png\"></a></p>\n<p>As we mentioned in the last post, there are currently over 2000 active speed loop detectors within the Bay Area highway system.  The information provided by these loops is often highly redundant because speeds at neighboring sites typically differ little from one another.  This observation suggests that a higher level, “macro” picture of traffic conditions could provide more insight:  Rather than stating the speed at each detector, we might instead offer info like “101S is rather slow right now”.   In fact, we aim to characterize traffic conditions as efficiently as possible.  To move towards this goal, we have carried out a principal component analysis (<span class=\"caps\">PCA</span>)<span class=\"math\">\\(^1\\)</span> of the full 2014 (year to date) <span class=\"caps\">PEMS</span> data&nbsp;set.</p>\n<p>As described in [1] below, <span class=\"caps\">PCA</span> provides us with a slick, automated method for identifying the most common “traffic patterns” or “modes” that get excited in our system.  By adding together these patterns — with appropriate time-specific amplitudes — we can reconstruct the site-by-site traffic conditions observed at any particular moment.  Importantly, summing over only the most significant modes will provide us with a system-tailored, minimal-loss method of data compression that will simplify our later prediction analysis. We will discuss this compression benefit further in the next post. Here, we present the two dominant modes of the Bay Area traffic system (see figures above). Notice that the first is fairly uniform, which presumably captures some nearly-site-independent changes in mean speed associated with night vs. daytime driving. In contrast, the second mode captures some interesting structure, showing slowdowns for some highways/directions and speedups for others. Evidently, this structure is the second most highly exhibited pattern in the Bay Area system; We couldn’t have intuited this pattern, but it has been captured automatically via our <span class=\"caps\">PCA</span>.</p>\n<p>[1]  *Statistical physics of <span class=\"caps\">PCA</span>:  *  One way of thinking about <span class=\"caps\">PCA</span> as applied here is to imagine that the traffic system is harmonic.  That is, we suppose that the traffic dynamics observed can be characterized by an energy cost function that is quadratic in the speeds of the different loops, measured relative to their average values, <span class=\"math\">\\(E = \\frac{\\beta^{-1}}{2} \\delta \\textbf{v}^{T}  \\cdot H \\cdot \\delta \\textbf{v}.\\)</span>   Here, <span class=\"math\">\\(\\delta v_i = v_i - \\langle v_i \\rangle $ and $H\\)</span> is a matrix Hamiltonian.  Under some effective, <a href=\"http://en.wikipedia.org/wiki/Partition_function_(statistical_mechanics)#Canonical_partition_function\">thermal driving</a>, the pair correlation for two sites will be given by <span class=\"math\">\\(\\langle \\delta v_a  \\delta v_b \\rangle \\equiv<div class=\"math\">$$ \\frac{1}{Z} \\int_{{\\delta \\textbf{v}_i }} e^{- \\frac{1}{2} \\delta \\textbf{v}^{T}  \\cdot H \\cdot \\delta \\textbf{v}} \\delta v_a  \\delta v_b =$$</div> H^{-1}_{ab}\\)</span>.  It is this pair correlation function that is measured when one carries out a <span class=\"caps\">PCA</span> analysis, and the matrix <span class=\"math\">\\(H^{-1}\\)</span> is called the covariance matrix.  Its eigenvectors are the modes of the system — the independent traffic patterns that we discuss above.  The low lying modes are those with a larger <span class=\"math\">\\(H^{-1}\\)</span> eigenvalue.  These have low energy, are consequently often highly excited, and generally dominate the traffic conditions that we&nbsp;observe.</p>\n<script type=\"text/javascript\">if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {\n    var align = \"center\",\n        indent = \"0em\",\n        linebreak = \"false\";\n\n    if (false) {\n        align = (screen.width < 768) ? \"left\" : align;\n        indent = (screen.width < 768) ? \"0em\" : indent;\n        linebreak = (screen.width < 768) ? 'true' : linebreak;\n    }\n\n    var mathjaxscript = document.createElement('script');\n    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';\n    mathjaxscript.type = 'text/javascript';\n    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';\n\n    var configscript = document.createElement('script');\n    configscript.type = 'text/x-mathjax-config';\n    configscript[(window.opera ? \"innerHTML\" : \"text\")] =\n        \"MathJax.Hub.Config({\" +\n        \"    config: ['MMLorHTML.js'],\" +\n        \"    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" +\n        \"    jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" +\n        \"    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" +\n        \"    displayAlign: '\"+ align +\"',\" +\n        \"    displayIndent: '\"+ indent +\"',\" +\n        \"    showMathMenu: true,\" +\n        \"    messageStyle: 'normal',\" +\n        \"    tex2jax: { \" +\n        \"        inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" +\n        \"        displayMath: [ ['$$','$$'] ],\" +\n        \"        processEscapes: true,\" +\n        \"        preview: 'TeX',\" +\n        \"    }, \" +\n        \"    'HTML-CSS': { \" +\n        \"        availableFonts: ['STIX', 'TeX'],\" +\n        \"        preferredFont: 'STIX',\" +\n        \"        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" +\n        \"        linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" +\n        \"    }, \" +\n        \"}); \" +\n        \"if ('default' !== 'default') {\" +\n            \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n            \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n        \"}\";\n\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);\n}\n</script>",
  "category": [
    "",
    "",
    ""
  ]
}