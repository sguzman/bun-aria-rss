{
  "guid": "tag:blogger.com,1999:blog-6300367579216018061.post-2171353829393854564",
  "pubDate": "Tue, 17 Jun 2014 16:00:00 +0000",
  "atom:updated": "2014-11-27T20:01:15.414-08:00",
  "category": [
    "artificial intelligence",
    "gephi",
    "graph database",
    "graphs",
    "information theory",
    "james gleick",
    "jeff hawkins",
    "neo4j",
    "pattern recognition",
    "ray kurzweil"
  ],
  "title": "Hierarchical Pattern Recognition",
  "description": "<div>About a year ago I read about Ray Kurzweil's \"<a href=\"http://en.wikipedia.org/wiki/How_to_Create_a_Mind#Pattern_Recognition_Theory_of_Mind\" target=\"_blank\">Pattern Recognition Theory of Mind</a>\", which he articulates in his book, \"<a href=\"http://en.wikipedia.org/wiki/How_to_Create_a_Mind\" target=\"_blank\">How to Create a Mind</a>\". I picked up the book after struggling with the idea of implementing a deep learning algorithm for parsing natural language text on Wikipedia. My goal was to discover links in volumes of text that were not already linked. I ended up developing all kinds of cool heuristics to do this, mostly by a lot of trial and error. King of these heuristics was a pretty simple algorithm at the core of the library that would find redundancies in batches of text content.&nbsp;</div><div><br /></div><div>How this worked is if a phrase was mentioned repeatedly in a collection of about 50 sentences, then I could extract that phrase as a node and link it back to the pieces of content it belonged to. Every now and then you'll get a reference to another article's name, which can then be verified against Wikipedia's site index, which would provide more sentences to find repeated phrases within.<br /><br />I struggled with persistency because I knew how ugly my problem was for a relational database. I created some <a href=\"http://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model\" target=\"_blank\">entity-relationship models</a>, and implemented them using <a href=\"http://msdn.microsoft.com/en-us/data/ef.aspx\" target=\"_blank\">Entity Framework</a>&nbsp;over <a href=\"http://en.wikipedia.org/wiki/Microsoft_sql_server\" target=\"_blank\">Microsoft SQL Server</a>. It worked, kind of.&nbsp;I waited patiently to happen upon a better solution. Thankfully I did, and using a&nbsp;<a href=\"http://www.neo4j.com/download\" target=\"_blank\">graph database</a> I was able to take my cool little algorithms and solve my persistency problem at scale.</div><a name='more'></a><div><br /></div><div>Since <a href=\"http://www.neo4j.com/\" target=\"_blank\">Neo4j</a> allowed easy integration with graph visualization tools, I started producing some compelling images of my data. The result would yield a nice looking visualization of the contents of my Neo4j database in <a href=\"https://gephi.org/\" target=\"_blank\">Gephi</a>.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-wDbe665YKZ4/U5_Z8fb7nnI/AAAAAAAAA5o/SYM5JnyUFNE/s1600/wikipedia-text.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://1.bp.blogspot.com/-wDbe665YKZ4/U5_Z8fb7nnI/AAAAAAAAA5o/SYM5JnyUFNE/s1600/wikipedia-text.png\" height=\"400\" width=\"400\" /></a></div><div>The image to the left shows article names surrounded by regular phrases that are shared by the content of many different articles on Wikipedia. The algorithm starts with a seed article, which in this case I chose the article \"Dark Matter\" as the seed.<br /><br />As phrases are discovered within the content of the article titled \"Dark Matter\", they are compared to the Wikipedia site index. If a positive match is found from a phrase in one article to another's name, that article's content is then parsed using the same process.<br /><br />After around 25 articles were parsed, linked, and stored as a graph, a fairly interesting image of the data emerges. Using PageRank in combination with a force directed layout, a wonderful thing appeared, a map of knowledge.<br /><br />Naturally, I got pretty excited. I was reading a lot of <a href=\"http://en.wikipedia.org/wiki/James_Gleick\" target=\"_blank\">James Gleick's</a> books on the history of <a href=\"http://en.wikipedia.org/wiki/Chaos_theory\" target=\"_blank\">Chaos Theory</a> and <a href=\"http://en.wikipedia.org/wiki/Information_theory\" target=\"_blank\">Information Theory</a>. I started anew with a different article name, this time \"<a href=\"http://en.wikipedia.org/wiki/Artificial_intelligence\" target=\"_blank\">Artificial Intelligence</a>\". I was feeling lucky. I started up the process, and let it be for about a day. I came back the next morning, imported the data to Gephi, did the PageRank and layout. The image below resulted.<br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-Ky0p3pnupIg/UQf3fFSlx-I/AAAAAAAAAkc/4Nx4J15vCJA/s1600/Semantic_Universe.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-Ky0p3pnupIg/UQf3fFSlx-I/AAAAAAAAAkc/4Nx4J15vCJA/s1600/Semantic_Universe.png\" height=\"640\" width=\"640\" /></a></div><br />The pattern started to emerge. Countries were situated around countries, mathematical topics next to mathematical topics, science fiction bordered topics about artificial intelligence. It was a genuine kind of discovery, the kind of thing that makes you tweet James Gleick with a presumptuous explanation that the universe is a network of information.<br /><br /><blockquote class=\"twitter-tweet\" lang=\"en\"><a href=\"https://twitter.com/JamesGleick\">@JamesGleick</a> You set the challenge, we answered it. The universe may be an information network that runs off entropy. <a href=\"http://t.co/1Hacy9F4\">http://t.co/1Hacy9F4</a><br />— Kenny Bastani (@kennybastani) <a href=\"https://twitter.com/kennybastani/statuses/296344799844384768\">January 29, 2013</a></blockquote><script async=\"\" charset=\"utf-8\" src=\"//platform.twitter.com/widgets.js\"></script> I was far off point, because what I had stumbled upon didn't require any inflation or grand explanation. The image is compelling because it looks a lot like a geographical map of human knowledge. Much like Google maps, you could zoom into this graph and observe how things are connected, you could find causality at the finest granularity.<br /><br />Since then I have been on a pursuit to learn more about the constraints of theoretical computer science. Mainly, how the heuristics I developed could be improved upon and made scalable for other kinds of unsupervised machine learning. Late last year I joined up with the <a href=\"http://www.neotechnology.com/\" target=\"_blank\">company</a> who created the database technology that allowed me to move past my graph persistency issues. This move allowed me to make graphs my life and ride the wave of an entirely new technology <a href=\"http://db-engines.com/en/blog_post/26\" target=\"_blank\">as it disrupts and bites off a piece of its own market</a>.<br /><br />A part of this journey has been honing my skills as a Java developer and getting into the Neo4j internals that provide the extreme performance needed to do high-volume pattern recognition at scale.<br /><br />Let's assume that each node is not just data but a code block. Each block has a very specific purpose, to take an input and produce an output. Each node could therefore be thought of as a <a href=\"http://en.wikipedia.org/wiki/Finite-state_machine\" target=\"_blank\">finite-state machine</a>, which performs a bit of computation, which causes its state to change according to the result of the computation. Consider the graph diagram below.</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"http://3.bp.blogspot.com/-e_PVtiJrBRg/U5_Vn3r_aUI/AAAAAAAAA5c/niGfyGEK9bQ/s1600/neo4j-pattern-recognition-engine.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" src=\"http://3.bp.blogspot.com/-e_PVtiJrBRg/U5_Vn3r_aUI/AAAAAAAAA5c/niGfyGEK9bQ/s1600/neo4j-pattern-recognition-engine.png\" height=\"312\" width=\"640\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Hierarchical Pattern Recognition Graph</td></tr></tbody></table><div>The ∆ symbol represents something similar to a <a href=\"http://en.wikipedia.org/wiki/Qubit\" target=\"_blank\">qubit</a>, which could be 1 or 0 or a superposition of both. I realize the metaphor of a qubit may be confusing, so to simplify this, a ∆ is a wildcard match on an input represented as a bit, being 1 or 0. As a stream of bits are processed, new nodes are created that have some statistical probability of being selected based on a history of matches on training data. As the number of matches of some threshold&nbsp;θ is surpassed, the leaf node changes states and produces two or more leaf nodes, depending on the number of ∆ in the pattern template of the node.<br /><br />The new leaf nodes inherit the template of the parent node, but replace each ∆ with the bit selected based on the statistical probability measured over all previous matches for the parent. New ∆ wildcards encapsulate the new templates that are produced. This natural selection of patterns produces an algorithmic data structure from input data. Labels can be connected to nodes from labeled training data, like faces in photos or images of text.<br /><br />This is largely inspired by Ray Kurzweil's <a href=\"http://en.wikipedia.org/wiki/How_to_Create_a_Mind#Pattern_Recognition_Theory_of_Mind\" target=\"_blank\">PRTM</a> and Jeff Hawkin's <a href=\"http://en.wikipedia.org/wiki/Hierarchical_Temporal_Memory\" target=\"_blank\">Hierarchical Temporal Memory</a>. Both approaches teeter on the cusp of some kind of deep learning.<br /><br />Quote from the Wikipedia article about <a href=\"http://deep_learning_in_the_human_brain/\" target=\"_blank\">Deep Learning</a>:<br /><blockquote class=\"tr_bq\"><span style=\"background-color: white; color: #252525; font-family: sans-serif; font-size: 14px; line-height: 22.399999618530273px;\">...These models share the interesting property that various proposed learning dynamics in the brain (e.g., a wave of neurotrophic growth factor) conspire to support the self-organization of just the sort of inter-related neural networks utilized in the later, purely computational deep learning models, and which appear to be analogous to one way of understanding the neocortex of the brain as a hierarchy of filters where each layer captures some of the information in the operating environment, and then passes the remainder, as well as modified base signal, to other layers further up the hierarchy.</span></blockquote>That's all for now. Stay tuned for updates.&nbsp;</div></br><a href=\"https://news.ycombinator.com/submit\" class=\"hn-button\" data-title=\"Hierarchical Pattern Recognition\" data-url=\"http://www.kennybastani.com/2014/06/hierchical-pattern-recognition.html\" data-count=\"horizontal\">Vote on Hacker News</a><script type=\"text/javascript\">var HN=[];HN.factory=function(e){return function(){HN.push([e].concat(Array.prototype.slice.call(arguments,0)))};},HN.on=HN.factory(\"on\"),HN.once=HN.factory(\"once\"),HN.off=HN.factory(\"off\"),HN.emit=HN.factory(\"emit\"),HN.load=function(){var e=\"hn-button.js\";if(document.getElementById(e))return;var t=document.createElement(\"script\");t.id=e,t.src=\"//hn-button.herokuapp.com/hn-button.js\";var n=document.getElementsByTagName(\"script\")[0];n.parentNode.insertBefore(t,n)},HN.load();</script>",
  "link": "https://www.kennybastani.com/2014/06/hierchical-pattern-recognition.html",
  "author": "noreply@blogger.com (Kenny Bastani)",
  "media:thumbnail": "",
  "thr:total": 0
}