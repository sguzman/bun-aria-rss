{
  "title": "GitHub's one-dimensional view of open source contributions",
  "link": "",
  "published": "2016-11-06T16:00:00-08:00",
  "updated": "2016-11-06T16:00:00-08:00",
  "author": {
    "name": "Wes McKinney"
  },
  "id": "tag:wesmckinney.com,2016-11-06:/blog/github-open-source-contributions/",
  "summary": "<p><strong>TL;DR</strong> One of the most harmful parts of the GitHub platform is the code\ncontribution calendar. This \"hacker score card\" overemphasizes the value of\ncommits over the other kinds of important contributions to open source\nprojects, like doing code reviews and discussing bugs and new features on the\nissue tracker.</p>",
  "content": "<p><strong>TL;DR</strong> One of the most harmful parts of the GitHub platform is the code\ncontribution calendar. This \"hacker score card\" overemphasizes the value of\ncommits over the other kinds of important contributions to open source\nprojects, like doing code reviews and discussing bugs and new features on the\nissue tracker.</p>\n\n\n<h2>A skewed view of reality</h2>\n<p>We love it and we hate it: the GitHub contribution calendar.</p>\n<p><center>\n<img src=\"../../images/github_contributions.png\" alt=\"github_contrib_calendar\" width=\"80%\"/>\n</center></p>\n<p>Some of the common grievances against the calendar, until very recently, were:</p>\n<ul>\n<li>\n<p>It only showed 1 year worth of prior work. There are projects on GitHub with\n  10 or even <a href=\"https://github.com/postgres/postgres/graphs/contributors\">20 years of contribution history</a>. So if GitHub is going to be\n  part of your resume, you need to be able to see your entire life's work.</p>\n</li>\n<li>\n<p>It only showed public contributions. Now you can also show activity from\n  private repositories.</p>\n</li>\n</ul>\n<p>I personally found this last item a bit annoying, because it implicitly\nreinforces the bias against talented software engineers who choose to spend\ntheir time supporting their families through paid work rather than spending\nextracurricular time doing unpaid open source work. Having a respectable GitHub\npedigree is only one way to get a feel for someone's value as an engineer.</p>\n<p>For me, the worst part of the contribution calendar is that it only shows\ncommits / pull requests and issue creation. If you've been involved in a large\nopen source project, the idea that writing code is the only valuable way to\ncontribute is a bit silly. In the pandas project for example, the core team\nspends significantly more time on such matters as:</p>\n<ul>\n<li>\n<p>Code review and merging pull requests (pandas has had over 5000 pull\n  requests, and rarely has fewer than 100 open at any given time).</p>\n</li>\n<li>\n<p>Development roadmapping and design discussions.</p>\n</li>\n<li>\n<p>Categorizing and prioritizing a sprawling issue tracker, which can have\n  hundreds or thousands of open issues. These categorizations also help new\n  contributors find issues to work on to get involved in the project (see\n  \"Difficulty: Low\" issues in pandas).</p>\n</li>\n<li>\n<p>Working with issue reporters to create bug reproductions or to help\n  understand new features or requirements.</p>\n</li>\n</ul>\n<p>In fact, I would credit a great deal of pandas's success to the fact that we\nhave such engaged, responsive, and empathic core developers. I can confirm, for\nexample, that <a href=\"https://github.com/jreback\">Jeff Reback</a> is a real person with a day job and a family\nrather than a sophisticated AI watching the pandas GitHub issues 24/7/365. It's\nnot uncommon to get feedback on pull requests and have bug fixes merged within\n24-72 hours of reporting. This is incredibly important to making users feel\ncomfortable with relying on a piece of software like pandas in production.</p>\n<h2>Improving the score card</h2>\n<p>It seems a bit cynical to suggest that some people might only contribute to an\nopen source project if it helps them with their \"GitHub High Score\". You\ncurrently get points on your profile for commits, but not reviewing code or\nparticipating in discussions on the issue tracker. I would really like to see\nthis change.</p>\n<p>As an aside, one of the things I like about the Apache Software Foundation's\nsemi-formalized development culture is that becoming a committer or PMC member\nof a project requires you to do more than simply write patches. You earn social\n\"karma\" through code review, e-mail and JIRA discussions, user community\nengagement, and so forth.</p>"
}