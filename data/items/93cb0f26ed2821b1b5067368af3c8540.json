{
  "title": "What&#8217;s New in DataPipeline 6.0?",
  "link": "https://northconcepts.com/blog/2020/10/19/whats-new-in-datapipeline-6-0/",
  "comments": "https://northconcepts.com/blog/2020/10/19/whats-new-in-datapipeline-6-0/#respond",
  "pubDate": "Mon, 19 Oct 2020 04:08:55 +0000",
  "dc:creator": "The DataPipeline Team",
  "category": [
    "Data Pipeline",
    "News"
  ],
  "guid": "https://northconcepts.com/blog/?p=2215",
  "description": "<p> [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://northconcepts.com/blog/2020/10/19/whats-new-in-datapipeline-6-0/\">What&#8217;s New in DataPipeline 6.0?</a> appeared first on <a rel=\"nofollow\" href=\"https://northconcepts.com/blog\">Data Pipeline</a>.</p>\n",
  "content:encoded": "<p><img class=\"alignnone wp-image-2329 size-full\" src=\"https://northconcepts.com/blog/wp-content/uploads/2020/10/pexels-neosiam-625219_text_new.jpg\" width=\"1280\" height=\"853\" srcset=\"https://northconcepts.com/blog/wp-content/uploads/2020/10/pexels-neosiam-625219_text_new.jpg 1280w, https://northconcepts.com/blog/wp-content/uploads/2020/10/pexels-neosiam-625219_text_new-300x200.jpg 300w, https://northconcepts.com/blog/wp-content/uploads/2020/10/pexels-neosiam-625219_text_new-768x512.jpg 768w, https://northconcepts.com/blog/wp-content/uploads/2020/10/pexels-neosiam-625219_text_new-1024x682.jpg 1024w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>We&#8217;re pleased to announce the release of DataPipeline version 6.0. This release includes our new DataPipeline Foundations addon that brings decisioning, source-target data mapping, and other cool features to your software.</p>\n<p><span id=\"more-2215\"></span></p>\n<h2>DataPipeline Foundations</h2>\n<p>Last year we made the decision to release some of the tools we use to build apps as part of DataPipeline. The goal was to provide you with building<br />\nblocks that are common to many data processing applications. DataPipeline Foundations is the culmination of that effort.</p>\n<p>The new library includes:</p>\n<ol>\n<li>Data Mapping</li>\n<li>Decision Tables</li>\n<li>Decision Trees</li>\n<li>Declarative Pipelines</li>\n<li>Schema-based data Validation</li>\n<li>JDBC Metadata API</li>\n</ol>\n<p>You can learn more about DataPipeline Foundations and get started with it here: <a href=\"https://northconcepts.com/docs/foundations/\">https://northconcepts.com/docs/foundations/</a>.</p>\n<h2>BigDecimal and BigInteger Field Types</h2>\n<p>DataPipeline now fully supports large, arbitrary precision numbers natively across the framework. All readers, writers, and transformers have been<br />\nupdated to handle the new <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/core/FieldType.html#BIG_INTEGER\">BIG_INTEGER</a> and <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/core/FieldType.html#BIG_DECIMAL\">BIG_DECIMAL</a> field types. In cases where large numbers are not supported (like Excel), the new types are saved as strings and require explicit conversion from string when reading.</p>\n<p>See an example of <a href=\"https://northconcepts.com/docs/examples/read-bigdecimal-and-biginteger-from-an-excel-file/\"> how to read big decimals and big integers in Excel</a> .</p>\n<h2>Record Changes</h2>\n<p>The <a href=\"https://northconcepts.com/javadocs/index.html?com/northconcepts/datapipeline/core/Record.html\">Record class</a> has been updated with several new conveniences.</p>\n<ol>\n<li>Retrieving a field&#8217;s value at any level of nesting is now easier. The getFieldValueAsXXX(fieldPathExpression, defaultValue) methods were added to return a field&#8217;s value in a single call if the field exists and is not null, otherwise, they return the default value. See <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/core/Record.html#getFieldValueAsInteger-java.lang.String-java.lang.Integer-\"><br />\ngetFieldValueAsInteger</a> and <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/core/Record.html#getFieldValueAsBoolean-java.lang.String-java.lang.Boolean-\">getFieldValueAsBoolean</a> for examples.</li>\n<li>Checking if a field with a non-null value exists at any level of nesting can now be done in a single call using the new <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/core/Record.html#containsNonNullField-java.lang.String-\"><br />\ncontainsNonNullField(fieldPathExpression)</a> method.</li>\n<li>All fields in a record can now be retrieved in a safe-to-modify ArrayList using the new <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/core/Record.html#getFields--\">getFields()</a> method.</li>\n<li>The default Java serialization for Record has been overridden to improve performance and reduce the size of data emitted. See <a href=\"https://northconcepts.com/docs/examples/serialize-and-deserialize-records/\">how to serialize and deserialize records</a>.</li>\n</ol>\n<h2>Troubleshooting</h2>\n<p>We&#8217;ve made some improvements to the <a href=\"https://northconcepts.com/javadocs/index.html?com/northconcepts/datapipeline/diagnostic/Diagnostic.html\">Diagnostic class</a> to help troubleshoot your setup. Just call log method to see the data on your console or call toString() to capture the contents programmatically. See <a href=\"https://northconcepts.com/docs/examples/log-diagnostic-information/\">how to log diagnostic info</a>.</p>\n<h2>Expression Language</h2>\n<p>DataPipeline 6 adds improvements to the dynamic expression language (DPEL) around usability and safety.</p>\n<ol>\n<li>DPEL now allows you to control which methods can be called by supporting method blacklisting and whitelisting. It also blacklists potentially harmful packages and classes such as System and Runtime by default. You can always whitelist them to allow call if needed. See <a href=\"https://northconcepts.com/docs/examples/blacklist-and-whitelist-functions-in-dp-expression-language/\">how to blacklist and whitelist functions in the Datapipeline expression language</a>.</li>\n<li>Error messages have been improved and standardized across the board. Messages have also been moved to a central class as a precursor to<br />\nexternalization and translation (I18N) via resource bundles in future.</li>\n<li>One specific area of error message improvement is around method call in the expression language. Messages now clearly distinguish between the following causes, calling out the method name and expression:</li>\n<li>\n<ol type=\"a\">\n<li>No method found matching arguments.</li>\n<li>No class name specified for a method call. (DPEL requires fully-qualified names or aliases to fully-qualified names.)</li>\n<li>Method is blacklisted.</li>\n<li>Exception invoking method in expression.</li>\n</ol>\n</li>\n<li>DPEL now treats null as zero in cases where it&#8217;s appropriate to do so (like addition and subtraction: <code>1 + null == 1</code>). Otherwise, it returns null for expressions containing a null instead of throwing a NullPointerException (like divide and multiply: <code>null / 1 == null</code>).</li>\n<li>A few new functions were added to the DPEL (like capitalize, uncapitalize, and swapCase).</li>\n<li>The matchesRegex(String string, String regex, int flags) method was replaced with the easier to use matchesRegex(String string, String regex, boolean ignoreCase, boolean dotAll, boolean multiLine).</li>\n</ol>\n<h2>Older Changes &#8211; What&#8217;s New in DataPipeline 5.2</h2>\n<p>DataPipeline 5.2 was soft-released to several customers on an as-needed basis, here are those changes as part of 6.0.</p>\n<h2>Jackson Upgrade</h2>\n<p>The <a href=\"https://github.com/FasterXML/jackson\">Jackson, JSON library</a> dependency has been upgraded from version 1.x to version 2.x. DataPipeline 6 depends on the latest 2.x version of Jackson (2.11.3).</p>\n<h2>JDBC</h2>\n<p><a href=\"https://northconcepts.com/javadocs/index.html?com/northconcepts/datapipeline/jdbc/JdbcWriter.html\">JdbcWriter</a> now supports configurable insert strategies via the <a href=\"https://northconcepts.com/javadocs/index.html?com/northconcepts/datapipeline/jdbc/insert/IInsert.html\"> IInsert interface</a>. You can see the insert strategies and examples on the <a href=\"https://northconcepts.com/docs/jdbc-relational-databases/\">JDBC / Relational Databases</a> page along with the list of supported databases.</p>\n<p>Similarly, the <a href=\"https://northconcepts.com/javadocs/index.html?com/northconcepts/datapipeline/jdbc/JdbcUpsertWriter.html\"> JdbcUpsertWriter class</a> now includes specialized upsert strategies via the <a href=\"https://northconcepts.com/javadocs/index.html?com/northconcepts/datapipeline/jdbc/upsert/IUpsert.html\">IUpsert interface</a> for Oracle, PostgreSQL and Sybase. The list of supported upsert strategies is also on the <a href=\"https://northconcepts.com/docs/jdbc-relational-databases/\">JDBC / Relational Databases</a> page.</p>\n<h2>GitHub Examples</h2>\n<p>We&#8217;ve moved all our examples onto GitHub. See <a href=\"https://github.com/NorthConcepts/DataPipeline-Examples\">https://github.com/NorthConcepts/DataPipeline-Examples</a>.</p>\n<p>We&#8217;ll likely stop shipping examples in the zip file in the near future and may do away with the zip distribution altogether. Please email us if this<br />\nchange will present a problem for you.</p>\n<h2>Changelog</h2>\n<p>You can see the full set of changes in the change log: <a href=\"https://northconcepts.com/changelog\">https://northconcepts.com/changelog</a>.</p>\n<h2>Contact us</h2>\n<p>Please <a href=\"mailto:team@northconcepts.com\">email us</a> if you have questions or would like to discuss your specific use-cases and needs.</p>\n<p>Happy coding!</p>\n<p>The post <a rel=\"nofollow\" href=\"https://northconcepts.com/blog/2020/10/19/whats-new-in-datapipeline-6-0/\">What&#8217;s New in DataPipeline 6.0?</a> appeared first on <a rel=\"nofollow\" href=\"https://northconcepts.com/blog\">Data Pipeline</a>.</p>\n",
  "wfw:commentRss": "https://northconcepts.com/blog/2020/10/19/whats-new-in-datapipeline-6-0/feed/",
  "slash:comments": 0
}