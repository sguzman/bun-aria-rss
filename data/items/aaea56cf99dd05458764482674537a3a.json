{
  "title": "Machine learning APIs: which performs best?",
  "dc:creator": "Louis Dorard",
  "pubDate": "Mon, 04 May 2015 13:09:30 +0000",
  "link": "https://www.ownml.co/blog/machine-learning-apis-comparison",
  "guid": "5206b718e4b0bdc26006bae2:5206b959e4b0bdc26006be4a:55476086e4b08ca26f80dbcd",
  "description": "Amazon Machine Learning made a lot of noise when it came out last month. \nShortly afterwards, someone posted a link to Google Prediction API on \nHackerNews and it quickly became one of the most popular’s posts. Google’s \nproduct is quite similar to Amazon’s but it’s actually much older since it \nwas introduced in 2011. Anyway, this gave me the idea of comparing the \nperformance of Amazon’s new ML API with that of Google. For that, I used \nthe Kaggle “give me some credit” challenge. But I didn’t stop there: I also \nincluded startups who provide competing APIs in this comparison — namely, \nPredicSis and BigML. In this wave of new ML services, the giant tech \ncompanies are getting all the headlines, but bigger companies do not \nnecessarily have better products. Here's how I compared them and which \nresults I got… ",
  "content:encoded": "<p><a href=\"http://aws.amazon.com/machine-learning/\">Amazon ML</a> (Machine Learning) made a lot of noise <a href=\"http://www.infoq.com/news/2015/04/aws-launches-machine-learning\">when it came out</a> last month. Shortly afterwards, someone posted a link to <a href=\"https://cloud.google.com/prediction/\">Google Prediction API</a> on HackerNews and it quickly became one of the most popular’s posts. Google’s product is quite similar to Amazon’s but it’s actually much older since it was introduced in 2011. Anyway, this gave me the idea of comparing the performance of Amazon’s new ML API with that of Google. For that, I used the <a href=\"https://www.kaggle.com/c/GiveMeSomeCredit\">Kaggle “give me some credit” challenge</a>. But I didn’t stop there: I also included startups who provide competing APIs in this comparison — namely, <a href=\"http://www.predicsis.com\">PredicSis</a> and <a href=\"http://www.bigml.com\">BigML</a>. In this wave of new ML services, the giant tech companies are getting all the headlines, but bigger companies do not necessarily have better products. Here's how I compared them and which results I got… (if you just want the summary of my results, jump to the bottom of the article).</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/machinelearning?src=hash\">#machinelearning</a> <a href=\"https://twitter.com/hashtag/APIs?src=hash\">#APIs</a> perf.: <a href=\"https://twitter.com/amazon\">@Amazon</a> most accurate, <a href=\"https://twitter.com/bigmlcom\">@bigmlcom</a> fastest, <a href=\"https://twitter.com/PredicSis\">@PredicSis</a> best trade-off, <a href=\"https://twitter.com/google\">@Google</a> last <a href=\"http://t.co/m6ISYmIgAd\">http://t.co/m6ISYmIgAd</a></p>— Louis Dorard (@louisdorard) <a href=\"https://twitter.com/louisdorard/status/595219158775771136\">May 4, 2015</a></blockquote>\n<h2 id=\"methodology\">Methodology</h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n  \n  \n    \n\n      \n\n      \n        <figure class=\"\n              sqs-block-image-figure\n              intrinsic\n            \"\n        >\n          \n        \n        \n\n        \n          <a class=\"\n                sqs-block-image-link\n                \n          \n        \n              \" href=\"https://www.kaggle.com/c/GiveMeSomeCredit\"\n              \n          >\n            \n          \n            \n              <img class=\"thumb-image\" data-image=\"https://images.squarespace-cdn.com/content/v1/5206b718e4b0bdc26006bae2/1430745680157-D9GH3W9C1K5SKYH7ALXM/front_page.png\" data-image-dimensions=\"213x100\" data-image-focal-point=\"0.5,0.5\" alt=\"Image courtesy of Kaggle.com\" data-load=\"false\" data-image-id=\"5547724fe4b03724d71659a5\" data-type=\"image\" src=\"https://images.squarespace-cdn.com/content/v1/5206b718e4b0bdc26006bae2/1430745680157-D9GH3W9C1K5SKYH7ALXM/front_page.png?format=1000w\" />\n            \n          \n        \n          </a>\n        \n\n        \n          \n          <figcaption class=\"image-caption-wrapper\">\n            <p>Image courtesy of Kaggle.com</p>\n          </figcaption>\n        \n      \n        </figure>\n      \n\n    \n  \n\n\n\n<p>The ML problem in the Kaggle credit challenge is a binary classification one: you’re given a dataset of input-output pairs where each input corresponds to an individual who has applied for a credit and the output says whether he later defaulted or not. The idea is to use ML to predict whether a new individual applying for a credit will default.</p><p>ML has two phases: train and predict. The “train” phase consists in using a set of input-output examples to create a model that maps inputs to outputs. The “predict” phase consists in using the model on new inputs to get predictions of the associated outputs. Amazon ML, Google Prediction API, PredicSis and BigML all have similar API methods for each phase:</p><ul>\n<li>One method that takes in a dataset (in csv format for instance), and that returns the id of a model trained on this dataset</li>\n<li>One method that takes a model id and an input, and that returns a prediction.</li>\n</ul>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n  \n  \n    \n\n      \n\n      \n        <figure class=\"\n              sqs-block-image-figure\n              intrinsic\n            \"\n        >\n          \n        \n        \n\n        \n          \n            \n          \n            \n              <img class=\"thumb-image\" data-image=\"https://images.squarespace-cdn.com/content/v1/5206b718e4b0bdc26006bae2/1430745522663-6CWS092FEWXX2DCSZAZD/image-asset.jpeg\" data-image-dimensions=\"1786x797\" data-image-focal-point=\"0.5,0.5\" alt=\"\" data-load=\"false\" data-image-id=\"554771abe4b0deabe55d5faa\" data-type=\"image\" src=\"https://images.squarespace-cdn.com/content/v1/5206b718e4b0bdc26006bae2/1430745522663-6CWS092FEWXX2DCSZAZD/image-asset.jpeg?format=1000w\" />\n            \n          \n        \n          \n        \n\n        \n      \n        </figure>\n      \n\n    \n  \n\n\n\n<p>All 4 services offer free accounts which I used for this comparison (note: PredicSis is still in private beta but you can <a href=\"http://launch.predicsis.com/\">request an account here</a>). In this post, I will only compare the performance of these two methods and I won't consider other aspects such as pricing, features, DX, UX, etc.</p>\n\n<p>In order to evaluate the models produced by the APIs, we need to separate our dataset downloaded from Kaggle in two: a training set which we use to create a model, and an evaluation set. We apply the model to the inputs of the evalution set and we get a prediction for each input. We can evaluate the accuracy of the model by comparing the predicted output with the true output (which was held out).</p>\n\n<p>The dataset we start with contains 150,000 instances and weighs 7.2 MB. I randomly selected 90% of the dataset for training and in the remaining 10% I randomly selected 5,000 inputs for evaluation.</p>\n\n<h2 id=\"results\">Results</h2>\n\n<p>For each API, there are three things to measure: the time taken by each method and the accuracy of predictions made by the model. For accuracy, I used the same performance measure as that of the Kaggle challenge, which is called <a href=\"http://www.kaggle.com/wiki/AreaUnderCurve\">AUC</a>. I won’t explain what it is here, but what you have to know about AUC is that a) performance values are between 0 and 1, b) a random classifier would have an AUC of around 0.5, c) a perfect classifier would have an AUC of 1. As a consequence, the higher the AUC, the better the model. </p>\n\n<center>\n<table class=\"tg\">\n  <tr>\n    <th class=\"tg-031e\"></th>\n    <th class=\"tg-e3zv\">Amazon</th>\n    <th class=\"tg-e3zv\">Google</th>\n    <th class=\"tg-e3zv\">PredicSis</th>\n    <th class=\"tg-e3zv\">BigML</th>\n  </tr>\n  <tr>\n    <td class=\"tg-031e\">Accuracy (AUC)</td>\n    <td class=\"tg-031e\">0.862</td>\n    <td class=\"tg-031e\">0.743</td>\n    <td class=\"tg-031e\">0.858</td>\n    <td class=\"tg-031e\">0.853</td>\n  </tr>\n  <tr>\n    <td class=\"tg-031e\">Time for training (s)</td>\n    <td class=\"tg-031e\">135</td>\n    <td class=\"tg-031e\">76</td>\n    <td class=\"tg-031e\">17</td>\n    <td class=\"tg-031e\">5</td>\n  </tr>\n  <tr>\n    <td class=\"tg-031e\">Time for predictions (s)</td>\n    <td class=\"tg-031e\">188</td>\n    <td class=\"tg-031e\">369</td>\n    <td class=\"tg-031e\">5</td>\n    <td class=\"tg-031e\">1</td>\n  </tr>\n</table>\n</center><p><strong><em>UPDATE - NEW BIGML RESULTS:</em></strong><em> As pointed out by Francisco Martin, if you just change the objective field (SeriousDlqin2yrs) to be numeric instead of categorical, BigML's accuracy for a <a href=\"https://bigml.com/shared/model/joejTuzK2F33nUZBI9WxF7o8vtZ\">single model</a> goes to 0.8530 (whereas it was initially reported as 0.790 - the accuracy in the table above and the Kaggle rank below have been updated to reflect that).</em></p>\n\n<p>Times for predictions correspond to 5,000 predictions. FYI, the top entry on the leaderboard had an AUC of 0.870. If you’d used these APIs in the Kaggle competition, here’s the approximate rank you could have had:</p>\n\n<ul>\n<li>#60 for Amazon</li>\n<li>#570 for PredicSis</li>\n<li>#636 for BigML</li>\n<li>#810 for Google</li>\n</ul>\n\n<p>It’s important to note that, depending on your application, some of these 3 performance measures will be more critical than others. The leaderboard for this Kaggle challenge doesn’t take time into account, but for certain applications where you have to make predictions at high frequence (for instance when you want to predict if a user is going to click on an ad, for every user coming to a high-traffic website), prediction time will be super critical.</p>\n<hr /><h2 id=\"summary\">Summary</h2>\n\n<p><strong><em>DISCLAIMER</em></strong><em>: this comparison was performed with a real-world dataset, but you may get different results with another dataset. You should try these APIs with your own data to figure out which is the best for you!</em></p>\n\n<ul>\n<li>PredicSis offered the best trade-off between accuracy and speed by being the second fastest and second most accurate</li>\n<li>BigML was the fastest in both training and predictions, but less accurate</li>\n<li>Amazon was the most accurate, but at the cost of being the slowest in training and also very slow in predictions</li>\n<li>Google was last on accuracy and prediction time</li>\n</ul>\n\n<h2 id=\"towardsanactualbenchmark\">Towards an actual benchmark</h2>\n\n<p>This was a very simple comparison but it’s still a bit far from an actual benchmark. One of the first things I’d like to do to improve on this would be to make it easy for others to reproduce (and verify) these results. I used the web interfaces of these services to get the AUC values and it would be better to have code that computes AUC locally. For now, you can check out this <a href=\"https://github.com/louisdorard/papiseval\">repo for evaluating ML/prediction APIs</a>. Pull requests are welcome! (e.g. new APIs, new evaluation metrics, etc.)</p>\n\n<p>In a future benchmark, it would be interesting to also try regression problems, and to try various types of datasets: small, big, unbalanced, etc.</p>\n\n<h2 id=\"learnmore\">Learn more</h2>\n\n<ul>\n<li>If you’d like to learn more about PredicSis and BigML, they will both be at <a href=\"http://www.papis.io/connect\">PAPIs Connect</a> on 21 May in Paris — come join us!</li>\n<li>BigML will also be at <a href=\"http://mediterranea.apidays.io\">APIdays Mediterranea</a> on 7 May in Barcelona with an exciting talk by their CTO on the future of ML APIs.</li>\n<li>I’m giving away free tickets to both conferences! <a href=\"http://goo.gl/forms/9OFNvxunZH\">Sign up here for PAPIs Connect</a> and <a href=\"http://goo.gl/forms/n0Tz33rVqb\">here for APIdays Mediterranea</a>.</li>\n<li>With these new ML/prediction APIs, I’m thinking of updating my book, <a href=\"https://www.ownml.co/machine-learning-book\">Bootstrapping Machine Learning</a>, in which I already covered Google Prediction and BigML… But until then, you might be interested in checking out an excerpt of the current edition in my Machine Learning Starter Kit!</li>\n</ul>\n<iframe scrolling=\"yes\" src=\"https://dl.dropboxusercontent.com/u/685335/optin.html\" allowtransparency=\"true\" width=\"100%\" frameborder=\"0\" id=\"mailchimp\" height=\"400px\"></iframe>\n\n<p>Enjoyed this article? <a href=\"http://www.twitter.com/louisdorard\">Follow me!</a></p>",
  "media:content": {
    "media:title": "Machine learning APIs: which performs best?"
  }
}