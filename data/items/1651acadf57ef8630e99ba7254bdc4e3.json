{
  "title": "Extended Formulations",
  "link": "",
  "published": "2015-04-05T16:30:00+01:00",
  "updated": "2015-04-05T16:30:00+01:00",
  "author": {
    "name": "Sebastian Nowozin"
  },
  "id": "tag:www.nowozin.net,2015-04-05:/sebastian/blog/extended-formulations.html",
  "summary": "<p>An amazing fact in high dimensions is this:\n<em>Projecting a simple convex set described by a small number of inequalities\ncan create complicated convex set with an exponential number of inequalities.</em></p>\n<p>It is amazing because it contradicts our everyday human â€¦</p>",
  "content": "<p>An amazing fact in high dimensions is this:\n<em>Projecting a simple convex set described by a small number of inequalities\ncan create complicated convex set with an exponential number of inequalities.</em></p>\n<p>It is amazing because it contradicts our everyday human experience.\nWe are most familiar with projections of objects in three dimensions down to\ntwo dimensions, namely when objects cast shadows, like this:</p>\n<p><img alt=\"Object with shadow, by Cloud Nines\nDesigns\" src=\"http://www.nowozin.net/sebastian/blog/images/cloudninesdesigns-object.jpg\">\n(Image courtesy to <a href=\"http://cloudninesdesigns.deviantart.com/art/Abstract-Vector-Object-117257819\">Cloud Nines\nDesigns</a>.)</p>\n<p>In three dimensions any polyhedral object, when projected onto a plane,\nbecomes <em>simpler</em>, i.e. the number of facets stays the same or becomes\nsmaller.  Think of a three dimensional cube that casts a shadow.  The cube has\nsix facets but <a href=\"http://www.etudes.ru/en/etudes/teni/\">its shadow has four or\nsix</a>, depending on the position of the\nlight and plane.\n<em>[Edit and correction, July 2015: Thanks to reader Paul (comment below), I\nhave been made aware that it is not true that the number of facets cannot\nincrease when projecting form three dimensions onto the plane.\nA great example is provided by <a href=\"http://www.pokutta.com/Homepage/Bio.html\">Sebastian\nPokutta</a>, where a convex 3D\npolytope with six facets projects onto the 2D plane as an octagon with eight\nfacets.  Thanks Paul!]</em></p>\n<p>Now, how I can I convince you that a convex set can become more complex when\nprojected?  Here is an impressive example.</p>\n<h2>Ben-Tal/Nemirovski Polyhedron</h2>\n<p>The following example is from\n<a href=\"http://pubsonline.informs.org/doi/abs/10.1287/moor.26.2.193.10561\">(Ben-Tal, Nemirovski,\n2001)</a>,\n(<a href=\"http://www2.isye.gatech.edu/~nemirovs/ApprLor_fin.pdf\">PDF</a>).\nIn this paper the authors are motivated by approximating certain second order\ncones using extended polyhedral formulations, in order to be able to perform\n<a href=\"http://en.wikipedia.org/wiki/Robust_optimization\">robust optimization</a> using\nlinear programming.\nAs a special case of their results I select the problem of approximating a\nunit disk in the 2D plane.  (The following is a specialization of equation (8)\nin the paper.)</p>\n<p>First, let us fix some notation.  Let\n<span class=\"math\">\\(x=(x_1,x_2,\\dots,x_n,\\alpha_1,\\dots,\\alpha_m) \\in \\mathbb{R}^{n+m}\\)</span> be a\nvector, where <span class=\"math\">\\(x_1\\)</span> to <span class=\"math\">\\(x_n\\)</span> represent the <em>basic dimensions</em> and <span class=\"math\">\\(\\alpha_1\\)</span> to\n<span class=\"math\">\\(\\alpha_m\\)</span> represent the <em>extended dimensions</em>.  For any set <span class=\"math\">\\(\\mathcal{E}\n\\subseteq \\mathbb{R}^{n+m}\\)</span> we define the <em>projection</em> as\n</p>\n<div class=\"math\">$$\\textrm{proj}_x(\\mathcal{E}) = \\{ (x_1,\\dots,x_n) \\:|\\:\n    \\exists (\\alpha_1,\\dots,\\alpha_m):\n        (x_1,\\dots,x_n,\\alpha_1,\\dots,\\alpha_m) \\in \\mathcal{E} \\}.$$</div>\n<p>\nThis corresponds to the familiar notion of a projection.</p>\n<p>For the 2D unit disk the following is an extended polyhedral formulation,\nparametrized by an integer accuracy parameter <span class=\"math\">\\(k \\geq 2\\)</span>.  The formulation\nhas the basic dimensions <span class=\"math\">\\(x_1\\)</span> and <span class=\"math\">\\(x_2\\)</span>, and the extended dimensions\n<span class=\"math\">\\(\\mathbf{\\alpha}=(\\xi_j,\\eta_j)_{j=0,\\dots,k}\\)</span>.\nDefining the constants <span class=\"math\">\\(c_j = \\cos(\\pi / 2^{j})\\)</span>, <span class=\"math\">\\(s_j = \\sin(\\pi / 2^j)\\)</span>,\nand <span class=\"math\">\\(t_j = \\tan(\\pi / 2^j)\\)</span> the polyhedral set <span class=\"math\">\\(\\mathcal{E}_k\\)</span> is given by the\nfollowing intersection of linear inequality and equality constraints.\n</p>\n<div class=\"math\">\\begin{eqnarray}\n\\xi_0 - x_1 &amp; \\geq &amp; 0,\\nonumber\\\\\n\\xi_0 + x_1 &amp; \\geq &amp; 0,\\nonumber\\\\\n\\eta_0 - x_2 &amp; \\geq &amp; 0,\\nonumber\\\\\n\\eta_0 + x_2 &amp; \\geq &amp; 0,\\nonumber\\\\\n\\xi_j - c_{j+1} \\xi_{j-1} - s_{j+1} \\eta_{j-1} &amp; = &amp; 0,\n    \\qquad\\textrm{for $j=1,\\dots,k$,}\\nonumber\\\\\n\\eta_j + s_{j+1} \\xi_{j-1} - c_{j+1} \\eta_{j-1} &amp; \\geq &amp; 0,\n    \\qquad\\textrm{for $j=1,\\dots,k$,}\\nonumber\\\\\n\\eta_j - s_{j+1} \\xi_{j-1} + c_{j+1} \\eta_{j-1} &amp; \\geq &amp; 0,\n    \\qquad\\textrm{for $j=1,\\dots,k$,}\\nonumber\\\\\n\\xi_k &amp; \\leq &amp; 1,\\nonumber\\\\\n\\eta_k - t_{k+1} \\xi_k &amp; \\leq &amp; 0.\\nonumber\n\\end{eqnarray}</div>\n<p>Note that the set <span class=\"math\">\\(\\mathcal{E}_k\\)</span> can be described by <span class=\"math\">\\(6+3k\\)</span> sparse linear\nconstraints.  The intersection of these convex constraint sets is of course\nagain a convex set.  Thus, the description of the set takes <span class=\"math\">\\(O(k)\\)</span> space,\nwhere <span class=\"math\">\\(k\\)</span> is the approximation parameter.</p>\n<p>If we write <span class=\"math\">\\(\\mathcal{D}_k := \\textrm{proj}_{x_1,x_2} \\mathcal{E}_k\\)</span> for the\nprojection onto the first two dimensions, the following figure illustrates\njust how remarkably accurate the formulation is as we increase <span class=\"math\">\\(k\\)</span>.</p>\n<p><img alt=\"Ben-Tal/Nemirovski polyhedral approximation to the unit\ndisk\" src=\"http://www.nowozin.net/sebastian/blog/images/bental-nemirovski.svg\"></p>\n<p>How accurate is it?  Ben-Tal and Nemirovski say that a set <span class=\"math\">\\(\\mathcal{D}\\)</span> is an\n<span class=\"math\">\\(\\epsilon\\)</span>-approximation to a set <span class=\"math\">\\(\\mathcal{L}\\)</span> if <span class=\"math\">\\(\\mathcal{L} \\subseteq\n\\mathcal{D}\\)</span> and if for all <span class=\"math\">\\(x \\in \\mathcal{D}\\)</span> it holds that\n<span class=\"math\">\\((\\frac{1}{1+\\epsilon} x) \\in \\mathcal{L}\\)</span>.\nThey then show that the above formulation is an <span class=\"math\">\\(\\epsilon_k\\)</span>-approximation,\nwhere\n</p>\n<div class=\"math\">$$\\epsilon_k = \\frac{1}{\\cos(\\pi / 2^{k+1})} - 1 = O(\\frac{1}{4^k}).$$</div>\n<p>\nThat is, despite having a compact description in <span class=\"math\">\\(O(k)\\)</span> space the accuracy\nimproves exponentially.\nIn the basic dimensions the set <span class=\"math\">\\(\\mathcal{D}_k\\)</span> has exponentially many facets\nand cannot be described compactly through a polynomial sized collection of\nlinear inequalities.\n(The paper further generalizes the above results to the family of\n<span class=\"math\">\\(d\\)</span>-dimensional Lorentz cones.)</p>\n<h2>Is there a Recurring Pattern?</h2>\n<p>The abstract idea behind obtaining complicated structures in one space by\nmeans of something <em>like an extended formulation</em> can be found in other\ndomains; for example, in probabilistic <a href=\"http://en.wikipedia.org/wiki/Graphical_model\">graphical\nmodels</a>.</p>\n<p>Suppose we would like to specify a potentially complicated probability\ndistribution <span class=\"math\">\\(P(X)\\)</span>.\nAkin to an extended formulation we may proceed as follows.  We define an\nextended set of random variables <span class=\"math\">\\(\\alpha\\)</span> and a distribution <span class=\"math\">\\(P(\\alpha)\\)</span>.\nWe then couple both spaces by means of a conditional specification,\n<span class=\"math\">\\(P(X|\\alpha) P(\\alpha)\\)</span>.\nWe then <em>project</em>, that is, marginalize out, the extended dimensions <span class=\"math\">\\(\\alpha\\)</span>\nto obtain\n</p>\n<div class=\"math\">$$P(X) = \\int P(X|\\alpha) P(\\alpha) \\,\\textrm{d}\\alpha.$$</div>\n<p>\nIn practice this construction is often used in the form of a\n<a href=\"http://en.wikipedia.org/wiki/Bayesian_network\">hierarchical graphical model</a>,\nfor example when using a <a href=\"http://sumsar.net/blog/2013/12/t-as-a-mixture-of-normals/\">Normal mixture to define a student T\ndistribution</a>.</p>\n<p>The increase in flexibility of the resulting marginal distribution can be as\nimpressive as for the above polyhedral sets: for example, if <span class=\"math\">\\(P(X|\\alpha)\\)</span> is\na Normal distribution and <span class=\"math\">\\(P(\\alpha)\\)</span> is a distribution over Normal\nparameters, then the infinite Normal mixture can essentially represent any\nabsolutely continuous distribution.</p>\n<p>Another observation, which may be just a coincidence, but maybe there is more\nto it: the extended formulation construction in both cases suggests a\npractical implementation.  In the polyhedral set this was through linear\nprogramming in the extended space, for the graphical model it would be\nancestral sampling or MCMC inference.</p>\n<p>This leaves me with the following questions:</p>\n<ul>\n<li>Are there more examples of similar constructions (extension, coupling,\n  projection)?</li>\n<li>What is the shared mathematical structure behind this similarity (e.g.\n  permitting a projection operation that leads to complexity in the basic\n  dimensions that no longer admits a compact description in this space)?</li>\n</ul>\n<p>Feedback very much welcome :-)</p>\n<h2>Conclusion</h2>\n<p>I first learned of extended formulations from <a href=\"http://www.springer.com/business+%26+management/production/book/978-0-387-29959-4\">this book of Pochet and\nWolsey</a>,\nwho pioneered the technique for practical scheduling optimization problems.\n(Yes, I had enough time for tinkering during my PhD to take such creative diversions.)\nA recent summary of extended formulations for <em>combinatorial optimization</em>\nproblems is <a href=\"http://integer.tepper.cmu.edu/webpub/ExtendedFormulation.pdf\">Conforti, Cornuejols, Zambelli,\n2012</a>.</p>\n<p>Many so called <em>higher-order interactions</em> in computer vision random field\nmodels are representable as extended formulations, a point I elaborated on in\na <a href=\"http://users.cecs.anu.edu.au/~julianm/cvpr2011/slides/nowozin.pdf\">talk</a> I\ngave at the <a href=\"http://cseweb.ucsd.edu/~jmcauley/cvpr2011.html\">Inference in Graphical Models with Structured Potentials\nworkshop</a> at the CVPR 2011\nconference.  Another relevant work is <a href=\"http://link.springer.com/article/10.1007/s10107-003-0397-3\">Miller and Wolsey,\n2003</a>.</p>\n<script type=\"text/javascript\">if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {\n    var align = \"center\",\n        indent = \"0em\",\n        linebreak = \"false\";\n\n    if (false) {\n        align = (screen.width < 768) ? \"left\" : align;\n        indent = (screen.width < 768) ? \"0em\" : indent;\n        linebreak = (screen.width < 768) ? 'true' : linebreak;\n    }\n\n    var mathjaxscript = document.createElement('script');\n    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';\n    mathjaxscript.type = 'text/javascript';\n    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';\n\n    var configscript = document.createElement('script');\n    configscript.type = 'text/x-mathjax-config';\n    configscript[(window.opera ? \"innerHTML\" : \"text\")] =\n        \"MathJax.Hub.Config({\" +\n        \"    config: ['MMLorHTML.js'],\" +\n        \"    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" +\n        \"    jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" +\n        \"    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" +\n        \"    displayAlign: '\"+ align +\"',\" +\n        \"    displayIndent: '\"+ indent +\"',\" +\n        \"    showMathMenu: true,\" +\n        \"    messageStyle: 'normal',\" +\n        \"    tex2jax: { \" +\n        \"        inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" +\n        \"        displayMath: [ ['$$','$$'] ],\" +\n        \"        processEscapes: true,\" +\n        \"        preview: 'TeX',\" +\n        \"    }, \" +\n        \"    'HTML-CSS': { \" +\n        \"        availableFonts: ['STIX', 'TeX'],\" +\n        \"        preferredFont: 'STIX',\" +\n        \"        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" +\n        \"        linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" +\n        \"    }, \" +\n        \"}); \" +\n        \"if ('default' !== 'default') {\" +\n            \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n            \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n        \"}\";\n\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);\n}\n</script>",
  "category": ""
}