{
  "title": "Apache Druid Turns 10: The Untold Origin Story",
  "link": "https://medriscoll.com/2021/05/01/apache-druid-architecture-origin-story/",
  "comments": "https://medriscoll.com/2021/05/01/apache-druid-architecture-origin-story/#respond",
  "dc:creator": "Michael Driscoll",
  "pubDate": "Sat, 01 May 2021 19:18:20 +0000",
  "category": [
    "Uncategorized",
    "apachedruid",
    "businessintelligence",
    "druidio",
    "metamarkets",
    "operationalintelligence"
  ],
  "guid": "https://medriscoll.com/?p=221",
  "description": "<p>Ten years ago today, the Druid data store was introduced to the world by Eric Tschetter, its creator, working at a start-up named Metamarkets.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://medriscoll.com/2021/05/01/apache-druid-architecture-origin-story/\">Apache Druid Turns 10: The Untold Origin Story</a> appeared first on <a rel=\"nofollow\" href=\"https://medriscoll.com\">m. e. driscoll</a>.</p>\n",
  "content:encoded": "\n<p><em>&#8220;We did something crazy:&nbsp;we rolled our own database.&#8221;</em> &#8211; Eric Tschetter, creator of Druid</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img data-attachment-id=\"227\" data-permalink=\"https://medriscoll.com/image/\" data-orig-file=\"https://i0.wp.com/medriscoll.com/wp-content/uploads/2021/05/image.png?fit=984%2C800&ssl=1\" data-orig-size=\"984,800\" data-comments-opened=\"1\" data-image-meta=\"{\"aperture\":\"0\",\"credit\":\"\",\"camera\":\"\",\"caption\":\"\",\"created_timestamp\":\"0\",\"copyright\":\"\",\"focal_length\":\"0\",\"iso\":\"0\",\"shutter_speed\":\"0\",\"title\":\"\",\"orientation\":\"0\"}\" data-image-title=\"image\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://i0.wp.com/medriscoll.com/wp-content/uploads/2021/05/image.png?fit=300%2C244&ssl=1\" data-large-file=\"https://i0.wp.com/medriscoll.com/wp-content/uploads/2021/05/image.png?fit=750%2C610&ssl=1\" decoding=\"async\" src=\"https://i0.wp.com/medriscoll.com/wp-content/uploads/2021/05/image.png?resize=492%2C400&#038;ssl=1\" alt=\"\" class=\"wp-image-227\" width=\"492\" height=\"400\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Ten years ago today, the Druid data store was introduced to the world by Eric Tschetter, its creator, working at a small start-up named Metamarkets.&nbsp; Eric had left LinkedIn six months earlier to join us as the first full-time employee, and I was the CTO and co-founder, working in a shoebox office[1] off South Park in San Francisco.&nbsp; In his blog post, <a href=\"https://metamarkets.com/2011/druid-part-i-real-time-analytics-at-a-billion-rows-per-second/\">Introducing Druid: Real-Time Analytics at a Billion Rows Per Second</a>, he shared the rationale for Druid&#8217;s creation:</p>\n\n\n\n<p>&#8220;Here at Metamarkets we have developed a web-based analytics console that supports drill-downs and roll-ups of high dimensional data sets – comprising billions of events – in real-time. This [post introduces] Druid, the data store that powers our console. Over the last twelve months, we tried and failed to achieve scale and speed with relational databases (Greenplum, InfoBright, MySQL) and NoSQL offerings (HBase). So instead we did something crazy: we rolled our own database. Druid is the distributed, in-memory OLAP data store that resulted.&#8221;</p>\n\n\n\n<p>The initial responses from <a href=\"https://news.ycombinator.com/item?id=2501160\">HackerNews were predictably skeptical</a>:</p>\n\n\n\n<span id=\"more-221\"></span>\n\n\n\n<ul><li>&#8220;It&#8217;s always tempting to build it yourself.&nbsp;&#8220;</li><li>&#8220;They should have just used QlikView.&#8221;</li><li>&#8220;HANA has been doing this for at least 5 years now.&#8221;</li></ul>\n\n\n\n<p>Ignoring the naysayers,&nbsp; Eric continued to lead the engineering team in building out Druid as the core engine for the Metamarkets platform.&nbsp; A year and half later, in October 2012, <a href=\"https://www.youtube.com/watch?v=eCbXoGSyHbg\">we open sourced Druid in a talk</a> we gave at O&#8217;Reilly Strata&#8217;s conference [2]. Open source Druid has now been adopted by hundreds of leading companies around the globe, notably Netflix [3], Lyft [4], eBay [5], Netflix [6], Salesforce[7], Pinterest [8], Yahoo! [9], and Snap [10].</p>\n\n\n\n<p>While most of this is public, there is one piece of history about Druid that hasn&#8217;t previously been shared. Before Metamarkets&#8217; acquisition by Snap in 2017, I retained a few keepsakes from the early days. One of them was an email titled, quite simply, &#8220;Druid &#8212; the spec&#8221; from February 7, 2011. It is 78 lines and 553 words long. It lays out a simple proposal for Druid&#8217;s architecture, with a postscript &#8220;I&#8217;m going to take this project on as a background thread, working on it whenever there aren&#8217;t other more pressing things to deal with.&#8221; In the subsequent eight weeks, Eric not only wrote Druid but he pushed it into production. He sunset our HBase cluster on April 4, 2011, replacing it with the first Druid service.  That original Druid cluster has been continuously operational for over a decade, having processed over 100 trillion events, 100 billion queries, and 1000s of end users in its lifetime.</p>\n\n\n\n<h3><a href=\"#druid-architecture\">Druid architecture &#8212; &#8220;the spec&#8221;</a></h3>\n\n\n\n<pre class=\"wp-block-verse\" style=\"font-size:14px;line-height:1.4\">---------- Forwarded message ---------<br>From: <strong>Eric Tschetter</strong> <cheddar@metamarketsgroup.com><br>Date: Mon, Feb 7, 2011 at 6:09 PM<br>Subject: Druid -- the spec<br>To: <eng@metamarketsgroup.com></pre>\n\n\n\n<pre class=\"wp-block-verse\" style=\"font-size:14px;line-height:1.4\">Given what we've learned about our data needs and various operational<br>issues,  I think we need the following backend in order to support our<br>dashboarding and analytics front-end needs.<br><br>I'll start with the requirements:<br><br>1) Fast scans of the data<br>2) Operationally simple to manage<br><br><br>So, in order to meet these requirements, the initial implementation should be<br><br>1) In-memory: the only way to ensure fast scans is to remove disk from<br>the equation as much as possible.&nbsp; This starts with everything in<br>memory<br>2) Able to push code to data: this means to me that it should be<br>implemented on the JVM as it provides functionality for distributing<br>code and the various scripting languages on the JVM allow for a wide<br>variety of languages.&nbsp; This is because the only way we are going to<br>get fast scans of data is to be able to push code down to data in<br>parallel.<br>3) Symmetrical (all nodes should be able to do the same job that other nodes do)<br><br><br>What I propose is:<br><br>1) Take \"beta\" style data and produce an \"index\" which is the beta<br>style data indexed for all of the dims.&nbsp; Partition the indexes by<br>timestamp (daily for now) and store them on s3<br>2) Build up a simple Java process that, when requested (HTTP) for data<br>in a specific time range, will go and pull the index and load it in<br>memory<br>-- there are a number of optimizations that can be done to reduce<br>latency here, but we'll start really simple<br>3) Build a fat client that will consistently hash over the current<br>instances and request data in parallel to as many nodes as it needs to<br><br>What will not be in v1:<br><br>Pushing of code.&nbsp; At the beginning, there will be a set of operations<br>that are pre-implemented and clients will be limited.&nbsp; Eventually, if<br>this works out as hoped we will add that ability.<br><br>Benefits:<br><br>1) Simple to manage and deploy a new cluster of these things<br>-- Just fire up some java processes on nodes that have access to s3<br>-- Capacity expansion is as simple as adding new machines<br>-- Vertical scalability possible<br>2) Fast (hopefully)<br>-- Initial tests seem to indicate that it will be fast enough, but<br>this is yet to be seen.<br>3) Changes the problem of more dimensions from a<br>combinatorial(exponential) problem into a multiplicative problem<br>-- Makes it significantly faster to backfill<br>4) Allows for more flexibility in the future<br>5) Possible to turn this into a real-time aggregating and serving system as well<br>6) All dimensions available<br>7) Ability to do or/and queries inside of a specific dimension<br><br>Downsides:<br><br>1) A new system<br>-- I don't think we have a choice, though<br>2) Indexing implies the existence of a schema.<br>-- Our data isn't schema-less anyway, so I think this is acceptable<br><br><br>I obviously think there is more up-side than down-side, but it's my<br>proposal so there's most likely some bias.&nbsp; Please provide feedback.<br>Specifically, if there are any more downsides that people can think<br>of, it will be good to have them out and known ahead of time.<br><br>Barring objections that might be raised, I'm going to take this<br>project on as a background thread, working on it whenever there aren't<br>other more pressing things to deal with.<br><br>--Eric</pre>\n\n\n\n<p>While I could share my own interpretations about the modest beginnings of technology innovation, often stories and source materials speak for themselves. That&#8217;s the appeal of the collections of stories in books like Revolution in the Valley and Founders at Work. I hope this story of Druid&#8217;s origins will be valuable to others out there who have a crazy idea for a new software architecture, and steel them with the confidence that their contribution could indeed make a dent in the technology universe.</p>\n\n\n\n<h3>Footnotes</h3>\n\n\n\n<p>[1] The shoebox was 300 Brannan Street, San Francisco.  It was packed to the gills with startups, like many office buildings around South Park at the time. It was an unofficial, physical incubator where the rents were (then) affordable and the amenities were few.&nbsp; Guillermo Rauch, who went out to create Next.js and Vercel, was downstairs from us; Daniel Gross, was then a 19-year prodigy and media darling working on Greplin (eventually Cue) down the hall.&nbsp; The entire building reeked of a sickly sweet odor from its first floor restaurant, aptly named Ozone Thai.</p>\n\n\n\n<p>[2] <a href=\"https://www.youtube.com/watch?v=eCbXoGSyHbg\">Beyond Hadoop: Fast Ad-Hoc Queries on Big Data</a> Michael Driscoll, Eric Tschetter. O&#8217;Reilly Strata Conference 2012. I remember the night before the Strata talk, our head of sales & marketing, Eric, and I were holed up in a Manhattan hotel room rehearsing while Eric pored over the code base to clear it for public release.</p>\n\n\n\n<p>[3] <a href=\"https://www.youtube.com/watch?v=W_Sp4jo1ACg\"><u>How Superset and Druid Power Real-Time Analytics at AirBnB</u></a>. (June 2017) by Maxime Beauchemin, YouTube.</p>\n\n\n\n<p>[4] <a href=\"https://www.youtube.com/watch?v=ovZ9iAkQllo\"><u>Streaming SQL and Druid at Lyft</u></a>. (August 2018) by Arup Malakar, YouTube.</p>\n\n\n\n<p>[5] <a href=\"https://tech.ebayinc.com/engineering/monitoring-at-ebay-with-druid/\"><u>Monitoring at eBay with Druid (May 2019</u></a>). Mohan Garadi, eBay Blog.</p>\n\n\n\n<p>[6] <a href=\"https://netflixtechblog.com/how-netflix-uses-druid-for-real-time-insights-to-ensure-a-high-quality-experience-19e1e8568d06\"><u>How Netflix uses Druid for Real-time Insights to Ensure a High-Quality Experience</u></a> (March 2020). Ben Sykes, Netflix Tech Blog.</p>\n\n\n\n<p>[7] <a href=\"https://www.google.com/search?q=salesforce+druid&oq=salesforce+druid&aqs=chrome..69i57j69i60l3j69i65j0i271j69i65j69i61.1768j0j4&sourceid=chrome&ie=UTF-8\"><u>Salesforce &#8211; Delivering High-Quality Insights Interactively Using Apache Druid at Salesforce</u></a> (2020). Dun Lu, Salesforce Engineering Blog.</p>\n\n\n\n<p>[8] <a href=\"https://medium.com/pinterest-engineering/powering-pinterest-ads-analytics-with-apache-druid-51aa6ffb97c1\"><u>Powering Pinterest ad analytics with Apache Druid</u></a> (Jan 2020). Filip Jaros and Weihong Wang, Pinterest Engineering Blog.</p>\n\n\n\n<p>[9] <a href=\"https://www.datanami.com/2015/08/04/yahoo-casts-real-time-olap-queries-with-druid/\">Yahoo Casts Real-Time OLAP Queries with Druid</a> (Aug 2015).  Datanami.</p>\n\n\n\n<p>[10] <a href=\"https://www.slideshare.net/CharlesAllen9/data-analytics-and-processing-at-snap-druid-meetup-la-september-2018\">Data analytics and processing at Snap</a> (Sep 2018).  Charles Allen, Slideshare.  </p>\n\n\n\n<p class=\"has-small-font-size\">Apache, Apache Druid, Druid, the Apache Druid logo, Apache Superset, and Superset are registered trademarks or trademarks of Apache Software Foundation.</p>\n\n\n\n<p></p>\n<p>The post <a rel=\"nofollow\" href=\"https://medriscoll.com/2021/05/01/apache-druid-architecture-origin-story/\">Apache Druid Turns 10: The Untold Origin Story</a> appeared first on <a rel=\"nofollow\" href=\"https://medriscoll.com\">m. e. driscoll</a>.</p>\n",
  "wfw:commentRss": "https://medriscoll.com/2021/05/01/apache-druid-architecture-origin-story/feed/",
  "slash:comments": 0,
  "post-id": 221
}