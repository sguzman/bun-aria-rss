{
  "title": "Maybe I Don't Really Know R After All",
  "description": "<p>Lately, I’ve been feeling that I’m spreading myself too thin in terms of programming languages. At work, I spend most of my time in <a title=\"Hive blog posts\" href=\"http://randyzwitch.com/tags/#hive\" target=\"_blank\">Hive</a>/SQL, with the occasional Python for my smaller data. I really prefer <a href=\"http://randyzwitch.com/tags/#julia\">Julia</a>, but I’m alone at work on that one. And since I maintain a package on CRAN (<a title=\"RSiteCatalyst\" href=\"http://cran.r-project.org/web/packages/RSiteCatalyst/index.html\" target=\"_blank\">RSiteCatalyst</a>), I frequently spend my evenings bug fix programming in R. Then, there’s the desire to learn a Java-based language like Scala (or, Java)…maybe Spark for my Hadoop work…</p>",
  "pubDate": "Thu, 26 Jun 2014 11:18:36 +0000",
  "link": "http://randyzwitch.com/r-language-oddities/",
  "guid": "http://randyzwitch.com/r-language-oddities/",
  "content": "<p>Lately, I’ve been feeling that I’m spreading myself too thin in terms of programming languages. At work, I spend most of my time in <a title=\"Hive blog posts\" href=\"http://randyzwitch.com/tags/#hive\" target=\"_blank\">Hive</a>/SQL, with the occasional Python for my smaller data. I really prefer <a href=\"http://randyzwitch.com/tags/#julia\">Julia</a>, but I’m alone at work on that one. And since I maintain a package on CRAN (<a title=\"RSiteCatalyst\" href=\"http://cran.r-project.org/web/packages/RSiteCatalyst/index.html\" target=\"_blank\">RSiteCatalyst</a>), I frequently spend my evenings bug fix programming in R. Then, there’s the desire to learn a Java-based language like Scala (or, Java)…maybe Spark for my Hadoop work…</p>\n\n<p>So last night, when I ran into this series of follies with R, it really makes me wonder if I really understand how R works.</p>\n\n<h2 id=\"jsonlitefromjson\">jsonlite:fromJSON</h2>\n\n<p>As part of the overall concept of my RSiteCatalyst package, I’m trying to make it as easy as possible for digital analysts to get their data via the <a title=\"Adobe Analytics API\" href=\"https://marketing.adobe.com/developer/en_US\" target=\"_blank\">Adobe Analytics API</a>.  As such, I abstract away the need to <a title=\"Building JSON in R: Three Methods\" href=\"http://randyzwitch.com/r-json-jsonlite-sprintf-paste/\" target=\"_blank\">build JSON</a> to request reports and parse the API answer from JSON to a data frame. Sometimes it’s easy, but sometimes you get something like this:</p>\n\n<p><img src=\"/wp-content/uploads/2014/06/nested_r_dataframe.png\" alt=\"nested_r_dataframe\" /></p>\n\n<p>In case it’s not clear what’s going on here, <code class=\"language-plaintext highlighter-rouge\">fromJSON()</code> from <a title=\"jsonlite CRAN\" href=\"http://cran.r-project.org/web/packages/jsonlite/index.html\" target=\"_blank\">jsonlite</a> returns a data frame as best as it can, but we have a list (of data frames!) nested inside of a column named “breakdown”. There are 12 rows here, but the proper data structure would be to take the data frame inside of ‘breakdown’ and append all of the fields from the original 12 rows, repeating the values down the rows. So something like 72 rows (12 original rows, 6 row data frames inside of the ‘breakdown’ column).</p>\n\n<h2 id=\"loop-and-accumulate\">Loop and Accumulate</h2>\n\n<p>Because this is such a small data frame, and because <code class=\"language-plaintext highlighter-rouge\">*apply</code> functions are too frustrating in most cases, to parse this I went with the tried-and-true loop and accumulate. But instead of immediately getting what I wanted, I got this fantastic R error message:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-r\" data-lang=\"r\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"code\"><pre><span class=\"c1\">#Loop over df and accumulate results</span><span class=\"w\">\n</span><span class=\"n\">parsed_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">data.frame</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"n\">nrow</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)){</span><span class=\"w\">\n  </span><span class=\"n\">temp</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">cbind</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,],</span><span class=\"n\">breakdown_list</span><span class=\"p\">[[</span><span class=\"n\">i</span><span class=\"p\">]])</span><span class=\"w\">\n  </span><span class=\"n\">parsed_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">rbind</span><span class=\"p\">(</span><span class=\"n\">parsed_df</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">temp</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"n\">There</span><span class=\"w\"> </span><span class=\"n\">were</span><span class=\"w\"> </span><span class=\"m\">12</span><span class=\"w\"> </span><span class=\"n\">warnings</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">use</span><span class=\"w\"> </span><span class=\"n\">warnings</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"o\">&gt;</span><span class=\"n\">warnings</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"n\">Warning</span><span class=\"w\"> </span><span class=\"n\">messages</span><span class=\"o\">:</span><span class=\"w\">\n  </span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">In</span><span class=\"w\"> </span><span class=\"n\">data.frame</span><span class=\"p\">(</span><span class=\"n\">...</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">check.names</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">FALSE</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\">\n  </span><span class=\"n\">row</span><span class=\"w\"> </span><span class=\"n\">names</span><span class=\"w\"> </span><span class=\"n\">were</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">short</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">discarded</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p>Row names from a short variable? Off to StackOverflow, the savior of all language hackers, which lets me know I just need to <a title=\"R row names short variable discarded\" href=\"http://stackoverflow.com/questions/23534066/cbind-warnings-row-names-were-found-from-a-short-variable-and-have-been-discar\" target=\"_blank\">add an argument to my <code class=\"language-plaintext highlighter-rouge\">cbind()</code> function</a>. Trying again:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-r\" data-lang=\"r\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"code\"><pre><span class=\"c1\">#Loop over df and accumulate results</span><span class=\"w\">\n</span><span class=\"c1\">#Adding row.names = NULL fixes error message</span><span class=\"w\">\n</span><span class=\"n\">parsed_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">data.frame</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"n\">nrow</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)){</span><span class=\"w\">\n  </span><span class=\"n\">temp</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">cbind</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,],</span><span class=\"n\">breakdown_list</span><span class=\"p\">[[</span><span class=\"n\">i</span><span class=\"p\">]],</span><span class=\"w\"> </span><span class=\"n\">row.names</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">NULL</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"n\">parsed_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">rbind</span><span class=\"p\">(</span><span class=\"n\">parsed_df</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">temp</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"nf\">names</span><span class=\"p\">(</span><span class=\"n\">parsed_df</span><span class=\"p\">)</span><span class=\"w\">\n\n</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nf\">names</span><span class=\"p\">(</span><span class=\"n\">parsed_df</span><span class=\"p\">)</span><span class=\"w\">\n </span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"s2\">\"name\"</span><span class=\"w\">           </span><span class=\"s2\">\"year\"</span><span class=\"w\">           </span><span class=\"s2\">\"month\"</span><span class=\"w\">          </span><span class=\"s2\">\"day\"</span><span class=\"w\">            </span><span class=\"s2\">\"hour\"</span><span class=\"w\">           </span><span class=\"s2\">\"minute\"</span><span class=\"w\">         </span><span class=\"s2\">\"breakdownTotal\"</span><span class=\"w\">\n </span><span class=\"p\">[</span><span class=\"m\">8</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"s2\">\"name\"</span><span class=\"w\">           </span><span class=\"s2\">\"trend\"</span><span class=\"w\">          </span><span class=\"s2\">\"counts\"</span><span class=\"w\">  </span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p>So I successfully created an (84,10)-sized data frame, but <code class=\"language-plaintext highlighter-rouge\">cbind()</code> allowed me to name two columns in the data frame “name”! Running ‘parsed_df$name’ at the REPL returns the first instance. So now, I have to use the unstable method of referring to the second ‘name’ column by position number if I want to access it (or, rename it using <code class=\"language-plaintext highlighter-rouge\">names()</code> of course). The way I realized this behavior was occurring was that I tried to use <code class=\"language-plaintext highlighter-rouge\">plyr::rename</code> and kept changing the name of two columns!</p>\n\n<h2 id=\"final-solution\">Final Solution</h2>\n\n<p>In order to get past my duplicate name issue, I eventually renamed the ‘name’ columns individually by each object, prior to <code class=\"language-plaintext highlighter-rouge\">cbind()</code>:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-r\" data-lang=\"r\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"code\"><pre><span class=\"c1\">#Separate breakdown list and original data frame into different objects</span><span class=\"w\">\n</span><span class=\"n\">df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">ex_df</span><span class=\"o\">$</span><span class=\"n\">report</span><span class=\"o\">$</span><span class=\"n\">data</span><span class=\"w\">\n</span><span class=\"n\">breakdown_list</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">df</span><span class=\"o\">$</span><span class=\"n\">breakdown</span><span class=\"w\">\n</span><span class=\"n\">df</span><span class=\"o\">$</span><span class=\"n\">breakdown</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"kc\">NULL</span><span class=\"w\">\n\n</span><span class=\"c1\">#Loop over df and accumulate results</span><span class=\"w\">\n</span><span class=\"n\">parsed_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">data.frame</span><span class=\"p\">()</span><span class=\"w\">\n</span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"n\">nrow</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)){</span><span class=\"w\">\n  </span><span class=\"n\">right_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\">  </span><span class=\"n\">breakdown_list</span><span class=\"p\">[[</span><span class=\"n\">i</span><span class=\"p\">]]</span><span class=\"w\">\n  </span><span class=\"n\">right_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">right_df</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">report_raw</span><span class=\"o\">$</span><span class=\"n\">report</span><span class=\"o\">$</span><span class=\"n\">elements</span><span class=\"o\">$</span><span class=\"n\">id</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]))</span><span class=\"w\">\n  </span><span class=\"n\">temp</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">cbind</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,],</span><span class=\"n\">right_df</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">row.names</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">NULL</span><span class=\"p\">)</span><span class=\"w\">\n  </span><span class=\"n\">parsed_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">rbind</span><span class=\"p\">(</span><span class=\"n\">parsed_df</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">temp</span><span class=\"p\">)</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"n\">parsed_df</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">parsed_df</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"s2\">\"counts\"</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">report_raw</span><span class=\"o\">$</span><span class=\"n\">report</span><span class=\"o\">$</span><span class=\"n\">metrics</span><span class=\"o\">$</span><span class=\"n\">id</span><span class=\"p\">))</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p>In the end, I found an answer to my solution, but it seems like every time I use R the more oddities I’m able to encounter/generate. At this point, I’m starting to question whether I really understand the underpinnings of how R works. It might be time to stop trying to be a language polyglot so much and focus on really learning a few of these tools in-depth.</p>"
}