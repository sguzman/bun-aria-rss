{
  "title": "Catching the bus to class with Python",
  "description": "<!--kg-card-begin: markdown--><p>For the past month I have been studying abroad in London. One of the first things I noticed when arriving here was how much better the public transportation system was compared to what I am used to in Philadelphia. Whether you are taking the tube or the bus it is</p>",
  "link": "https://www.danielforsyth.me/catching-the-bus-to-class-with-python/",
  "guid": "5d24af011e693a0017f5e5f6",
  "category": [
    "Python",
    "Flask",
    "TFL"
  ],
  "dc:creator": "Daniel Forsyth",
  "pubDate": "Tue, 07 Oct 2014 20:26:00 GMT",
  "content:encoded": "<!--kg-card-begin: markdown--><p>For the past month I have been studying abroad in London. One of the first things I noticed when arriving here was how much better the public transportation system was compared to what I am used to in Philadelphia. Whether you are taking the tube or the bus it is clean, quick, and the easiest way to get around the city. It took a few weeks to become fully acclimated with all the stops and routes but when everything starts connecting it becomes very easy to get around.</p>\n<p>Depending on traffic my commute to class is about a fifteen-minute bus ride from my dorm. A few days ago while waiting for the bus in the morning and looking at the LED board at the stop which displays the upcoming buses and when they are due to arrive I began to wonder where this information was coming from. Surely enough after some searching I came across the <a href=\"https://www.tfl.gov.uk/info-for/open-data-users/our-feeds\">Transport for London API</a>. The API has quite a few feeds for the buses, tube, and even the Barclays bike share program. After some reading I set out to optimize my morning commute to class.</p>\n<p><img src=\"https://www.danielforsyth.me/content/images/2014/10/FullSizeRender.jpg\" alt loading=\"lazy\"></p>\n<p>After some fiddling around I was able to get a JSON response that included all of the data sent to the bus stop outside my building. The board at this stop has been offline quite a few times the past week so it was nice to see that its a problem with the board and not the API.</p>\n<p><img src=\"https://www.danielforsyth.me/content/images/2014/10/Screen-Shot-2014-10-07-at-8-04-34-PM.png\" alt loading=\"lazy\"></p>\n<p>Now that I had access to all of the data I needed to narrow it down to just the bus I was interested in taking to class in the morning. This is where python comes in, I wrote a quick function that takes in the JSON from the API and then parses out just the bus I take to class.</p>\n<pre><code>\nimport requests\n\ndef getTime():\n    r = requests.get('http://countdown.tfl.gov.uk/stopBoard/58984')\n    json_result = r.json()\n    all_stops = json_result['arrivals']\n    my_stops = []\n    for x in all_stops:\n        if x['isRealTime']== True and x['destination'] == 'White City':\n            x = str(x['routeName']) + ' ' +           str(x['destination']) + ' ' + str(x['estimatedWait'])\n            my_stops.append(x)\n    print my_stops\n</code></pre>\n<p><img src=\"https://www.danielforsyth.me/content/images/2014/10/Screen-Shot-2014-10-07-at-8-13-19-PM.png\" alt loading=\"lazy\"></p>\n<p>It worked perfectly and only took ten lines of code. I decided to take the idea a step further and wrap it in a quick flask application. I came up with this single page app that displays all of the upcoming buses.</p>\n<p><img src=\"https://www.danielforsyth.me/content/images/2014/10/Screen-Shot-2014-10-07-at-10-14-15-PM.png\" alt loading=\"lazy\"></p>\n<p>For now it is still just local on my laptop but has been working well saving me some time waiting outside in the morning. This was a quick and fun learning experience that helped me learn quite a bit more about flask applications.</p>\n<p>If you have any questions, feedback, advice, or corrections please get in touch with me on <a href=\"https://twitter.com/Daniel_Forsyth1\">Twitter</a> or email me at <a href=\"mailto:danforsyth1@gmail.com\">danforsyth1@gmail.com</a>.</p>\n<!--kg-card-end: markdown-->"
}