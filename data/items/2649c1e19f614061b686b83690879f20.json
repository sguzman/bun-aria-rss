{
  "title": "Announcing Ursa Labs: an innovation lab for open source data science",
  "link": "",
  "published": "2018-04-19T00:00:00-07:00",
  "updated": "2018-04-19T00:00:00-07:00",
  "author": {
    "name": "Wes McKinney"
  },
  "id": "tag:wesmckinney.com,2018-04-19:/blog/announcing-ursalabs/",
  "summary": "<p>Funding open source software development is a complicated subject. I’m excited\nto announce that I’ve founded <a href=\"https://ursalabs.org\">Ursa Labs</a> (<a href=\"https://ursalabs.org\">https://ursalabs.org</a>), an\nindependent development lab with the mission of innovation in data science\ntooling.</p>\n<p>I am initially partnering with <a href=\"https://rstudio.org\">RStudio</a> and <a href=\"https://www.twosigma.com\">Two Sigma</a> to assist me in\ngrowing …</p>",
  "content": "<p>Funding open source software development is a complicated subject. I’m excited\nto announce that I’ve founded <a href=\"https://ursalabs.org\">Ursa Labs</a> (<a href=\"https://ursalabs.org\">https://ursalabs.org</a>), an\nindependent development lab with the mission of innovation in data science\ntooling.</p>\n<p>I am initially partnering with <a href=\"https://rstudio.org\">RStudio</a> and <a href=\"https://www.twosigma.com\">Two Sigma</a> to assist me in\ngrowing and maintaining the lab’s operations, and to align engineering efforts\non creating interoperable, cross-language computational systems for data\nscience, all powered by <a href=\"http://arrow.apache.org\">Apache Arrow</a>.</p>\n<p>In this post, I explain the rationale for forming Ursa Labs and what to expect\nin the future.</p>\n<h2>Funding Open Source Software: Maintenance and Innovation</h2>\n<p>In recent years, the world’s businesses have become more dependent than ever on\nopen source software (“OSS”, henceforth). How and why this happened will surely\nbe the subject of future books and research, but at present we are faced with\nexistential challenges as we endeavor to keep making open source “work” for\neveryone.</p>\n<p>In my experience, open source projects feature two dominant archetypal modes:\ninnovation and maintenance. The innovation stage often occurs at the beginning\nof projects: there are few users and the software changes or evolves\nrapidly. When a project becomes successful, it can become more\nconservative. Development shifts to stability, bug fixes, and gradual change\nand growth. There are many more users, and changes, especially “breaking” ones,\ncan have a high cost to the project’s reputation and future. OSS maintainers,\nwhich are often volunteers, routinely “burn out” under the strain of supporting\nburgeoning user bases who sometimes take a project’s existence and maintenance\nfor granted.</p>\n<h2>Supporting Maintenance</h2>\n<p>Some OSS projects become so important that their users consider them to be\nmission-critical infrastructure software, like Linux or security libraries like\nOpenSSL. The consequences of under-maintained infrastructure have been <a href=\"https://www.fordfoundation.org/library/reports-and-studies/roads-and-bridges-the-unseen-labor-behind-our-digital-infrastructure/\">studied\nextensively</a> in recent years in the wake of shocking security\nvulnerabilities exposed in widely used projects.</p>\n<p>Funding OSS maintenance, while challenging, has a clear value-proposition to\nthe world’s organizations, who increasingly view their dependence on OSS as a\nliability. Companies like RedHat have built their businesses on providing\npeace-of-mind around mission-critical OSS like Linux.</p>\n<p>We are starting to see new business models emerge for funding OSS maintenance,\nsuch as <a href=\"https://tidelift.com/\">Tidelift</a>, which has begun selling a type of “insurance policy”\nfor the package dependency graph of mission-critical OSS frameworks like React\nand AngularJS. The understanding is that funds from these insurance policies\nwill be paid to the maintainers of projects in the dependency graph to provide\ntimely bug fixes and support the healthy operation of the top-level projects.</p>\n<h2>Supporting Innovation</h2>\n<p>Funding the innovation stage of OSS is can be more difficult because of the\nheightened risk profile. A new project may or may not become successful or\nwidely-used.</p>\n<p>Most people know that I struggled for many years to obtain support for\ndeveloping pandas; in the end I convinced <a href=\"https://github.com/adamklein\">Adam Klein</a> and <a href=\"https://github.com/changhiskhan\">Chang She</a> to\ntake time away from their well-paying New York finance day jobs (at Goldman\nSachs and Citigroup, respectively) to work on the project with me in 2012. I\nestimate between the three of us pandas cost at least $500,000 in opportunity\ncost as we did not earn wages during the thousands of hours we invested in the\nproject in 2011 and 2012. If we had refused to build pandas unless we raised\nenough money to pay for our rent and families’ cost of living, the project\nlikely would not be what it is today.</p>\n<p>Open source data science software has become incredibly important to how the\nworld analyzes data and builds production machine learning and AI models. In\nGoogle, Facebook, and other industry research labs, Python has become the\nprimary machine learning user interface. If you had told me this in 2008 when I\nstarted building pandas, I might not have believed you.</p>\n<p>The risks to not funding innovation in OSS for data science are many. The ones\nI think most about are:</p>\n<ul>\n<li>Data scientists’ productivity will suffer, especially as data sizes continue\n  to grow.</li>\n<li>Computing costs will remain high as less efficient computing tools are\n  applied as well as possible to process the world’s data.</li>\n<li>Organizations continue to rely on less flexible, more expensive proprietary\n  software because they perceive OSS as inadequate.</li>\n</ul>\n<h2>Traps, and avoiding them</h2>\n<p>OSS developers have employed various strategies to support their work in lieu\nof direct funding. Sometimes they work, and sometimes they can be “traps”. I\nhave directly experienced some variant of all of these problems.</p>\n<ul>\n<li>\n<p><strong>The Consulting Trap</strong>: project creators hustle for services contracts with\n    users of their software. The contract dealmaking hustle distracts from\n    development, and the services work itself fragments attention from the core\n    development of projects.</p>\n</li>\n<li>\n<p><strong>The Startup Trap</strong>: startups build businesses that monetize the growing use\n    of one or more open source projects. While some of these businesses have\n    succeeded, the creators of open source projects generally must divide their\n    attention between building a business and building a software project. This\n    is obviously a tradeoff: with venture capital and revenue, one can build a\n    larger engineering team. But, startups can have governance conflicts with\n    their user and developer communities. Businesses with hybrid open-source\n    models sometimes must short-change OSS work in favor of work that will grow\n    revenue; the company founders’ desire to invest in OSS may come into\n    conflict with the expectations of the board of directors, who are usually\n    venture capital investors. In some cases, unfortunately, OSS developers are\n    laid off to cut costs.</p>\n</li>\n<li>\n<p><strong>The Corporate User Trap</strong>: a large company that depends on OSS hires or\n    grows developers of those projects to innovate and maintain them going\n    forward. In some cases a company may start a closed-source project, then\n    open source it later. There are many possible problems that arise with this\n    model. Developers may leave a company and fail to find another that will\n    support their work on a project. A company may lose interest in a project\n    and assign the developers to a different project. In some cases, a company\n    will build the new features they need and then “disappear” as they have\n    gotten what they need out of the project. A developer’s ability to grow a\n    larger development team may be limited by budgeting concerns that are out\n    of their control.</p>\n</li>\n</ul>\n<h2>2013 to now: DataPad, Cloudera, Two Sigma, and Apache Arrow</h2>\n<p>Hot on the heels of getting pandas off the ground and publishing my book Python\nfor Data Analysis in 2012, Chang She and I founded DataPad, a venture-funded\nstartup, with the objective of building a data product and later investing R&amp;D\nbudget back into the Python ecosystem. We handed off day-to-day maintenance of\npandas to <a href=\"https://github.com/jreback\">Jeff Reback</a>, <a href=\"https://github.com/cpcloud\">Phillip Cloud</a>, and others, who’ve done an\namazing job growing the project over the last 5 years.</p>\n<p>By mid-2014, at DataPad we found ourselves working on complex systems\nengineering problems in enterprise analytics that would be more effectively\nsolved in a larger enterprise software company. After the experience of\nbuilding out pandas and developing the DataPad product, I had accumulated a\nlist of complaints and grievances against pandas’s computational foundations\nthat I summarized infamously in my talk <a href=\"https://www.slideshare.net/wesm/practical-medium-data-analytics-with-python\">10 Things I Hate about pandas</a>. In\nSeptember 2014, the <a href=\"https://www.cloudera.com/more/news-and-blogs/press-releases/2014-09-30-cloudera-acquires-datapad-technology-assets-and-team-to-strength.html\">DataPad team and I joined Cloudera</a> to work on these\nproblems and more.</p>\n<p>When I arrived at Cloudera, one of my objectives was to form alliances with the\nbig data and analytic database communities to collaborate to solve shared data\nsystems problems for the benefit of the data science world. The two major\nartifacts of my time at Cloudera were <a href=\"http://ibis-project.org/\">Ibis</a>, a lazy computational\nexpression framework geared toward SQL-style execution engines, and <a href=\"http://arrow.apache.org\">Apache\nArrow</a>, a cross-language in-memory data frame format and analytics\ndevelopment platform.</p>\n<p>By mid-2016, facing a competitive big data infrastructure market and an arduous\npath to profitability, Cloudera was not well-positioned to build a team to join\nme in developing Apache Arrow and improve computational systems for data\nscience. While there was some obvious low-hanging fruit to accelerate\nPython-on-Spark, overall ROI from investing in Arrow was likely to be several\nyears away and thus was deemed too risky to justify a large budget allocation.</p>\n<p>Around this time, I was lucky to connect with <a href=\"https://www.twosigma.com\">Two Sigma</a>, a financial\ntechnology and investment management company with a growing OSS development\npractice and a petascale data warehouse being actively used with Apache Spark\nand the Python data science stack. I joined Two Sigma in 2016 as a software\narchitect in the analysis tools group, with a plan to make a forward-looking\nlong-term investment in performance and scalability for the Python data stack\nvia the Apache Arrow project. Working with the Two Sigma engineering team, we\nhave helped reach some major Arrow-related milestones.  The project has made 11\nreleases, grown over 130 contributors, and established exciting collaborations\nwith Apache Spark (accelerated data access and Python function execution in\nApache Spark), <a href=\"https://rise.cs.berkeley.edu/\">Berkeley RISELab</a> (Fast Python Serialization with Ray and\nApache Arrow), and the <a href=\"http://gpuopenanalytics.com\">GPGPU community</a>.</p>\n<p>As Apache Arrow has gotten off the ground over the last few years, it has\nbecome apparent that the problems we are tackling are much larger in scope than\nthe interests of a single organization or even programming language. As I have\nargued extensively in talks over the last few years (<a href=\"https://www.youtube.com/watch?v=wdmf1msbtVs\">Data Science Without\nBorders at JupyterCon</a>, <a href=\"https://www.slideshare.net/wesm/memory-interoperability-in-analytics-and-machine-learning\">Memory Interoperability for Analytics and Machine\nLearning at Stanford’s ScaledML</a>, <a href=\"https://www.slideshare.net/wesm/raising-the-tides-open-source-analytics-for-data-science\">Raising the Tides: Open Source Analytics\nfor Data Science at the Newsweek AI and Data Science Conference</a>), we are\nsolving the same kinds of problems across Python, R, and other languages, and\nArrow provides a unifying technology for creating shared computational\ninfrastructure for data science.</p>\n<p>After many years collaborating with and learning from the Python, R, JVM,\nJulia, and other data science communities, I have become convinced that the\ndata science world would benefit from shared computational libraries. I\nenvision a portable, community-standard “data science runtime” that can be\nutilized for processing native Arrow-based data frames in just about any\nprogramming language. This is a huge project. Some of the major areas of work\nfor this include:</p>\n<ul>\n<li>Portable C++ shared libraries with bindings for each host language (Python,\n  R, Ruby, etc.)</li>\n<li>Portable, multithreaded Apache Arrow-based execution engine for efficient\n  evaluation of lazy data frame expressions created in the host language.</li>\n<li>Reusable operator “kernel” containing functions utilizing Arrow format as\n  input and output. This includes pandas-style array functions as well as\n  SQL-style relational operations (joins, aggregations, etc.)</li>\n<li>Compilation of operator “subgraphs” using LLVM; optimization of common\n  operator patterns.</li>\n<li>Support for user-defined operators and function kernels.</li>\n<li>Comprehensive interoperability with existing data representations (e.g. data\n  frames in R, pandas / NumPy in Python).</li>\n<li>New front end interfaces for host languages (e.g. dplyr and other \"tidy\"\n  front ends for R, evolution of pandas for Python)</li>\n</ul>\n<h2>Enter the <strike>Dragon</strike> Bear</h2>\n<p>In light of my experiences building data science software over the last 10\nyears, I believe the way that I can best serve the open source data science\nworld is by creating an independent organization, <a href=\"https://ursalabs.org\">Ursa Labs</a>, dedicated to\nadvancing cross-language computational systems for data science. The immediate\npurpose of this organization is to hire and support developers of data science\nsystems that are part of the burgeoning Apache Arrow ecosystem. The lab will\npartner with larger organizations to be supported through direct funding and\nengineering collaborations.</p>\n<p>While I am primarily looking for direct funding relationships with companies to\ngrow my development team, I will also be accepting smaller direct donations to\nthe lab which can hopefully support additional developer headcount in time.</p>\n<h2>Partnering with RStudio</h2>\n<p>RStudio will be helping me with the administrative side of operating Ursa Labs\n(HR, benefits, finances, etc., which amounts to a lot of hard work.)  I will\nmanage the money raised by the lab, which will primarily be used to pay for\nsalary and benefits for full-time engineers on the Ursa Labs team. The Ursa\nteam and I will operate as a functionally independent engineering group within\nthe RStudio organization and collaborate with other members of RStudio on\nR-related development work. While it might seem strange to some that I, a\nlong-time Python developer, would be partnering with a company that builds\nsoftware for R programmers, it actually makes perfect sense.</p>\n<p>In 2016, <a href=\"http://hadley.nz\">Hadley Wickham</a> and I had a brief collaboration to create the\nFeather file format, an Arrow-based interoperable binary file format for data\nframes that can be used from Python and R. The idea of Feather was to socialize\nthe idea of interoperable data technology using Apache Arrow. Many people were\nsurprised to see Hadley and I working together when Python and R are “supposed”\nto be enemies. The reality is that Hadley and I think the “language wars” are\nstupid when the real problem we are solving is human user interface design for\ndata analysis. The programming languages are our medium for crafting accessible\nand productive tools. It has long been a frustration of mine that it isn’t\neasier to share code and systems between R and Python. This is part of why\nworking on Arrow has been so important for me; it provides a path to sharing of\nsystems code outside of Python by enabling free interoperability at the data\nlevel.</p>\n<p>R, like Python, faces systems-level problems around fast and scalable in-memory\ndata processing. Since the problems we are solving are so structurally similar,\nwe have long believed that a more extensive collaboration between the\ncommunities should happen. It is my goal for the software that I am building to\nwork equally well for R programmers as for Python programmers. As part of the\ncollaboration with RStudio, Hadley Wickham will act as a technical adviser to\nthe work to ensure that we are looking after the needs of R users. We’re all\nvery excited about this.</p>\n<p>In the last several years, I have been extremely impressed with the RStudio\norganization and its founder and CEO, J.J. Allaire. As he, Hadley, and I have\ngotten to know each other at data science events, I found that we share a\npassion for the long-term vision of empowering data scientists and building a\npositive relationship with the open source user community. Critically, RStudio\nhas avoided the “startup trap” and managed to build a sustainable business\nwhile still investing the vast majority of its engineering resources in open\nsource development. Nearly 9 years have passed since J.J. started building the\nRStudio IDE, but in many ways he and Hadley and others feel like they are just\ngetting started.</p>\n<h2>Partnering with Two Sigma</h2>\n<p>During my time at Two Sigma, I worked towards a shared vision of data science\ntools with <a href=\"https://www.crunchbase.com/person/matt-greenwood\">Matt Greenwood</a>, who heads the company’s Modeling Engineering\norganization and <a href=\"https://github.com/tnn1t1s\">David Palaitis</a> who manages Two Sigma’s open source\nefforts. After almost two years, we realized the problems I’m trying to solve\nwith Apache Arrow are bigger than any one company can support.  Eventually a\nproject’s scope and needs expand beyond the interests and capabilities of any\nsingle organization.</p>\n<p>Having access to real problems in data science at massive scale at Two Sigma\nhas informed and validated my vision for Ursa, and my departure to start Ursa\nLabs does not mean a break on my relationship with the company. By partnering\nwith them as I begin my next venture, I can keep the feedback loop open as they\nwork as early adopters of Arrow software.  Two Sigma’s interest in Arrow is\npart of a larger commitment to creating a productive future for data science,\nincluding commitment to communities built around Pandas, Ibis, Jupyter, Spark,\nMesos and Tensorflow, among others.</p>\n<p>Two Sigma will contribute to Ursa Labs through employee contributions to Ursa\nLabs projects like Arrow and funding external open sources devs as needed.They\nwill also collaborate on technical advising and rallying support in the\ncommunity.  Matt can help generate the new initiative through his seats on the\nboard of <a href=\"https://www.numfocus.org/\">NumFOCUS</a> and <a href=\"https://www.twosigmaventures.com/\">TS Ventures</a>.  I’ll continue my work with Two\nSigma core OSS engineers like Jeff Reback (pandas) and Phillip Cloud (Ibis),\nand you can look forward to joint talks, such as an upcoming presentation with\nJeff Reback at PyData.</p>\n<h2>Getting involved</h2>\n<p>We are only now at the beginning of a long journey ahead of us to advance the\nstate of the art in data science tools.</p>\n<p>We will soon be posting some full-time engineering positions, so if you are a\nsoftware engineer and are interested in joining the lab's mission, please stay\ntuned. In the meantime, we'd love to have you involved with <a href=\"http://arrow.apache.org\">Apache Arrow</a>.</p>\n<p>If you are with an organization in a position to sponsor our work or partner\nwith us in some other way, please reach out to <a href=\"mailto:info@ursalabs.org\">info@ursalabs.org</a>.</p>"
}