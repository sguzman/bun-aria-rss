{
  "guid": "http://blog.districtdatalabs.com/data-exploration-with-python-3#26376",
  "pubDate": "Fri, 31 Mar 2017 15:47:38 -0400",
  "link": "http://blog.districtdatalabs.com/data-exploration-with-python-3",
  "title": "Data Exploration with Python, Part 3",
  "description": "Embarking on an Insight-Finding Mission",
  "content:encoded": "<p><em>This is the third post in our Data Exploration with Python series. Before reading this post, make sure to check out <a href=\"http://blog.districtdatalabs.com/data-exploration-with-python-1\">Part 1</a> and <a href=\"http://blog.districtdatalabs.com/data-exploration-with-python-2\">Part 2</a>!</em></p>\n\n<p>Preparing yourself and your data like we have done thus far in this series is essential to analyzing your data well. However, the most exciting part of Exploratory Data Analysis (EDA) is actually getting in there, exploring the data, and discovering insights. That's exactly what we are going to start doing in this post. </p>\n\n<p>We will begin with the cleaned and prepped vehicle fuel economy data set that we ended up with at the end of the last post. This version of the data set contains:</p>\n\n<ul>\n<li>The higher-level categories we created via category aggregations.</li>\n<li>The quintiles we created by binning our continuous variables. </li>\n<li>The clusters we generated via k-means clustering based on numeric variables. </li>\n</ul>\n\n<p>Now, without further ado, let's embark on our insight-finding mission!</p>\n\n<h2 id=\"making-our-data-smaller-filter-aggregate\">Making Our Data Smaller: Filter + Aggregate</h2>\n\n<p>One of the fundamental ways to extract insights from a data set is to reduce the size of the data so that you can look at just a piece of it at a time. There are two ways to do this: <em>filtering</em> and <em>aggregating</em>. With filtering, you are essentially removing either rows or columns (or both rows and columns) in order to focus on a subset of the data that interests you. With aggregation, the objective is to group records in your data set that have similar categorical attributes and then perform some calculation (count, sum, mean, etc.) on one or more numerical fields so that you can observe and identify differences between records that fall into each group. </p>\n\n<p>To begin filtering and aggregating our data set, we could write a function like the one below to aggregate based on a <code>group_field</code> that we provide, counting the number of rows in each group. To make things more intuitive and easier to interpret, we will also sort the data from most frequent to least and format it in a pandas data frame with appropriate column names. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">agg_count</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">group_field</span><span class=\"p\">):</span>\n    <span class=\"n\">grouped</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"n\">group_field</span><span class=\"p\">,</span> <span class=\"n\">as_index</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">()</span>\n    <span class=\"n\">grouped</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">ascending</span> <span class=\"o\">=</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n\n    <span class=\"n\">grouped</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">grouped</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reset_index</span><span class=\"p\">()</span>\n    <span class=\"n\">grouped</span><span class=\"o\">.</span><span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">group_field</span><span class=\"p\">,</span> <span class=\"s1\">'Count'</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">grouped</span>\n</pre></div>\n<p>Now that we have this function in our toolkit, let's use it. Suppose we were looking at the <em>Vehicle Category</em> field in our data set and were curious about the number of vehicles in each category that were manufactured last year (2016). Here is how we would filter the data and use the <code>agg_count</code> function to transform it to show what we wanted to know.  </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">vehicles_2016</span> <span class=\"o\">=</span> <span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"s1\">'Year'</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"mi\">2016</span><span class=\"p\">]</span>\n<span class=\"n\">category_counts</span> <span class=\"o\">=</span> <span class=\"n\">agg_count</span><span class=\"p\">(</span><span class=\"n\">vehicles_2016</span><span class=\"p\">,</span> <span class=\"s1\">'Vehicle Category'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Filter Aggregate Count\" src=\"https://silvrback.s3.amazonaws.com/uploads/42f4db91-ee92-4a97-a5b1-9c4970bd6552/filter_agg_categories.png\" /></p>\n\n<p>This gives us what we want in tabular form, but we could take it a step further and visualize it with a horizontal bar chart. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">barplot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">category_counts</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s1\">'Count'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"s1\">'Vehicle Category'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Number of Vehicles Manufactured'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Vehicles Manufactured by Category (2016) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Vehicles Manufactured 2016 Bar Chart\" src=\"https://silvrback.s3.amazonaws.com/uploads/99f6e70a-596a-4954-b6ab-ae49a004e43e/category_counts_barchart_large.png\" /></p>\n\n<p>Now that we know how to do this, we can filter, aggregate, and plot just about anything in our data set with just a few lines of code. For example, here is the same metric but filtered for a different year (1985). </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">vehicles_1985</span> <span class=\"o\">=</span> <span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"s1\">'Year'</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"mi\">1985</span><span class=\"p\">]</span>\n<span class=\"n\">category_counts</span> <span class=\"o\">=</span> <span class=\"n\">agg_count</span><span class=\"p\">(</span><span class=\"n\">vehicles</span><span class=\"p\">,</span> <span class=\"s1\">'Vehicle Category'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">barplot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">category_counts</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s1\">'Count'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"s1\">'Vehicle Category'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Number of Vehicles Manufactured'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Vehicles Manufactured by Category (1985) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Vehicles Manufactured 1985 Bar Chart\" src=\"https://silvrback.s3.amazonaws.com/uploads/1ed9fe80-ec31-403c-8f77-29d5fead34bd/category_counts_barchart_1985_large.png\" /></p>\n\n<p>If we wanted to stick with the year 2016 but drill down to the more granular <em>Vehicle Class</em>, we could do that as well. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">class_counts</span> <span class=\"o\">=</span> <span class=\"n\">agg_count</span><span class=\"p\">(</span><span class=\"n\">vehicles_2016</span><span class=\"p\">,</span> <span class=\"s1\">'Vehicle Class'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">barplot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">class_counts</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s1\">'Count'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"s1\">'Vehicle Class'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Number of Vehicles Manufactured'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Vehicles Manufactured by Class (2016) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Silvrback blog image \" src=\"https://silvrback.s3.amazonaws.com/uploads/c47e4aab-b59c-48e7-bc8f-ee82f98b1137/class_counts_barchart_large.png\" /></p>\n\n<p>We could also look at vehicle counts by manufacturer. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">make_counts</span> <span class=\"o\">=</span> <span class=\"n\">agg_count</span><span class=\"p\">(</span><span class=\"n\">vehicles_2016</span><span class=\"p\">,</span> <span class=\"s1\">'Make'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">barplot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">make_counts</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s1\">'Count'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"s1\">'Make'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Number of Vehicles Manufactured'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Vehicles Manufactured by Make (2016) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Silvrback blog image \" src=\"https://silvrback.s3.amazonaws.com/uploads/c02ebb36-5ec7-40c5-906d-17afa20316ba/make_counts_barchart_2016.png\" /></p>\n\n<p>What if we wanted to filter by something other than the year? We could do that by simply creating a different filtered data frame and passing that to our <code>agg_count</code> function. Below, instead of filtering by <em>Year</em>, I've filtered on the <em>Fuel Efficiency</em> field, which contains the fuel efficiency quintiles we generated in the last post. Let's choose the <em>Very High Efficiency</em> value so that we can see how many very efficient vehicles each manufacturer has made. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">very_efficient</span> <span class=\"o\">=</span> <span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"s1\">'Fuel Efficiency'</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"s1\">'Very High Efficiency'</span><span class=\"p\">]</span>\n<span class=\"n\">make_counts</span> <span class=\"o\">=</span> <span class=\"n\">agg_count</span><span class=\"p\">(</span><span class=\"n\">very_efficient</span><span class=\"p\">,</span> <span class=\"s1\">'Make'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">barplot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">make_counts</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s1\">'Count'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"s1\">'Make'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Number of Vehicles Manufactured'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Very Fuel Efficient Vehicles by Make </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Very Efficient Vehicles by Make\" src=\"https://silvrback.s3.amazonaws.com/uploads/d80731bf-eb04-45e2-9d6f-28dd59030c06/make_efficiency_count_barchart.png\" /></p>\n\n<p>What if we wanted to perform some other calculation, such as averaging, instead of counting the number of records that fall into each group? We can just create a new function called <code>agg_avg</code> that calculates the mean of a designated numerical field.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">agg_avg</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">group_field</span><span class=\"p\">,</span> <span class=\"n\">calc_field</span><span class=\"p\">):</span>\n    <span class=\"n\">grouped</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"n\">group_field</span><span class=\"p\">,</span> <span class=\"n\">as_index</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)[</span><span class=\"n\">calc_field</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>\n    <span class=\"n\">grouped</span> <span class=\"o\">=</span> <span class=\"n\">grouped</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">calc_field</span><span class=\"p\">,</span> <span class=\"n\">ascending</span> <span class=\"o\">=</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">grouped</span><span class=\"o\">.</span><span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">group_field</span><span class=\"p\">,</span> <span class=\"s1\">'Avg '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">calc_field</span><span class=\"p\">)]</span>\n    <span class=\"k\">return</span> <span class=\"n\">grouped</span>\n</pre></div>\n<p>We can then simply swap out the <code>agg_count</code> function with our new <code>agg_avg</code> function and indicate what field we would like to use for our calculation. Below is an example showing the average fuel efficiency, represented by the <em>Combined MPG</em> field, by vehicle category. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">category_avg_mpg</span> <span class=\"o\">=</span> <span class=\"n\">agg_avg</span><span class=\"p\">(</span><span class=\"n\">vehicles_2016</span><span class=\"p\">,</span> <span class=\"s1\">'Vehicle Category'</span><span class=\"p\">,</span> <span class=\"s1\">'Combined MPG'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">barplot</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">category_avg_mpg</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s1\">'Avg Combined MPG'</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"s1\">'Vehicle Category'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Average Combined MPG'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Average Combined MPG by Category (2016) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Average Fuel Efficiency by Vehicle Category\" src=\"https://silvrback.s3.amazonaws.com/uploads/c3a1416e-4553-4b8a-8661-78609b2d111f/avg_mpg_barchart_2016_large.png\" /></p>\n\n<h2 id=\"pivoting-the-data-for-more-detail\">Pivoting the Data for More Detail</h2>\n\n<p>Up until this point, we've been looking at our data at a pretty high level, aggregating up by a single variable. Sure, we were able to drill down from <em>Vehicle Category</em> to <em>Vehicle Class</em> to get a more granular view, but we only looked at the data one hierarchical level at a time. Next, we're going to go into further detail by taking a look at two or three variables at a time. The way we are going to do this is via pivot tables and their visual equivalents, pivot heatmaps.</p>\n\n<p>First, we will create a <code>pivot_count</code> function, similar to the <code>agg_count</code> function we created earlier, that will transform whatever data frame we feed it into a pivot table with the rows, columns, and calculated field we specify. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">pivot_count</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">rows</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"p\">,</span> <span class=\"n\">calc_field</span><span class=\"p\">):</span>\n    <span class=\"n\">df_pivot</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">pivot_table</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">calc_field</span><span class=\"p\">,</span> \n                              <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"n\">rows</span><span class=\"p\">,</span> \n                              <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">columns</span><span class=\"p\">,</span> \n                              <span class=\"n\">aggfunc</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">size</span>\n                             <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dropna</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">how</span><span class=\"o\">=</span><span class=\"s1\">'all'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">df_pivot</span>\n</pre></div>\n<p>We will then use this function on our <code>vehicles_2016</code> data frame and pivot it out with the <em>Fuel Efficiency</em> quintiles we created in the last post representing the rows, the <em>Engine Size</em> quintiles representing the columns, and then counting the number of vehicles that had a <em>Combined MPG</em> value. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">effic_size_pivot</span> <span class=\"o\">=</span> <span class=\"n\">pivot_count</span><span class=\"p\">(</span><span class=\"n\">vehicles_2016</span><span class=\"p\">,</span><span class=\"s1\">'Fuel Efficiency'</span><span class=\"p\">,</span>\n                               <span class=\"s1\">'Engine Size'</span><span class=\"p\">,</span><span class=\"s1\">'Combined MPG'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Filter Pivot Count Fuel Efficiency vs. Engine Size\" src=\"https://silvrback.s3.amazonaws.com/uploads/bf04bb64-890d-42e0-8d77-12a37a482c9d/filter_count_pivot.png\" /></p>\n\n<p>This is OK, but it would be faster to analyze visually. Let's create a heatmap that will color the magnitude of the counts and present us with a more intuitive view. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">heatmap</span><span class=\"p\">(</span><span class=\"n\">effic_size_pivot</span><span class=\"p\">,</span> <span class=\"n\">annot</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s1\">'g'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Engine Size'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Fuel Efficiency vs. Engine Size (2016) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Fuel Efficiency by Engine Size Heatmap 2016\" src=\"https://silvrback.s3.amazonaws.com/uploads/cb309263-4b8c-47d0-8159-ea0f9933cfa2/efficiency_size_heatmap.png\" /></p>\n\n<p>Just like we did earlier with our horizontal bar charts, we can easily filter by a different year and get a different perspective. For example, here's what this heatmap looks like for 1985.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">effic_size_pivot</span> <span class=\"o\">=</span> <span class=\"n\">pivot_count</span><span class=\"p\">(</span><span class=\"n\">vehicles_1985</span><span class=\"p\">,</span><span class=\"s1\">'Fuel Efficiency'</span><span class=\"p\">,</span>\n                               <span class=\"s1\">'Engine Size'</span><span class=\"p\">,</span><span class=\"s1\">'Combined MPG'</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">))</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">heatmap</span><span class=\"p\">(</span><span class=\"n\">effic_size_pivot</span><span class=\"p\">,</span> <span class=\"n\">annot</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s1\">'g'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Engine Size'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Fuel Efficiency vs. Engine Size (1985) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Fuel Efficiency by Engine Size Heatmap 1985\" src=\"https://silvrback.s3.amazonaws.com/uploads/5f0f5ec8-f37e-4092-8828-07b12ae48307/efficiency_size_heatmap_1985.png\" /></p>\n\n<p>With these pivot heatmaps, we are not limited to just two variables. We can pass a list of variables for any of the axes (rows or columns), and it will display all the different combinations of values for those variables. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">effic_size_category</span> <span class=\"o\">=</span> <span class=\"n\">pivot_count</span><span class=\"p\">(</span><span class=\"n\">vehicles_2016</span><span class=\"p\">,</span>\n                                  <span class=\"p\">[</span><span class=\"s1\">'Engine Size'</span><span class=\"p\">,</span><span class=\"s1\">'Fuel Efficiency'</span><span class=\"p\">],</span>\n                                  <span class=\"s1\">'Vehicle Category'</span><span class=\"p\">,</span><span class=\"s1\">'Combined MPG'</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">heatmap</span><span class=\"p\">(</span><span class=\"n\">effic_size_category</span><span class=\"p\">,</span> <span class=\"n\">annot</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s1\">'g'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Vehicle Category'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Fuel Efficiency + Engine Size vs. Vehicle Category (2016) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Engine Size and Fuel Efficiency by Vehicle Category Heatmap\" src=\"https://silvrback.s3.amazonaws.com/uploads/c366a0f2-0fd7-4347-bcec-871fd9f43463/efficiency_size_category.png\" /></p>\n\n<p>In this heatmap, we have <em>Engine Size</em> and <em>Fuel Efficiency</em> combinations represented by the rows, and we've added a third variable (the <em>Vehicle Category</em>) across the columns. So now we can see a finer level of detail about what types of cars had what size engines and what level of fuel efficiency last year. </p>\n\n<p>As a final example for this section, let's create a pivot heatmap that plots <em>Make</em> against <em>Vehicle Category</em> for 2016. We saw earlier, in the bar chart that counted vehicles by manufacturer, that BMW made the largest number of specific models last year. This pivot heatmap will let us see how those counts are distributed across vehicle categories, giving us a better sense of each auto company's current offerings in terms of the breadth vs. depth of vehicle types they make.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">effic_size_pivot</span> <span class=\"o\">=</span> <span class=\"n\">pivot_count</span><span class=\"p\">(</span><span class=\"n\">vehicles_2016</span><span class=\"p\">,</span> <span class=\"s1\">'Make'</span><span class=\"p\">,</span>\n                               <span class=\"s1\">'Vehicle Category'</span><span class=\"p\">,</span><span class=\"s1\">'Combined MPG'</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">))</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">heatmap</span><span class=\"p\">(</span><span class=\"n\">effic_size_pivot</span><span class=\"p\">,</span> <span class=\"n\">annot</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s1\">'g'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Vehicle Category'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Make vs. Vehicle Category (2016) </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Make vs. Vehicle Category 2016\" src=\"https://silvrback.s3.amazonaws.com/uploads/133b4395-0c9e-48ed-8d2b-eab02a45b7cf/make_category_heatmap.png\" /></p>\n\n<h2 id=\"visualizing-changes-over-time\">Visualizing Changes Over Time</h2>\n\n<p>So far in this post, we've been looking at the data at given points in time. The next step is to take a look at how the data has changed over time. We can do this relatively easily by creating a <code>multi_line</code> function that accepts a data frame and x/y fields and then plots them on a multiline chart. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">multi_line</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n    <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">([</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">unstack</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s2\">\"Set2\"</span><span class=\"p\">)</span>\n</pre></div>\n<p>Let's use this function to visualize our vehicle categories over time. The resulting chart shows the number of vehicles in each category that were manufactured each year. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">multi_line</span><span class=\"p\">(</span><span class=\"n\">vehicles</span><span class=\"p\">,</span> <span class=\"s1\">'Year'</span><span class=\"p\">,</span> <span class=\"s1\">'Vehicle Category'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Year'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Vehicle Categories Over Time </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Vehicle Categories Over Time\" src=\"https://silvrback.s3.amazonaws.com/uploads/5050b0cf-32dd-43fd-9373-206f53f67f1b/categories_over_time.png\" /></p>\n\n<p>We can see from the chart that Small Cars have generally dominated across the board and that there was a small decline in the late 90s that then started to pick up again in the early 2000s. We can also see the introduction and increase in popularity of SUVs starting in the late 90s, and the decline in popularity of trucks in recent years.</p>\n\n<p>If we wanted to, we could zoom in and filter for specific manufacturers to see how their offerings have changed over the years. Since BMW had the most number of vehicles last year and we saw in the pivot heatmap that those were mostly small cars, let's filter for just their vehicles to see whether they have always made a lot of small cars or if this is more of a recent phenomenon. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">bmw</span> <span class=\"o\">=</span> <span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"s1\">'Make'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'BMW'</span><span class=\"p\">]</span>\n\n<span class=\"n\">multi_line</span><span class=\"p\">(</span><span class=\"n\">bmw</span><span class=\"p\">,</span> <span class=\"s1\">'Year'</span><span class=\"p\">,</span> <span class=\"s1\">'Vehicle Category'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Year'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'BMW Vehicle Categories Over Time </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"BMW Vehicle Categories Over Time\" src=\"https://silvrback.s3.amazonaws.com/uploads/19c75310-4cd8-4794-a2bb-e6dacad5727f/bmw_categories.png\" /></p>\n\n<p>We can see in the chart above that they started off making a reasonable number of small cars, and then seemed to ramp up production of those types of vehicles in the late 90s. We can contrast this with a company like Toyota, who started out making a lot of small cars back in the 1980s and then seemingly made a decision to gradually manufacture less of them over the years, focusing instead on SUVs, pickup trucks, and midsize cars.</p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">toyota</span> <span class=\"o\">=</span> <span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"s1\">'Make'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'Toyota'</span><span class=\"p\">]</span>\n\n<span class=\"n\">multi_line</span><span class=\"p\">(</span><span class=\"n\">toyota</span><span class=\"p\">,</span> <span class=\"s1\">'Year'</span><span class=\"p\">,</span> <span class=\"s1\">'Vehicle Category'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\"> Year'</span><span class=\"p\">)</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Toyota Vehicle Categories Over Time </span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Toyota Vehicle Categories Over Time\" src=\"https://silvrback.s3.amazonaws.com/uploads/a3a21ba3-de16-41d1-89df-0bc5b5075554/toyota_categories.png\" /></p>\n\n<h2 id=\"examining-relationships-between-variables\">Examining Relationships Between Variables</h2>\n\n<p>The final way we are going to explore our data in this post is by examining the relationships between numerical variables in our data. Doing this will provide us with better insight into which fields are highly correlated, what the nature of those correlations are, what typical combinations of numerical values exist in our data, and which combinations are anomalies. </p>\n\n<p>For looking at relationships between variables, I often like to start with a scatter matrix because it gives me a bird's eye view of the relationships between all the numerical fields in my data set. With just a couple lines of code, we can not only create a scatter matrix, but we can also factor in a layer of color that can represent, for example, the clusters we generated at the end of the last post. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">select_columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'Engine Displacement'</span><span class=\"p\">,</span><span class=\"s1\">'Cylinders'</span><span class=\"p\">,</span><span class=\"s1\">'Fuel Barrels/Year'</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'City MPG'</span><span class=\"p\">,</span><span class=\"s1\">'Highway MPG'</span><span class=\"p\">,</span><span class=\"s1\">'Combined MPG'</span><span class=\"p\">,</span>\n                   <span class=\"s1\">'CO2 Emission Grams/Mile'</span><span class=\"p\">,</span> <span class=\"s1\">'Fuel Cost/Year'</span><span class=\"p\">,</span> <span class=\"s1\">'Cluster Name'</span><span class=\"p\">]</span>\n\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">pairplot</span><span class=\"p\">(</span><span class=\"n\">vehicles</span><span class=\"p\">[</span><span class=\"n\">select_columns</span><span class=\"p\">],</span> <span class=\"n\">hue</span><span class=\"o\">=</span><span class=\"s1\">'Cluster Name'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Scatter Matrix with Cluster Hue\" src=\"https://silvrback.s3.amazonaws.com/uploads/83a2b8d1-2c13-47df-accf-fb28fe86191a/scatter_matrix_clusters.png\" /></p>\n\n<p>From here, we can see that there are some strong positive linear relationships in our data, such as the correlations between the MPG fields, and also among the fuel cost, barrels, and CO2 emissions fields. There are also some hyperbolic relationships in there as well, particularly between the MPG fields and engine displacement, fuel cost, barrels, and emissions. Additionally, we can also get a sense of the size of our clusters, how they are distributed, and the level of overlap we have between them. </p>\n\n<p>Once we have this high-level overview, we can zoom in on anything that we think looks interesting. For example, let's take a closer look at <em>Engine Displacement</em> plotted against <em>Combined MPG</em>. </p>\n<div class=\"highlight\"><pre><span></span><span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">lmplot</span><span class=\"p\">(</span><span class=\"s1\">'Engine Displacement'</span><span class=\"p\">,</span> <span class=\"s1\">'Combined MPG'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">vehicles</span><span class=\"p\">,</span> \n           <span class=\"n\">hue</span><span class=\"o\">=</span><span class=\"s1\">'Cluster Name'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">fit_reg</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n</pre></div>\n<p><img alt=\"Displacement MPG Scatter Plot\" src=\"https://silvrback.s3.amazonaws.com/uploads/0476c1e0-b3ad-40d2-a2ff-684c5052281f/disp_mpg_scatter.png\" /></p>\n\n<p>In addition to being able to see that there is a hyperbolic correlation between these two variables, we can see that our <em>Small Very Efficient</em> cluster resides in the upper left, followed by our <em>Midsized Balanced</em> cluster that looks smaller and more compact than the others. After that, we have our <em>Large Moderately Efficient</em> cluster and finally our <em>Large Inefficient</em> cluster on the bottom right. </p>\n\n<p>We can also see that there are a few red points at the very top left and a few purple points at the very bottom right that we may want to investigate further to get a sense of what types of vehicles we are likely to see at the extremes. Try identifying some of those on your own by filtering the data set like we did earlier in the post. While you're at it, try creating additional scatter plots that zoom in on other numerical field combinations from the scatter matrix above. There are a bunch of other insights to be found in this data set, and all it takes is a little exploration!</p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>We have covered quite a bit in this post, and I hope I've provided you with some good examples of how, with just a few tools in your arsenal, you can embark on a robust insight-finding expedition and discover truly interesting things about your data.  Now that you have some structure in your process and some tools for exploring data, you can let your creativity run wild a little and come up with filter, aggregate, pivot, and scatter combinations that are most interesting to you. Feel free to experiment and post any interesting insights you're able to find in the comments!</p>\n\n<p>Also, make sure to stay tuned because in the next (and final) post of this series, I'm going to cover how to identify and think about the different <em>networks</em> that are present in your data and how to explore them using graph analytics. Click the subscribe button below and enter your email so that you receive a notification as soon as it's published!</p>\n\n<p><em>District Data Labs provides data science <a href=\"http://www.districtdatalabs.com/consulting/\">consulting</a> and <a href=\"http://www.districtdatalabs.com/training/\">corporate training</a> services. We work with companies and teams of all sizes, helping them make their operations more data-driven and enhancing the analytical abilities of their employees. Interested in working with us? <a href=\"mailto:contact@districtdatalabs.com?subject=Consulting%20and%20Corporate%20Training%20Services&body=Hello!%20I'm%20interested%20in%20learning%20more%20about%20your%20data%20science%20consulting%20and%20corporate%20training%20offerings.\">Let us know</a>!</em></p>\n"
}