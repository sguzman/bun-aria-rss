{
  "title": "An R alternative to pairs for -omics QC",
  "link": "https://datascienceplus.com/an-r-alternative-to-pairs-for-omics-qc/",
  "comments": "https://datascienceplus.com/an-r-alternative-to-pairs-for-omics-qc/#respond",
  "dc:creator": "Nicholas Carruthers",
  "pubDate": "Mon, 28 Mar 2022 01:23:19 +0000",
  "category": [
    "Basic Statistics",
    "Data Visualisation",
    "ggplot2",
    "tidyverse"
  ],
  "guid": "https://datascienceplus.com/?p=32097",
  "description": "<div style=\"border-top: 1px solid; font-size: 14px;text-align: center; border-bottom: 1px solid; padding: 5px 2px;\"><a href=\"https://datascienceplus.com/posting-from-r-markdown-to-datascienceplus/\">Are you interested in guest posting? Publish at DataScience+  via your RStudio editor.</a></div><h2>Category</h2><ul><li><a href=\"https://datascienceplus.com/category/basic-statistics/\" rel=\"bookmark\" title=\"Permanent Link toBasic Statistics\">Basic Statistics</a></li></ul><h2>Tags</h2><ul><li><a href=\"https://datascienceplus.com/tag/data-visualisation/\" rel=\"bookmark\" title=\"Permanent Link toData Visualisation\">Data Visualisation</a></li><li><a href=\"https://datascienceplus.com/tag/ggplot2/\" rel=\"bookmark\" title=\"Permanent Link toggplot2\">ggplot2</a></li><li><a href=\"https://datascienceplus.com/tag/rstats/\" rel=\"bookmark\" title=\"Permanent Link toR Programming\">R Programming</a></li><li><a href=\"https://datascienceplus.com/tag/tidyverse/\" rel=\"bookmark\" title=\"Permanent Link totidyverse\">tidyverse</a></li></ul>Introduction The Problem: I&#039;ve got a couple of problems with the commonly used &#8220;pairs&#8221; plot in R for quality control in -omics data. (1) It&#039;s not that space-efficient since it only uses half the space for datapoints and (2) the scatterplot isn&#039;t very informative. When I look at those scatter plots it&#039;s hard to tell [&#8230;]<strong><p>Related Post</p></strong><ul><li><a href=\"https://datascienceplus.com/how-i-selected-my-starting-word-for-wordle-using-simulations-and-r/\" rel=\"bookmark\" title=\"Permanent Link toHow I selected my starting word for Wordle using simulations and R\">How I selected my starting word for Wordle using simulations and R</a></li><li><a href=\"https://datascienceplus.com/ditch-p-values-use-bootstrap-confidence-intervals-instead/\" rel=\"bookmark\" title=\"Permanent Link toDitch p-values. Use Bootstrap confidence intervals instead\">Ditch p-values. Use Bootstrap confidence intervals instead</a></li><li><a href=\"https://datascienceplus.com/introduction-for-decision-tree/\" rel=\"bookmark\" title=\"Permanent Link toIntroduction for Decision Tree\">Introduction for Decision Tree</a></li><li><a href=\"https://datascienceplus.com/correlation-vs-pps-in-python/\" rel=\"bookmark\" title=\"Permanent Link toCorrelation vs PPS in Python\">Correlation vs PPS in Python</a></li><li><a href=\"https://datascienceplus.com/earthquake-analysis-4-4-cluster-analysis/\" rel=\"bookmark\" title=\"Permanent Link toEarthquake Analysis (4/4): Cluster Analysis\">Earthquake Analysis (4/4): Cluster Analysis</a></li></ul>",
  "content:encoded": "<div style=\"border-top: 1px solid; font-size: 14px;text-align: center; border-bottom: 1px solid; padding: 5px 2px;\"><a href=\"https://datascienceplus.com/posting-from-r-markdown-to-datascienceplus/\">Are you interested in guest posting? Publish at DataScience+  via your RStudio editor.</a></div><h2>Category</h2><ul><li><a href=\"https://datascienceplus.com/category/basic-statistics/\" rel=\"bookmark\" title=\"Permanent Link toBasic Statistics\">Basic Statistics</a></li></ul><h2>Tags</h2><ul><li><a href=\"https://datascienceplus.com/tag/data-visualisation/\" rel=\"bookmark\" title=\"Permanent Link toData Visualisation\">Data Visualisation</a></li><li><a href=\"https://datascienceplus.com/tag/ggplot2/\" rel=\"bookmark\" title=\"Permanent Link toggplot2\">ggplot2</a></li><li><a href=\"https://datascienceplus.com/tag/rstats/\" rel=\"bookmark\" title=\"Permanent Link toR Programming\">R Programming</a></li><li><a href=\"https://datascienceplus.com/tag/tidyverse/\" rel=\"bookmark\" title=\"Permanent Link totidyverse\">tidyverse</a></li></ul><h2>Introduction</h2>\n<p><em>The Problem:</em> I&#039;ve got a couple of problems with the commonly used &ldquo;pairs&rdquo; plot in R for quality control in -omics data.  (1) It&#039;s not that space-efficient since it only uses half the space for datapoints and (2) the scatterplot isn&#039;t very informative.  When I look at those scatter plots it&#039;s hard to tell anything about the spread of the data or any normalization problems.  This is particularily true for proteomics data where the high dynamic range can obscure lower abundance points.  </p>\n<p><em>The Solution:</em> A panel of MA plots (Minus-Average).  The MA plot shows fold-change vs average intensity for a pair of samples.  It lets you see difference between sample groups as fold-change which I think is a useful unit for comparison and visualizes normalization problems.  Rather than plot each against each we will only compare samples between groups to save space.  </p>\n<p>This goes along with a previous post of <a href=\"https://datascienceplus.com/how-to-carry-column-metadata-in-pivot_longer/\">mine</a> that attempts to convince biologists of the value of putting tables of data into <a href=\"https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html\">tidy</a> format.  This method takes advantage of pivoting data to succintly generate a panel of MA plots</p>\n<pre><code class=\"r\">suppressPackageStartupMessages(library(tidyverse))\nlibrary(GGally)\nlibrary(DEFormats)\n</code></pre>\n<h2>Set up the data</h2>\n<p>I&#039;ll start with simulated data that will resemble a gene expression study.  A proteomics dataset would be similar.  The dataset will have 8 samples, half of them treated, half control.  7 of the samples will approximately the same but Sample 4 will have a 3-fold increase compared to the rest to illustrate how MA-plots help identify problems with normalization.  </p>\n<pre><code class=\"r\">counts <- simulateRnaSeqData(n = 5000, m = 8)\ncounts[, 4] <- counts[, 4] *  3\n\ntargets <- data.frame(sample = colnames(counts), group = c(rep(\"control\", 4), rep(\"treated\", 4)))\n</code></pre>\n<p>The <code>ggpairs</code> function from the <code>GGally</code> package does a decent job of the pairs plot.  </p>\n<pre><code class=\"r\">ggpairs(data.frame(counts))\n</code></pre>\n<p><a href=\"https://datascienceplus.com/wp-content/uploads/2022/03/unnamed-chunk-38-1.png\"><img src=\"https://datascienceplus.com/wp-content/uploads/2022/03/unnamed-chunk-38-1-490x490.png\" alt=\"\" width=\"490\" height=\"490\" class=\"alignnone size-medium wp-image-32095\" srcset=\"https://datascienceplus.com/wp-content/uploads/2022/03/unnamed-chunk-38-1-490x490.png 490w, https://datascienceplus.com/wp-content/uploads/2022/03/unnamed-chunk-38-1.png 504w\" sizes=\"(max-width: 490px) 100vw, 490px\" /></a></p>\n<p>The pairs plot tells us something about the data.  The correlation is nice to have and if any sample was wildly different from the others it would show up in the scatter plot.  Still I don&#039;t think it conveys the information very efficiently.  </p>\n<h2>MA plot panel</h2>\n<p>Typically I would start by pivoting all the count data to a single columns and joining in the metadata.  But I need to associate control and treated data for each gene for each sample so the usual method won&#039;t work.  It took me a while to fall on the solution:  we have to pivot the control and treated samples separately.  So for each gene we will have a control sample name, a treated sample name and control and treated count data.  Those can be used to calculate Fold-change and intensity.  </p>\n<pre><code class=\"r\">control_samples <- targets$sample[targets$group == \"control\"]\ntreated_samples <- targets$sample[targets$group == \"treated\"]\n\ndata.frame(counts) %>%\n  rownames_to_column(\"gene\") %>%\n  pivot_longer(all_of(control_samples), names_to = \"control_sample\", values_to = \"control_count\") %>%\n  pivot_longer(all_of(treated_samples), names_to = \"treated_sample\", values_to = \"treated_count\") %>%\n  mutate(FC = treated_count / control_count) %>%\n  mutate(Intensity = (treated_count + control_count) / 2)</code><em>\n## # A tibble: 80,000 x 7 \n##    gene  control_sample control_count treated_sample treated_count    FC Intensity\n##    <chr> <chr>                  <dbl> <chr>                  <dbl> <dbl>     <dbl>\n##  1 gene1 sample1                  103 sample5                   71 0.689      87  \n##  2 gene1 sample1                  103 sample6                   79 0.767      91  \n##  3 gene1 sample1                  103 sample7                   76 0.738      89.5\n##  4 gene1 sample1                  103 sample8                  118 1.15      110. \n##  5 gene1 sample2                   82 sample5                   71 0.866      76.5\n##  6 gene1 sample2                   82 sample6                   79 0.963      80.5\n##  7 gene1 sample2                   82 sample7                   76 0.927      79  \n##  8 gene1 sample2                   82 sample8                  118 1.44      100  \n##  9 gene1 sample3                   89 sample5                   71 0.798      80  \n## 10 gene1 sample3                   89 sample6                   79 0.888      84  \n## # ... with 79,990 more rows\n</em></pre>\n<p>All that&#039;s left to do now is plot.  Facet_grid will let us split the samples up. </p>\n<pre><code class=\"r\">data.frame(counts) %>%\n  rownames_to_column(\"gene\") %>%\n  pivot_longer(all_of(control_samples), names_to = \"control_sample\", values_to = \"control_count\") %>%\n  pivot_longer(all_of(treated_samples), names_to = \"treated_sample\", values_to = \"treated_count\") %>%\n  mutate(FC = treated_count / control_count) %>%\n  mutate(Intensity = (treated_count + control_count) / 2) %>%\n  ggplot(aes(x = Intensity, y = FC)) +\n  geom_point(alpha = 0.5, na.rm = TRUE) +\n  scale_x_continuous(trans = \"log10\") +\n  scale_y_continuous(trans = \"log2\", breaks = 2^seq(-4, 4, 2)) +\n  geom_hline(yintercept = 1) +\n  labs(x = \"Intensity\", y = \"Fold Change, treated vs control\") +\n  facet_grid(rows = vars(treated_sample), cols = vars(control_sample))\n</code></pre>\n<p><a href=\"https://datascienceplus.com/wp-content/uploads/2022/03/unnamed-chunk-40-1.png\"><img src=\"https://datascienceplus.com/wp-content/uploads/2022/03/unnamed-chunk-40-1-490x490.png\" alt=\"\" width=\"490\" height=\"490\" class=\"alignnone size-medium wp-image-32096\" srcset=\"https://datascienceplus.com/wp-content/uploads/2022/03/unnamed-chunk-40-1-490x490.png 490w, https://datascienceplus.com/wp-content/uploads/2022/03/unnamed-chunk-40-1.png 504w\" sizes=\"(max-width: 490px) 100vw, 490px\" /></a></p>\n<p>The change in abundance in sample 4 shows up much more clearly now.  This isn&#039;t a common way to plot the data so it might require some explaining to your colleagues but worth the effort in my opinion.  </p>\n<strong><p>Related Post</p></strong><ul><li><a href=\"https://datascienceplus.com/how-i-selected-my-starting-word-for-wordle-using-simulations-and-r/\" rel=\"bookmark\" title=\"Permanent Link toHow I selected my starting word for Wordle using simulations and R\">How I selected my starting word for Wordle using simulations and R</a></li><li><a href=\"https://datascienceplus.com/ditch-p-values-use-bootstrap-confidence-intervals-instead/\" rel=\"bookmark\" title=\"Permanent Link toDitch p-values. Use Bootstrap confidence intervals instead\">Ditch p-values. Use Bootstrap confidence intervals instead</a></li><li><a href=\"https://datascienceplus.com/introduction-for-decision-tree/\" rel=\"bookmark\" title=\"Permanent Link toIntroduction for Decision Tree\">Introduction for Decision Tree</a></li><li><a href=\"https://datascienceplus.com/correlation-vs-pps-in-python/\" rel=\"bookmark\" title=\"Permanent Link toCorrelation vs PPS in Python\">Correlation vs PPS in Python</a></li><li><a href=\"https://datascienceplus.com/earthquake-analysis-4-4-cluster-analysis/\" rel=\"bookmark\" title=\"Permanent Link toEarthquake Analysis (4/4): Cluster Analysis\">Earthquake Analysis (4/4): Cluster Analysis</a></li></ul>",
  "wfw:commentRss": "https://datascienceplus.com/an-r-alternative-to-pairs-for-omics-qc/feed/",
  "slash:comments": 0
}