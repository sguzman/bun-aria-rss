{
  "title": "Why do domain names sometimes end with a dot?",
  "link": "",
  "updated": "2022-09-12T08:01:20+00:00",
  "id": "https://jvns.ca/blog/2022/09/12/why-do-domain-names-end-with-a-dot-/",
  "content": "\n\n<p>Hello! When I was writing the zine <a href=\"https://wizardzines.com/zines/dns/\">How DNS Works</a>\nearlier this year, someone asked me &ndash; why do people sometimes put a dot at the\nend of a domain name? For example, if you look up the IP for <code>example.com</code> by\nrunning <code>dig example.com</code>, you&rsquo;ll see this:</p>\n\n<pre><code>$ dig example.com\nexample.com.\t\t5678\tIN\tA\t93.184.216.34\n</code></pre>\n\n<p><code>dig</code> has put a <code>.</code> to the end of <code>example.com</code> &ndash; now it&rsquo;s <code>example.com.</code>! What&rsquo;s up with that?</p>\n\n<p>Also, some DNS tools require domains to have a <code>\".\"</code> at the end: if you try to pass <code>example.com</code> to <a href=\"https://github.com/miekg/dns\">miekg/dns</a>, like this, it&rsquo;ll fail:</p>\n\n<pre><code>// trying to send this message will return an error\nm := new(dns.Msg)\nm.SetQuestion(\"example.com\", dns.TypeA)\n</code></pre>\n\n<p>Originally I thought I knew the answer to this (&ldquo;uh, the dot at the end means\nthe domain is fully qualified?&ldquo;). And that&rsquo;s true &ndash; a fully qualified domain\nname is a domain with a &ldquo;.&rdquo; at the end!</p>\n\n<p>But that doesn&rsquo;t explain <em>why</em> dots at the end are useful or important.</p>\n\n<h3 id=\"in-a-dns-request-response-domain-names-don-t-have-a-trailing\">in a DNS request/response, domain names don&rsquo;t have a trailing &ldquo;.&rdquo;</h3>\n\n<p>I once (incorrectly) thought the answer to &ldquo;why is there a dot at the end?&rdquo;\nmight be &ldquo;In a DNS request/response, domain names have a &ldquo;.&rdquo; at the end, so we\nput it in to match what actually gets sent/received by your computer&rdquo;. But\nthat&rsquo;s not true at all!</p>\n\n<p>When a computer sends a DNS request or response, the domain names in it don&rsquo;t\nhave a trailing dot. Actually, the domain names don&rsquo;t have <em>any</em> dots.</p>\n\n<p>Instead, they&rsquo;re encoded as a series of length/string pairs. For example,\nthe domain <code>example.com</code> is encoded as these 13 bytes:</p>\n\n<pre><code>7example3com0\n</code></pre>\n\n<p>So there are no dots at all. Instead, an ASCII domain name (like &ldquo;example.com&rdquo;)\ngets translated into the format used in a DNS request / response by various DNS\nsoftware.</p>\n\n<p>So let&rsquo;s talk about one place where domain names are translated into DNS responses: zone files.</p>\n\n<h3 id=\"the-trailing-in-zone-files\">the trailing &ldquo;.&rdquo; in zone files</h3>\n\n<p>One way that some people manage DNS records for a domain is to create a text\nfile called a &ldquo;zone file&rdquo; and then configure some DNS server software (like <code>nsd</code>\nor <code>bind</code>) to serve the DNS records specified in that zone file.</p>\n\n<p>Here&rsquo;s an imaginary zone file for <code>example.com</code>:</p>\n\n<pre><code>orange  300   IN    A     1.2.3.4\nfruit   300   IN    CNAME orange\ngrape   3000  IN    CNAME example.com.\n</code></pre>\n\n<p>In this zone file, anything that doesn&rsquo;t end in a <code>\".\"</code> (like <code>\"orange\"</code>) gets\n<code>.example.com</code> added to it. So <code>\"orange\"</code> is shorthand for\n<code>\"orange.example.com\"</code>. The DNS server knows from its configuration that this\nis a zone file for <code>example.com</code>, so it knows to automatically append\n<code>example.com</code> at the end of any name that doesn&rsquo;t end with a dot.</p>\n\n<p>I assume the idea here is just to save typing &ndash; you could imagine writing\nthis zone file by fully typing out all of the domain names:</p>\n\n<pre><code>orange.example.com.  300   IN    A     1.2.3.4\nfruit.example.com.   300   IN    CNAME orange.example.com.\ngrape.example.com.   3000  IN    CNAME example.com.\n</code></pre>\n\n<p>But that&rsquo;s a lot of typing.</p>\n\n<h3 id=\"you-don-t-need-zone-files-to-use-dns\">you don&rsquo;t need zone files to use DNS</h3>\n\n<p>Even though the zone file format is defined in the official DNS RFC (<a href=\"https://www.rfc-editor.org/rfc/rfc1035#section-4.1.1\">RFC 1035</a>), you don&rsquo;t have to\nuse zone files at all to use DNS. For example, AWS Route 53 doesn&rsquo;t use zone\nfiles to store DNS records! Instead you create records through the web\ninterface or API, and I assume they store records in some kind of database and\nnot a bunch of text files.</p>\n\n<p>Route 53 (like many other DNS tools) does support importing and exporting zone\nfiles though and it can be a good way to migrate records from one DNS provider\nto another.</p>\n\n<h3 id=\"the-trailing-in-dig\">the trailing &ldquo;.&rdquo; in dig</h3>\n\n<p>Now, let&rsquo;s talk about <code>dig</code>&rsquo;s output:</p>\n\n<pre><code>$ dig example.com\n; <<>> DiG 9.18.1-1ubuntu1.1-Ubuntu <<>> +all example.com\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 10712\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 65494\n;; QUESTION SECTION:\n;example.com.\t\t\tIN\tA\n\n;; ANSWER SECTION:\nexample.com.\t\t81239\tIN\tA\t93.184.216.34\n\n</code></pre>\n\n<p>One weird thing about this is that almost every line starts with a <code>;;</code>. What&rsquo;s\nup with that? Well <code>;</code> is the comment character in zone files!</p>\n\n<p>So I think the reason that dig prints out its output in this weird way is so that\nif you wanted, you could just paste this into a zone file and have it work\nwithout any changes.</p>\n\n<p>This also explains why there&rsquo;s a <code>.</code> at the end of <code>example.com.</code> &ndash; zone files\nrequire a trailing dot at the end of a domain name (because otherwise they&rsquo;re\ninterpreted as being relative to the zone). So <code>dig</code> does too.</p>\n\n<p>I really wish dig had a <code>+human</code> flag that printed out all of this information\nin a more human readable way, but for now I&rsquo;m too lazy to put in the work to\nactually contribute code to do that (and I&rsquo;m a pretty bad C programmer) so I&rsquo;ll\njust complain about it on my blog instead :)</p>\n\n<h3 id=\"the-trailing-in-curl\">the trailing <code>\".\"</code> in curl</h3>\n\n<p>Let&rsquo;s talk about another case where the trailing <code>\".\"</code> shows up: curl!</p>\n\n<p>One of the computers in my house is called &ldquo;grapefruit&rdquo;, and it&rsquo;s running a\nwebserver. Here&rsquo;s what happens if I run <code>curl grapefruit</code>:</p>\n\n<pre><code>$ curl grapefruit\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n\n<html>\n<head>\n</code></pre>\n\n<p>It works! Cool. But what happens if I add a <code>.</code> at the end? Suddenly it doesn&rsquo;t work:</p>\n\n<pre><code>$ curl grapefruit.\ncurl: (6) Could not resolve host: grapefruit.\n</code></pre>\n\n<p>What&rsquo;s going on? To understand, we need to learn about search domains:</p>\n\n<h3 id=\"meet-search-domains\">meet search domains</h3>\n\n<p>When I run <code>curl grapefrult</code>, how does that get translated into a DNS request?\nYou might think that my computer would send a request for the domain\n<code>grapefruit</code>, right? But that&rsquo;s not true.</p>\n\n<p>Let&rsquo;s use <code>tcpdump</code> to see what domain is actually being looked up:</p>\n\n<pre><code>$ sudo tcpdump -i any port 53\n[...] A? grapefruit.lan. (32)\n</code></pre>\n\n<p>It&rsquo;s actually sending a request for <code>grapefruit.lan</code>. What&rsquo;s up with that?</p>\n\n<p>Well, what&rsquo;s going on is that:</p>\n\n<ol>\n<li>To look up <code>grapefruit</code>, <code>curl</code> calls a function called <code>getaddrinfo</code></li>\n<li><code>getaddrinfo</code> looks in a file on my computer called <code>/etc/resolv.conf</code></li>\n<li><code>/etc/resolv.conf</code> contains these 2 lines:\n<pre>\nnameserver 127.0.0.53\nsearch lan\n</pre></li>\n<li>Because it sees <code>search lan</code>, <code>getaddrinfo</code> adds a <code>lan</code> at the end of <code>grapefruit</code> and looks up <code>grapefruit.lan</code> instead</li>\n</ol>\n\n<h3 id=\"when-are-search-domains-used\">when are search domains used?</h3>\n\n<p>Now we know something weird: that when we look up a domain, sometimes an extra\nthing (like <code>lan</code>) will be added to the end. But when does that happen?</p>\n\n<ol>\n<li>If we put a <code>\".\"</code> at the <strong>end</strong> of the domain (like <code>curl grapefruit.</code>, then search domains aren&rsquo;t used</li>\n<li>If the domain has an <code>\".\"</code> <strong>inside</strong> it (like <code>example.com</code> has a dot in it), then by default search domains aren&rsquo;t used either. But this can be changed with configuration (see this blog post about <a href=\"https://pracucci.com/kubernetes-dns-resolution-ndots-options-and-why-it-may-affect-application-performances.html\">ndots</a> that talks about this more)</li>\n</ol>\n\n<p>So now we know why <code>curl grapefruit.</code> has different results than <code>curl grapefruit</code> &ndash; it&rsquo;s because one looks up the domain <code>grapefruit.</code> and the other one looks up <code>grapefruit.lan.</code></p>\n\n<h3 id=\"how-does-my-computer-know-what-search-domain-to-use\">how does my computer know what search domain to use?</h3>\n\n<p>When I connect to my router, it tells me that its search domain is <code>lan</code> with\nDHCP &ndash; it&rsquo;s the same way that my computer gets assigned an IP address.</p>\n\n<h3 id=\"so-why-do-people-put-a-dot-at-the-end-of-domain-names\">so why do people put a dot at the end of domain names?</h3>\n\n<p>Now that we know about zone files and search domains, here&rsquo;s why I think people\nlike to put dots at the end of a domain name.</p>\n\n<p>There are two contexts where domain names are modified and get something else added to the end:</p>\n\n<ul>\n<li>in a zone file for <code>example.com</code>, <code>grapefruit</code> get translated to <code>grapefruit.example.com</code></li>\n<li>on my local network (with my computer configured to use the search domain <code>lan</code>), <code>grapefruit</code> gets translated to <code>grapefruit.lan</code></li>\n</ul>\n\n<p>So because domain names can actually be translated to something else in some\ncases, people like to put a <code>\".\"</code> at the end to communicate &ldquo;THIS IS THE\nDOMAIN NAME, NOTHING GETS ADDED AT THE END, THIS IS THE WHOLE THING&rdquo;. Because\notherwise it can get confusing.</p>\n\n<p>The technical term for &ldquo;THIS IS THE WHOLE THING&rdquo; is <strong>&ldquo;fully qualified domain\nname&rdquo;</strong> or <strong>&ldquo;FQDN&rdquo;</strong>. So <code>google.com.</code> is a fully qualified domain name, and\n<code>google.com</code> isn&rsquo;t.</p>\n\n<p>I always have to remind myself for the reasons for this because I rarely use\nzone files or search domains, so I often feel like &ndash; &ldquo;of course I mean\n<code>google.com</code> and not <code>google.com.something.else</code>! Why would I mean anything\nelse?? That&rsquo;s silly!&rdquo;</p>\n\n<p>But some people do use zone files and search domains (search domains are used\nin Kubernetes, for example!), so the &ldquo;.&rdquo; at the end is useful to make it 100%\nclear that nothing else should be added.</p>\n\n<h3 id=\"when-to-put-a-at-the-end\">when to put a &ldquo;.&rdquo; at the end?</h3>\n\n<p>Here are a couple of quick notes about when to put a &ldquo;.&rdquo; at the end of your domain names:</p>\n\n<p><strong>Yes: when configuring DNS</strong></p>\n\n<p>It&rsquo;s never bad to use fully qualified domain names when configuring DNS. You\ndon&rsquo;t always have to: a non-fully-qualified domain name will often work just\nfine as well, but I&rsquo;ve never met a piece of DNS software that wouldn&rsquo;t accept a\nfully qualified domain name.</p>\n\n<p>And some DNS software requires it: right now the DNS server I use for <code>jvns.ca</code>\nmakes me put a <code>\".\"</code> at the end of domains names (for example in CNAME records)\nand warns me otherwise it&rsquo;ll append <code>.jvns.ca</code> to whatever I typed in. I don&rsquo;t\nagree with this design decision but it&rsquo;s not a big deal, I just put a &ldquo;.&rdquo; at\nthe end.</p>\n\n<p><strong>No: in a browser</strong></p>\n\n<p>Confusingly, it often <em>doesn&rsquo;t</em> work to put a <code>\".\"</code> at the end of a domain name in a\nbrowser! For example, if I type <code>https://twitter.com.</code> into my browser, it\ndoesn&rsquo;t work! It gives me a 404.</p>\n\n<p>I think what&rsquo;s going on here is that it&rsquo;s setting the HTTP Host header to\n<code>Host: twitter.com.</code> and the web server on the other end is expecting <code>Host: twitter.com</code>.</p>\n\n<p>Similarly, <code>https://jvns.ca.</code> gives me an SSL error for some reason.</p>\n\n<h3 id=\"i-think-relative-domain-names-used-to-be-more-common\">I think relative domain names used to be more common</h3>\n\n<p>One last thing: I think that &ldquo;relative&rdquo; domain names (like me using\n<code>grapefruit</code> to refer to the other computer in my house, <code>grapefruit.lan</code>) used\nto be more commonly used, because DNS was developed in the context of\nuniversities or other big institutions which have big internal networks.</p>\n\n<p>On the internet today, it seems like it&rsquo;s more common to use &ldquo;absolute&rdquo; domain\nnames (like <code>example.com</code>).</p>\n"
}