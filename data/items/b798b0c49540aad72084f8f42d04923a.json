{
  "title": "Quality Diversity: Evolving Ocean Creatures",
  "description": "<p>If you've ever folded a paper airplane, chances are you folded The Dart. It's fast and simple, and kids all around the world have launched it through the air. Soon, however, they will move on to other designs – airplanes that glide, make loops, or twirl in flight. There are thousands</p>",
  "link": "https://kvfrans.com/quality-diversity-evolving-ocean-creatures/",
  "guid": "60225e9617e26d47c77e8ecf",
  "category": "research",
  "dc:creator": "Kevin Frans",
  "pubDate": "Wed, 02 Dec 2020 02:05:00 GMT",
  "content:encoded": "<p>If you've ever folded a paper airplane, chances are you folded The Dart. It's fast and simple, and kids all around the world have launched it through the air. Soon, however, they will move on to other designs – airplanes that glide, make loops, or twirl in flight. There are thousands of paper airplane designs, each with its own quirks and structure.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://kvfrans.com/content/images/2021/02/dart.jpg\" class=\"kg-image\" alt srcset=\"https://kvfrans.com/content/images/size/w600/2021/02/dart.jpg 600w, https://kvfrans.com/content/images/2021/02/dart.jpg 640w\"><figcaption>Paper Airplane Designs: https://www.foldnfly.com/#/1-1-1-1-1-1-1-1-2</figcaption></figure><p>In the artificial life world, we would call paper airplane design a <strong>quality-diversity</strong> algorithm. A paper airplane should be fly fast, but we don’t only care about an optimal design – we’re also interested in airplanes with unique bodies or wing types. Rather than a single design, quality-diversity algorithms aim to develop a population of diverse solutions to a problem.</p><p>In this post, let’s explore how quality-diversity algorithms can give us a peek into a world of swimming, soft creatures.</p><h2 id=\"oceanworld\">Oceanworld</h2><hr><!--kg-card-begin: html--><br>\n<div class=\"float-outside\">\n<div class=\"float-figure\">\n<img style=\"width:100%\" src=\"https://kvfrans.com/static/open/4/creature.png\">\n    <figcaption>An Oceanworld organism. Red squares represent nodes, and blue connections are bonds. Green lines represent rigid bonds that are affected by fluid resistance.</figcaption>\n</div>\nIn Oceanworld, a creature is a 16x16 matrix of flexible nodes and bonds. Each node is a simulated physics object, and bonds can rotate around and deform.\n<br><br>\nA creature moves by a periodic heartbeat. Whenever a heartbeat begins, any muscle bonds will extend their length, deforming the shape of the creature. When the heartbeat ends, the muscle bonds will return to original length. In addition, a bond can also be rigid. Rigid bonds are affected by fluid resistance – when they move, a force will pushback in the opposite direction.\n<br><br>\nThe great part about evolutionary methods is that this is all a black box -- we don't actually need to understand how the physics works, we just need to run the algorithm.\n</div><!--kg-card-end: html--><!--kg-card-begin: html--><hr class=\"gridhr\">\n<figure class=\"kg-card kg-gallery-card\">\n    <div class=\"kg-gallery-container\">\n        <div class=\"kg-gallery-row\">\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/1.mp4\"></video>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/2.mp4\"></video>\n                <figcaption>\n                    Various Oceanworld creatures formed by sampling random genomes. When rigid bonds move, fluid resistance applies a force.\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/3.mp4\"></video>\n            </div>\n        </div>\n    </div>\n</figure>\n<hr class=\"gridhr\"><!--kg-card-end: html--><p>Cool, we have some creatures. But how much of the total possible space do these creatures actually represent?</p><p>One way we can gain intuition about the possible space is through a technique called <strong>novelty search</strong>. Novelty search tries to find a population of creatures that are diverse from each other according to some metric. In our case, let’s use the number of nodes, and the ratio of bonds to nodes.</p><!--kg-card-begin: html--><div class=\"float-outside\">\n<div class=\"float-figure-big\">\n<video class=\"b-lazy b-loaded gridvideo-full\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/4.mp4\"></video>\n    <figcaption>Novelty search over Oceanworld genomes. Grey points represent the current population of genomes. Red points represent genomes sampled from a random distribution.</figcaption>\n</div><!--kg-card-end: html--><p>Novelty Search works by a simple loop:</p><ol><li>Maintain a population of 1000 genomes.</li><li>Mutate each genome and add it to the population.</li><li>Sum the distance each genome has to its 10 closest neighbors, in terms of some novelty metric.</li><li>Sort the populations by increasing distance, and keep only the top 1000.</li></ol><p>Working correctly, the novelty search algorithm should optimize for a group of genomes that are spread out in terms of number of nodes and bonds-node ratio.</p><p>I always like to sanity check by looking in, so let’s take a peek at some sample points and see how the creatures look.</p><!--kg-card-begin: html--></div><!--kg-card-end: html--><!--kg-card-begin: html--><hr class=\"gridhr\">\n<figure class=\"kg-card kg-gallery-card\">\n    <div class=\"kg-gallery-container\">\n        <div class=\"kg-gallery-row\">\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/5.mp4\"></video>\n                <figcaption>\n                    10% nodes, 100% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/6.mp4\"></video>\n                <figcaption>\n                    50% nodes, 100% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/7.mp4\"></video>\n                <figcaption>\n                    100% nodes, 100% bond ratio\n                </figcaption>\n            </div>\n        </div>\n        <div class=\"kg-gallery-row\">\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/8.mp4\"></video>\n                <figcaption>\n                    10% nodes, 10% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/9.mp4\"></video>\n                <figcaption>\n                    50% nodes, 10% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/10.mp4\"></video>\n                <figcaption>\n                    100% nodes, 10% bond ratio\n                </figcaption>\n            </div>\n        </div>\n    </div>\n</figure>\n<hr class=\"gridhr\"><!--kg-card-end: html--><p>There’s a key thing missing in our Oceanworld creatures – they don’t actually do anything. The “Quality” in Quality-Diversity has to measure something. So let’s choose something: a creature that swims faster is better.</p><p>First, let’s try out a greedy evolutionary algorithm. We’ll start with a random creature, and measure how far it travels. Then, we’ll randomly mutate its genome and try again. If the new creature performs better, it replaces the old one.</p><!--kg-card-begin: html--><hr class=\"gridhr\">\n<figure class=\"kg-card kg-gallery-card\">\n    <div class=\"kg-gallery-container\">\n        <div class=\"kg-gallery-row\">\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/11.mp4\"></video>\n                <figcaption>\nInitial genome #1\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/12.mp4\"></video>\n                <figcaption>\nHalfway through training\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/13.mp4\"></video>\n                <figcaption>\nFully trained\n                </figcaption>\n            </div>\n        </div>\n        <div class=\"kg-gallery-row\">\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/14.mp4\"></video>\n                <figcaption>\nInitial genome #2\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/15.mp4\"></video>\n                <figcaption>\nHalfway through training\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/16.mp4\"></video>\n                <figcaption>\n                    Fully trained\n\n                </figcaption>\n            </div>\n        </div>\n    </div>\n</figure>\n<hr class=\"gridhr\"><!--kg-card-end: html--><p>Like a pair of deformed jellyfish, our creatures have evolved to move forwards by pulsating their muscle bonds. I doubt I would have been able to hand-design any of these creatures – the physics relationships are just too complex. Thankfully, evolution takes care of it for us.</p><p>But are these really the best creatures? The key observation here is that different starting genomes converge to different solutions. This tells us that our possibility space has local minima – genomes where any small change will hurt performance, even though a larger change could be beneficial.</p><p>It turns out that local minima are part of a classic paradox: “the path to success does not look like success”. When Carl Benz proposed the motor engine in a world of horse carriages, it was slow and heavy. But he kept at it, and motor cars emerged the victor.</p><p>In some form, Benz was using a quality-diversity algorithm: motor engines were different, so they deserved a chance. Quality-diversity algorithms help us escape local minima, because they force us to consider a group of genomes rather than a single leader. With more diversity, there is more chance to discover a path forwards.</p><h2 id=\"map-elites\">MAP-Elites</h2><hr><p>MAP-Elites is a quality-diveristy algorithm that combines novelty search with evolution. Instead of evolving a single optimal genome, we want to evolve an optimal genome for every point in some grid of features.</p><!--kg-card-begin: html--><div class=\"float-outside\">\n<div class=\"float-figure-big\">\n<video class=\"b-lazy b-loaded gridvideo-full\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/18.mp4\"></video>\n    <figcaption>MAP-Elites over Oceanworld genomes. Yellow spots represent genomes with higher performance.</figcaption>\n</div><!--kg-card-end: html--><p>In our case, we can use the two metrics from before – node count and bond ratio. Every spot in the matrix corresponds to some range of the metrics (e.g. 50-60 nodes and 30%-40% bonds), and we store the optimal genome that fits the criteria.</p><p>MAP-Elites works by:</p><ol><li>Maintain a 32 x 32 matrix of genomes.</li><li>Pick a random genome, and mutate it.</li><li>Measure its metrics, and find which spot in the grid the genome belongs to.</li><li>If the new genome performs better than the old genome in the spot, replace it.</li></ol><p>As always, let's get our hands dirty and check out what the optimal genomes end up looking like.</p><!--kg-card-begin: html--></div><!--kg-card-end: html--><!--kg-card-begin: html--><hr class=\"gridhr\">\n<figure class=\"kg-card kg-gallery-card\">\n    <div class=\"kg-gallery-container\">\n        <div class=\"kg-gallery-row\">\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map10.mp4\"></video>\n                <figcaption>\n10% nodes, 100% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map5.mp4\"></video>\n                <figcaption>\n50% nodes, 100% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map3.mp4\"></video>\n                <figcaption>\n100% nodes, 100% bond ratio\n                </figcaption>\n            </div>\n        </div>\n        <div class=\"kg-gallery-row\">\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map9.mp4\"></video>\n                <figcaption>\n10% nodes, 50% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map4.mp4\"></video>\n                <figcaption>\n50% nodes, 50% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map6.mp4\"></video>\n                <figcaption>\n100% nodes, 50% bond ratio\n                </figcaption>\n            </div>\n        </div>\n        <div class=\"kg-gallery-row\">\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map8.mp4\"></video>\n                <figcaption>\n10% nodes, 10% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map12.mp4\"></video>\n                <figcaption>\n50% nodes, 10% bond ratio\n                </figcaption>\n            </div>\n            <div class=\"kg-gallery-image\" style=\"flex: 1 1 0%;\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/map2.mp4\"></video>\n                <figcaption>\n100% nodes, 10% bond ratio\n                </figcaption>\n            </div>\n        </div>\n    </div>\n</figure>\n<hr class=\"gridhr\"><!--kg-card-end: html--><p>In the MAP-Elites genomes, we get a whole bunch of different creatures, and some cool patterns emerge. The fastest creatures turn out to be the smaller ones, likely due to their lower mass. Larger creatures tend to develop a kind of \"tail\" -- my guess is that this acts as a stabilizer so the creature doesn't drift off direction.</p><p>The last row is especially interesting, since the larger creatures develop a completely different movement strategy. Instead of moving its entire body, the creature unrolls itself to stretch forwards.</p><p>Quality-diversity algorithms are an easy way to explore the possibilty space of an open-ended world. The techniques, such as novelty search and MAP-Elites, are simple but yield strong results when given proper metrics of diversity. In this Oceanworld, the limiting factor is the expressivity of our genome -- there are only so many ways to build swimming creatures out of a single type of bond.</p><p>Further work can involve:</p><ul><li>How can we increase the expressivity of our genome? Can we make the genome more information-dense in relation to the creature it defines? What kinds of genomes allow innovations to transfer between creatures?</li><li>What are good definitions of diversity? Can we define diversity in terms of a creature's behavior, rather than its structure?</li></ul><!--kg-card-begin: html--><hr class=\"gridhr\">\n<br>\n<div class=\"float-outside\">\n<div class=\"appendix\">\n    <div class=\"float-label\">\n        Appendix\n    </div><!--kg-card-end: html--><p>In the MAP-Elites method, it turns to be helpful to first run novelty search to get a population of diverse genomes. We start the MAP-Elites matrix with this diverse population, rather than a population of random genomes.</p><!--kg-card-begin: html--><div style=\"float: left;\n  position: relative;\n  width: 50%\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/17.mp4\"></video>\n                <p>\nMAP-Elites from random starting population.\n                </p>\n</div>\n<div style=\"float: right;\n  position: relative;\n  width: 50%\">\n                <video class=\"b-lazy b-loaded gridvideo\" type=\"video/mp4\" autoplay muted playsinline loop src=\"https://kvfrans.com/static/open/4/18.mp4\"></video>\n                <p>\nMAP-Elites from novelty-search population.\n                </p>\n</div><!--kg-card-end: html--><!--kg-card-begin: html--><div class=\"float-label\" style=\"clear: both\">\n\tThings To Read\n</div><!--kg-card-end: html--><p><em>For more on quality-diversity, a good starting point are the ICML tutorial slides below. The rest are some highlight papers with useful ideas.</em></p><p><strong><a href=\"https://icml.cc/media/Slides/icml/2019/halla(10-09-15)-10-09-15-4336-recent_advances.pdf\">\"Recent Advances in Population-Based Search\"</a>, ICML 2019 Tutorial, by Jeff Clune, Joel Lehman, and Ken Stanley</strong>. This is a great presentation that goes over recent works related to quality diversity. It introduces novelty search as a way to get around environments where greedily optimzing traps you in a local minimum, and then goes to to motivate quality-diversity algorithms where we simultaneously train populations of high-performing agents.</p><p><strong><a href=\"https://www.cs.swarthmore.edu/~meeden/DevelopmentalRobotics/lehman_ecj11.pdf\">\"Abandoning Objectives: Evolution through the Search for Novelty Alone\"</a>, by Joel Lehman and Ken Stanley</strong>. This is the paper on Novelty Search. It argues that basing evolutionary search on fitness is limiting, since only creatures with high fitness will be considered. In environments such as hard mazes, the fitness landscape is non-convex and greedy optimization will fail. Instead, strong diversity metrics are often a better landscape to search through.</p><p><strong><a href=\"https://arxiv.org/pdf/1504.04909.pdf\">\"Illuminating search spaces by mapping elites\"</a>, by Jean-Baptiste Mouret and Jeff Clune</strong>. This is the MAP-Elites paper. They introduce the idea of \"illumination algorithms\", which aim to find the highest-performing solution for every point in a given feature space. The core MAP-Elites idea is pretty straightforward -- store the best solution at every point, and keep trying new solutions.</p><p><strong><a href=\"https://arxiv.org/abs/1901.01753\">\"POET: Paired Open-Ended Trailblazer\"</a>, by Rui Wang et al</strong>. POET is a quality-diversity algorithm with a step towards open-endedness. The idea is similar to MAP-Elites, but instead of niches defined as properties of the genome, each niche is a task. New tasks are introduced randomly, and stay in the pool if agents can solve them. You end up with a growing population of tasks and population of agents that can solve those tasks.</p><p><br><br><em>What are good diversity metrics? Hand-designed metrics such as creature size only work to some degree. In my mind, this is an important question as \"novelty\" is hard to define concretely.</em></p><p><strong><a href=\"https://arxiv.org/pdf/1802.06070.pdf\">\"Diversity is All You Need\"</a>, by Benjamin Eysenbach et al</strong>. This paper describes a system where we want to find a set of diverse policies. They define diversity as:</p><ol><li>A discriminator should be able to predict which policy is active based on state history.</li><li>A policy should cover as many states as it can.</li></ol><p><strong><a href=\"https://arxiv.org/pdf/1704.03012.pdf\">\"Stochastic Neural Networks for Hierarchical Reinforcement Learning\"</a>, by Carlos Florensa, Yan Duan, and Pieter Abeel</strong>. Motivated by information theory, this work aims to find diverse policies by maximizing entropy. This ends up being a similar method as above -- policies should visit different states to be maximally diverse.</p><p><strong><a href=\"https://arxiv.org/pdf/1905.11874.pdf\">\"Autonomous skill discovery with Quality-Diversity and Unsupervised Descriptors\"</a>, by Antoine Cully</strong>. This work takes hints from dimensionality reducing methods such as PCA (Principle-component analysis). Basically, given a set of trajectories, we can map every trajectory onto a 2D space. This mapping becomes our diversity metric for running a quality-diversity method such as MAP-Elites.</p><p><br><br><em>Aside from how to discover diverse populations, the world and environment this all takes place in is crucial as well. These are some nice references for work in ALIFE and evolved creatures.</em></p><p><strong><a href=\"https://openai.com/blog/evolution-strategies/\">\"Evolution Strategies\"</a>, OpenAI</strong>. A good overview of how evolutionary systems can potentially outscale traditional reinforcement learning. The basic idea is that ES is inherently parallalizable, so systems with lots of CPU cores can scale well. ES also treats an entire episode with a single reward, so it doesn't suffer from things such as sparsity or time dependency.</p><p><strong><a href=\"http://www.karlsims.com/papers/siggraph94.pdf\">\"Evolving Virtual Creatures\"</a>, by Karl Sims</strong>. This is a classic work from 1994, where virtual swimming robots are evolved to move forwards. The methods used as similar to what we did in this blog post, but the genome is defined as a hierarchy of parts, and there are basic neural networks for control.</p><p><strong><a href=\"https://arxiv.org/abs/1711.06605\">\"Evolving soft locomotion\"</a>, by Francesco Corucci et al</strong>. A more recent paper that uses evolutionary methods to design soft swimming and walking robots. The world here uses creatures of deformable voxels, akin to legos, that apply a fluid resistance force when expanding (similar to what we did but in 3D). Their genome is a CPPN, a neural network C(x,y) that outputs the creature's properties at each coordinate.</p><!--kg-card-begin: html--></div><!--kg-card-end: html--></div>"
}