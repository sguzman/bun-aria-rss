{
  "title": "Distributed Maximal Matching and Maximal Independent Set on Hypergraphs. (arXiv:2211.01945v1 [cs.DS])",
  "link": "http://arxiv.org/abs/2211.01945",
  "description": "<p>We investigate the distributed complexity of maximal matching and maximal\nindependent set (MIS) in hypergraphs in the LOCAL model. A maximal matching of\na hypergraph $H=(V_H,E_H)$ is a maximal disjoint set $M\\subseteq E_H$ of\nhyperedges and an MIS $S\\subseteq V_H$ is a maximal set of nodes such that no\nhyperedge is fully contained in $S$. Both problems can be solved by a simple\nsequential greedy algorithm, which can be implemented naively in $O(\\Delta r +\n\\log^* n)$ rounds, where $\\Delta$ is the maximum degree, $r$ is the rank, and\n$n$ is the number of nodes.\n</p>\n<p>We show that for maximal matching, this naive algorithm is optimal in the\nfollowing sense. Any deterministic algorithm for solving the problem requires\n$\\Omega(\\min\\{\\Delta r, \\log_{\\Delta r} n\\})$ rounds, and any randomized one\nrequires $\\Omega(\\min\\{\\Delta r, \\log_{\\Delta r} \\log n\\})$ rounds. Hence, for\nany algorithm with a complexity of the form $O(f(\\Delta, r) + g(n))$, we have\n$f(\\Delta, r) \\in \\Omega(\\Delta r)$ if $g(n)$ is not too large, and in\nparticular if $g(n) = \\log^* n$ (which is the optimal asymptotic dependency on\n$n$ due to Linial's lower bound [FOCS'87]). Our lower bound proof is based on\nthe round elimination framework, and its structure is inspired by a new round\nelimination fixed point that we give for the $\\Delta$-vertex coloring problem\nin hypergraphs.\n</p>\n<p>For the MIS problem on hypergraphs, we show that for $\\Delta\\ll r$, there are\nsignificant improvements over the naive $O(\\Delta r + \\log^* n)$-round\nalgorithm. We give two deterministic algorithms for the problem. We show that a\nhypergraph MIS can be computed in $O(\\Delta^2\\cdot\\log r + \\Delta\\cdot\\log\nr\\cdot \\log^* r + \\log^* n)$ rounds. We further show that at the cost of a\nworse dependency on $\\Delta$, the dependency on $r$ can be removed almost\nentirely, by giving an algorithm with complexity $\\Delta^{O(\\Delta)}\\cdot\\log^*\nr + O(\\log^* n)$.\n</p>",
  "dc:creator": "<a href=\"http://arxiv.org/find/cs/1/au:+Balliu_A/0/1/0/all/0/1\">Alkida Balliu</a>, <a href=\"http://arxiv.org/find/cs/1/au:+Brandt_S/0/1/0/all/0/1\">Sebastian Brandt</a>, <a href=\"http://arxiv.org/find/cs/1/au:+Kuhn_F/0/1/0/all/0/1\">Fabian Kuhn</a>, <a href=\"http://arxiv.org/find/cs/1/au:+Olivetti_D/0/1/0/all/0/1\">Dennis Olivetti</a>"
}