{
  "id": "tag:blogger.com,1999:blog-15418143.post-2752539545980854411",
  "published": "2015-01-20T10:45:00.002-05:00",
  "updated": "2016-06-13T07:46:33.373-05:00",
  "category": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "title": "From feature descriptors to deep learning: 20 years of computer vision",
  "content": "<div class=\"p1\">We all know that deep convolutional neural networks have produced some stellar results on object detection and recognition benchmarks in the past two years (2012-2014), so you might wonder: <i>what did the earlier object recognition techniques look like</i>? <i>How do the designs of earlier recognition systems relate to the modern multi-layer convolution-based framework</i>?<br /><br />Let's take a look at some of the big ideas in Computer Vision from the last 20 years.<br /><div><br /></div><span class=\"s1\"><b>The rise of the local feature descriptors: ~1995 to ~2000</b></span></div><div class=\"p1\"><span class=\"s1\">When <b>SIFT</b> (an acronym for Scale Invariant Feature Transform) was introduced by <b>David Lowe</b> in 1999, the world of computer vision research changed almost overnight. It was robust solution to the problem of comparing image patches. Before SIFT entered the game, people were just using SSD (sum of squared distances) to compare patches and not giving it much thought.</span></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-2Lw3DxApZrw/VKBKMeAwTnI/AAAAAAAANyU/7IQxfszsclc/s1600/sift_pic.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"149\" src=\"https://3.bp.blogspot.com/-2Lw3DxApZrw/VKBKMeAwTnI/AAAAAAAANyU/7IQxfszsclc/s1600/sift_pic.png\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">The SIFT recipe: gradient orientations, normalization tricks</div><div class=\"p2\"><span class=\"s1\"></span><br /></div><div class=\"p1\"><span class=\"s1\">SIFT is something called a local feature descriptor -- it is one of those research findings which is the result of one ambitious man hackplaying with pixels for more than a decade. &nbsp;Lowe and the University of British Columbia got a patent on SIFT and <i>Lowe released a nice compiled binary of his very own SIFT implementation for researchers to use in their work</i>. &nbsp;SIFT allows a point inside an RGB imagine to be represented robustly by a low dimensional vector.&nbsp; When you take multiple images of the same physical object while rotating the camera, the SIFT descriptors of corresponding points are very similar in their 128-D space.&nbsp; At first glance it seems silly that you need to do something as complex as SIFT, but believe me: just because you, a human, can look at two image patches and quickly \"understand\" that they belong to the same physical point, this is not the same for machines.&nbsp; SIFT had massive implications for the geometric side of computer vision (stereo, Structure from Motion, etc) and later became the basis for the popular Bag of Words model for object recognition.</span><br /><span class=\"s1\"><br /></span>Seeing a technique like SIFT dramatically outperform an alternative method like Sum-of-Squared-Distances (SSD) Image Patch Matching firsthand is an important step in every aspiring vision scientist's career. And SIFT isn't just a vector of filter bank responses, the binning and normalization steps are very important. It is also worthwhile noting that while SIFT was initially (in its published form) applied to the output of an interest point detector, later it was found that the interest point detection step was not important in categorization problems. &nbsp;For categorization, researchers eventually moved towards vector quantized SIFT applied densely across an image.<br /><br />I should also mention that other descriptors such as <b>Spin Images</b> (see my <a href=\"http://www.computervisionblog.com/2009/07/spin-images-for-object-recognition-in.html\">2009 blog post on spin images</a>) came out a little bit earlier than SIFT, but because Spin Images were solely applicable to 2.5D data, this feature's impact wasn't as great as that of SIFT.&nbsp;</div><div class=\"p2\"><span class=\"s1\"></span><br /></div><div class=\"p1\"><span class=\"s1\"><b>The modern dataset (aka the hardening of vision as science): ~2000 to ~2005</b></span></div><div class=\"p1\">Homography estimation, ground-plane estimation, robotic vision, SfM, and all other geometric problems in vision greatly benefited from robust image features such as SIFT. &nbsp;But towards the end of the 1990s, it was clear that <i>the internet was the next big thing</i>. &nbsp;Images were going online. Datasets were being created. &nbsp;And no longer was the current generation solely interested in structure recovery (aka geometric) problems. &nbsp;This was the beginning of the large-scale dataset era with <a href=\"http://www.vision.caltech.edu/Image_Datasets/Caltech101/\">Caltech-101</a> slowly gaining popularity and categorization research on the rise. No longer were researchers evaluating their own algorithms on their own in-house datasets -- we now had a more objective and standard way to determine if yours is bigger than mine. &nbsp;Even though Caltech-101 is considered outdated by 2015 standards, it is fair to think of this dataset as the Grandfather of the more modern ImageNet dataset. Thanks <a href=\"http://vision.stanford.edu/feifeili/\">Fei-Fei Li</a>.<br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://www.vision.caltech.edu/Image_Datasets/Caltech101/\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"270\" src=\"https://3.bp.blogspot.com/-GotW1sXXx_4/VKFVGQ62vRI/AAAAAAAANzU/y5S_qZKAoG4/s1600/caltech101.jpg\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">Category-based datasets: the infamous Caltech-101 TorralbaArt image</div><br /><b>Bins, Grids, and Visual Words (aka Machine Learning meets descriptors): ~2000 to ~2005</b><br /><span class=\"s1\">After the community shifted towards more ambitious object recognition problems and away from geometry recovery problems, we had a flurry of research in Bag of Words, Spatial Pyramids, Vector Quantization, as well as machine learning tools used in any and all stages of the computer vision pipeline. &nbsp;Raw SIFT was great for wide-baseline stereo, but it wasn't powerful enough to provide matches between two distinct object instances from the same visual object category. &nbsp;What was needed was a way to encode the following ideas: object parts can deform relative to each other and some image patches can be missing. &nbsp;Overall, a much more <i>statistical way to characterize objects was needed</i>.</span><br /><span class=\"s1\"><br /></span><span class=\"s1\">Visual Words were introduced by Josef Sivic and Andrew Zisserman in approximately 2003 and this was a clever way of taking algorithms from large-scale text matching and applying them to visual content. &nbsp;A visual dictionary can be obtained by performing unsupervised learning (basically just K-means) on SIFT descriptors which maps these 128-D real-valued vectors into integers (which are cluster center assignments). &nbsp;A histogram of these visual words is a fairly robust way to represent images. &nbsp;Variants of the Bag of Words model are still heavily utilized in vision research.</span><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-pfeV3FAW_fA/VKFaZcYaxjI/AAAAAAAANzk/cMErRKX7rAA/s1600/lola.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"121\" src=\"https://3.bp.blogspot.com/-pfeV3FAW_fA/VKFaZcYaxjI/AAAAAAAANzk/cMErRKX7rAA/s1600/lola.png\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">Josef Sivic's \"Video Google\": Matching Graffiti inside the Run Lola Run video</div><span class=\"s1\"><br /></span></div><div class=\"p1\"><span class=\"s1\">Another idea which was gaining traction at the time was the idea of using some sort of binning structure for matching objects. &nbsp;Caltech-101 images mostly contained objects, so these grids were initially placed around entire images, and later on they would be placed around object bounding boxes. &nbsp;Here is a picture from Kristen Grauman's famous <a href=\"http://www.cs.utexas.edu/~grauman/research/projects/pmk/pmk_projectpage.htm\">Pyramid Match Kernel</a> paper which introduced a powerful and hierarchical way of integrating spatial information into the image matching process.</span><br /><span class=\"s1\"><br /></span></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-5aTdQ2Py6ak/VKBO33A5xII/AAAAAAAANyg/x9TWuramoKw/s1600/pmk.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"213\" src=\"https://3.bp.blogspot.com/-5aTdQ2Py6ak/VKBO33A5xII/AAAAAAAANyg/x9TWuramoKw/s1600/pmk.jpg\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">Grauman's Pyramid Match Kernel for Improved Image Matching</div><div class=\"p1\"><span class=\"s1\"><br /></span></div><div class=\"p2\"><span class=\"s1\"></span><br /></div><div class=\"p1\"><span class=\"s1\">At some point it was not clear whether researchers should focus on better features, better comparison metrics, or better learning. &nbsp;In the mid 2000s it wasn't clear if young PhD students should spend more time concocting new descriptors or kernelizing their support vector machines to death.</span></div><div class=\"p2\"><span class=\"s1\"></span><br /></div><div class=\"p1\"><span class=\"s1\"><b>Object Templates (aka the reign of HOG and DPM): ~2005 to ~2010</b></span></div><div class=\"p1\"><span class=\"s1\">At around 2005, a young researcher named Navneet Dalal showed the world just what can be done with his own new badass feature descriptor, HOG. &nbsp;(It is sometimes written as HoG, but because it is an acronym for “Histogram of Oriented Gradients” it should really be HOG. The confusion must have came from an earlier approach called DoG which stood for Difference of Gaussian, in which case the “o” should definitely be lower case.)</span></div><div class=\"p1\"><span class=\"s1\"><br /></span></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-7BaGjkSq6rc/VKBPTRYzNgI/AAAAAAAANyo/4VsIBTP-NVY/s1600/hog.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"90\" src=\"https://2.bp.blogspot.com/-7BaGjkSq6rc/VKBPTRYzNgI/AAAAAAAANyo/4VsIBTP-NVY/s1600/hog.jpg\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">Navneet Dalal's HOG Descriptor</div><br /><br /><div class=\"p1\"><span class=\"s1\">HOG came at the time when everybody was applying spatial binning to bags of words, using multiple layers of learning, and making their systems overly complicated. Dalal’s ingenious descriptor was actually quite simple.&nbsp; The seminal HOG paper was published in 2005 by Navneet and his PhD advisor, Bill Triggs. Triggs got his fame from earlier work on geometric vision, and Dr. Dalal got his fame from his newly found descriptor.&nbsp; HOG was initially applied to the problem of pedestrian detection, and one of the reasons it because so popular was that the machine learning tool used on top of HOG was quite simple and well understood, it was the linear Support Vector Machine.</span></div><div class=\"p2\"><br /><span class=\"s1\"></span></div><div class=\"p2\"><span class=\"s1\"></span></div><div class=\"p1\"><span class=\"s1\">I should point out that in 2008, a follow-up paper on object detection, which introduced a technique called the Deformable Parts-based Model (or DPM as we vision guys call it), helped reinforce the popularity and strength of the HOG technique. I personally jumped on the HOG bandwagon in about 2008.&nbsp; My first few years as a grad student (2005-2008) I was hackplaying with my own vector quantized filter bank responses, and definitely developed some strong intuition regarding features. &nbsp;In the end I realized that my own features were only \"okay,\" and because I was applying them to the outputs of image segmentation algorithms they were extremely slow.&nbsp; Once I started using HOG, it didn’t take me long to realize there was no going back to custom, slow, features. &nbsp;Once I started using a multiscale feature pyramid with a slightly improved version of HOG introduced by master hackers such as Ramanan and Felzenszwalb, I was processing images at 100x the speed of multiple segmentations + custom features (my earlier work).</span></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-9ZrYA5J3R3k/VKBPu-uaCMI/AAAAAAAANyw/FyEgea8HL5o/s1600/dpm.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"152\" src=\"https://1.bp.blogspot.com/-9ZrYA5J3R3k/VKBPu-uaCMI/AAAAAAAANyw/FyEgea8HL5o/s1600/dpm.jpg\" width=\"200\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">The infamous Deformable Part-based Model (for a Person)</div><div class=\"p2\"><span class=\"s1\"></span><br /></div><div class=\"p1\"><span class=\"s1\">DPM was the reigning champ on the PASCAL VOC challenge, and one of the reasons why it became so popular was <i>the excellent MATLAB/C++&nbsp;implementation by Ramanan and Felzenszwalb</i>.&nbsp; I still know many researchers who never fully acknowledged what releasing such great code really meant for the fresh generation of incoming PhD students, but at some point it seems like everybody was modifying the DPM codebase for their own CVPR attempts.&nbsp; Too many incoming students were lacking solid software engineering skills and giving them the DPM code was a surefire way to get some some experiments up and running.&nbsp; Personally, I never jumped on the parts-based methodology, but I did take apart the DPM codebase several times.&nbsp; However, when I put it back together, the <a href=\"http://www.cs.cmu.edu/~tmalisie/projects/iccv11/\">Exemplar-SVM</a> was the result.</span></div><div class=\"p2\"><br /><span class=\"s1\"></span></div><div class=\"p1\"><span class=\"s1\"><b>Big data, Convolutional Neural Networks and the promise of Deep Learning: ~2010 to ~2015</b></span></div><div class=\"p1\"><span class=\"s1\">Sometime around 2008, it was pretty clear that scientists were getting more and more comfortable with large datasets.&nbsp; It wasn’t just the rise of “Cloud Computing” and “Big Data,” it was the rise of the data scientists.&nbsp; Hacking on equations by morning, developing a prototype during lunch, deploying large scale computations in the evening, and integrating the findings into a production system by sunset.&nbsp; I spent two summers at Google Research, I saw lots of guys who had made their fame as vision hackers.&nbsp; But they weren’t just writing “academic” papers at Google -- sharding datasets with one hand, compiling results for their managers, writing Borg scripts in their sleep, and piping results into gnuplot (because Jedis don’t need GUIs?). It was pretty clear that big data, and a DevOps mentality was here to stay, and the vision researcher of tomorrow would be quite comfortable with large datasets. &nbsp;No longer did you need one guy with a mathy PhD, one software engineer, one manager, and one tester.&nbsp; Plenty of guys who could do all of those jobs.</span></div><div class=\"p2\"><span class=\"s1\"></span><br /></div><div class=\"p1\"><span class=\"s1\"><b>Deep Learning: 1980s - 2015</b></span></div><div class=\"p1\"><span class=\"s1\">2014 was definitely a big year for Deep Learning.&nbsp; What’s interesting about Deep Learning is that it is a very old technique. &nbsp;What we're seeing now is essentially the Neural Network 2.0 revolution -- but this time around, there's we're 20 years ahead R&amp;D-wise and our computers are orders of magnitude faster. &nbsp;And what’s funny is that the same guys that were championing such techniques in the early 90s were the same guys we were laughing at in the late 90s (because clearly convex methods were superior to the magical NN learning-rate knobs). I guess they really had the last laugh because eventually these relentless neural network gurus became the same guys we now all look up to.&nbsp; <b>Geoffrey Hinton, Yann LeCun, Andrew Ng, and Yeshua Bengio are the 4 Titans of Deep Learning.</b>&nbsp; By now, just about everybody has jumped ship to become a champion of Deep Learning.</span><br /><span class=\"s1\"><br /></span><span class=\"s1\">But with Google, Facebook, Baidu, and a multitude of little startups riding the Deep Learning wave, <b>who will rise to the top as the master of artificial intelligence?</b></span></div><div class=\"p1\"><span class=\"s1\"><br /></span></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><img border=\"0\" src=\"http://www.cs.nyu.edu/~yann/research/deep/images/ff1.gif\" height=\"320\" width=\"301\" /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://www.cs.nyu.edu/~yann/research/deep/\">Yann's Deep Learning Page</a></div><div class=\"p1\"><br /></div><div class=\"p2\"><b>How to today's deep learning systems resemble the recognition systems of yesteryear?</b></div><div class=\"p1\">Multiscale convolutional neural networks aren't that much different than the feature-based systems of the past. &nbsp;The first level neurons in deep learning systems learn to utilize gradients in a way that is similar to hand-crafted features such as SIFT and HOG. &nbsp;Objects used to be found in a sliding-window fashion, but now it is easier and sexier to think of this operation as convolving an image with a filter. Some of the best detection systems used to use multiple linear SVMs, combined in some ad-hoc way, and now we are essentially using even more of such linear decision boundaries. &nbsp;Deep learning systems can be thought of a multiple stages of applying linear operators and piping them through a non-linear activation function, but deep learning is more similar to a clever combination of linear SVMs than a memory-ish Kernel-based learning system.<br /><br />Features these days aren't engineered by hand. &nbsp;However, architectures of Deep systems are still being designed manually -- and it looks like the experts are the best at this task. &nbsp;The operations on the inside of both classic and modern recognition systems are still very much the same. &nbsp;You still need to be clever to play in the game, but <i>now you need a big computer</i>. There's still lot of room for improvement, so I encourage all of you to be creative in your research.<br /><br />Research-wise, it never hurts to know where we have been before so that we can better plan for our journey ahead. &nbsp;I hope you enjoyed this brief history lesson and the next time you look for insights in your research, don't be afraid to look back.</div><div class=\"p1\"><br /></div><div class=\"p1\"><span class=\"s1\">To learn more about computer vision techniques:</span></div><div class=\"p1\"><span class=\"s1\"><a href=\"http://en.wikipedia.org/wiki/Scale-invariant_feature_transform\">SIFT article on Wikipedia</a></span></div><div class=\"p1\"><a href=\"http://en.wikipedia.org/wiki/Bag-of-words_model_in_computer_vision\">Bag of Words article on Wikipedia</a></div><div class=\"p1\"><a href=\"http://en.wikipedia.org/wiki/Histogram_of_oriented_gradients\">HOG article on Wikipedia</a><br /><a href=\"http://www.cs.berkeley.edu/~rbg/latent/\">Deformable Part-based Model Homepage</a><br /><a href=\"http://www.cs.utexas.edu/~grauman/research/projects/pmk/pmk_projectpage.htm\">Pyramid Match Kernel Homepage</a><br /><a href=\"http://www.robots.ox.ac.uk/~vgg/research/vgoogle/\">\"Video Google\" Image Retrieval System</a></div><div class=\"p1\"><br />Some Computer Vision datasets:<br /><a href=\"http://www.vision.caltech.edu/Image_Datasets/Caltech101/\">Caltech-101 Dataset</a><br /><a href=\"http://www.image-net.org/\">ImageNet Dataset</a><br /><br /></div><div class=\"p1\">To learn about the people mentioned in this article:</div><div class=\"p1\"><a href=\"http://www.cs.utexas.edu/~grauman/\">Kristen Grauman</a>&nbsp;(creator of Pyramid Match Kernel, Prof at Univ of Texas)<br /><a href=\"http://lear.inrialpes.fr/people/triggs/\">Bill Triggs's</a>&nbsp;(co-creator of HOG, Researcher at INRIA)<br /><a href=\"https://sites.google.com/site/navneetdalal/\">Navneet Dalal</a>&nbsp;(co-creator of HOG, now at Google)</div><div class=\"p1\"><a href=\"http://yann.lecun.com/\">Yann LeCun</a>&nbsp;(one of the Titans of Deep Learning, at NYU and Facebook)</div><div class=\"p1\"><a href=\"http://www.cs.toronto.edu/~hinton/\">Geoffrey Hinton</a>&nbsp;(one of the Titans of Deep Learning, at Univ of Toronto and Google)<br /><a href=\"http://cs.stanford.edu/people/ang/\">Andrew Ng</a>&nbsp;(leading the Deep Learning effort at Baidu, Prof at Stanford)<br /><a href=\"http://www.iro.umontreal.ca/~bengioy/yoshua_en/index.html\">Yoshua Bengio</a>&nbsp;(one of the Titans of Deep Learning, Prof at U Montreal)</div><div class=\"p1\"><a href=\"http://www.ics.uci.edu/~dramanan/\">Deva Ramanan</a>&nbsp;(one of the creators of DPM, Prof at UC Irvine)<br /><a href=\"http://cs.brown.edu/~pff/\">Pedro Felzenszwalb</a>&nbsp;(one of the creators of DPM, Prof at Brown)<br /><a href=\"http://vision.stanford.edu/feifeili/\">Fei-fei Li</a>&nbsp;(Caltech101 and ImageNet, Prof at Stanford)<br /><a href=\"http://www.di.ens.fr/~josef/\">Josef Sivic</a>&nbsp;(Video Google and Visual Words, Researcher at INRIA/ENS)<br /><a href=\"http://en.wikipedia.org/wiki/Andrew_Zisserman\">Andrew Zisserman</a>&nbsp;(Geometry-based methods in vision, Prof at Oxford)<br /><a href=\"http://www-robotics.jpl.nasa.gov/people/Andrew_Johnson/\">Andrew E. Johnson</a>&nbsp;(SPIN Images creator, Researcher at JPL)<br /><a href=\"http://www.cs.cmu.edu/~hebert/\">Martial Hebert</a>&nbsp;(Geometry-based methods in vision, Prof at CMU)<br /><br /></div><div class=\"p1\"><br /></div><div class=\"p1\"><br /></div><div class=\"p1\"><br /></div><div class=\"p1\"><br /></div>",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Tomasz Malisiewicz",
    "uri": "http://www.blogger.com/profile/17507234774392358321",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": "",
  "thr:total": 18
}