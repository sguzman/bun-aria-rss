{
  "title": "Machine Learning in Finance by Dixon, Halperin, Bilokon &#8211; A Critique",
  "link": "https://lazyprogrammer.me/machine-learning-in-finance-by-dixon-halperin-bilokon-a-critique/",
  "comments": "https://lazyprogrammer.me/machine-learning-in-finance-by-dixon-halperin-bilokon-a-critique/#respond",
  "dc:creator": "admin",
  "pubDate": "Mon, 16 May 2022 01:33:19 +0000",
  "category": "Uncategorized",
  "guid": "https://lazyprogrammer.me/?p=2634",
  "description": "<p>Check out the video version of this post on YouTube: &#160; In this post, I&#8217;m going to write about one of my all-time favorite subjects: the wrong way to predict stock and cryptocurrency prices. Despite the fact that I&#8217;ve discussed this many times before, I&#8217;m very excited about this one. It&#8217;s not everyday I get [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://lazyprogrammer.me/machine-learning-in-finance-by-dixon-halperin-bilokon-a-critique/\">Machine Learning in Finance by Dixon, Halperin, Bilokon &#8211; A Critique</a> appeared first on <a rel=\"nofollow\" href=\"https://lazyprogrammer.me\">Lazy Programmer</a>.</p>\n",
  "content:encoded": "<p>Check out the video version of this post on YouTube:</p>\n<p><iframe loading=\"lazy\" title=\"YouTube video player\" src=\"https://www.youtube.com/embed/NX_7pkocEJA\" width=\"560\" height=\"315\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<p>&nbsp;</p>\n<p>In this post, I&#8217;m going to write about one of my all-time favorite subjects: the wrong way to predict stock and cryptocurrency prices.</p>\n<p><span style=\"font-weight: 400;\">Despite the fact that I&#8217;ve discussed this many times before, I&#8217;m very excited about this one.</span></p>\n<p><span style=\"font-weight: 400;\">It&#8217;s not everyday I get to critique a published book by a big name like Springer.</span></p>\n<p><span style=\"font-weight: 400;\">The book I&#8217;m referring to is called &#8220;Machine Learning in Finance: From Theory to Practice&#8221;, </span><span style=\"font-weight: 400;\">by Matthew Dixon, Igor Halperin, and Paul Bilokon.</span></p>\n<p><span style=\"font-weight: 400;\">Now you might think I&#8217;m beating a dead horse with this video, which is kind of true.</span></p>\n<p><span style=\"font-weight: 400;\">I&#8217;ve already spoken at length about the many mistakes people make when trying to predict stock prices.</span></p>\n<p><span style=\"font-weight: 400;\">But there are a few key differences with this video.</span></p>\n<p><span style=\"font-weight: 400;\">Firstly, in past videos, I&#8217;ve mentioned that it is typically bloggers and marketers who put out this bad content.</span></p>\n<p><span style=\"font-weight: 400;\">This time, it&#8217;s not a blogger or marketer, but an Assistant Professor of Applied Math at the Illinois Institute of Technology.</span></p>\n<p><span style=\"font-weight: 400;\">Secondly, while I&#8217;ve spoken about what the mistakes are, I&#8217;ve never done a case study where I&#8217;ve broken down actual code that makes these mistakes.</span></p>\n<p><span style=\"font-weight: 400;\">This is the first.</span></p>\n<p><span style=\"font-weight: 400;\">Thirdly, in my opinion, this is the most important topic to cover for beginners to finance, because it&#8217;s always the first thing people try to do. They want to predict future prices so they know what to invest in today.</span></p>\n<p><span style=\"font-weight: 400;\">If you take my course on Financial Engineering, you&#8217;ll learn that this is completely untrue. Price prediction barely scratches the surface of true finance.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">In order to get the code I&#8217;ve used in this video, please use this link: <a href=\"https://bit.ly/3yCER6S\">https://bit.ly/3yCER6S</a></span></p>\n<p><span style=\"font-weight: 400;\">Note that it&#8217;s a copy of the code provided with the textbook, with added code for my own experiments (computing the naive forecast and the corresponding train / test MSE).</span></p>\n<p><span style=\"font-weight: 400;\">I also removed code for a different type of RNN called the &#8220;alpha RNN&#8221;, which uses an old version of Keras. Removing this code doesn&#8217;t make a difference in our results because this model didn&#8217;t perform well.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">The mistakes I&#8217;ll cover in this post are as follows.</span></p>\n<p><span style=\"font-weight: 400;\">1) They only standardize the price time series, which does nothing about the problem of extrapolation.</span></p>\n<p><span style=\"font-weight: 400;\">2) They never check whether their model can beat the naive forecast. Spoiler alert. I checked, and it doesn&#8217;t. The models they built are worse than useless.</span></p>\n<p><span style=\"font-weight: 400;\">3) Misleading train-test split.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">So let&#8217;s talk about mistake #1, which is why standardizing a price time series does not work.</span></p>\n<p><span style=\"font-weight: 400;\">The problem with prices is that they are ever increasing. This wasn&#8217;t the case for the time period used in the textbook, but it is the case in general.</span></p>\n<p><span style=\"font-weight: 400;\">Why is this an issue?</span></p>\n<p><span style=\"font-weight: 400;\">The train set is always in the past, and the test set is always in the future.</span></p>\n<p><span style=\"font-weight: 400;\">Therefore, the values in the test set in general will be higher than the values in the train set.</span></p>\n<p><span style=\"font-weight: 400;\">If you build an autoregressive model based on this data, your model will have to extrapolate to a domain never seen before in the train set.</span></p>\n<p><span style=\"font-weight: 400;\">This is not good, because machine learning models suck at extrapolation.</span></p>\n<p><span style=\"font-weight: 400;\">How they extrapolate has more to do with the model itself, than it has to do with the data.</span></p>\n<p><span style=\"font-weight: 400;\">We analyzed this phenomena in my course on <a href=\"https://lazyprogrammer.me/new-course-time-series-analysis-forecasting-and-machine-learning-in-python/\">time series analysis</a>.</span></p>\n<p><span style=\"font-weight: 400;\">For instance, decision trees tend to extrapolate by going horizontally outward.</span></p>\n<p><span style=\"font-weight: 400;\">Neural networks, Gaussian Processes, and other models all behave differently, and none of these behaviors are related to the data.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">Mistake #2, which is the worst mistake, is that the authors never check against the naive forecast.</span></p>\n<p><span style=\"font-weight: 400;\">As you recall, the naive forecast is when your prediction is simply the past known value.</span></p>\n<p><span style=\"font-weight: 400;\">In their notebook, the authors predict 4 time steps ahead.</span></p>\n<p><span style=\"font-weight: 400;\">So effectively, our naive prediction is the price from 4 time steps in the past.</span></p>\n<p><span style=\"font-weight: 400;\">Even this very dumb prediction beats their fancy RNN models. Surprisingly, this happens not just for the test set, but the train set as well.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">Mistake #3 is the misleading train-test split.</span></p>\n<p><span style=\"font-weight: 400;\">In the notebook, the authors make a plot of their models&#8217; predictions against the true price.</span></p>\n<p><span style=\"font-weight: 400;\">Of course, the error looks very small and very close to the true price in all cases.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter \" src=\"https://i.imgur.com/i30gLCW.png\" width=\"473\" height=\"278\" /></p>\n<p><span style=\"font-weight: 400;\">But remember that this is misleading. It doesn&#8217;t tell you that these models actually suck.</span></p>\n<p><span style=\"font-weight: 400;\">In time series analysis, when we think of a test set, we normally think of it as the forecast horizon.</span></p>\n<p><span style=\"font-weight: 400;\">Instead, the forecast horizon is actually 4 time steps, and the plot actually just shows the incremental predictions at each time step using true past data.</span></p>\n<p><span style=\"font-weight: 400;\">To be clear, although this is not a forecast, it&#8217;s also not technically wrong, but it&#8217;s still misleading and totally useless for evaluating the efficacy of these models.</span></p>\n<p><span style=\"font-weight: 400;\">As we saw from mistake #2, even just the naive forecast beats these models, which you wouldn&#8217;t know from these seemingly good plots.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-weight: 400;\">So I hope this post serves as a good lesson that you always have to be careful about how you apply machine learning in finance.</span></p>\n<p><span style=\"font-weight: 400;\">Even big name publishers like Springer, and reputable authors who might even be college professors, are not immune to these mistakes.</span></p>\n<p><span style=\"font-weight: 400;\">Don&#8217;t trust everything you see, and always experiment and stress test any claims.</span></p>\n\n<div class=\"twitter-share\"><a href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Flazyprogrammer.me%2Fmachine-learning-in-finance-by-dixon-halperin-bilokon-a-critique%2F&#038;via=lazy_scientist\" class=\"twitter-share-button\" data-size=\"large\">Tweet</a></div>\n<p>The post <a rel=\"nofollow\" href=\"https://lazyprogrammer.me/machine-learning-in-finance-by-dixon-halperin-bilokon-a-critique/\">Machine Learning in Finance by Dixon, Halperin, Bilokon &#8211; A Critique</a> appeared first on <a rel=\"nofollow\" href=\"https://lazyprogrammer.me\">Lazy Programmer</a>.</p>\n",
  "wfw:commentRss": "https://lazyprogrammer.me/machine-learning-in-finance-by-dixon-halperin-bilokon-a-critique/feed/",
  "slash:comments": 0
}