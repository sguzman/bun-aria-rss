{
  "title": "Kinesis Advantage2: Impressions",
  "link": "",
  "published": "2016-12-04T19:00:00-08:00",
  "updated": "2016-12-04T19:00:00-08:00",
  "author": {
    "name": "Wes McKinney"
  },
  "id": "tag:wesmckinney.com,2016-12-04:/blog/kinesis-advantage2/",
  "summary": "<p><strong>TL;DR</strong> I discuss my impressions of the newest version of the classic Kinesis\nAdvantage contoured mechnical keyboard, the <a href=\"https://www.kinesis-ergo.com/shop/advantage2/\">Advantage2</a>.</p>",
  "content": "<p><strong>TL;DR</strong> I discuss my impressions of the newest version of the classic Kinesis\nAdvantage contoured mechnical keyboard, the <a href=\"https://www.kinesis-ergo.com/shop/advantage2/\">Advantage2</a>.</p>\n\n\n<h2>Mechanical keyboards</h2>\n<p>Mechanical keyboards have become a big business the last 5 years or so, with\nclackity-clack Cherry MX key switches becoming all the rage amongst programmers\nand gamers alike. In the age of ever-thinner laptop keyboards (and Apple even\ngetting rid of physical buttons and keys in recent Macbook Pros), the strong\ntactile feedback and satisfying feel of mechanical key switches are a welcome\nchange for professionals who spend long days at the computer.</p>\n<p>I was introduced to these keyboards through the Kinesis Advantage back in\n2008. I was suffering from repetitive strain injury (RSI) pain at the time and\nthe Kinesis layout (with modifier keys at your thumbs) and lower key actuation\nforce was exactly what I needed. They are expensive keyboards (at US $\\$$300 to\n$\\$$400, depending on the model and where you buy it), but given that they can\nlast a decade or more, properly taken care of, you can think of it as an\ninvestment in your professional productivity and health.</p>\n<p>I'm not an expert on keyboard history, but the two companies which popularized\nkeyboard layouts with thumb-based modifier keys were <a href=\"http://www.maltron.com/\">Maltron</a> and\n<a href=\"https://www.kinesis-ergo.com\">Kinesis</a>. Since then, there have been other new keyboard designs taking\ninspiration from these, like the open source <a href=\"https://ergodox-ez.com/\">Ergodox</a> and <a href=\"https://github.com/adereth/dactyl-keyboard\">Dactyl</a>\nkeyboards.</p>\n<p>The Kinesis Corporation itself has always been sleeper hit amongst programmers\nwith RSI issues. So I was interested when they released a new version of the\nAdvantage keyboard with some hardware changes and internal software\nchanges. They were kind enough to provide me with a demo unit to try out the\nnew features.</p>\n<h2>Advantage2: what's new</h2>\n<p>The big changes in the Advantage2 are:</p>\n<ul>\n<li>\n<p>The function keys are now proper mechanical Cherry ML switches rather than\n  the spongier capacitative ones in the older models. They're a big step up\n  from the old function keys.</p>\n</li>\n<li>\n<p>New internal hardware / firmware bringing improved programmability for\n  modifying keyboard layouts and macros. Macros have been improved in some good\n  ways, too.</p>\n</li>\n<li>\n<p>An internal USB-based \"V-Drive\" enabling you to edit configuration files\n  (layouts and macros) and install firmware updates on the keyboard\n  programmability and firmware updates from your computer.</p>\n</li>\n</ul>\n<p>Otherwise, not much has changed about the physical design of the keyboard\n(which is already tried and true). It's missing a USB port for a mouse (which\nI'm told had caused issues for users on KVM switches), but you can still\nconnect a set of foot pedals, which behave like generic programmable keys.</p>\n<h2>Easier programmability</h2>\n<p>The new programmability system I've referred to is now collectively known as\nthe \"SmartSet Programming Engine\". I updated the <a href=\"https://www.kinesis-ergo.com/advantage2-resources/\">keyboard firmware</a> using\nthe V-Drive, so at this time I have (this status report printed out by a\nspecial keyboard macro):</p>\n<div class=\"github\"><pre><span></span><code>Model&gt; Advantage2\nFirmware&gt; 1.0.168.us (2MB), 09/26/2016\nActive layout file&gt; qwerty.txt\nThumb keys mode&gt; win\nMacro play status&gt; active\nMacro play speed&gt; slow=1, normal=3, fast=9&gt; 9\nStatus report play speed&gt; off=0, slow=1, normal=3, fast=4&gt; 3\nKeyclick status&gt; off\nToggle tone status&gt; on\nStored macros&gt; 2\nKeys remapped&gt; 4\nPower user mode&gt; on\n</code></pre></div>\n\n<p>Pressing <code>progm - F1</code> mounts a special USB drive which contains an <code>active</code>\nfolder containing configuration files for keyboard layouts and macros, and a\nspecial <code>firmware</code> folder for firmware updates.</p>\n<p>Inside <code>active</code>, there is a read-only file <code>state.txt</code> which has some of the\nbasic high level settings.</p>\n<div class=\"github\"><pre><span></span><code>startup_file=qwerty.txt\nthumb_mode=WINDOWS\nkey_click_tone=OFF\ntoggle_tone=ON\nmacro_disable=OFF\nmacro_speed=9\npower_user=true\n</code></pre></div>\n\n<p>The macro speed can be a big deal in practice. The original Advantage had a\nfixed macro playback speed that wasn't too speedy. The default speed setting of\n3 corresponds to 150 words per minute (WPM) corresponds roughly to a fast\ntyping speed. The top speed of 9 is 20 times faster, a blistering 250\ncharacters per second (around 3000 words per minute). For longer macros, this\nmakes the output appear almost instantaneously. You can set the macro speed\nglobally or on a per-macro basis (since some macros need to be entered more\nslowly).</p>\n<p>The <code>qwerty.txt</code> file contains modifications to the default QWERTY layout. Any\nremappings that you make using traditional onboard programming (by pressing\n<code>progrm - remap</code>) are stored in this file. For example, I have long remapped\nCaps Lock to left bracket <code>[</code> and backslash to <code>]</code> (for Python\nprogramming). These appear in my <code>qwerty.txt</code> file as:</p>\n<div class=\"github\"><pre><span></span><code><span class=\"k\">[caps]&gt;[obrack]</span><span class=\"w\"></span>\n<span class=\"k\">[\\]&gt;[cbrack]</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>Things get more interesting with macros. For example, I used the keyboard's\nmacro recording mode (<code>progm - F11</code>) to set Ctrl-Alt-Shift-F to type <code>This is a\nMacro Example</code>. This then appears in <code>qwerty.txt</code> as:</p>\n<div class=\"github\"><pre><span></span><code>{lalt}{lshift}{lctrl}{f}&gt;{-lshift}{t}{+lshift}{h}{i}{s}{space}{i}{s}{space}{a}{space}{-lshift}{m}{+lshift}{a}{c}{r}{o}{-lshift}{space}{e}{+lshift}{x}{a}{m}{p}{l}{e}\n</code></pre></div>\n\n<p>Any macros created onboard are similarly reflected in the text file, so you can\nmake tweaks to more complicated macros from a text editor (so-called \"direct\nediting\").</p>\n<h2>Summary</h2>\n<p>For Kinesis users who take advantage of customization and macros, the\nAdvantage2 is a very nice upgrade for its improved programmability and the\nbetter feel of the function keys.</p>\n<p>If you are a new or potential user, and you can afford the investment (of money\nand time to learn the contoured keyboard shape), it should be worth your\nconsideration over the increasingly long list of mechanical keyboards now\navailable.</p>"
}