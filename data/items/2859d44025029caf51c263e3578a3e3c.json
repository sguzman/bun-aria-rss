{
  "title": "Experiments with style transfer",
  "description": "<p>Since the original <a href=\"http://arxiv.org/pdf/1508.06576v1.pdf\">Artistic style transfer</a> and the subsequent <a href=\"https://github.com/jcjohnson/neural-style\">Torch implementation of the algorithm</a> by Justin Johnson were released I’ve been playing with various ways to use the algorithm in other ways. Here’s a quick dump of the results of my experiments. None of these are particularily rigorous and I think there’s plenty of room for improvement.</p>\n\n<h2 id=\"super-resolution\">Super resolution</h2>\n\n<p>I was wondering if you could use style transfer to create super resolution images. I.e. use a low resolution image of something as the content image and a high-resolution image of something similar as “style”. The result looks as follows:</p>\n\n<center><img src=\"/assets/obama_nicholson_comparison_125.png\" /></center>\n\n<p>Left: High-res image of Obama\nRight: Low-res image of Nicholson\nMiddle: After style transfer</p>\n\n<p>Conclusion: Yeah, sort of. You get some interesting artefacts.</p>\n\n<h2 id=\"style-drift\">Style drift</h2>\n\n<p>One of the things that struck me about the results of style transfer (see for example this excellent, <a href=\"http://kylemcdonald.net/stylestudies/\">comprehensive experiment by Kyle McDonald</a> ) is that a single iteration of style transfer mostly transfers texture, i.e. high frequency correlation. The result still maintains most of the exact geometries of the photo, but painted with similar visual components from the style image.</p>\n\n<p>In this style drift experiment i basically apply different styles iteratively to let the image drift from it’s original. I.e. say you have 4 styles, you apply 1 then 2 then 3 then 4 then 1 again and so forth. Each style pushes in a different direction - like a game of telephone - by the time you get back to the same style the image is significantly (but not randomly) distorted. It’s an interesting way to remix different aspects of different styles.</p>\n\n<center><img src=\"/assets/style_drift_montage.jpg\" /></center>\n\n<p>The drift is more striking when viewed as a video:</p>\n<center>\n<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/-BpGMHTKTKA\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n\n<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/dy6JeQjwLNk\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</center>\n\n<h2 id=\"update-jan-3rd-2016\">Update: Jan 3rd 2016:</h2>\n\n<h2 id=\"images-from-top-level-activations-only\">Images from top-level activations only</h2>\n\n<p>The paper covers this but I thought it would be fun to try regenerating an image by using only the highest layer content activations with no style. Interestingly it’s kind of a nice effect actually.</p>\n\n<center><img src=\"/assets/margret_layer_15.jpg\" />\n<iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/miokBEIH3PI\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n</center>\n<p>Also makes a cool video. You can see that the minimization does not by any means go linearly to the target.</p>\n\n<h2 id=\"localized-style\">Localized style</h2>\n\n<p>The original implementations were highly limited by resolution (I’d run out of GPU RAM on my Tesla for anything larger than 500x500 or so) so I started hacking one of the implementations to use a moving patch instead. The patch moves around in the target image and proportionally in the content/style images. This leads to an interesting effect where suddenly the style is a little bit location dependent - essentially now the content transfer is somewhere between pure style (no locality at all) and pure content (high locality due to the locality of the convolutional filter banks). This leads to some fun side-effects:</p>\n\n<p>Here is an image generated by having no content image and transferring localized style from a natural photo:</p>\n\n<center><img src=\"/assets/tuebingen_remixed.jpg\" /></center>\n\n<p>I really like this effect actually.</p>\n\n<h2 id=\"multiscale\">Multiscale</h2>\n\n<p>Making images large and using a patch works great but of course now the scale of the style features transferred now is getting smaller compared to the size of the image. In order to get bigger features transferred we need multiscale style transfer. I ended up implementing this in a stochastic way where each batch step not only the position of the patch gets drawn out of a hat but also the scale. Everything is then rescaled to the native size of the image and applied. This seems to work quite nicely although I’m having some strange overflow effect here and there that I haven’t quite ironed out yet. (click for full res)</p>\n\n<center>\n<a href=\"/assets/tyson_kadinsky_13_sc3.jpg.00000.jpg\">\n<img width=\"200\" height=\"300\" src=\"/assets/tyson_kadinsky_13_sc3.jpg.00000.jpg\" />\n</a>\n<a href=\"/assets/tyson_kadinsky_14_sc3_0.4.jpg.00000.jpg\">\n<img width=\"200\" height=\"300\" src=\"/assets/tyson_kadinsky_14_sc3_0.4.jpg.00000.jpg\" />\n</a>\n<a href=\"/assets/tyson_kadinsky_14_sc3_0.8.jpg.00000.jpg\">\n<img width=\"200\" height=\"300\" src=\"/assets/tyson_kadinsky_14_sc3_0.8.jpg.00000.jpg\" />\n</a>\n</center>\n\n<p>I still get some strange artifacts I need to resolve but overall i’m happy with the higher res versions.\nThe code for this is a fork of <a href=\"https://github.com/andersbll/neural_artistic_style\">Anders Larsen’s python implementation in DeepPy</a>. I forked and extended his code to <a href=\"https://github.com/mtyka/neural_artistic_style\">add the multiscale, highres stuff</a>.</p>\n\n<h2 id=\"style-transfer-zoom-movie\">Style transfer zoom movie.</h2>\n\n<p>Hey this worked really well for DeepDream - why not try it for style transfer?</p>\n\n<iframe width=\"630\" height=\"465\" src=\"https://www.youtube.com/embed/4ZUyDff4qaw\" frameborder=\"0\" allowfullscreen=\"\"></iframe>\n\n<p>Other parameters:</p>\n\n<p><a href=\"https://youtu.be/gOSCxHNvUFs\">https://youtu.be/gOSCxHNvUFs</a></p>\n\n<p><a href=\"https://youtu.be/XxU5CbY3004\">https://youtu.be/XxU5CbY3004</a></p>\n\n<p><a href=\"https://youtu.be/GXQqzC2oxDI\">https://youtu.be/GXQqzC2oxDI</a></p>",
  "pubDate": "Fri, 02 Oct 2015 00:03:44 +0000",
  "link": "http://mtyka.github.io//code/2015/10/02/experiments-with-style-transfer.html",
  "guid": "http://mtyka.github.io//code/2015/10/02/experiments-with-style-transfer.html",
  "category": "code"
}