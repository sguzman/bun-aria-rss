{
  "title": "Finetune BERT on Google Colab: A Simple Tutorial",
  "description": "<p>In this blog post, you will learn how you can finetune BERT on Google Colab and use the trained model for your NLP task. You will also learn how you can observe the performance of the model in the training phase.</p><h2 id=\"why-bert-and-google-colab\">Why BERT and Google Colab?</h2><p>BERT is a language</p>",
  "link": "https://www.data-blogger.com/finetuning-bert-on-google-colab/",
  "guid": "622cff5c092f120001a24e13",
  "category": [
    "Natural Language Processing",
    "Python"
  ],
  "dc:creator": "Kevin Jacobs",
  "pubDate": "Wed, 07 Jul 2021 00:00:00 GMT",
  "media:content": "",
  "content:encoded": "<img src=\"https://images.unsplash.com/photo-1606765962248-7ff407b51667?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDV8fGNhYmxlfGVufDB8fHx8MTY0NzExNjIxMQ&ixlib=rb-1.2.1&q=80&w=2000\" alt=\"Finetune BERT on Google Colab: A Simple Tutorial\"><p>In this blog post, you will learn how you can finetune BERT on Google Colab and use the trained model for your NLP task. You will also learn how you can observe the performance of the model in the training phase.</p><h2 id=\"why-bert-and-google-colab\">Why BERT and Google Colab?</h2><p>BERT is a language model and can thus be used for predicting the next word in a sentence. Furthermore, BERT can be used for automatic summarization, text classification and many more downstream tasks. Google Colab provides you with a cloud-based environment on which you can train your machine learning models on a GPU. The downside is that your data is uploaded to the Google cloud. Google Colab gives you the opportunity to finetune BERT.</p><h2 id=\"implementation\">Implementation</h2><p>Here, I will show some code snippets which are relevant to the training part of BERT in Google Colab. Feel free to share your implementations and questions in the comment section. The first step would be to load BERT (of some of the flavours of BERT). Here, I will use the Dutch BERT (a.k.a. BERTje):</p><figure class=\"kg-card kg-image-card\"><img src=\"https://www.data-blogger.com/wp-content/uploads/2021/07/afbeelding-1024x364.png.webp\" class=\"kg-image\" alt=\"Finetune BERT on Google Colab: A Simple Tutorial\" loading=\"lazy\"></figure><p>Other flavours of BERT can be found via <a href=\"https://huggingface.co/\" rel=\"noreferrer noopener nofollow\">HuggingFace</a>. Then, you can load your datasets:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://www.data-blogger.com/wp-content/uploads/2021/07/afbeelding-1-1024x68.png.webp\" class=\"kg-image\" alt=\"Finetune BERT on Google Colab: A Simple Tutorial\" loading=\"lazy\"></figure><p>I stored mine in Google Drive since it is public data and used them in Google Colab by mounting my drive. After setting up your model, you can specify the training arguments:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://www.data-blogger.com/wp-content/uploads/2021/07/afbeelding-2-1024x246.png.webp\" class=\"kg-image\" alt=\"Finetune BERT on Google Colab: A Simple Tutorial\" loading=\"lazy\"></figure><p>And then, you can observe your model during training.</p><h2 id=\"observe-your-model\">Observe your model</h2><p>In order to observe your model, you can use Tensorboard in Google Colab which provides you with losses and metrics during the training. You can activate Tensorflow in Google Colab with the following code:</p><pre><code>%load_ext tensorboard\n%tensorboard --logdir logs</code></pre><p>By executing the code, you get an embedded version of Tensorboard, which is quite useful! Here you can see an example of my training loss during the training phase:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://www.data-blogger.com/wp-content/uploads/2021/07/afbeelding-3-1024x760.png.webp\" class=\"kg-image\" alt=\"Finetune BERT on Google Colab: A Simple Tutorial\" loading=\"lazy\"></figure><h2 id=\"how-can-i-use-my-model\">How can I use my model?</h2><p>You can download the latest model checkpoint to your local machine which you can then use for further inference. I would be interested in where you are using your model for. Please leave your use cases and questions in the comments down below. Have fun using your model!</p>"
}