{
  "id": "tag:blogger.com,1999:blog-15045980.post-7158856905941359039",
  "published": "2019-01-15T08:08:00.000-08:00",
  "updated": "2019-01-15T08:12:41.581-08:00",
  "category": [
    "",
    "",
    "",
    "",
    ""
  ],
  "title": "Android Platform Testing Made Easy",
  "content": "By Simran Basi,&nbsp;Dan Shi, Dan Willemsen, and Clay Murphy<br /><br />Android Engineering Productivity (Android EngProd) seeks to ease development of the Android operating system for the entire ecosystem. Android EngProd creates tools, processes, and documentation aimed at Android platform development. We are now starting to push the best previously internal development infrastructure into the open for all to benefit. <br /><br />Although comprehensive, the <a href=\"https://source.android.com/compatibility/cts\">Android Compatibility Test Suite</a> (CTS) and <a href=\"https://source.android.com/devices/tech/test_infra/tradefed\">Trade Federation Test Harness</a>  can be unwieldy to configure. So we recently publicly released new tooling and associated docs that simplify device configuration and testing in the form of the <a href=\"https://android.googlesource.com/platform/build/soong/\">Soong build system</a> replacing Make, <a href=\"https://source.android.com/compatibility/tests/development/test-mapping\">Test Mapping</a> for easy configs, and <a href=\"https://source.android.com/compatibility/tests/development/atest\">Atest</a> to run tests locally.<br /><h2>Configuring tests in Soong builds</h2>The <a href=\"https://android.googlesource.com/platform/build/soong/\">Soong build system</a> was introduced in Android 8.0 (Oreo) to eventually replace the Make-based system (i.e. <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">Android.mk</span> files) used in previous releases. Soong allows <a href=\"https://source.android.com/compatibility/tests/development/blueprints\">simple build configuration</a> with support for <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">android_test</span> declarations arriving in Android Q, now available in the Android Open Source Project (AOSP) master branch.<br /><br />Soong uses <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">Android.bp</span> files, which are JSON-like simple declarative descriptions of modules to build. Here is an example test configuration in Soong, from: <a href=\"https://android.googlesource.com/platform/platform_testing/+/master/tests/example/instrumentation/Android.bp\">/platform_testing/tests/example/instrumentation/Android.bp</a><br /><div><div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">android_test {</span></div><div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; name: \"HelloWorldTests\",</span></div><div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; srcs: [\"src/**/*.java\"],</span></div><div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; sdk_version: \"current\",</span></div><div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; static_libs: [\"android-support-test\"],</span></div><div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; certificate: \"platform\",</span></div><div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; test_suites: [\"device-tests\"],</span></div><div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">}</span></div></div><div><br /></div>Note the <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">android_test</span> declaration at the beginning indicates this is a test. Including <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">android_app</span> instead would conversely indicate this is a build package. <a href=\"https://source.android.com/compatibility/tests/development/test-config\">Complex test configuration</a> options still exist for test modules requiring customized setup and tear down that cannot be performed within the test case itself.<br /><h2>Mapping tests in the source tree</h2><a href=\"https://source.android.com/compatibility/tests/development/test-mapping\">Test Mapping</a> allows developers to create pre- and post-submit test rules directly in the Android source tree and leave the decisions of branches and devices to be tested to the test infrastructure itself. Test Mapping definitions are JSON files named <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">TEST_MAPPING</span> that can be placed in any source directory.<br /><br />Test Mapping categorizes tests via a <b>test group</b>. The name of a test group can be any string. For example, <i><a href=\"https://testing.googleblog.com/2018/09/efficacy-presubmit.html\">presubmit</a></i> can be for a group of tests to run when validating changes. And <i>postsubmit</i> tests can be used to validate the builds after changes are merged.<br /><br />For the directory requiring test coverage, simply add a <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">TEST_MAPPING</span> JSON file resembling the example below. These rules will ensure the tests run in presubmit checks when any files are touched in that directory or any of its subdirectories.<br /><br />Here is a sample <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">TEST_MAPPING</span> file:<br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">{</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; \"presubmit\": [</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; {</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; &nbsp; \"name\": \"CtsAccessibilityServiceTestCases\",</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; &nbsp; \"options\": [</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; {</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"include-annotation\": \"android.platform.test.annotations.Presubmit\"</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; &nbsp; ]</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; }</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; ],</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; \"postsubmit\": [</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; {</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; &nbsp; \"name\": \"CtsWindowManagerDeviceTestCases\"</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; }</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; ],</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; \"imports\": [</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; {</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; &nbsp; \"path\": \"frameworks/base/services/core/java/com/android/server/am\"</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; &nbsp; }</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">&nbsp; ]</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">}</span><br /><h2>Running tests locally with Atest</h2><a href=\"https://source.android.com/compatibility/tests/development/atest\">Atest</a> is a command line tool that allows developers to build, install, and run Android tests locally, greatly speeding test re-runs without requiring knowledge of <a href=\"https://source.android.com/devices/tech/test_infra/tradefed\">Trade Federation Test Harness</a> command line options.<br /><div><br /></div>Atest commands take the following form:<br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">atest [optional-arguments] test-to-run</span><br /><div><br /></div>You can run one or more tests by separating test references with spaces, like so:<br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">atest test-to-run-1 test-to-run-2</span><br /><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\"><br /></span>To run an entire test module, use its module name. Input the name as it appears in the <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">LOCAL_MODULE</span> or <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">LOCAL_PACKAGE_NAME</span> variables in that test's <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">Android.mk</span> or <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">Android.bp</span> file.<br /><div><br /></div><div>For example:</div><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">atest FrameworksServicesTests<br />atest CtsJankDeviceTestCases</span><br /><h2><span style=\"font-family: inherit;\">Discovering tests with Atest and TEST MAPPING</span></h2>Atest and TEST MAPPING work together to solve the problem of test discovery, i.e. what tests need to be run when a directory of code is edited. For example, to execute all presubmit test rules for a given directory locally:<br /><br /><ol><li>Go to the directory containing the <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">TEST_MAPPING</span> file.</li><li>Run the command: <span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">atest</span></li></ol><div><span style=\"font-family: inherit;\">All presubmit tests configured in the </span><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">TEST_MAPPING</span><span style=\"font-family: inherit;\"> files of the current directory and its parent directories are run. Atest will locate and run two tests for presubmit.</span></div><h2>Finding more testing documentation</h2>Further, introductory testing documents were published on <a href=\"https://source.android.com/\">source.android.com</a> to support Soong and platform testing in general:<br /><ul><li><a href=\"https://source.android.com/compatibility/tests\">Android Platform Testing</a></li><li><a href=\"https://source.android.com/compatibility/tests/development\">Test Development Workflow</a></li><li><a href=\"https://source.android.com/compatibility/tests/development/blueprints\">Simple Test Configuration</a></li><li><a href=\"https://source.android.com/compatibility/tests/development/instrumentation\">Instrumentation Tests</a></li><li><a href=\"https://source.android.com/compatibility/tests/development/native\">Native Tests</a></li><li><a href=\"https://source.android.com/compatibility/tests/development/jar\">JAR (Java) Host Tests</a></li></ul>In addition to exposing more testing documentation, Android has recently opened up build infrastructure to monitor submissions through <a href=\"http://ci.android.com/\">ci.android.com</a>. See the <a href=\"https://android-developers.googleblog.com/2018/12/more-visibility-into-android-open-source-project.html\">More visibility into the Android Open Source Project</a> blog post and the <a href=\"https://source.android.com/setup/build/dashboard\">Continuous Integration Dashboard</a> for instructions on viewing build status and downloading build artifacts.<br /><div><br /></div>Android EngProd endeavors to bring you more previously internal-only features to make your life easier. Watch this <a href=\"https://testing.googleblog.com/\">Google Testing Blog</a>, the <a href=\"https://android-developers.googleblog.com/\">Android Developers Blog</a>, and <a href=\"https://source.android.com/\">source.android.com</a> for future enhancements.",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Google Testing Bloggers",
    "uri": "http://www.blogger.com/profile/03153388556673050910",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "thr:total": 2
}