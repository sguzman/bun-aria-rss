{
  "title": "e017: Point me where I need to go",
  "link": "https://newrustacean.com/show_notes/e017/",
  "description": "<p>A deep dive on references and pointers in Rust.</p>\n<h2 id=\"notes\">Notes</h2>\n<p>By listener request, today we look at the syntax and semantics of referencing and dereferencing and the corresponding <code>&</code> and <code>*</code> operators.</p>\n<p>As was the case with <a href=\"http://newrustacean.dev/show_notes/e016/\">e016</a>, the code samples have little to say in their documentation; <em>reading</em> the code will be necessary for seeing the ideas.</p>\n<h2 id=\"links\">Links</h2>\n<ul>\n<li><a href=\"https://medium.com/@raphlinus/inside-the-fastest-font-renderer-in-the-world-75ae5270c445#.1opn7gihv\">“Inside the Fastest Font Renderer in the World”</a></li>\n<li>The Rust Platform:\n<ul>\n<li><a href=\"http://aturon.github.io/blog/2016/07/27/rust-platform/\">original blog post</a>\n<ul>\n<li><a href=\"https://internals.rust-lang.org/t/proposal-the-rust-platform/3745\">Rust internals discussion</a></li>\n<li><a href=\"https://www.reddit.com/r/rust/comments/4uxdn8/the_rust_platform_aaron_turon/?\">Reddit discussion</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=12177002\">Hacker News discussion</a></li>\n</ul></li>\n<li><a href=\"https://internals.rust-lang.org/t/follow-up-the-rust-platform/3782\">follow-up</a>\n<ul>\n<li><a href=\"https://www.reddit.com/r/rust/comments/4v9eo0/follow_up_to_the_rust_platform/?\">Reddit discussion</a></li>\n</ul></li>\n</ul></li>\n<li><a href=\"https://users.rust-lang.org/t/cargo-vendoring-now-on-nightly/6776\">Cargo vendoring support in nightly</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/34096\">MIR on by default in nightly</a></li>\n<li>References and dereferencing:\n<ul>\n<li><em>The Rust Programming Language</em>:\n<ul>\n<li><a href=\"https://doc.rust-lang.org/book/references-and-borrowing.html\">References and Borrowing</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/deref-coercions.html\"><code>Deref</code> coercions</a></li>\n</ul></li>\n<li><em>Rust by Example</em>: <a href=\"http://rustbyexample.com/flow_control/match/destructuring/destructure_pointers.html\">Flow Control: pointers/ref</a></li>\n<li>The Rust Reference:\n<ul>\n<li><a href=\"https://doc.rust-lang.org/reference.html#unary-operator-expressions\">Unary Operator Expressions</a></li>\n<li><a href=\"https://doc.rust-lang.org/reference.html#pointer-types\">Pointer Types</a></li>\n</ul></li>\n</ul></li>\n</ul>\n<h2 id=\"sponsors\">Sponsors</h2>\n<ul>\n<li>Aleksey Pirogov</li>\n<li>Cameron Mochrie</li>\n<li>Cass Costello</li>\n<li><a href=\"http://red-oxide.org/\">Chris Palmer</a></li>\n<li><a href=\"twitter.com/daniel_collin\">Daniel Collin</a></li>\n<li><a href=\"https://twitter.com/derekmorr\">Derek Morr</a></li>\n<li>Doug Reeves</li>\n<li>Eric Fulmer</li>\n<li>Hamza Sheikh</li>\n<li><a href=\"https://github.com/Limeth\">Jakub “Limeth” Hlusička</a></li>\n<li><a href=\"http://twitter.com/jaredthecoder\">Jared Smith</a></li>\n<li>Keith Gray</li>\n<li>Lachlan Collins</li>\n<li>Leif Arne Storset</li>\n<li>Luca Schmid</li>\n<li>Micael Bergeron</li>\n<li><a href=\"https://pascalhertleif.de/\">Pascal Hertleif</a></li>\n<li>Ralph Giles (“rillian”)</li>\n<li>Ralph “FriarTech” Loizzo</li>\n<li>Raph Levien</li>\n<li>reddraggone9</li>\n<li>Ryan Ollos</li>\n<li>Steven Murawski</li>\n<li>Vesa Kaihlavirta</li>\n<li><a href=\"http://willroe.me\">William Roe</a></li>\n</ul>\n<p>(Thanks to the couple people donating who opted out of the reward tier, as well. You know who you are!)</p>\n<h3 id=\"become-a-sponsor\">Become a sponsor</h3>\n<ul>\n<li><a href=\"https://www.patreon.com/newrustacean\" rel=\"payment\">Patreon</a></li>\n<li><a href=\"https://venmo.com/chriskrycho\">Venmo</a></li>\n<li><a href=\"https://www.dwolla.com/hub/chriskrycho\">Dwolla</a></li>\n<li><a href=\"https://cash.me/$chriskrycho\">Cash.me</a></li>\n<li><a href=\"https://flattr.com/profile/chriskrycho\">Flattr</a></li>\n<li><a href=\"https://paypal.me/chriskrycho\">PayPal.me</a></li>\n</ul>\n<h2 id=\"contact\">Contact</h2>\n<ul>\n<li>New Rustacean:\n<ul>\n<li>Twitter: <a href=\"https://www.twitter.com/newrustacean\">@newrustacean</a></li>\n<li>Email: <a href=\"mailto:hello@newrustacean.com\">hello@newrustacean.com</a></li>\n</ul></li>\n<li>Chris Krycho\n<ul>\n<li>GitHub: <a href=\"https://github.com/chriskrycho\">chriskrycho</a></li>\n<li>Twitter: <a href=\"https://www.twitter.com/chriskrycho\">@chriskrycho</a></li>\n</ul></li>\n</ul>\n",
  "pubDate": "Mon, 08 Aug 2016 14:35:00 -0600",
  "enclosure": "",
  "guid": "3FD4B9E5-7496-4FCB-AD95-829A6A295274",
  "itunes:author": "Chris Krycho",
  "itunes:summary": "A deep dive on references and pointers in Rust. Notes By listener request, today we look at the syntax and semantics of referencing and dereferencing and the corresponding `&` and `*` operators. As was the case with e016, the code samples have little to say in their documentation; reading the code will be necessary for seeing the ideas. Sponsors * Aleksey Pirogue * Cameron Mochrie * Chris Palmer * Daniel Collin * Derek Morr * Doug Reeves * Eric Fulmer * Hamza Sheikh * Jakub “Limeth” Hlusička * Jared Smith * Keith Gray * Lachlan Collins * Leif Arne Storset * Luca Schmid * Micael Bergeron * Pascal Hertleif * Ralph Giles (“gillian”) * Ralph “FriarTech” Loizzo * Raph Levien * reddraggone9 * Ryan Oleos * Steven Murawski * Vesa Kaihlavirta * William Roe (Thanks to the couple people donating who opted out of the reward tier, as well. You know who you are!) Become a sponsor * Patreon.com/newrustacean * Venmo.com/chriskrycho * Dwolla.com/hub/chriskrycho * Cash.me/$chriskrych * flattr.com/profile/chriskrycho * PayPal.me/chriskrycho Contact * New Rustacean: * Twitter: @newrustacean * Email: hello@newrustacean.com * Chris Krycho * GitHub: chriskrycho * Twitter: @chriskrycho",
  "itunes:duration": "17:06",
  "itunes:episodeType": "full"
}