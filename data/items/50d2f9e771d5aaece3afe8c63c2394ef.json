{
  "title": "What No One Tells You About Real-Time Machine Learning",
  "link": "https://fullstackml.com/what-no-one-tells-you-about-real-time-machine-learning-452ee81ac8de?source=rss----46e065078cc1---4",
  "guid": "https://medium.com/p/452ee81ac8de",
  "category": [
    "cybersecurity",
    "machine-learning",
    "big-data",
    "fraud-detection",
    "apache-spark"
  ],
  "dc:creator": "Dmitry Petrov",
  "pubDate": "Wed, 07 Oct 2015 22:31:00 GMT",
  "atom:updated": "2017-03-06T05:56:50.659Z",
  "content:encoded": "<p>During this year, I heard and read a lot about real-time machine learning. People usually provide this appealing business scenario when discussing credit card fraud detection systems. They say that they can continuously update credit card fraud detection model in real-time (See <a href=\"https://www.youtube.com/watch?v=SxAxAhn-BDU\">“What is Apache Spark?”,</a> <a href=\"https://www.mapr.com/blog/game-changing-real-time-use-cases-apache-spark-on-hadoop#.VhBoNJNVK1E\">“…real-time use cases…”</a> and <a href=\"http://www.slideshare.net/VinothKumarKannan/real-time-machine-learning\">“Real time machine learning”</a>). It looks fantastic but <strong>not realistic</strong> to me. One important detail is missing in this scenario — <strong>continuous flow of transactional data is not needed for model retraining. Instead, you need continuous flow of labeled (or pre-marked as Fraud\\Not-Fraud) transactional data.</strong></p><figure><img alt=\"Machine learning process\" src=\"https://cdn-images-1.medium.com/max/660/0*DBRQKzwnTwz6Hj-L.\" /><figcaption>Machine learning process</figcaption></figure><p>Creating labeled data is probably the slowest and the most expensive step in most of the machine learning systems. <strong>Machine learning algorithms learn to detect the fraud transactions from the people which is much like labeled data.</strong> Let’s see how it works for fraud detection scenario.</p><h3>1. Creating model</h3><p>For training credit card models, you need a lot of examples of transactions and each transaction should be labeled as Fraud or Not-Fraud. This labels has to be as accurate as possible! This is our labeled data set. This data set is an input for supervised machine learning algorithms. Based on the labeled data, the algorithm trains the fraud detection model. The model is usually presented as a binary classifier with True (Fraud) or False (Not-Fraud) classes.</p><p><strong>The labeled data set plays a central role in this process.</strong> It is very easy to change the parameters of our algorithm such as the feature normalization method or loss function. We can change the algorithm itself from logistic regression to SVM or random forest for example. However, you cannot change the labeled data set. This information is predefined and your model should predict the labels that you already have.</p><h3>2. How long does data labeling process takes?</h3><p>How can we label the freshest transactions? If customers report fraud transactions or stolen credit cards, we can immediately mark the transaction as “Fraud”. What should we do with the rest of the transactions? We can assume that non reported transactions are “Not Fraud”. How long should we wait to be sure that they are not fraud? The last time when my friend lost a credit card, she said, “I won’t report the missing credit card yet. Tomorrow I’ll go to the shop that I had last visited and I’ll ask them if they found my credit card.” Fortunately, the store found and returned her credit card. I’m not an expert in the credit card fraud field (I’m only a good card user), but from my experience, <strong>we should wait at least a couple of days before marking transactions as “Not Fraud”</strong>.</p><p>In contrast, <strong>if somebody reported a Fraud transaction, we can immediately label this transaction as “Fraud”</strong>. A guy who reports fraud probably realizes the fraud transaction only after several hours or couple days after the loss but this is the best we can do.</p><p>In that way, our “freshest” labeled data set will be limited by a few “Fraud” transactions with several hours or days delay and lot of “Not Fraud” transactions within 2–3 days delay.</p><h3>3. Let’s try to speed up the labeling process</h3><p>Our goal is to obtained the “freshest” labeled data possible. In fact, we have “fresh Fraud” labels only. For “Not Fraud” labels, we have to wait a few days. It might look like a good idea to build a model using only “Fresh Fraud” labeled data. However, we should understand that <strong>this labeled data set is biased</strong> which might lead to a lot of issues with the models.</p><p>Let’s imagine a new big shopping center opened yesterday and we got one single fraud report regarding one single transaction from this store. Our labeled data set will contain only one transaction from this shop with a “Fraud” label. All other transactions from the shop are not labeled yet. The algorithm might decide that this shop is a strong fraud predictor and <strong>all transactions from this shop will be erroneously mis-classified as “Fraud” immediately “in real-time”.</strong> Advantages of real time give us real-time problems.</p><h3>Conclusion</h3><p>As we can see, the credit card fraud detection business scenario does not look like the best scenario for real-time supervised machine learning. Also, I was unable to imagine a good scenario from another business domains. I’d love to see good scenarios of real-time machine learning. <strong>Please share if you have any information or ideas to share with the community.</strong></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=452ee81ac8de\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://fullstackml.com/what-no-one-tells-you-about-real-time-machine-learning-452ee81ac8de\">What No One Tells You About Real-Time Machine Learning</a> was originally published in <a href=\"https://fullstackml.com\">FullStackML</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"
}