{
  "title": "Spiking Variational Graph Auto-Encoders for Efficient Graph Representation Learning. (arXiv:2211.01952v1 [cs.NE])",
  "link": "http://arxiv.org/abs/2211.01952",
  "description": "<p>Graph representation learning is a fundamental research issue and benefits a\nwide range of applications on graph-structured data. Conventional artificial\nneural network-based methods such as graph neural networks (GNNs) and\nvariational graph auto-encoders (VGAEs) have achieved promising results in\nlearning on graphs, but they suffer from extremely high energy consumption\nduring training and inference stages. Inspired by the bio-fidelity and\nenergy-efficiency of spiking neural networks (SNNs), recent methods attempt to\nadapt GNNs to the SNN framework by substituting spiking neurons for the\nactivation functions. However, existing SNN-based GNN methods cannot be applied\nto the more general multi-node representation learning problem represented by\nlink prediction. Moreover, these methods did not fully exploit the bio-fidelity\nof SNNs, as they still require costly multiply-accumulate (MAC) operations,\nwhich severely harm the energy efficiency. To address the above issues and\nimprove energy efficiency, in this paper, we propose an SNN-based deep\ngenerative method, namely the Spiking Variational Graph Auto-Encoders (S-VGAE)\nfor efficient graph representation learning. To deal with the multi-node\nproblem, we propose a probabilistic decoder that generates binary latent\nvariables as spiking node representations and reconstructs graphs via the\nweighted inner product. To avoid the MAC operations for energy efficiency, we\nfurther decouple the propagation and transformation layers of conventional GNN\naggregators. We conduct link prediction experiments on multiple benchmark graph\ndatasets, and the results demonstrate that our model consumes significantly\nlower energy with the performances superior or comparable to other ANN- and\nSNN-based methods for graph representation learning.\n</p>",
  "dc:creator": "<a href=\"http://arxiv.org/find/cs/1/au:+Yang_H/0/1/0/all/0/1\">Hanxuan Yang</a>, <a href=\"http://arxiv.org/find/cs/1/au:+Zhang_R/0/1/0/all/0/1\">Ruike Zhang</a>, <a href=\"http://arxiv.org/find/cs/1/au:+Kong_Q/0/1/0/all/0/1\">Qingchao Kong</a>, <a href=\"http://arxiv.org/find/cs/1/au:+Mao_W/0/1/0/all/0/1\">Wenji Mao</a>"
}