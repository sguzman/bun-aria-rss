{
  "id": "tag:blogger.com,1999:blog-15045980.post-3797894023961037485",
  "published": "2017-12-11T13:55:00.006-08:00",
  "updated": "2017-12-11T14:43:33.902-08:00",
  "category": [
    "",
    "",
    ""
  ],
  "title": "Testing on the Toilet: Only Verify State-Changing Method Calls",
  "content": "<i><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\">This article was adapted from a&nbsp;<a href=\"http://googletesting.blogspot.com/2007/01/introducing-testing-on-toilet.html\">Google Testing on the Toilet</a>&nbsp;(TotT) episode. You can download a&nbsp;<a href=\"https://docs.google.com/document/d/1A0USfjPsmS4fSpgCfunBab8azRIPDTIKi-wRZD1K58k/edit?usp=sharing\" rel=\"nofollow\">printer-friendly version</a>&nbsp;of this TotT episode and post it in your office.</span></i><br /><i><br /></i><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\">By&nbsp;Dillon Bly and Andrew Trenk</span><br /><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><br /></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\">Which lines can be safely removed from this test?</span><br /><div style=\"overflow-x: auto;\"><table class=\"my-bordered-table\" style=\"width: 613px;\"><tbody><tr><td style=\"background-color: #f4cccc; vertical-align: top; width: 607px;\"><pre style=\"background-color: #f4cccc; border: 0px; color: black; margin: 0px; padding-bottom: 0px; padding-left: 0px; padding-top: 0px;\"><span style=\"font-family: &quot;consolas&quot; , &quot;courier new&quot; , &quot;courier&quot; , monospace;\">@Test public void addPermissionToDatabase() {<br />  new UserAuthorizer(<span style=\"font-weight: bold;\">mockUserService</span>, <span style=\"font-weight: bold;\">mockPermissionDb</span>).grantPermission(USER, READ_ACCESS);<br /></span></pre><pre style=\"background-color: #f4cccc; border: 0px; margin: 0px; padding-bottom: 0px; padding-left: 0px; padding-top: 0px;\"><span style=\"font-family: &quot;consolas&quot; , &quot;courier new&quot; , &quot;courier&quot; , monospace;\"><br /></span></pre><pre style=\"background-color: #f4cccc; border: 0px; margin: 0px; padding-bottom: 0px; padding-left: 0px; padding-top: 0px;\"><span style=\"color: black; font-family: &quot;consolas&quot; , &quot;courier new&quot; , &quot;courier&quot; , monospace;\">  <span style=\"color: blue;\">// The test will fail if any of these methods is not called.</span><br />  verify(<span style=\"font-weight: bold;\">mockUserService</span>).isUserActive(USER);<br />  verify(<span style=\"font-weight: bold;\">mockPermissionDb</span>).getPermissions(USER);<br />  verify(<span style=\"font-weight: bold;\">mockPermissionDb</span>).isValidPermission(READ_ACCESS);<br />  verify(<span style=\"font-weight: bold;\">mockPermissionDb</span>).addPermission(USER, READ_ACCESS);<br />}</span></pre></td></tr></tbody></table></div><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span id=\"docs-internal-guid-b50ac775-4768-13da-eaac-0ee595ad284f\" style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"vertical-align: baseline; white-space: pre-wrap;\">The answer is that </span><span style=\"color: purple; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">the calls to verify the non-state-changing methods can be removed</span><span style=\"vertical-align: baseline; white-space: pre-wrap;\">.</span></span><br /><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span id=\"docs-internal-guid-b50ac775-4768-4d70-7394-a597c452b64e\" style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"color: purple; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">Method calls on another object fall into one of two categories</span><span style=\"vertical-align: baseline; white-space: pre-wrap;\">:</span></span><br /><ul><li><span style=\"white-space: pre-wrap;\"><span id=\"docs-internal-guid-b50ac775-4768-8635-e00b-dd78588a4f61\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"font-style: italic; font-weight: 700; vertical-align: baseline;\">State-changing</span><span style=\"vertical-align: baseline;\">: methods that have side effects and change the world outside the code under test, </span></span><span style=\"vertical-align: baseline;\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\">e.g.,</span> </span></span><span style=\"color: #00931e; vertical-align: baseline;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">sendEmail()</span></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"vertical-align: baseline;\">,</span><span style=\"vertical-align: baseline;\"> </span></span><span style=\"color: #00931e; vertical-align: baseline;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">saveRecord()</span></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; vertical-align: baseline;\">, </span><span style=\"color: #00931e; vertical-align: baseline;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">logAccess()</span></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; vertical-align: baseline;\">.</span></span></span></li><li><span style=\"white-space: pre-wrap;\"><span style=\"vertical-align: baseline;\"><span id=\"docs-internal-guid-b50ac775-4768-c934-c2fa-bd06b2961ff3\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"font-style: italic; font-weight: 700; vertical-align: baseline;\">Non-state-changing</span><span style=\"font-style: italic; vertical-align: baseline;\">:</span><span style=\"vertical-align: baseline;\"> methods that return information about the world outside the code under test and don't modify anything, e.g., </span></span><span style=\"color: #00931e; vertical-align: baseline;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">getUser()</span></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; vertical-align: baseline;\">, </span><span style=\"color: #00931e; vertical-align: baseline;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">findResults()</span></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; vertical-align: baseline;\">, </span><span style=\"color: #00931e; vertical-align: baseline;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">readFile()</span></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; vertical-align: baseline;\">.</span></span></span></span></li></ul><div><span id=\"docs-internal-guid-b50ac775-4769-cfca-bf47-888737e7a7a6\" style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"vertical-align: baseline; white-space: pre-wrap;\">You should usually</span><span style=\"color: #980000; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"> </span><span style=\"color: purple; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">avoid verifying that non-state-changing methods are called</span><span style=\"vertical-align: baseline; white-space: pre-wrap;\">:</span></span></div><div><ul><li><span style=\"white-space: pre-wrap;\"><span id=\"docs-internal-guid-b50ac775-476a-0b38-ad94-1b29a85f5efa\" style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"font-style: italic; vertical-align: baseline;\">It is often redundant</span><span style=\"vertical-align: baseline;\">: </span><span style=\"color: purple; font-weight: 700; vertical-align: baseline;\">a method call that doesn't change the state of the world is meaningless on its own</span><span style=\"vertical-align: baseline;\">. The code under test will use the return value of the method call to do other work that you can assert.</span></span></span></li><li><span style=\"white-space: pre-wrap;\"><span style=\"vertical-align: baseline;\"><span id=\"docs-internal-guid-b50ac775-476a-3f9e-a716-d10db0b69539\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"font-style: italic; vertical-align: baseline;\">It makes tests brittle</span><span style=\"vertical-align: baseline;\">: tests need to be updated whenever method calls change. For example, if a test is expecting </span></span><span style=\"color: #00931e; vertical-align: baseline;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">mockUserService.isUserActive(USER)</span></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; vertical-align: baseline;\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"> to be called, it would fail if the code under test is modified to call</span> </span><span style=\"color: #00931e; vertical-align: baseline;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">user.isActive()</span></span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; vertical-align: baseline;\"> instead.</span></span></span></span></li><li><span style=\"white-space: pre-wrap;\"><span style=\"vertical-align: baseline;\"><span style=\"vertical-align: baseline;\"><span id=\"docs-internal-guid-b50ac775-476a-600b-2bc2-7097a5926df1\" style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"font-style: italic; vertical-align: baseline;\">It makes tests less readable</span><span style=\"vertical-align: baseline;\">: the additional assertions in the test make it more difficult to determine which method calls actually affect the state of the world.</span></span></span></span></span></li><li><span style=\"white-space: pre-wrap;\"><span style=\"vertical-align: baseline;\"><span style=\"vertical-align: baseline;\"><span style=\"vertical-align: baseline;\"><span id=\"docs-internal-guid-b50ac775-476a-88c9-7600-1e4248cd477e\" style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"font-style: italic; vertical-align: baseline;\">It gives a false sense of security</span><span style=\"vertical-align: baseline;\">: just because the code under test called a method does not mean the code under test did the right thing with the method’s return value.</span></span></span></span></span></span></li></ul></div><div dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 10pt;\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"background-color: transparent; color: black; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Instead of verifying that they are called,</span><span style=\"background-color: transparent; color: #980000; font-style: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> </span><span style=\"background-color: transparent; color: purple; font-style: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">use non-state-changing methods to simulate different conditions in tests</span><span style=\"background-color: transparent; color: black; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">, e.g., </span></span><span style=\"background-color: transparent; color: #00931e; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">when(mockUserService.isUserActive(USER)).thenReturn(false)</span></span><span style=\"background-color: transparent; color: black; font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">. Then write assertions for the return value of the code under test, or verify state-changing method calls.</span></div><div dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 10pt;\"><span style=\"background-color: transparent; color: black; font-family: &quot;times&quot; , &quot;times new roman&quot; , serif; font-style: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Verifying non-state-changing method calls may be useful if there is no other output you can assert. For example, if your code should be caching an RPC result, you can verify that the method that makes the RPC is called only once.</span></div><div dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 10pt;\"><span id=\"docs-internal-guid-b50ac775-476b-bcdb-84c9-11891429fe3d\" style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"color: purple; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">With the unnecessary verifications removed, the test looks like this</span><span style=\"vertical-align: baseline; white-space: pre-wrap;\">:</span></span></div><div style=\"overflow-x: auto;\"><table class=\"my-bordered-table\" style=\"width: 613px;\"><tbody><tr><td style=\"background-color: #fff2cc; vertical-align: top; width: 607px;\"><pre style=\"background-color: #fff2cc; border: 0px; color: black; margin: 0px; padding-bottom: 0px; padding-left: 0px; padding-top: 0px;\"><span style=\"font-family: &quot;consolas&quot; , &quot;courier new&quot; , &quot;courier&quot; , monospace;\">@Test public void addPermissionToDatabase() {<br />  new UserAuthorizer(<span style=\"font-weight: bold;\">mockUserService</span>, <span style=\"font-weight: bold;\">mockPermissionDb</span>).grantPermission(USER, READ_ACCESS);<br /></span></pre><pre style=\"background-color: #fff2cc; border: 0px; margin: 0px; padding-bottom: 0px; padding-left: 0px; padding-top: 0px;\"><span style=\"font-family: &quot;consolas&quot; , &quot;courier new&quot; , &quot;courier&quot; , monospace;\"><br /></span></pre><pre style=\"background-color: #fff2cc; border: 0px; margin: 0px; padding-bottom: 0px; padding-left: 0px; padding-top: 0px;\"><span style=\"color: black; font-family: &quot;consolas&quot; , &quot;courier new&quot; , &quot;courier&quot; , monospace;\">  <span style=\"color: blue;\">// Verify only the state-changing method.</span><br />  verify(<span style=\"font-weight: bold;\">mockPermissionDb</span>).addPermission(USER, READ_ACCESS);<br />}<br /></span></pre></td></tr></tbody></table></div><br /><span id=\"docs-internal-guid-b50ac775-476f-418d-5b05-5a504162abb7\"></span><br /><div dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 10pt;\"><span id=\"docs-internal-guid-b50ac775-476f-418d-5b05-5a504162abb7\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><span style=\"vertical-align: baseline; white-space: pre-wrap;\">That’s much simpler! But remember that instead of using a mock to verify that a method was called, </span><span style=\"font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"color: purple;\">it would be even better to use a real or</span></span><span style=\"color: #980000; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"> </span><a href=\"https://testing.googleblog.com/2013/06/testing-on-toilet-fake-your-way-to.html\" style=\"text-decoration-line: none;\"><span style=\"color: #1155cc; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\">fake object</span></a><span style=\"color: #980000; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"> </span><span style=\"vertical-align: baseline; white-space: pre-wrap;\">to actually execute the method and check that it works properly. For example, the above test could use a fake database to check that the permission exists in the database rather than just verifying that </span></span><span style=\"color: #00931e; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: &quot;courier new&quot; , &quot;courier&quot; , monospace;\">addPermission()</span></span><span style=\"vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"> was called.</span><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"> </span></span></span><br /><span style=\"vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: &quot;times&quot; , &quot;times new roman&quot; , serif;\"><br /></span></span><span style=\"vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: Times, Times New Roman, serif;\"><span style=\"font-style: italic; vertical-align: baseline;\">You can learn more about this topic in the book </span><a class=\"m_5763211666182523148m_-1367602418583969106cremed m_5763211666182523148cremed\" data-saferedirecturl=\"https://www.google.com/url?hl=en&amp;q=http://www.growing-object-oriented-software.com/&amp;source=gmail&amp;ust=1513118358215000&amp;usg=AFQjCNGL6EuV0T86ZLsLyUi4VcPIa8fIVQ\" href=\"http://www.growing-object-oriented-software.com/\" style=\"background-color: white; color: #1155cc; text-decoration-line: none; white-space: normal;\" target=\"_blank\"><span style=\"background-color: transparent; font-style: italic; text-decoration-line: underline; vertical-align: baseline; white-space: pre-wrap;\">Growing Object-Oriented Software, Guided by Tests</span></a><span style=\"font-style: italic; vertical-align: baseline;\">. Note that the book uses the terms “command” and “query” instead of “state-changing” and “non-state-changing”.</span></span></span></div><span id=\"docs-internal-guid-b50ac775-476f-418d-5b05-5a504162abb7\"></span>",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Google Testing Bloggers",
    "uri": "http://www.blogger.com/profile/03153388556673050910",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "thr:total": 3
}