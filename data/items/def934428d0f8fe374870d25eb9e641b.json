{
  "id": "yt:video:J-v7m_tdTfE",
  "yt:videoId": "J-v7m_tdTfE",
  "yt:channelId": "UCRfR7ivZHwXIC8kdydo5jdQ",
  "title": "Formalities & Informalities: Declare-It-Yourself [Intro to HoTT, No. 2, Part 1]",
  "link": "",
  "author": {
    "name": "Jacob Neumann",
    "uri": "https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ"
  },
  "published": "2022-05-20T17:03:24+00:00",
  "updated": "2022-09-08T03:21:50+00:00",
  "media:group": {
    "media:title": "Formalities & Informalities: Declare-It-Yourself [Intro to HoTT, No. 2, Part 1]",
    "media:content": "",
    "media:thumbnail": "",
    "media:description": "How do we do Homotopy Type Theory? In this video, I cover some of the fundamentals of working in Agda (the computer formalization system we'll be using in these videos) and the basic concepts of HoTT as a formal language: judgments, inference rules, formation and introduction.  \n\nFormalization links:\n- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda\n- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda\n\nHoTT textbooks:\n- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/\n- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory\n\nFurther reading:\n- Natural deduction: https://iep.utm.edu/natural-deduction/\n- Lecture about the linguistic origins of the term \"judgment\" in logic: https://www.youtube.com/watch?v=FGUzgcLXNuk\n\n\nImage/audio credits:\n- \"Wholesome\" by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)\n\n\n\nHomotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!",
    "media:community": {
      "media:starRating": "",
      "media:statistics": ""
    }
  }
}