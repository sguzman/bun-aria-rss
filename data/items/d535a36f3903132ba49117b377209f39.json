{
  "title": "Out-of-Things Debugging: A Live Debugging Approach for Internet of Things. (arXiv:2211.01679v1 [cs.PL])",
  "link": "http://arxiv.org/abs/2211.01679",
  "description": "<p>Context: Internet of Things (IoT) has become an important kind of distributed\nsystems thanks to the wide-spread of cheap embedded devices equipped with\ndifferent networking technologies. Although ubiquitous, developing IoT systems\nremains challenging.\n</p>\n<p>Inquiry: A recent field study with 194 IoT developers identifies debugging as\none of the main challenges faced when developing IoT systems. This comes from\nthe lack of debugging tools taking into account the unique properties of IoT\nsystems such as non-deterministic data, and hardware restricted devices. On the\none hand, offline debuggers allow developers to analyse post-failure recorded\nprogram information, but impose too much overhead on the devices while\ngenerating such information.\n</p>\n<p>Furthermore, the analysis process is also time-consuming and might miss\ncontextual information relevant to find the root cause of bugs. On the other\nhand, online debuggers do allow debugging a program upon a failure while\nproviding contextual information (e.g., stack trace). In particular, remote\nonline debuggers enable debugging of devices without physical access to them.\nHowever, they experience debugging interference due to network delays which\ncomplicates bug reproducibility, and have limited support for dynamic software\nupdates on remote devices.\n</p>\n<p>Approach: This paper proposes out-of-things debugging, an online debugging\napproach especially designed for IoT systems. The debugger is always-on as it\nensures constant availability to for instance debug post-deployment situations.\nUpon a failure or breakpoint, out-of-things debugging moves the state of a\ndeployed application to the developer's machine. Developers can then debug the\napplication locally by applying operations (e.g., step commands) to the\nretrieved state. Once debugging is finished, developers can commit bug fixes to\nthe device through live update capabilities. Finally, by means of a\nfine-grained flexible interface for accessing remote resources, developers have\nfull control over the debugging overhead imposed on the device, and the access\nto device hardware resources (e.g., sensors) needed during local debugging.\n</p>\n<p>Knowledge: Out-of-things debugging maintains good properties of remote\ndebugging as it does not require physical access to the device to debug it,\nwhile reducing debugging interference since there are no network delays on\noperations (e.g., stepping) issued on the debugger since those happen locally.\nFurthermore, device resources are only accessed when requested by the user\nwhich further mitigates overhead and opens avenues for mocking or simulation of\nnon-accessed resources.\n</p>\n<p>Grounding: We implemented an out-of-things debugger as an extension to a\nWebAssembly Virtual Machine and benchmarked its suitability for IoT. In\nparticular, we compared our solution to remote debugging alternatives based on\nmetrics such as network overhead, memory usage, scalability, and usability in\nproduction settings. From the benchmarks, we conclude that our debugger\nexhibits competitive performance in addition to confining overhead without\nsacrificing debugging convenience and flexibility.\n</p>\n<p>Importance: Out-of-things debugging enables debugging of IoT systems by means\nof classical online operations (e.g., stepwise execution) while addressing\nIoT-specific concerns (e.g., hardware limitations). We show that having the\ndebugger always-on does not have to come at cost of performance loss or\nincreased overhead but instead can enforce a smooth-going and flexible\ndebugging experience of IoT systems.\n</p>",
  "dc:creator": "<a href=\"http://arxiv.org/find/cs/1/au:+Castillo_C/0/1/0/all/0/1\">Carlos Rojas Castillo</a> (Vrije Universiteit Brussel, Belgium), <a href=\"http://arxiv.org/find/cs/1/au:+Marra_M/0/1/0/all/0/1\">Matteo Marra</a> (Vrije Universiteit Brussel, Belgium), <a href=\"http://arxiv.org/find/cs/1/au:+Bauwens_J/0/1/0/all/0/1\">Jim Bauwens</a> (Vrije Universiteit Brussel, Belgium), <a href=\"http://arxiv.org/find/cs/1/au:+Boix_E/0/1/0/all/0/1\">Elisa Gonzalez Boix</a> (Vrije Universiteit Brussel, Belgium)"
}