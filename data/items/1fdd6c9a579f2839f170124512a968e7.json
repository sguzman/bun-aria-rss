{
  "id": "tag:blogger.com,1999:blog-8698702854482141883.post-2665525302059970361",
  "published": "2022-09-12T09:00:00.010-07:00",
  "updated": "2022-09-12T11:19:00.384-07:00",
  "category": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "title": "Accelerate your models to production with Google Cloud and PyTorch",
  "content": "<a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi8hcB762EEduIQASR6xgpLX0p6RD_cOruzwjpwlBOFbE6X1hO5vb7RqkeR5mkxv_58Y90NhnQAnx9RA69uTH9MorabQr4o9Skc2N7LiwmCKafttEq6SeEiYElcVwglaiQqsKodPX1Y6paEd5fdZlVH7kc9Y-sKc9818Gi5tqavd0-PyLpLwN1nlXcD/s1600/image2.jpg\"><img border=\"0\" data-original-height=\"800\" data-original-width=\"1058\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi8hcB762EEduIQASR6xgpLX0p6RD_cOruzwjpwlBOFbE6X1hO5vb7RqkeR5mkxv_58Y90NhnQAnx9RA69uTH9MorabQr4o9Skc2N7LiwmCKafttEq6SeEiYElcVwglaiQqsKodPX1Y6paEd5fdZlVH7kc9Y-sKc9818Gi5tqavd0-PyLpLwN1nlXcD/s1600/image2.jpg\" /></a> <p>We believe in the power of choice for Machine Learning development, and continue to invest resources to make it easy for ML practitioners to train, deploy, and orchestrate models from a single unified data and AI cloud platform. We’re excited to announce our role as a founding member of the newly formed <a href=\"https://about.fb.com/news/2022/09/pytorch-foundation-to-accelerate-progress-in-ai-research/\" target=\"_blank\">PyTorch Foundation</a>, which will better position Google Cloud to make meaningful contributions to the PyTorch community. As a member of the board, we will deepen our open source investment to deliver on the Foundation’s mission to drive adoption of AI tooling by building an ecosystem of open source projects with PyTorch. We strongly believe in choice and will continue to invest in frameworks such as JAX and Tensorflow and support integrations with other OSS Projects including Spark, Airflow, XGBoost, and others. </p><p>In this blog, we provide an overview of existing resources to help you get started with PyTorch on Google Cloud. We also talk about how ML practitioners can leverage our end-to-end ML platform to train, tune, and deploy PyTorch models.   </p> <h2>PyTorch on Google Cloud </h2> <p>Open source in the cloud is important because it gives you flexibility and control over where you train and deploy your ML workloads. PyTorch is extensively used in the research space and in recent years it has gained immense <a href=\"https://medium.com/pytorch/tagged/case-study\">traction in the industry</a> due to its ease of use and deployment. In fact, according to a <a href=\"https://www.kaggle.com/kaggle-survey-2021\">survey of Kaggle users</a>, PyTorch is the fastest growing ML framework today.  </p><p>ML practitioners using PyTorch tell us that it can be challenging to advance their ML project past experimentation. This is why Google Cloud has built integrations with PyTorch that make it easier to train, deploy, and orchestrate models in production. Some examples are: </p><ul> <li>PyTorch integrates directly with <a href=\"https://cloud.google.com/vertex-ai\">Vertex AI</a>, a fully managed ML platform that provides the tools you need to take a model from PyTorch to production, like the Pytorch DL containers or the Vertex AI workbench PyTorch one-click JupyterLab environment.    </li><li>PyTorch/XLA, an open source library, uses the <a href=\"https://www.tensorflow.org/xla\">XLA deep learning compiler</a>&nbsp;to enable PyTorch to run on Cloud TPUs. Cloud TPUs are custom accelerators designed by Google, optimized for perf/TCO with large scale ML workload PyTorch/XLA also enables XLA driven optimizations on GPUs.    </li><li>TorchX provides an <a href=\"https://pytorch.org/torchx/latest/pipelines/kfp.html\">adapter</a> to run and orchestrate TorchX components as part of Kubeflow Pipelines that you can easily scale on <a href=\"https://cloud.google.com/vertex-ai/docs/pipelines/introduction\">Vertex AI Pipelines</a>.  </li><li>With our OSS contributions to Apache Beam, we have made PyTorch models easy to deploy in batch or stream, data processing pipelines. Running on Google Dataflow, these pipelines will scale to very large workloads in a fully managed and simple to maintain environment. </li></ul><p>To learn more and start using PyTorch on Google Cloud, check out the resources below: </p> <h2>PyTorch on Vertex AI Resources</h2> <ol> <li><a href=\"https://cloud.google.com/blog/topics/developers-practitioners/pytorch-google-cloud-how-train-and-tune-pytorch-models-vertex-ai\">How To train and tune PyTorch models on Vertex AI</a>: Learn how to use <a href=\"https://cloud.google.com/vertex-ai/docs/training/custom-training\">Vertex AI Training</a> to build and train a sentiment text classification model using PyTorch and <a href=\"https://cloud.google.com/vertex-ai/docs/training/using-hyperparameter-tuning\">Vertex AI Hyperparameter Tuning</a> to tune hyperparameters of PyTorch models.  </li><li><a href=\"https://cloud.google.com/blog/topics/developers-practitioners/pytorch-google-cloud-how-deploy-pytorch-models-vertex-ai\">How to deploy PyTorch models on Vertex AI</a>: Walk through the deployment of a Pytorch model using <a href=\"https://pytorch.org/serve/\">TorchServe</a> as a custom container, by deploying the model artifacts to a <a href=\"https://cloud.google.com/vertex-ai/docs/predictions/getting-predictions\">Vertex Prediction</a> service.  </li><li><a href=\"https://cloud.google.com/blog/topics/developers-practitioners/orchestrating-pytorch-ml-workflows-vertex-ai-pipelines\">Orchestrating PyTorch ML Workflows on Vertex AI Pipelines</a>:  See how to build and orchestrate ML pipelines for training and deploying PyTorch models on Google Cloud Vertex AI using <a href=\"https://cloud.google.com/vertex-ai/docs/pipelines/introduction\">Vertex AI Pipelines</a>.  </li><li><a href=\"https://cloud.google.com/blog/topics/developers-practitioners/scalable-ml-workflows-using-pytorch-kubeflow-pipelines-and-vertex-pipelines\">Scalable ML Workflows using PyTorch on Kubeflow Pipelines and Vertex Pipelines</a>:  Take a look at examples of <a href=\"https://pytorch.org/\">PyTorch</a>-based ML workflows on two pipelines frameworks: OSS <a href=\"https://www.kubeflow.org/docs/components/pipelines/\">Kubeflow Pipelines</a>, part of the Kubeflow project, and <a href=\"https://cloud.google.com/vertex-ai/docs/pipelines\">Vertex AI Pipelines</a>. We share <a href=\"https://github.com/kubeflow/pipelines/tree/master/components/PyTorch/pytorch-kfp-components\">new PyTorch built-in components</a> added to the Kubeflow Pipelines.  </li></ol><h2>PyTorch/XLA and Cloud TPU/GPU</h2>  <ol> <li><a href=\"https://cloud.google.com/blog/topics/developers-practitioners/scaling-deep-learning-workloads-pytorch-xla-and-cloud-tpu-vm\">Scaling deep learning workloads with PyTorch / XLA and Cloud TPU VM</a>: Describes the challenges associated with scaling deep learning jobs to distributed training settings, using the <a href=\"https://cloud.google.com/blog/products/compute/introducing-cloud-tpu-vms\">Cloud TPU VM</a> and shows how to stream training data from Google Cloud Storage (GCS) to <a href=\"https://pytorch.org/xla/release/1.9/index.html\">PyTorch / XLA</a> models running on Cloud TPU Pod slices.  </li><li><a href=\"https://cloud.google.com/blog/topics/developers-practitioners/pytorchxla-performance-debugging-tpu-vm-part-1\">PyTorch/XLA: Performance debugging on Cloud TPU VM: Part I</a>: In the first part of the performance debugging series on Cloud TPU, we lay out the conceptual framework for <a href=\"https://pytorch.org/xla/release/1.9/index.html\">PyTorch/XLA</a> in the context of training performance. We introduced a <a href=\"https://docs.google.com/document/d/1KqLVLtO2Tcen3skd-jVILrZ4J31hYDwzyf74jK4xXfE/edit#bookmark=id.bk2kyyukxc4a\">case study</a> to make sense of preliminary profiler logs and identify the corrective actions.  </li><li><a href=\"https://cloud.google.com/blog/topics/developers-practitioners/pytorchxla-performance-debugging-cloud-tpu-vm-part-ii\">PyTorch/XLA: Performance debugging on Cloud TPU VM: Part II</a>: In the second part, we deep dive into further analysis of the performance debugging to discover more performance improvement opportunities.  </li><li><a href=\"https://cloud.google.com/blog/topics/developers-practitioners/pytorchxla-performance-debugging-cloud-tpu-vm-part-iii\">PyTorch/XLA: Performance debugging on Cloud TPU VM: Part III</a>: In the final part of the performance debugging series, we introduce user defined code annotation and visualize these annotations in the form of a trace.  </li><li><a href=\"https://cloud.google.com/blog/products/ai-machine-learning/train-ml-models-with-pytorch-lightning-on-tpus\">Train ML models with Pytorch Lightning on TPUs</a>: Learn how easy it is to start training models with PyTorch Lightning on <a href=\"https://cloud.google.com/tpu\">TPUs</a> with its built-in TPU support. </li></ol><h2 style=\"text-align: left;\">PyTorch on Apache Beam and Google Cloud Dataflow</h2><a href=\"https://cloud.google.com/blog/products/data-analytics/influsing-ml-models-into-production-pipelines-with-dataflow\"></a><ol style=\"text-align: left;\"><a href=\"https://cloud.google.com/blog/products/data-analytics/influsing-ml-models-into-production-pipelines-with-dataflow\"></a><li><a href=\"https://cloud.google.com/blog/products/data-analytics/influsing-ml-models-into-production-pipelines-with-dataflow\"></a><a href=\"https://cloud.google.com/blog/products/data-analytics/influsing-ml-models-into-production-pipelines-with-dataflow\">Integrating ML models into production pipelines with Dataflow</a>: Learn how to use <a href=\"https://beam.apache.org/documentation/sdks/python-machine-learning/\">Apache Beam's RunInference</a> transform, with either single or multi model pipelines at scale.</li></ol><h2>Other resources</h2><ol> <li><a href=\"https://cloud.google.com/blog/products/ai-machine-learning/increase-your-productivity-using-pytorch-lightning\">Increase your productivity using PyTorch Lightning</a>: Learn how to use PyTorch Lightning on <a href=\"https://cloud.google.com/vertex-ai-workbench\">Vertex AI Workbench</a> (was previously Notebooks). </li></ol><p><em>By Erwin Huizing and Grace Reed – Cloud AI and ML</em></p><p></p>",
  "link": [
    "",
    "",
    ""
  ],
  "author": {
    "name": "Open Source Programs Office",
    "uri": "http://www.blogger.com/profile/11192158996903493674",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": ""
}