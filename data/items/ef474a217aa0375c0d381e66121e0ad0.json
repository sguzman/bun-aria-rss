{
  "title": "The problem with the data science language wars",
  "link": "",
  "published": "2015-11-02T04:00:00-08:00",
  "updated": "2015-11-02T04:00:00-08:00",
  "author": {
    "name": "Wes McKinney"
  },
  "id": "tag:wesmckinney.com,2015-11-02:/blog/the-problem-with-the-data-science-language-wars/",
  "summary": "<p>I really enjoyed the <a href=\"https://medium.com/@oceankidbilly/python-vs-r-vs-cobol-which-is-best-for-data-science-7b2979c6a000#.refa7joi9\">cheeky blog post</a> by my pal <a href=\"https://twitter.com/oceankidbilly\">Rob Story</a>.</p>\n<p>Like many other data tool creators, I've been annoyed by the assorted \"Python\nvs R\" click-bait articles and Hacker News posts by folks who in all likelihood\nmight not survive an interview panel with me on it.</p>\n<p>The worst part of the superficial \"R vs Python\" articles is that they're adding\nnoise where there ought to be more signal about some of the real problems\nfacing the data science community. Let me say some very brief words about my\npresent perspective on this.</p>",
  "content": "<p>I really enjoyed the <a href=\"https://medium.com/@oceankidbilly/python-vs-r-vs-cobol-which-is-best-for-data-science-7b2979c6a000#.refa7joi9\">cheeky blog post</a> by my pal <a href=\"https://twitter.com/oceankidbilly\">Rob Story</a>.</p>\n<p>Like many other data tool creators, I've been annoyed by the assorted \"Python\nvs R\" click-bait articles and Hacker News posts by folks who in all likelihood\nmight not survive an interview panel with me on it.</p>\n<p>The worst part of the superficial \"R vs Python\" articles is that they're adding\nnoise where there ought to be more signal about some of the real problems\nfacing the data science community. Let me say some very brief words about my\npresent perspective on this.</p>\n\n\n<h3>2015: It was the best of times, it was the worst of times</h3>\n<p>I am happy to say that we are no longer struggling (as much) to read CSV\nfiles. The funny part of this is that my friend, the myth, the legend <a href=\"http://twitter.com/hadleywickham\">Hadley\nWickham</a> is literally working on a <a href=\"https://github.com/hadley/readr\">new CSV reader library for R</a>. It\ngoes to show how important solving the small data problems well is. I've spent\nso much time working on CSV parsing software myself to know that time invested\nin this domain is time well spent.</p>\n<p>Since I've been at Cloudera for a little over a year now, I've gotten to learn\nmore about the role of languages like Python and R inside many of the largest\nand most sophisticated data-driven companies in the world.</p>\n<h3>A morsel of truth</h3>\n<p>The truth is, for <em>some</em> use cases Python and R are having a more difficult\ntime than most people realize.</p>\n<p>First, let me point out that most people (i.e. more than 50% of people) do not\nhave Big Data. If you can fit it on your laptop, it's decidedly Small Data or\nMedium Data, and analyzing it effectively <a href=\"https://twitter.com/wesmckinn/status/413159516096585729\">may require some cleverness</a> on\nyour part or new tools that have not yet been created.</p>\n<p>Many companies have properly big data requiring HDFS, HBase, S3, or some\ndistributed, fault-tolerant storage (<a href=\"http://getkudu.io\">hey Kudu!</a>). Sometimes big data is\nlots and lots of medium-sized datasets. While it's true that you <em>could</em>\nanalyze these on your laptop; you can get the answers faster and avoid\ntime-consuming data transfer by analyzing them <em>in situ</em> on large\nclusters. This is especially true if you are developing internal applications\nwith tight SLAs. Hence the Hadoop ecosystem, YARN, and the whole hashbang.</p>\n<p>Python and R have a mix of proprietary and open source big data system support,\nbut it's not the 5-star smorgasbord that you have with the JVM ecosystem. Some\npeople who aren't very knowledgeable have chalked this up to Python or R being\n\"slow\". This is pure silliness.</p>\n<p>For example, Spark, the new data processing engine that's replacing MapReduce\n(but <strong>not</strong> the Hadoop File System HDFS), has Python and R APIs (PySpark and\nSparkR, respectively), but they suffer from significant interoperability issues\n(which may manifest as performance and memory use problems).</p>\n<h3>Playing nice together</h3>\n<p>As I've <a href=\"http://www.slideshare.net/wesm/ibis-scaling-python-analytics-on-hadoop-and-impala\">discussed in recent talks</a>, any data processing engine that allows you\nto extend it with user-defined code written in a \"foreign language\" like Python\nor R has to solve at least these 3 essential problems:</p>\n<ul>\n<li>\n<p><strong>Data movement or access</strong>: making runtime data accessible in a form\n  consumable by Python, say. Unfortunately, this often requires expensive\n  serialization or deserialization and may dominate the system\n  runtime. Serialization costs can be avoided by carefully creating shared\n  byte-level memory layouts, but doing this requires a lot of experienced and\n  well-compensated people to agree to make major engineering investments for\n  the greater good.</p>\n</li>\n<li>\n<p><strong>Vectorized computation</strong>: enabling interpreted languages like Python or R\n  to amortize overhead and calling into fast compiled code that is\n  array-oriented (e.g. NumPy or pandas operations). Most libraries in these\n  languages also expect to work with array / vector values rather than scalar\n  values. So if you want to use your favorite Python or R packages, you need\n  this feature.</p>\n</li>\n<li>\n<p><strong>IPC overhead</strong>: the low-level mechanics of invoking an external\n  function. This might involve sending a brief message with a few curt\n  instructions over a UNIX socket.</p>\n</li>\n</ul>\n<p>Any system that doesn't do a good job of solving these problems will seriously\nstruggle in many large-scale workloads involving user-created code. It will\nalso be difficult to leverage the existing \"walled garden\" ecosystems that\nexist in data science languages like Python and R</p>\n<p>As an example, <a href=\"https://medium.com/wunderlist-engineering/amazon-redshift-s-udf-b3d4205ae732#.k2tz5d1rv\">response to AWS adding Python UDF support in Redshift</a> has\nbeen muted for precisely these reasons.</p>\n<h3>The future will get here, eventually</h3>\n<p>I am focused personally at present on creating software to address these\ninteroperability challenges (\"Mr. Gorbachev, tear down this wall!\") facing not\nonly Python but also R and any other programming languages that want to\nparticipate. <a href=\"http://blog.ibis-project.org/\">My new project, Ibis</a>, is beginning to address the Python side\nof the problem, but significant work remains to enable \"foreign\" languages in\ngeneral to interoperate with big data compute engines.</p>\n<p>Some people think of me as a Python zealot, but I'm really not. I think\nPython's a great choice for many use cases, so I continue to build software for\nits users as an effective way to deliver software used to solve real world\nproblems. I also think that it's good for users to have choices. No language is\nnecessarily \"good\" or \"bad\"; it's that kind of moral absolutism that needs to\nbe eradicated from our collective consciousness. For the toolmakers, it's our\njob to build the software and demonstrate its usefulness in the real world.</p>\n<p>I'm looking forward to sharing my progress on these ongoing efforts.</p>"
}