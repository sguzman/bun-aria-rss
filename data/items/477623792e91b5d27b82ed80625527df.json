{
  "title": "FREE Exercise: Predict Stocks with News, + Other ML News",
  "link": "https://lazyprogrammer.me/free-exercise-predict-stocks-with-news-other-ml-news/",
  "comments": "https://lazyprogrammer.me/free-exercise-predict-stocks-with-news-other-ml-news/#respond",
  "dc:creator": "admin",
  "pubDate": "Wed, 19 Jan 2022 09:40:02 +0000",
  "category": "Uncategorized",
  "guid": "https://lazyprogrammer.me/?p=2533",
  "description": "<p>TL;DR: this is an article about how to predict stocks using the news. In this article, we are going to do an exercise involving my 2 current favorite subjects: natural language processing and financial engineering! I&#8217;ll present this as an exercise / tutorial, so hopefully you can follow along on your own. One comment I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://lazyprogrammer.me/free-exercise-predict-stocks-with-news-other-ml-news/\">FREE Exercise: Predict Stocks with News, + Other ML News</a> appeared first on <a rel=\"nofollow\" href=\"https://lazyprogrammer.me\">Lazy Programmer</a>.</p>\n",
  "content:encoded": "<p>TL;DR: this is an article about how to predict stocks using the news.</p>\n<p>In this article, we are going to do an exercise involving my 2 current favorite subjects: natural language processing and financial engineering!</p>\n<p>I&#8217;ll present this as an exercise / tutorial, so hopefully you can follow along on your own.</p>\n<p>One comment I frequently make about predicting stocks is that autoregressive time series models aren&#8217;t really a great idea.</p>\n<p>Basic analysis (e.g. ACF, PACF) shows no serial correlation in returns (that is, there&#8217;s no correlation between past and future) and hence, the future is not predictable from the past.</p>\n<p>The best-fitting ARIMA model is more often than not, a simple random walk.</p>\n<p>What is a random walk? If you haven&#8217;t yet learned this from me, then basically think of it like flipping a coin at each time step. The result of the coin flip tells you which way to walk: up the street or down the street.</p>\n<p>Just as you can&#8217;t predict the result of a coin flip from past coin flips (by the way, this is essentially the <strong>gambler&#8217;s fallacy</strong>!), so too is it impossible to predict the next step of a random walk.</p>\n<p>In these situations, the best prediction is simply the last-known value.</p>\n<p>This is why, when one tries to fit an LSTM to a stock price time series, all it ends up doing is predicting close to the previous value.</p>\n<p>There is a nice quote which is unfortunately (as far as I know) unattributed, that says something like: &#8220;trying to predict the future from the past is like trying to drive by looking through the rearview mirror&#8221;.</p>\n<p><img loading=\"lazy\" class=\"aligncenter \" src=\"https://i.imgur.com/KSJsY68.jpg\" width=\"439\" height=\"293\" /></p>\n<p>Anyway, this brings us to the question: &#8220;If I don&#8217;t use past prices, then what do I use?&#8221;</p>\n<p>One common approach is to use the news.</p>\n<p>We&#8217;ve all seen that news and notable events can have an impact on stock / cryptocurrency prices. Examples:</p>\n<ul>\n<li>The Omicron variant of COVID-19</li>\n<li>High inflation</li>\n<li>Supply-chain issues</li>\n<li>Elon Musk tweeting about Dogecoin</li>\n<li>Mark Zuckerberg being grilled by the government</li>\n</ul>\n<p>Luckily, I&#8217;m not going to make you scrape the web to download news yourself.</p>\n<p>Instead, we&#8217;re going to use a pre-built dataset, which you can get at: <a href=\"https://www.kaggle.com/aaron7sun/stocknews\">https://www.kaggle.com/aaron7sun/stocknews</a></p>\n<p>Briefly, you&#8217;ll want to look at the &#8220;combined&#8221; CSV file which has the following columns:</p>\n<ul>\n<li>Date (e.g. 2008-08-11 &#8211; daily data)</li>\n<li>Label (0 or 1 &#8211; whether or not the DJIA went up or down)</li>\n<li>Top1, Top2, &#8230;, Top25 (news in the form of text, retrieved from the top 25 Reddit news posts)</li>\n</ul>\n<p>Note that this is a <strong>binary classification </strong>problem.</p>\n<p>Thanks to my famous rule, &#8220;<em>all data is the same</em>&#8220;, your code should be no different than a simple sentiment analysis / spam detection script.</p>\n<p>To start you off, I&#8217;ll present some basic starter code / tips.</p>\n<p>&nbsp;</p>\n<p>Tip 1) Some text contains weird formatting, e.g.</p>\n<p>b&#8221;Georgia &#8216;downs two Russian warplanes&#8217; as cou&#8230;</p>\n<p>Basically, it looks like how a binary string would be printed out, but the &#8220;b&#8221; is part of the actual string.</p>\n<p>Here&#8217;s a simple way to remove unwanted characters:</p>\n<p><script src=\"https://gist.github.com/lazyprogrammer/e6cc1d1b6bf833d9c8da404b95c7a4f5.js\"></script></p>\n<p>&nbsp;</p>\n<p>Tip 2) Don&#8217;t forget that this is time-ordered data, so you don&#8217;t want to do a train-test split with shuffling (mixing future and past in the train and test sets). The train set should only contain data that comes before the test set.</p>\n<p>&nbsp;</p>\n<p>Tip 3) A simple way to form feature vectors from the news would be to just concatenate all 25 news columns into a single text, and then apply TF-IDF. E.g.</p>\n<p><script src=\"https://gist.github.com/lazyprogrammer/86a45ad8d72354b107a439df06467231.js\"></script></p>\n<p>I&#8217;ll leave the concatenation part as an exercise for you.</p>\n<p>&nbsp;</p>\n<p>Here are some extra thoughts to consider:</p>\n<ul>\n<li>How were the labels created? Does that method make sense? Is it based on close-close or open-close?</li>\n<li>What were the exact times that the news was posted? Was there sufficient time between the latest news post and the result from which the label is computed?</li>\n<li>Returns tend to be very noisy. If you&#8217;re getting something like 85% test accuracy, you should be very suspicious that you&#8217;ve done something wrong. A more realistic result would be around 50-60%. Even 60% would be considered suspiciously high.</li>\n</ul>\n<p>&nbsp;</p>\n<p>So that&#8217;s basically the exercise. It is simple, yet hopefully thought-provoking.</p>\n<p>&nbsp;</p>\n<p>Now I didn&#8217;t know where else to put this ML news I found recently, but I enjoyed it so I want to share it with you all.</p>\n<p>First up: &#8220;<a href=\"https://mindmatters.ai/2022/01/will-chatbots-replace-the-art-of-human-conversation/\">Chatbots: Still Dumb After All These Years</a>&#8221;</p>\n<p><a href=\"https://mindmatters.ai/2022/01/will-chatbots-replace-the-art-of-human-conversation/\"><img loading=\"lazy\" class=\"aligncenter \" src=\"https://i.imgur.com/3W7FuCT.png\" width=\"670\" height=\"305\" /></a></p>\n<p>I enjoyed this article because I get a lot of requests to cover Chatbots.</p>\n<p>Unfortunately, Chatbot technology isn&#8217;t very good.</p>\n<p>Previously, we used seq2seq (and also seq2seq with attention) which basically just learns to copy canned responses to various inputs. seq2seq means &#8220;sequence to sequence&#8221; so the input is a sequence (a prompt) and the target/output is a sequence (the chatbot&#8217;s response).</p>\n<p>Even with Transformers, the best results are still lacking.</p>\n<p>&nbsp;</p>\n<p>Next: &#8220;<a href=\"https://www.assemblyai.com/blog/pytorch-vs-tensorflow-in-2022/\">PyTorch vs TensorFlow in 2022</a>&#8221;</p>\n<p><a href=\"https://www.assemblyai.com/blog/pytorch-vs-tensorflow-in-2022/\"><img loading=\"lazy\" class=\"aligncenter\" src=\"https://i.imgur.com/H5x3Nd6.png\" width=\"710\" height=\"280\" /></a></p>\n<p>Wait, people are still talking about this in 2022? You betcha!</p>\n<p>Read this article. It says a lot of the same stuff I&#8217;ve been saying myself. But it&#8217;s nice to hear it from someone else.</p>\n<p>It also provides actual metrics which I am too lazy to do.</p>\n<p>&nbsp;</p>\n<p>Finally: &#8220;<a href=\"https://techcrunch.com/2016/12/01/facebooks-advice-to-students-interested-in-artificial-intelligence/\">Facebook’s advice to students interested in artificial intelligence</a>&#8221;</p>\n<p><a href=\"https://techcrunch.com/2016/12/01/facebooks-advice-to-students-interested-in-artificial-intelligence/\"><img loading=\"lazy\" class=\"aligncenter\" src=\"https://i.imgur.com/rgeQTPQ.png\" width=\"678\" height=\"458\" /></a></p>\n<p>This isn&#8217;t really &#8220;new news&#8221; (in fact, Facebook isn&#8217;t even called Facebook anymore) but I recently came across this old article I saved many years earlier.</p>\n<p>Probably <em>the most common</em> beginner question I get is &#8220;why do I need to do all this math?&#8221; (in my ML courses).</p>\n<p>You&#8217;ve heard the arguments from me hundreds of times.</p>\n<p>Perhaps you are hesitant to listen to me. That would be like listening to your parents. Yuck.</p>\n<p>Instead, why not listen to Yann LeCun? Remember that guy? The guy who invented CNNs?</p>\n<p>He&#8217;s the Chief AI Scientist at Facebook (Meta) now, so if you want a job there, you should probably listen to his advice&#8230;</p>\n<p>And if you think Google, Netflix, Amazon, Microsoft, etc. are any different, well, that is wishful thinking my friends.</p>\n<p>What do you think?</p>\n<p>Is this convincing? Or is Yann LeCun just as wrong as I am?</p>\n<p>Let me know!</p>\n\n<div class=\"twitter-share\"><a href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Flazyprogrammer.me%2Ffree-exercise-predict-stocks-with-news-other-ml-news%2F&#038;via=lazy_scientist\" class=\"twitter-share-button\" data-size=\"large\">Tweet</a></div>\n<p>The post <a rel=\"nofollow\" href=\"https://lazyprogrammer.me/free-exercise-predict-stocks-with-news-other-ml-news/\">FREE Exercise: Predict Stocks with News, + Other ML News</a> appeared first on <a rel=\"nofollow\" href=\"https://lazyprogrammer.me\">Lazy Programmer</a>.</p>\n",
  "wfw:commentRss": "https://lazyprogrammer.me/free-exercise-predict-stocks-with-news-other-ml-news/feed/",
  "slash:comments": 0
}