{
  "title": "Small Scope and Fast Review",
  "link": "",
  "updated": "2022-03-26T00:00:00+00:00",
  "id": "https://mrocklin.github.io/blog/work/2022/03/26/fast-review",
  "content": "<p>This is a <a href=\"https://matthewrocklin.com/blog/work/2019/06/25/write-short-blogposts\">fast blogpost</a> please excuse the brevity.</p>\n\n<h2 id=\"summary\">Summary</h2>\n\n<ul>\n  <li>A fast review and merge cycle is incredibly valuable</li>\n  <li>When reviewing, consider highlighting which comments are obligatory because\nthey stop some regression, and which are merely commendable because they\nwould add some enhancement</li>\n  <li>Don’t forget that better is the enemy of good, especially when prioritizing\nagainst all of the other work that can get done.</li>\n</ul>\n\n<h2 id=\"example\">Example</h2>\n\n<p>As an OSS developer I use many projects, and when I see a simple problem in a project that I can fix quickly, I like to fix it.\nFor a trivial example, maybe I decide to add a type annotation to a function:</p>\n\n<div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">-def ensure_bytes(s):\n</span><span class=\"gi\">+def ensure_bytes(s) -&gt; bytes:\n</span>     \"\"\"Turn string or bytes to bytes\n\n     &gt;&gt;&gt; ensure_bytes('123')\n    b\"123\"\n</code></pre></div></div>\n\n<p>Awesome.  This takes me less than two minutes to make the fix and open a pull\nrequest.  I can fire this off and proceed with my normal work.</p>\n\n<h2 id=\"critical-review\">Critical review</h2>\n\n<p>On review, someone might helpfully mention that I actually made a mistake, and\nthat this function can also return <code class=\"language-plaintext highlighter-rouge\">None</code> in some cases.  They make the\nfollowing suggestion:</p>\n\n<div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">-def ensure_bytes(s):\n</span><span class=\"gi\">+def ensure_bytes(s) -&gt; bytes | None:\n</span>     \"\"\"Turn string or bytes to bytes\n\n     &gt;&gt;&gt; ensure_bytes('123')\n    b\"123\"\n</code></pre></div></div>\n\n<p>This is great!  They helped me to understand the problem better, and avoid\ndoing something harmful to the project.  The back-and-forth here takes a few\nminutes, and pushing a new commit takes a few minutes, but I’m still happy to\ndo this, and I learned something along the way.  I’m not thrilled about\nstopping my normal work to do this, but it makes total sense.  We need to\nmake sure that things are correct.</p>\n\n<h2 id=\"non-critical-review\">Non-critical review</h2>\n\n<p>Another reviewer then arrives and suggests that I also type the inputs, and\nchange the docstring to reflect the ambiguous typing.</p>\n\n<div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">-def ensure_bytes(s):\n</span><span class=\"gi\">+def ensure_bytes(s: str | bytes | None) -&gt; bytes | None:\n</span>     \"\"\"Turn string or bytes to bytes\n\n     Except if the input is none, in which case it passes through\n\n     &gt;&gt;&gt; ensure_bytes('123')\n    b\"123\"\n</code></pre></div></div>\n\n<p>This is a good idea!  Someone should do this!  However, I don’t think that it\nnecessarily has to be me.  Also, I’m off doing other work, and this is becoming\nmore of a distraction.</p>\n\n<p>Maybe I do this anyway (it’s not hard) but I’m probably less likely to come back here in the future.</p>\n\n<h2 id=\"distinguish-between-critical-bugs-and-nice-to-have-enhancements\">Distinguish between critical bugs and nice-to-have enhancements</h2>\n\n<p>It’s great to make suggestions on PRs for enhancements or how things might be\nimproved.  However, we should always remember to mark them as optional for PR\nauthors.</p>\n\n<p>We can always come back and add the enhancements ourselves after their\nimprovements are already in.</p>\n\n<h2 id=\"prioritize-ruthlessly\">Prioritize ruthlessly</h2>\n\n<p>However, when we switch out of review mode, and into authoring mode, we might\nrealize that the enhancements aren’t actually as important as what we were\nplanning to work on.  If they’re not something that we’re likely to prioritize\nourselves, then we definitely shouldn’t have been requiring someone else to do\nthis work for us.</p>\n\n<p>This is especially true in a professional context, where time is in short\nsupply.  Many of us come from a volunteer context, where working on code and\nreviewing is a free thing that we ourselves donate or that we do for fun.\nHowever, in a professional context this is often not true, and the\nback-and-forth on a PR has very concrete costs (easily rising into the\nthousands of dollars).  At work we prioritize with our teams to make sure that\nwe’re using our time wisely, but we often forget about this prioritization\nprocess when we enter review mode.</p>\n\n<h2 id=\"parable\">Parable</h2>\n\n<p>Imagine that you need to travel from home into the city.  It’s a long distance but\na beautiful day outside, and so you decide to walk.  You’re moving quickly so\nthat you can get there and back before sunset.</p>\n\n<p>You start walking swiftly towards your goal, but along the way you spot a piece\nof trash.  You’re a good citizen and so you pick up that trash so that you can\nput it in the bin the next time you see one.</p>\n\n<p>As you approach a trash bin to put the trash away someone stops you and points\nout that this bin was actually for recycling.  They helpfully point you to the\ntrash bin across the road.  You thank the good citizen for stopping you from\nmaking a mistake, and bring the trash to the appropriate place.</p>\n\n<p>A few folks around the trash bin notice that you’re cleaning up the streets,\nand point you to more trash that you can pick up.  That’s fine, you’re happy to\nhelp out, and so you pick up some more trash to clean up.  They get excited\nabout this and point you down a side road that needs even more cleaning.</p>\n\n<p>You’re not feeling great about this, you need to get to town and back, and\ndaylight is running out.  These kind folks are well meaning, but they’ve\nmistaken your intent as “clean up the streets” rather than “get to town”.\nYou calmly explain to them that you’re not actually here to clean up the\nstreets, explain that you’re headed to town to get medicine for your family,\nand that you really must be off.  Now that you’ve explained your context they\nfully understand your situation and indeed encourage you on your way, perhaps\neven pointing you to a bus line that you didn’t know existed.</p>\n\n<h2 id=\"summary-1\">Summary</h2>\n\n<p>As we as OSS developers shift to doing professional open source maintenance we\nneed to shift how we think a little.  Open source is amazing at having strong\nimpact, and at collaboration, but often lacks the focus or direction of\nprofessional software engineering shops.  We should think about how we bring\nthe focus of professional work into our open source development practices.</p>\n\n<p>A great and ubiquitous example of this is PR review, which is a common source\nof scope creep, and often in directions that are not primary foci of the team.</p>\n\n<p>Fast PRs also feel great, we should do more of those, if we can keep them safe.</p>\n\n<p><em>Total write time: 21 minutes</em></p>\n\n<p><em>Total edit and publish time: 2 minutes</em></p>"
}