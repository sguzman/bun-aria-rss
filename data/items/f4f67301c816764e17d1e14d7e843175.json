{
  "title": "Goals of Interpretability",
  "link": "https://shapeofdata.wordpress.com/2016/11/17/goals-of-interpretability/",
  "comments": "https://shapeofdata.wordpress.com/2016/11/17/goals-of-interpretability/#comments",
  "dc:creator": "Jesse Johnson",
  "pubDate": "Thu, 17 Nov 2016 14:25:10 +0000",
  "category": [
    "Interpretability",
    "Uncategorized"
  ],
  "guid": "http://shapeofdata.wordpress.com/?p=2001",
  "description": "In my last post, I looked at the gap that arises when we delegate parts of our thought processes to algorithmic models, rather than incorporating the rules they identify directly into our mental models, like we do with traditional statistics. I &#8230; <a href=\"https://shapeofdata.wordpress.com/2016/11/17/goals-of-interpretability/\">Continue reading <span class=\"meta-nav\">&#8594;</span></a>",
  "content:encoded": "<p>In my <a href=\"https://shapeofdata.wordpress.com/2016/10/26/interacting-with-ml-models/\">last post</a>, I looked at the gap that arises when we delegate parts of our thought processes to algorithmic models, rather than incorporating the rules they identify directly into our mental models, like we do with traditional statistics. I described how the the idea of <em>model interpretability</em> can make the delegation process smoother by helping to break down the barriers between algorithmic and mental models. An increasing number of research papers these days claim to describe models that are interpretable, or ways of adding a layer of interpretability to existing models, but most of them rely on an implicit, intuitive definition of interpretability, usually one that suits their particular results. It would be nice if there was a canonical notion of what interpretability means. In the next few posts, I plan to explore what such a definition might look like and how you might tell whether a given algorithm is interpretable. In this post, I&#8217;ll explore this question from the angle of goals: What should an interpretable model allow you to do that a non-interpretable model can&#8217;t.</p>\n<p><span id=\"more-2001\"></span>The research literature identifies many different reasons to want model interpretability, many of which are described in Zack Lipton&#8217;s <a href=\"https://arxiv.org/abs/1606.03490\">Mythos of Model Interpretability</a>. Zack organizes these into four categories &#8211; Trust, Causality, Transferability and Informativeness. (Read the paper for what these mean.) I&#8217;m going to suggest a slightly different set of categories based on the question &#8220;If I have an interpretable model, what should it allow me to do?&#8221; I&#8217;m not suggesting that an interpretable model should do all the things below, but it should do at least some of them. Though if you think this scheme leaves something out, please let me know in the comments!</p>\n<p>So, here it is: An interpretable model should allow you to&#8230;</p>\n<p><strong>Identify and Mitigate Bias.</strong> All models are biased &#8211; both algorithmic models and mental models. In fact, algorithmic models can magnify the bias of our mental models, as <a href=\"https://mathbabe.org/\">Cathy O&#8217;Neil</a> has written <a href=\"https://weaponsofmathdestructionbook.com/\">extensively</a> about. You can never completely eliminate bias, but you can often fix the more egregious forms, or at least choose not to use the models that are biased in unacceptable ways. This is roughly what Zack and others refer to as <em>trust</em>. It seems to be the most common motivation for interpretability described in the literature, probably because it&#8217;s of primary interest to the people who are developing the algorithm model, convincing others to use it, and then writing papers about it.</p>\n<p>In fact, the ability to understand the biases in a model can be more important than accuracy for model adoption. For example, the introduction of <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.704.9327&rep=rep1&type=pdf\">this paper</a> describes a case where a large healthcare project chose a rule-based model over a more accurate neural network for predicting mortality risk for patients with pneumonia. The decision was made after they discovered a rule in the rule-based system suggesting that having asthma lowered one&#8217;s risk of dying from pneumonia. It turned out this was true, only because pneumonia patients with pre-existing asthma were consistently given more aggressive treatments that led to better outcomes. However, the model would have suggested they required less treatment since they were at lower risk. The group running the project realized that the neural network probably had similar biases, but they had no way of telling what or how bad they were. So they decided to go with the model whose biases they could recognize, and thus mitigate.</p>\n<p>Recognizing the biases in our mental models is notoriously difficult, but recognizing bias in a black-box algorithmic model is even harder. With our mental models, we can use self-reflection and the ability to recognize new factors to reduce bias. Algorithmic models can train on larger data sets and treat all data points equally, but they can&#8217;t self-reflect. The right type of interpretability could allow us to apply &#8220;self-reflection&#8221; to algorithmic models and get the best of both worlds.</p>\n<p><strong>Account for context.</strong> This is essentially what I wrote about in my <a href=\"https://shapeofdata.wordpress.com/2016/10/26/interacting-with-ml-models/\">last post</a>, so I won&#8217;t go into additional detail here. As I described previously, an algorithmic model can never account for all the factors that will affect the decision that the user finally makes. An interpretable model that helps you understand how the factors that are included in the model led to a prediction should allow you to adjust how you use the prediction based on these additional factors.</p>\n<p><strong>Extract Knowledge.</strong> Algorithmic models often have a form that&#8217;s incompatible with mental models. Mental models are made up of relatively simple causal relationships, augmented by flexible, subconscious intuition. Algorithmic models are essentially <a href=\"https://shapeofdata.wordpress.com/2014/01/28/configuration-spaces-and-the-meaning-of-probability/\">probability distributions</a> that measure correlations between rigidly defined values. However, if you look at a series of predictions from a model, the pattern recognition parts of your brain won&#8217;t be able to help themselves from trying to extract rules to add to your mental models. The problem is that these patterns may not be real, particularly if the set of examples you look at is biased.</p>\n<p>An interpretable model should help you to determine if the patterns that appear to be present in the model are really there, or just artifacts of a biased set of examples. This is similar to identifying bias, as described above, except that here you&#8217;re learning from the model rather than evaluating it. With an interpretable model, you should be able to combine the strong pattern recognition and simplification skills of the human mind with the algorithmic model&#8217;s ability to learn from massive amounts of data. For example, there&#8217;s now a fair amount of research on causal inference in algorithmic models. A causal algorithmic model should be more compatible with mental models that rely heavily on causal reasoning, making it even easier to extract rules that can be incorporated into your mental models. Zack&#8217;s <em>Mythos</em> paper includes causality as a motive for interpretability, though this isn&#8217;t the only type of rule you might want to extract.</p>\n<p><strong>Generalize.</strong> Algorithmic models are trained on carefully collected datasets to solve narrowly defined problems. Mental models are trained on a fire hose of input and applied to vaguely defined problems that they usually weren&#8217;t trained for. If you find an algorithmic model that works well for the problem it was trained on, you may be tempted to apply it to other problems, given how well that seems to work for mental models. In some cases, it might work for algorithmic models too, but in many cases it won&#8217;t. An interpretable model should help you determine if and how it can be generalized.</p>\n<p>For example, lets say that the pneumonia risk model described above works out really well and you want to use it to predict risks for other types of lung infections. A good approach to interpretability might tell you that the model relies on properties of pneumonia that are different for other infections. So you&#8217;d better create a new model for them. In fact, you could argue that this is what happened in the case described above: They tried to use a model that was trained to predict mortality risk for the problem of predicting which patients required the most care. In this case, they didn&#8217;t even realize they were generalizing until they tried to interpret one of the models.</p>\n<p>So, there&#8217;s my proposal for the main motivations of interpretability: An interpretable model should allow you to identify and mitigate bias, account for context, extract knowledge and generalize. There&#8217;s a fair amount of overlap between these, but they capture the different types of motivations I&#8217;ve seen in the literature. In my next few posts, I&#8217;ll use these motivations as a lens through which we can look for ways to tell when models are interpretable.</p>\n",
  "wfw:commentRss": "https://shapeofdata.wordpress.com/2016/11/17/goals-of-interpretability/feed/",
  "slash:comments": 3,
  "media:content": {
    "media:title": "jessejohnson"
  }
}