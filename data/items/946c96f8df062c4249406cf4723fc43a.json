{
  "title": "Getting Started With OmniSci, Part 2: Electricity Dataset",
  "description": "<p><em>Edit 10/1/2018: When I wrote this blog post, the company and product were named MapD. I’ve changed the title to reflect the new company name, but left the MapD references below to hopefully avoid confusion</em></p>",
  "pubDate": "Fri, 23 Feb 2018 00:00:00 +0000",
  "link": "http://randyzwitch.com/mapd-pjm-electricity-data/",
  "guid": "http://randyzwitch.com/mapd-pjm-electricity-data/",
  "content": "<p><em>Edit 10/1/2018: When I wrote this blog post, the company and product were named MapD. I’ve changed the title to reflect the new company name, but left the MapD references below to hopefully avoid confusion</em></p>\n\n<p>In my <a href=\"http://randyzwitch.com/mapd-install-load-data/\">previous MapD post</a>, I loaded <a href=\"http://www.pjm.com/markets-and-operations/ops-analysis/historical-load-data.aspx\">electricity data</a> into MapD Community Edition, intentionally ignoring the <em>what</em> of the data to keep that post from being too overwhelming. Now let’s take a step back and explain the dataset, show how to format the data using Python that was loaded into MapD, then use the MapD Immerse UI to build a simple dashboard.</p>\n\n<h2 id=\"pjm-metered-load-data\">PJM Metered Load Data</h2>\n\n<p>I started off my career at <a href=\"http://pjm.com/\">PJM</a> doing long-term electricity demand forecasting, to help power engineers do transmission line studies for reliability and to support expansion of the electrical grid in the U.S. Because PJM is a quasi-government agency, they provide over <a href=\"http://www.pjm.com/markets-and-operations/ops-analysis/historical-load-data.aspx\">25 years of hourly electricity usage</a> for the Eastern and Central U.S., both in aggregate and by local power region (roughly, the local power company territories).</p>\n\n<p>However, just because the data is available doesn’t mean it’s <em>convenient</em>, and unfortunately, the data are stored as Excel spreadsheets. This is easily remedied using pandas (<code class=\"language-plaintext highlighter-rouge\">v0.22.0</code>, <code class=\"language-plaintext highlighter-rouge\">python3.6</code>):</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n</pre></td><td class=\"code\"><pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n\n<span class=\"c1\">#change to directory with files for convenience\n</span><span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">chdir</span><span class=\"p\">(</span><span class=\"s\">\"~/electricity_data\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#first sheet in workbook contains all info for years 1993-1999\n</span><span class=\"n\">df1993_1999</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">\"-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1993</span><span class=\"p\">,</span><span class=\"mi\">1999</span><span class=\"p\">)]</span>\n\n<span class=\"c1\">#melt, append df1993-df1999 together\n</span><span class=\"n\">df_melted</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">df1993_1999</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"n\">df1993_1999</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">columns</span><span class=\"p\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n    <span class=\"n\">x_melt</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">melt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">id_vars</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">'ACTUAL_DATE'</span><span class=\"p\">,</span> <span class=\"s\">'ZONE_NAME'</span><span class=\"p\">],</span> <span class=\"n\">var_name</span> <span class=\"o\">=</span> <span class=\"s\">\"HOUR_ENDING\"</span><span class=\"p\">,</span> <span class=\"n\">value_name</span> <span class=\"o\">=</span> <span class=\"s\">\"MW\"</span><span class=\"p\">)</span>\n    <span class=\"n\">df_melted</span> <span class=\"o\">=</span> <span class=\"n\">df_melted</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">x_melt</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#multiple sheets to concatenate\n#too much variation for a one-liner\n</span><span class=\"n\">d2000</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2000-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">17</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2001</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2001-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2002</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2002-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">18</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2003</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2003-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">19</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2004</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2004-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">24</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2005</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2005-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">27</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2006</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2006-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">29</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2007</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2007-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">29</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2008</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2008-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">29</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2009</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2009-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">29</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2010</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2010-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">29</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2011</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2011-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2012</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2012-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">33</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2013</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2013-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">34</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2014</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2014-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">34</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"A:Z\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2015</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2015-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"B:AA\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2016</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2016-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"B:AA\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2017</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2017-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">42</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"B:AA\"</span><span class=\"p\">)</span>\n<span class=\"n\">d2018</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"s\">\"2018-hourly-loads.xls\"</span><span class=\"p\">,</span> <span class=\"n\">sheet_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">)],</span> <span class=\"n\">usecols</span> <span class=\"o\">=</span> <span class=\"s\">\"B:AA\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#loop over dataframes, read in matrix-formatted data, melt to normalized form\n</span><span class=\"k\">for</span> <span class=\"nb\">ord</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">d2000</span><span class=\"p\">,</span> <span class=\"n\">d2001</span><span class=\"p\">,</span> <span class=\"n\">d2002</span><span class=\"p\">,</span> <span class=\"n\">d2003</span><span class=\"p\">,</span> <span class=\"n\">d2004</span><span class=\"p\">,</span> <span class=\"n\">d2005</span><span class=\"p\">,</span> <span class=\"n\">d2006</span><span class=\"p\">,</span> <span class=\"n\">d2007</span><span class=\"p\">,</span> <span class=\"n\">d2008</span><span class=\"p\">,</span> <span class=\"n\">d2009</span><span class=\"p\">,</span> <span class=\"n\">d2010</span><span class=\"p\">,</span>\n            <span class=\"n\">d2011</span><span class=\"p\">,</span> <span class=\"n\">d2012</span><span class=\"p\">,</span> <span class=\"n\">d2013</span><span class=\"p\">,</span> <span class=\"n\">d2014</span><span class=\"p\">,</span> <span class=\"n\">d2015</span><span class=\"p\">,</span> <span class=\"n\">d2016</span><span class=\"p\">,</span> <span class=\"n\">d2017</span><span class=\"p\">,</span> <span class=\"n\">d2018</span><span class=\"p\">]:</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"nb\">ord</span><span class=\"p\">:</span>\n        <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"nb\">ord</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n        <span class=\"n\">temp</span><span class=\"p\">.</span><span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"n\">df1993_1999</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">columns</span><span class=\"p\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span> <span class=\"c1\">#standardize column names\n</span>        <span class=\"n\">temp</span><span class=\"p\">[</span><span class=\"s\">\"ACTUAL_DATE\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"p\">[</span><span class=\"s\">\"ACTUAL_DATE\"</span><span class=\"p\">])</span> <span class=\"c1\">#force datetime, excel reader wonky\n</span>        <span class=\"n\">df_melted</span> <span class=\"o\">=</span> <span class=\"n\">df_melted</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">melt</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"p\">,</span> <span class=\"n\">id_vars</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">'ACTUAL_DATE'</span><span class=\"p\">,</span> <span class=\"s\">'ZONE_NAME'</span><span class=\"p\">],</span> <span class=\"n\">var_name</span> <span class=\"o\">=</span> <span class=\"s\">\"HOUR_ENDING\"</span><span class=\"p\">,</span> <span class=\"n\">value_name</span> <span class=\"o\">=</span> <span class=\"s\">\"MW\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\">#(4941384, 4)\n#130MB as CSV\n#remove any dates that are null, artifacts from excel reader\n</span><span class=\"n\">df_melted</span><span class=\"p\">[</span><span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"n\">notnull</span><span class=\"p\">(</span><span class=\"n\">df_melted</span><span class=\"p\">[</span><span class=\"s\">\"ACTUAL_DATE\"</span><span class=\"p\">])].</span><span class=\"n\">to_csv</span><span class=\"p\">(</span><span class=\"s\">\"hourly_loads.csv\"</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>    \n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p>The code is a bit verbose, if only because I didn’t want to spend time to figure out how to programmatically determine how many tabs each workbook has. But the concept is the same each time: read an Excel file, get the data into a dataframe, then convert the data to <em>long</em> form. So instead of having 26 columns (Date, Zone, Hr1-Hr24), we have 4 columns, which is quite frequently a more convenient way to access the data (especially when using SQL).</p>\n\n<p>The final statement writes out a CSV of approximately 4MM rows, the same dataset that was loaded <a href=\"http://randyzwitch.com/mapd-install-load-data/\">using mapdql</a> in the first post.</p>\n\n<h2 id=\"top-10-usage-days-by-season\">Top 10 Usage Days By Season</h2>\n\n<p>One of the metrics I used to monitor as part of my job was the top 5/top 10 peak electricity use days per Summer (high A/C usage) and Winter (electric space heating) seasons. Back in those days, I used to use SAS against an enterprise database and the results would come back <em>eventually</em>…</p>\n\n<p>Obviously, it’s not a fair comparison to compare today’s GPUs vs. late ’90s enterprise databases in terms of performance, but back then it did take a non-trivial amount of effort to run this query to keep the report updated. With MapD, I can do the same report in ~100ms:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-sql\" data-lang=\"sql\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n</pre></td><td class=\"code\"><pre><span class=\"c1\">--MapD doesn't currently support window functions, so need to precalculate maximum by day</span>\n<span class=\"k\">with</span> <span class=\"n\">qry</span> <span class=\"k\">as</span> <span class=\"p\">(</span><span class=\"k\">select</span>\n<span class=\"n\">actual_date</span><span class=\"p\">,</span>\n<span class=\"n\">zone_name</span><span class=\"p\">,</span>\n<span class=\"k\">max</span><span class=\"p\">(</span><span class=\"n\">MW</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">daily_max_usage</span>\n<span class=\"k\">from</span> <span class=\"n\">hourly_loads</span>\n<span class=\"k\">where</span> <span class=\"n\">zone_name</span> <span class=\"o\">=</span> <span class=\"s1\">'MIDATL'</span> <span class=\"k\">and</span> <span class=\"n\">actual_date</span> <span class=\"k\">between</span> <span class=\"s1\">'2017-06-01'</span> <span class=\"k\">and</span> <span class=\"s1\">'2017-09-30'</span>\n<span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"k\">select</span>\n<span class=\"n\">hl</span><span class=\"p\">.</span><span class=\"n\">actual_date</span><span class=\"p\">,</span>\n<span class=\"n\">hl</span><span class=\"p\">.</span><span class=\"n\">zone_name</span><span class=\"p\">,</span>\n<span class=\"n\">hl</span><span class=\"p\">.</span><span class=\"n\">hour_ending</span><span class=\"p\">,</span>\n<span class=\"n\">hl</span><span class=\"p\">.</span><span class=\"n\">MW</span>\n<span class=\"k\">from</span> <span class=\"n\">hourly_loads</span> <span class=\"k\">as</span> <span class=\"n\">hl</span>\n<span class=\"k\">inner</span> <span class=\"k\">join</span> <span class=\"n\">qry</span> <span class=\"k\">on</span> <span class=\"n\">qry</span><span class=\"p\">.</span><span class=\"n\">actual_date</span> <span class=\"o\">=</span> <span class=\"n\">hl</span><span class=\"p\">.</span><span class=\"n\">actual_date</span> <span class=\"k\">and</span> <span class=\"n\">qry</span><span class=\"p\">.</span><span class=\"n\">daily_max_usage</span> <span class=\"o\">=</span> <span class=\"n\">hl</span><span class=\"p\">.</span><span class=\"n\">mw</span>\n<span class=\"k\">order</span> <span class=\"k\">by</span> <span class=\"n\">daily_max_usage</span> <span class=\"k\">desc</span>\n<span class=\"k\">limit</span> <span class=\"mi\">10</span><span class=\"p\">;</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<p><img src=\"/assets/img/pjm-2017-summer-coincident-peaks.png\" alt=\"top 10 electric usage\" /></p>\n\n<p>The thing about returning an answer in 100ms or so is that its fast enough where calling these results from a webpage/dashboard would be very responsive; that’s where MapD Immerse comes in.</p>\n\n<h2 id=\"building-a-dashboard-using-mapd-immerse\">Building A Dashboard Using MapD Immerse</h2>\n\n<p>Rather than copy/pasting the query in and running it, it’s pretty easy to build an automated report using the Immerse dashboard builder. I’m limited to a single data source because I’m using MapD Community Edition, but in just a few minutes I was able to create the following dashboard:</p>\n\n<p><img src=\"/assets/img/mapd-immerse-dashboard.png\" alt=\"mapd immerse dashboard\" /></p>\n\n<p>I took the query from above and built a view to encapsulate the query, so I didn’t have to worry about the <code class=\"language-plaintext highlighter-rouge\">with</code> statement or joins, I could just use the view as if the results were pre-calculated. From there, adding in a results table and two bar charts was fairly quick (in the same drag-and-drop style of Tableau or other BI/reporting tools).</p>\n\n<p>While this dashboard is pretty rudimentary in its design, were this data source set up as real-time using Apache Kafka or similar, this chart would always be up-to-date for use on a TV screen or as a browser bookmark without any additional data or web engineering.</p>\n\n<p>Obviously, many dashboarding tools exist, but its important to note that no pre-aggregation or column indexing or other standard database performance tricks are being employed (outside of specialized hardware and fast GPU RAM caching). Even with 10 dashboard tiles updating serially 100ms at a time, you are still in the 1-2s page load time, on par with the fastest-loading dynamic webpages on the internet.</p>\n\n<h2 id=\"programmatic-analytics-using-pymapd\">Programmatic analytics using pymapd</h2>\n\n<p>While dashboarding can be very effective for keeping senior management up-to-date, the real value of data is unlocked with more in-depth analytics and segmentation. In my next blog post, I’ll cover how to access MapD using <a href=\"http://pymapd.readthedocs.io/en/latest/\">pymapd</a> in Python, doing more advanced visualizations and maybe even some machine learning…</p>"
}