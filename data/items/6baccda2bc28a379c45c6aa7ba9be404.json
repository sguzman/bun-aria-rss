{
  "id": "tag:blogger.com,1999:blog-8698702854482141883.post-8523046781231870543",
  "published": "2022-09-14T09:01:00.000-07:00",
  "updated": "2022-09-14T09:01:30.741-07:00",
  "category": [
    "",
    "",
    ""
  ],
  "title": "Co-simulating ML with Springbok using Renode",
  "content": "<p>The landscape of Machine Learning software libraries and models is evolving rapidly, and to satisfy the ever-increasing demand for memory and compute while managing latency, power and security considerations, hardware must be developed in an iterative process alongside the workloads it is meant to run.</p><p>With its open architecture, custom instructions support and flexible vector extensions, the RISC-V ISA offers an unprecedented capacity for such co-design. And by energizing the open hardware ecosystem, RISC-V has supercharged research and innovation into how to improve chipmaking itself to better leverage the methods and suit the needs of software. Initiatives such as<a href=\"https://developers.google.com/silicon\"> Google’s OpenMPW Shuttle</a> show how a more open and software-focused approach to building hardware, are key to enabling a new wave of more powerful and transparent ML-focused solutions. </p><h2>A RISC-V-based ML accelerator with a HW/SW co-design flow</h2>  <p>In the past months, Google Research has joined efforts with Antmicro to work on a silicon project that can serve as a template for efficient hardware-software co-design. For their secure ML solution, the Google Research team supported by Antmicro has been developing a completely open source, rapid pre-silicon ML development flow using<a href=\"https://renode.io/\"> Renode, Antmicro’s open source simulation framework</a>. </p><p>This builds on the result of cooperation from last year in which Antmicro implemented<a href=\"https://antmicro.com/blog/2021/12/riscv-vector-instructions-in-renode/\"> Renode support for RISC-V Vector extensions</a>, which are used in the Google team’s RISC-V based ML accelerator codenamed Springbok. To allow a more well-rounded developer experience, as part of the project Antmicro is also working on improving the support for the underlying SoC and a large number of user oriented features such as OS-aware debugging, performance optimizations, payload profiling and performance measurement capabilities. </p><p>Springbok is part of Google’s<a href=\"https://github.com/AmbiML/iree-rv32-springbok\"> AmbiML</a> project that aims to create an open source ML development ecosystem centered on privacy and security. By using the RISC-V Vector extensions, the Google Research team has a standard but flexible way to parallelize the matrix multiply and accumulate operations that are universal in ML payloads. And thanks to Renode, the team can make informed choices as to how exactly to leverage RISC-V’s flexibility by analyzing tradeoffs between speed, complexity and specialization in a practical, iterative fashion using data generated by Renode and the text-based configuration capabilities that let them play around with hardware composition and functionality in a matter of minutes, not days. </p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhgShQIVtubFAtzgagqvQhylkuKEpEDM3Bm0lAbJK6U-HWdIvzYEwKnFS-HoIKg7j6YooOdL836VHNWrpFNPI9nQIZh4Ze1d9XW3jq1jQt4j-TPKkkmZEcBYVUiDenb6ohVzr32j-0x1Y_k_yi218UF8Tz85sN1dYFEIA3SUc9wnLwW08RzBoI8hZsy/s1200/Co-simulating-ML-with-Springbok-using-Renode_blog-note_diagram.png\" style=\"margin-left: 0em; margin-right: 0em;\"><img alt=\"Diagram of A RISC-V-based ML accelerator with a HW/SW co-design flow\" border=\"0\" data-original-height=\"675\" data-original-width=\"1200\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhgShQIVtubFAtzgagqvQhylkuKEpEDM3Bm0lAbJK6U-HWdIvzYEwKnFS-HoIKg7j6YooOdL836VHNWrpFNPI9nQIZh4Ze1d9XW3jq1jQt4j-TPKkkmZEcBYVUiDenb6ohVzr32j-0x1Y_k_yi218UF8Tz85sN1dYFEIA3SUc9wnLwW08RzBoI8hZsy/s16000/Co-simulating-ML-with-Springbok-using-Renode_blog-note_diagram.png\" /></a></div><p>On the ML software side, the ecosystem revolves around<a href=\"https://github.com/google/iree\"> IREE</a>—Google’s research project developing an open source ML compiler and runtime for constrained devices, based on LLVM MLIR.</p><p>IREE allows you to load models from typical ML frameworks such as TensorFlow or TensorFlow Lite and then convert them to Intermediate Representation (MLIR), which later goes through optimizations on graph level and then through an LLVM compilation flow to get the best-fitted runtime for a specific target. When it comes to deploying models on target devices, IREE provides APIs for both the C and Python programming languages as well as a <a href=\"https://github.com/google/iree/tree/main/runtime/bindings/tflite\">TFLite C API</a> which provides the same convention as<a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/c\"> TFLite</a> for model loading, tensor management and inference invoking. </p><p>Using these runtimes, the model can be deployed and tested, debugged, benchmarked and executed on the target device or in a simulation environment like Renode. </p><h2>Demoing the flow at Spring 2022 RISC-V Week</h2>  <p>In the build up to the<a href=\"https://open-src-soc.org/2022-05/\"> Spring 2022 RISC-V Week in Paris</a>, the first such large open hardware meeting in years, an initial version of the AmbiML bare metal ML flow was released as open source. This includes both the ability to run interactively and an example CI using Antmicro’s<a href=\"https://github.com/antmicro/renode-test-action\"> GitHub Renode Action</a> showing how such a workflow can be tested automatically on each commit. As a Google Cloud partner, Antmicro is currently working with Google Cloud to make Renode available for massive scale CI testing and deployments for scenarios similar to this one. </p><p>In a <a href=\"https://open-src-soc.org/2022-05/program-riscv-meeting.html#GIELDA\">joint talk at the Paris event</a>, Antmicro and Google presented the software co-development flow, together with a demo of a heterogeneous multi-core solution, with one core running the AmbiML Springbok payload and another core running Zephyr. </p><p>In the presented scenario the Springbok core, acting as a ML compute offload unit to the main CPU, executed inference on the MobileNetv1 network and reported the work done to the application core via a RISC-V custom instruction. Adding and modifying custom instructions is trivial in Renode, either via a single line of Python, C#, or even co-simulated in RTL. </p><p>Renode helps ML developers and silicon designers not only to run and test their solutions, but also to learn more about what their software is actually doing. As part of the Paris demonstration, Antmicro and Google showed how you can count executed instructions and how often specific opcodes are used to measure how well your solution is performing. These features, accompanied by<a href=\"https://renode.readthedocs.io/en/latest/basic/metrics.html\"> execution metrics analysis</a>,<a href=\"https://renode.readthedocs.io/en/latest/basic/logger.html?highlight=function#creating-a-trace-of-the-execution\"> executed functions logging</a>, and recently developed execution trace generation, give you great insight into every detail of your emulated ML environment. </p><p>These capabilities join the wide arsenal of hardware/software co-development solutions in Renode, such as<a href=\"https://antmicro.com/blog/2021/09/co-simulation-for-zynq-with-renode-and-verilator/\"> RTL co-simulation</a> which Antmicro has been developing with Microchip and support for<a href=\"https://antmicro.com/blog/2021/09/cfu-support-in-renode/\"> verilated custom instructions</a> developed with another ML-focused Google team responsible for<a href=\"https://github.com/google/CFU-Playground/\"> RISC-V Custom Function Units</a> and also used in the EU-funded<a href=\"https://antmicro.com/blog/2021/01/vedliot-launch/\"> VEDLIoT</a> project. </p><h2>Future plans</h2> <p>This is just the beginning of a wider activity from the Google Research team Antmicro is working with to release software and hardware components as well as tools supporting a collaborative co-design ecosystem for secure ML development. If you think Renode, RISC-V and co-development could help in building your next ML-focused product,  go ahead and try the AmbiML flow yourself! </p><p>Visit the <a href=\"https://github.com/AmbiML/iree-rv32-springbok\">iree-rv32-springbok</a> repository on GitHub, clone it locally and follow the instructions from <a href=\"https://github.com/AmbiML/iree-rv32-springbok/blob/main/README.md\">README.md</a>. </p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEim33w1A979ZVFguuWbSfvrIXN8bwYLYfRk2S7agw5MZ4EQWyj04BUdSyBSHSx_izQkXU7NKDiORt95d1QKvFFtzzxx5oDphZrwgN_sCjHmZ58AClcV3hNbNNmcj6uCZoyBuFJt5vbz9rvMqKujLmlnUkeyGzTQuNHGm6kyh0Knqf9jXKzfu0gI2k7B/s1480/image2.png\" style=\"margin-left: 0em; margin-right: 0em;\"><img alt=\"Renode Repository\" border=\"0\" data-original-height=\"976\" data-original-width=\"1480\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEim33w1A979ZVFguuWbSfvrIXN8bwYLYfRk2S7agw5MZ4EQWyj04BUdSyBSHSx_izQkXU7NKDiORt95d1QKvFFtzzxx5oDphZrwgN_sCjHmZ58AClcV3hNbNNmcj6uCZoyBuFJt5vbz9rvMqKujLmlnUkeyGzTQuNHGm6kyh0Knqf9jXKzfu0gI2k7B/s16000/image2.png\" /></a></div> <p>You can also grab Renode from the <a href=\"https://github.com/renode/renode\">official repository</a> and start playing with the available demos, or head to the Renode documentation to read up on features helpful for ML acceleration development such as <a href=\"https://renode.readthedocs.io/en/latest/tutorials/verilator-cosimulation.html\">Verilator co-simulation</a>. </p><p><em>By Peter Zierhoffer – Antmicro</em></p>",
  "link": [
    "",
    "",
    ""
  ],
  "author": {
    "name": "Open Source Programs Office",
    "uri": "http://www.blogger.com/profile/11192158996903493674",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": ""
}