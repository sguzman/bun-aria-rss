{
  "id": "tag:blogger.com,1999:blog-15045980.post-4326917295936432580",
  "published": "2018-09-17T10:33:00.001-07:00",
  "updated": "2020-02-25T14:12:31.065-08:00",
  "category": [
    "",
    ""
  ],
  "title": "Efficacy Presubmit",
  "content": "<span style=\"font-family: inherit;\">By Peter Spragins</span><br /><span style=\"font-family: inherit;\">with input from John Roane, Collin Johnston, Rose Rodrigues and Dave Chen</span><br /><span style=\"font-family: inherit;\"><br /></span><span style=\"font-family: inherit;\"></span><br /><h2><span style=\"font-family: inherit;\"><span style=\"font-family: inherit; font-size: x-large;\">A Brief History of Efficacy</span></span></h2><br /><span style=\"font-family: inherit;\"></span><span style=\"font-family: inherit;\"><span style=\"font-family: inherit;\"><br /></span></span><span style=\"font-family: inherit;\"><span style=\"font-family: inherit;\">Originally named \"Test Efficacy\", a small team was formed in 2014 to quantify the value of individual tests to the development process. Some tests were particularly valuable because they provided a reliable breakage signal for critical code. Some tests were not useful because they were non-deterministic or they never failed. Confoundingly, tests would change in value over time as well. The team’s initial intention was to present this information to developers and help them optimize the development process.</span></span><br /><br /><span style=\"font-family: inherit;\"><span style=\"font-family: inherit;\"><br /></span></span><br /><span style=\"font-family: inherit;\"><span style=\"font-family: inherit;\">To achieve the goal of informing developers about their tests, the team had to collect a huge amount of developer infrastructure/workflow data from a variety of sources across Google. Collecting all of this data in one place turned out to be incredibly valuable.</span></span><br /><br /><span style=\"font-family: inherit;\"><span style=\"font-family: inherit;\"><br /></span></span><br /><span style=\"font-family: inherit;\"><span style=\"font-family: inherit;\">In addition to collecting and processing the data, the team developed a somewhat radical philosophy towards running tests at scale: the only important results come from tests which deterministically fail. Running an additional test that you know will pass is not a valuable signal to developers, and likely a waste of resources.</span></span><br /><span style=\"font-family: inherit;\"><span style=\"font-family: inherit;\"><br /></span></span><br /><div><h2><span style=\"font-family: inherit; font-size: x-large;\">Background on Google Presubmit</span></h2></div><div><span style=\"font-family: inherit;\"><br /></span><span style=\"font-family: inherit;\">The process of committing code at Google has several testing stages. Perhaps the three most important testing stages are:</span></div><div><ol><li><span style=\"font-family: inherit;\">Individual ad-hoc testing</span></li><li><span style=\"font-family: inherit;\">Presubmit</span></li><li><span style=\"font-family: inherit;\">Continuous build/continuous integration (hereafter referred to as continuous build).</span></li></ol><div><div><span style=\"font-family: inherit;\">Stages 1 and 2 can actually be interleaved in any order and repeated any number of times.</span></div><div><span style=\"font-family: inherit;\"><br /></span></div><div><span style=\"font-family: inherit;\">A presubmit executes all of the tests which are known to be affected by the edited code within one user's proposed code changes. The \"affected tests\" are calculated with the help of a \"project definition\", a configuration maintained by teams. A presubmit can run at any point during the change proposal process, but most importantly it must run before a user can permanently commit their changes.</span></div><div><span style=\"font-family: inherit;\"><br /></span></div><div><span style=\"font-family: inherit;\">Continuous build, (3), is the continuous running of all tests within a project at the newest committed version of the code. Continuous build will execute tests even when they have already passed at presubmit.</span></div><div><span style=\"font-family: inherit;\"><br /></span></div><div><span style=\"font-family: inherit;\">The same test may run several times at presubmit during the development process, one last time at presubmit before a commit and then finally once again at continuous build, after being merged into the main branch of Google's huge repository. For this reason, a \"missed failure\" at presubmit is not a critical failure. The test will still be run at continuous build, and then rolled back if it fails.</span><br /><span style=\"font-family: inherit;\"><br /></span></div></div></div><div><h2><span style=\"font-family: inherit; font-size: x-large;\">Efficacy Presubmit Service</span></h2></div><div><div><span style=\"font-family: inherit;\"><br /></span><span style=\"font-family: inherit;\">Efficacy Presubmit Service is the fusion of \"running the right tests at the right time\" with one of the largest collections of test/developer data in the world. The service has one simple job: save time and resources by not running, or even compiling, tests that we are very confident will pass at Presubmit. The ideal \"Efficacy Presubmit\" would predict which tests will pass ahead of time and only run tests which were going to fail. Then the user can get feedback from the failing tests, and fix their mistakes with the minimal possible cost of user and CPU time.</span></div><div><span style=\"font-family: inherit;\"><br /></span></div><div><span style=\"font-family: inherit;\">To make this idea possible we have made one significant abstraction of the actual presubmit testing process. In a given presubmit there may be zero tests run, or many. In a presubmit with one test, if that test fails then the presubmit fails. In a presubmit with a thousand tests, only one failing test will still fail the presubmit. Efficacy Presubmit makes the abstraction that each of these test executions is an equivalent unit. This greatly simplifies creating a training dataset.</span></div></div><div><br /><br /></div><div><h3><span style=\"color: #0b5394; font-family: inherit; font-size: large;\">Machine Learning / Probabilistic Safety</span></h3></div><div><span style=\"color: #0b5394; font-family: inherit; font-size: large;\"><br /></span><br /><h4><span style=\"color: black; font-family: inherit; font-size: medium;\">Quick background on ML</span></h4></div><div><div dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">ML techniques and processes are quite well known throughout the industry at this point. The Tensorflow tutorials are </span><a href=\"https://www.tensorflow.org/tutorials/keras/\" style=\"text-decoration-line: none;\"><span style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">a great introduction</span></a><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">. The type of ML we use is classification. A classifier is essentially a mapping from the domain of the dataset, to the range of the classes.</span><span style=\"color: #434343; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> </span><a href=\"https://en.wikipedia.org/wiki/MNIST_database\" style=\"text-decoration-line: none;\"><span style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Mnist</span></a><span style=\"color: #434343; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> </span><span style=\"vertical-align: baseline; white-space: pre-wrap;\">is a very famous example of classification. An mnist classifier maps from the domain of the input image to the range of digits {0, 1, …, 9}.</span></span></span></div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"></span></span><br /><div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"color: #434343; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></span></span></div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"></span></span><br /><div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"></span></span><br /></span></span><br /><div dir=\"ltr\" style=\"font-size: 12pt; line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; white-space: pre-wrap;\"><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"><span style=\"font-size: 12pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\">In some other classification problems, the inputs are more \"</span><a href=\"https://en.wikipedia.org/wiki/Table_(information)\" style=\"color: #434343;\"><span style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline;\">tabular</span></a><span style=\"font-size: 12pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\">\". A famous example of tabular classification is </span><a href=\"https://www.kaggle.com/uciml/iris\" style=\"color: #434343;\"><span style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline;\">Iris Species</span></a><span style=\"font-size: 12pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\">. This is very similar to what Efficacy does.</span></span></span></span></span><br /><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span style=\"font-size: 12pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><br /></span></span></span></div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"></span></span></span></span><br /><div><h4><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"color: black; font-size: medium;\">Efficacy's Application of ML</span></span></span></span></span></span></h4></div><div><div dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; white-space: pre-wrap;\"><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-d1dd62f4-7fff-9b0b-0e5a-8cc1a29d0a8c\"><span style=\"font-family: inherit; vertical-align: baseline;\">Given the abstraction on the presubmit testing process described above, predicting the outcomes of automated testing at a large company is a perfect machine learning problem in many ways. You have:</span></span></span></span></span></span></span></div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-d1dd62f4-7fff-9b0b-0e5a-8cc1a29d0a8c\"></span></span></span></span></span></span><br /><div><ol><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-d1dd62f4-7fff-9b0b-0e5a-8cc1a29d0a8c\"><span style=\"font-family: inherit;\"></span><li><span style=\"color: #434343;\"><span style=\"font-family: inherit; white-space: pre-wrap;\">The set of test executions and results is a very large labelled dataset</span></span></li><li><span style=\"font-family: inherit;\">Copious numerical feature columns with trustworthy values</span></li><ol style=\"list-style-type: lower-alpha;\"><li><span style=\"font-family: inherit;\">&nbsp;Recent failure history of each test</span></li><li><span style=\"font-family: inherit;\">&nbsp;Various \"distance\" metrics from edited source files to tests - i.e. is this a test for the edited code?</span></li><li><span style=\"font-family: inherit;\">Test size and runtime data</span></li></ol><li><span style=\"font-family: inherit;\">Several dimensions that can be aggregated</span></li></span></span></span></span></span></span></ol><div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-d1dd62f4-7fff-9b0b-0e5a-8cc1a29d0a8c\" style=\"font-family: inherit;\">There are some aspects of the problem which make ML difficult as well:</span></span></span></span></span></span></div><div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-d1dd62f4-7fff-9b0b-0e5a-8cc1a29d0a8c\"><br /></span></span></span></span></span></span></div></div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-d1dd62f4-7fff-9b0b-0e5a-8cc1a29d0a8c\"></span></span></span></span></span></span></div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span id=\"docs-internal-guid-6f9a3c4d-7fff-4fa0-52a9-ee4a5ac6286c\"></span></span></span></span></div><span id=\"docs-internal-guid-b7ec0cb1-7fff-cab0-2ce3-f3945d9bdc6c\"><span style=\"font-family: inherit;\"></span></span></div><div><ol><li><span style=\"font-family: inherit;\">The classes are highly imbalanced with respect to labels (the vast majority of tests are going to pass, not fail)</span></li><li><span id=\"docs-internal-guid-5189d992-7fff-1821-4e3e-94f9c16f1174\"><span style=\"font-family: inherit;\"><a href=\"https://testing.googleblog.com/2016/05/flaky-tests-at-google-and-how-we.html\" style=\"text-decoration-line: none;\"><span style=\"color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Flaky tests</span></a><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"> can mislead the model because their labels are \"untrue\"</span></span></span></li></ol><div><span style=\"color: #434343; font-family: inherit;\"></span><br /><div><span style=\"color: #434343; font-family: inherit;\"><span style=\"font-family: inherit; white-space: pre-wrap;\">We chose to reduce the problem to binary classification. The model chooses whether or not to run the test. In other words, failure is the positive class, and everything else is the negative class.</span></span></div><span style=\"color: #434343; font-family: inherit;\"></span><br /><div><span style=\"color: #434343; font-family: inherit;\"><span style=\"white-space: pre-wrap;\"><br /></span></span></div><span style=\"color: #434343; font-family: inherit;\"></span><br /><div><span style=\"color: #434343; font-family: inherit;\"><span style=\"white-space: pre-wrap;\">We pick a threshold that results in an extremely low number of false negatives - failing tests which are not run because the model thinks they would have passed. This does reduce the number of skipped tests, true negatives, in exchange for a very high margin of safety. In addition to this, tests will be run afterwards at continuous build anyway, making presubmit skipping very safe.</span></span></div><span style=\"color: #434343; font-family: inherit;\"></span><br /><div style=\"color: #434343; white-space: pre-wrap;\"><span style=\"color: #434343; font-family: inherit;\"><br /></span></div><span style=\"color: #434343; font-family: inherit;\"></span><br /><div><h3><span style=\"color: #434343; font-family: inherit;\"><span style=\"white-space: pre-wrap;\"><span style=\"color: #0b5394; font-size: large;\">Difficulties of Scale</span></span></span></h3></div><span style=\"color: #434343; font-family: inherit;\"></span></div></div><div><span style=\"font-family: inherit;\">In addition to the problems that were natural to the \"schema\" of the dataset, we faced some problems due to the scale of Google's testing.</span></div><div><span style=\"font-family: inherit;\"><br /></span></div><div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"></span></span><br /><div dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Many of these problems stem from the fact that Google works out of one large repository </span><span style=\"background-color: white; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">(</span><a href=\"https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext\" style=\"text-decoration-line: none;\"><span style=\"background-color: white; color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">paper</span></a><span style=\"background-color: white; color: #222222; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">, </span><a href=\"https://www.youtube.com/watch?v=W71BTkUbdqE\" style=\"text-decoration-line: none;\"><span style=\"background-color: white; color: #1155cc; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">talk</span></a><span style=\"background-color: white; font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">)</span><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">. Because of this some presubmits have a very large number of tests and some commits require a large number of presubmits before they are finished. This means that the service has to make predictions for a very large number of tests all at once. If a presubmit tried to run every test at Google, then the service would have to predict each test individually. That means N times the number of columns, etc. Loading the data to generate all of these feature values uses a lot of memory.</span></span></span></div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"></span></span><br /><div dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"font-family: inherit;\"><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></span><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"><span style=\"font-size: 12pt; vertical-align: baseline; white-space: pre-wrap;\">Another difficulty of doing this work at scale is that even with very rare false negatives, they will still happen somewhat frequently. This requires our team to be open to communication with any customer team. In some cases we may have to tell them they were the victim of a very low probability event. In other cases we may find a bug, or room for improvement.</span></span></span></div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"></span></span><br /><div><br /></div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"></span></span><br /><div><h3><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"color: #0b5394; font-size: large;\">Results</span></span></span></span></h3></div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"></span></span><br /><div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"><span style=\"color: #434343;\"><span style=\"white-space: pre-wrap;\">The two key numbers for the system's performance are sensitivity, the percentage of failing tests we actually execute, and specificity, the percentage of passing tests we actually skip. The two numbers go hand in hand. For a given model, requiring a higher sensitivity will result in a lower specificity, or vice versa.  We can easily tune the percentage of tests skipped, resulting in changes to the fidelity of the testing signal the developers receive.  When the system is wrong, it can have some negative impact to developers if the prediction is a false negative. Rarely, it will allow a developer to commit code that will break a test during continuous build. This results in a broken \"project\", which takes some time to detect, and then a roll-back of the code. This requires some developer time, and a flexible mentality towards testing. In order to achieve a positive balance from this, we must extract millions of skipped tests for every negative developer experience. The sensitivity of our system is very high, and our specificity is around 25%.</span></span></span></span></span></div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"></span></span><br /><div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"><span style=\"font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"color: #434343;\"><br /></span></span></span></span></div><span id=\"docs-internal-guid-9245b746-7fff-1d3e-9a88-b7ab4fa91c9d\"><span style=\"font-family: inherit;\"></span></span></div><div><br /></div>",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Google Testing Bloggers",
    "uri": "http://www.blogger.com/profile/03153388556673050910",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "thr:total": 13
}