{
  "title": "How good are your beliefs? Part 2: The Quiz",
  "link": "",
  "published": "2015-09-18T21:00:00+01:00",
  "updated": "2015-09-18T21:00:00+01:00",
  "author": {
    "name": "Sebastian Nowozin"
  },
  "id": "tag:www.nowozin.net,2015-09-18:/sebastian/blog/how-good-are-your-beliefs-part-2-the-quiz.html",
  "summary": "<p>This post continues the previous post, <a href=\"http://www.nowozin.net/sebastian/blog/how-good-are-your-beliefs-part-1-scoring-rules.html\">part 1</a> on\nscoring rules.  However, today we will be more hands on, testing your skill of\nmaking good and well-calibrated predictions.</p>\n<p>To this end, I will ask you several questions about numerical quantities â€¦</p>",
  "content": "<p>This post continues the previous post, <a href=\"http://www.nowozin.net/sebastian/blog/how-good-are-your-beliefs-part-1-scoring-rules.html\">part 1</a> on\nscoring rules.  However, today we will be more hands on, testing your skill of\nmaking good and well-calibrated predictions.</p>\n<p>To this end, I will ask you several questions about numerical quantities and I\nwould like to hear an answer stated as a belief interval.\nFirst, we consider scoring rules for intervals.</p>\n<h2>Interval Scoring Rules</h2>\n<p>Often the prediction or elicitation of a full probability distribution is\ncumbersome due to the many degrees of freedom a distribution has.</p>\n<p>Therefore, in practice we can instead ask our model or users for intervals.\nThis carries the implicit assumption of unimodal beliefs, which may not be\nsatisfied in important tasks, but has the advantage of requiring only two\nnumbers to be elicited.</p>\n<p>Given an interval forecast <span class=\"math\">\\([L,U]\\)</span>, where <span class=\"math\">\\(U &gt; L &gt; 0\\)</span>, and <span class=\"math\">\\(x &gt; 0\\)</span> is a\nrealization, <a href=\"https://www.csss.washington.edu/~raftery/Research/PDF/Gneiting2007jasa.pdf\">(Gneiting and Raftery,\n2007)</a>\ndefine the following interval scoring rule for <span class=\"math\">\\(\\alpha \\in (0,\\frac{1}{2})\\)</span>,</p>\n<div class=\"math\">$$S_{\\textrm{int}}(L,U,x,\\alpha) = (U-L) + 1_{\\{x &lt; L\\}} \\, \\alpha (L-X)\n+ 1_{\\{x &gt; U\\}} \\, \\alpha (X-U).$$</div>\n<p>This is a proper scoring rule for intervals constructed from the sum of two\nquantile losses at the <span class=\"math\">\\(\\alpha\\)</span>-quantile and the <span class=\"math\">\\((1-\\alpha)\\)</span>-quantile.\nHowever, it has the problem that if the score is used in different contexts\nwhere the quantities <span class=\"math\">\\(x\\)</span> are of very different scales, then the resulting\nscores also carry this scale and are not comparable.</p>\n<p>To achieve a scale-free interval scoring rule, we propose the following\n<em>scale-free interval scoring rule</em>.</p>\n<div class=\"math\">$$S_{\\textrm{sf}}(L,U,x,\\alpha) = \\alpha \\log(U/L)\n+ 1_{\\{x &lt; L\\}} \\log(L/x) + 1_{\\{x &gt; U\\}} \\log(x/U).$$</div>\n<p>The rule is negatively oriented, thus acting as a loss function.\nThis scoring rule is <em>proper</em> and is minimized in expectation over <span class=\"math\">\\(X\\)</span>\nif we set <span class=\"math\">\\(L = F^{-1}(\\alpha)\\)</span> and <span class=\"math\">\\(U = F^{-1}(1-\\alpha)\\)</span> where <span class=\"math\">\\(F\\)</span> is the\ncummulative distribution function of <span class=\"math\">\\(X\\)</span> so that <span class=\"math\">\\(L\\)</span> and <span class=\"math\">\\(U\\)</span> become the\n<span class=\"math\">\\(\\alpha\\)</span>-quantile and the <span class=\"math\">\\((1-\\alpha)\\)</span>-quantile.  (You can find a short proof\nthat this is a proper scoring rule in an appendix to this article.)</p>\n<h2>Quiz</h2>\n<p>The following quiz tests your ability to make well-calibrated but uncertain\nassessments.\n(This also means that the quiz becomes somewhat pointless if you resort to\nGoogle or Wikipedia searches.)\nThe quiz contains twelve items, and each item asks for a number, assuming there\nis a single true answer.  Please pay attention to the units being asked for.\nYour knowledge regarding the different items is likely quite variable and for\nsome questions you may have a good idea (your beliefs are concentrated),\nwhereas for some other questions you may be more uncertain.</p>\n<p>Because of this uncertainty the quiz does not ask you for your best guess but\ninstead asks for an interval in an attempt to elicit your subjective beliefs.\nThe lower number should be chosen such that you\nconsider it 10 percent likely that the truth is below this number.  The upper\nnumber is a 90 percent quantile and should be chosen such that there is a 10\npercent chance that the truth is above this number.</p>\n<p>For example, say the question is \"Maximum horsepower of an 2015 Audi R8 car\n(horsepower)\".  Given my limited knowledge of cars I know that the Audi R8 is\nlikely a quite powerful car so I would provide maybe an interval of 200 to\n510.  How I arrive at this is up to me, for example, I may consider that a car\nmanufacturer may want to break the magic \"500 horsepower\" mark for marketing\npurposes.  Fixing this interval, the truth is revealed.  The truth is 570\nhorsepower, and the above scale-free interval loss would be 0.205.</p>\n<p>For the interval score a <em>lower score is better</em>, that is, the score is\nnegatively-oriented and behaves like a loss function.\nHere is an illustration of different intervals and their scores for the\nexample.  I plot the true value 570 as a solid green vertical line, and the\nintervals are green if they cover the truth and red otherwise.  The score is\nshown next to each interval.</p>\n<p><a href=\"http://www.nowozin.net/sebastian/blog/images/interval-rule.svg\"><img alt=\"Example interval predictions\" src=\"http://www.nowozin.net/sebastian/blog/images/interval-rule.png\"></a></p>\n<p>Have fun, and feel free to comment or suggest new questions/answer in the\ncomment field.</p>\n<style>\n#calibform label { width:auto; }\n#calibform label.error,#calibform input.submit { margin-left:253px; }\ntable.calibration {\n    table-layout: auto;\n    border-collapse: collapse;\n    width: 660px;\n}\n#calibrationform form { border: none; }\nform.calibration tr, td { padding:7px; border:0px; }\ntr.row0 { background-color:#cccccc; border:0px; }\ntr.row1 { background-color:#909090; border:0px; }\ntr.correctRow { background-color:#90ff90; border:0px; }\ntr.incorrectRow { background-color:#ff9090; border:0px; }\n.row-question { width: 400px; }\n.row-q10 { width: 80px; }\n.row-q90 { width: 80px; }\n.row-score { width: 40px; }\n</style>\n<iframe name=\"hidden_iframe\" id=\"hidden_iframe\" style=\"display:none;\"></iframe>\n<div id=\"calibformdiv\"></div>\n<div id=\"calibresultdiv\"></div>\n<script src=\"http://code.jquery.com/jquery-1.11.1.min.js\"></script>\n<script src=\"http://jqueryvalidation.org/files/dist/jquery.validate.min.js\"></script>\n<!--<script src=\"http://jqueryvalidation.org/files/dist/additional-methods.min.js\"></script>-->\n<script>\n$.validator.addMethod(\"positive\", function(value, element) {\n    return this.optional(element) || parseFloat(value) > 0.0;\n}, \"Please enter a positive scalar\");\n$.validator.addMethod(\"largerThan\", function(value, element, param) {\n    var target = $( param );\n    if (this.settings.onfocusout) {\n        target.off( \".validate-equalTo\" ).on( \"blur.validate-equalTo\",\n            function() { $( element ).valid(); });\n    }\n    return parseFloat(value) > parseFloat(target.val());\n}, \"90% quantile must be strictly larger than 10% quantile\");\n\n/* List of question/answer pairs */\nvar calibquestions = [\n{\n    \"Q\": \"Height of the Mount Everest above sea level (meters)\",\n    \"A\": 8850.0\n},\n{\n    \"Q\": \"Year the first album of The Beatles has been released (four digit year)\",\n    \"A\": 1963.0\n},\n{\n    \"Q\": \"World record distance achieved in the longest human throw of an object without any velocity-aiding features (meters)\",\n    \"A\": 406.3\n},\n{\n    \"Q\": \"Most recent (2013) scientific estimate for the number of cells in an average adult human body (in trillions, 10 to the power of 12)\",\n    \"A\": 37.2\n},\n{\n    \"Q\": \"Gold price on the 7th September 1977 (US dollar per kg)\",\n    \"A\": 4747.06\n},\n{\n    \"Q\": \"Birth year of Sir Isaac Newton (four digit year)\",\n    \"A\": 1643.0\n},\n{\n    \"Q\": \"Scientific estimate for the average number of eggs a industrial hen lays during its life time (number of eggs)\",\n    \"A\": 530.0\n},\n{\n    \"Q\": \"Current scientific estimate (2013) of the age of the universe (billion years)\",\n    \"A\": 13.82\n},\n{\n    \"Q\": \"Mass of a Bee hummingbird, the lightest known bird (grams)\",\n    \"A\": 2.0\n},\n{\n    \"Q\": \"Guinness world record for the longest kiss as of 2015, rounded to the nearest hour (hours)\",\n    \"A\": 59.0\n},\n{\n    \"Q\": \"World population in 2050 as projected by the UN (as of 2015, in billions)\",\n    \"A\": 9.7\n},\n{\n    \"Q\": \"Number of officially confirmed moons in our solar system (as of 2015, count)\",\n    \"A\": 146\n}\n];\n\n// Scale-free interval scoring function (proper)\n// This function is a special case of the general family proposed in\n// (Gneiting and Raftery, 2007).\nfunction score_sfi(alpha, L, U, x) {\n    var res = - alpha * Math.log(U/L);\n    if (x < L) {\n        res += Math.log(x/L);\n    } else if (x > U) {\n        res += Math.log(U/x);\n    }\n    return -res;\n}\n\n$.validator.setDefaults({\n    submitHandler: function() {\n        // Disable submit button\n        $(\"input#submitbutton\").prop('disabled', true);\n        $(\"th#Qmsg\").append(\"Score\");\n\n        // 1. Compute scoring function\n        var avg_score = 0.0;\n        for (i = 0; i < calibquestions.length; ++i) {\n            var L = parseFloat($('input#Qlow'+i).val());\n            var U = parseFloat($('input#Qhigh'+i).val());\n            var x = calibquestions[i].A;\n            var score = score_sfi(0.1, L, U, x);\n            avg_score += score;\n\n            $(\"tr#RowQ\"+i).removeClass(i % 2 == 0 ? \"row0\" : \"row1\");\n            if (x >= L && x <= U) {\n                $(\"tr#RowQ\"+i).addClass(\"correctRow\");\n            } else {\n                $(\"tr#RowQ\"+i).addClass(\"incorrectRow\");\n            }\n\n            $('td#Qmsg'+i).append(\" \" + score.toFixed(4));\n        }\n        avg_score /= calibquestions.length;\n        $(\"#calibresultdiv\").append($(\"<p/>\",\n            { text: \"Average score: \" + avg_score.toFixed(4) }));\n\n        return true;\n    }\n});\n\nfunction randperm(n) {\n    var rsort = new Array(n);\n    for (var i = 0; i < rsort.length; ++i) {\n        rsort[i] = i;\n    }\n    for (var i = 0; i < rsort.length; ++i) {\n        var si = i + Math.floor(Math.random() * (rsort.length - i));\n        var tmp = rsort[i];\n        rsort[i] = rsort[si];\n        rsort[si] = tmp;\n    }\n    return rsort;\n}\n\n$().ready(function() {\nvar form = $(\"<form/>\", {\n    name: \"calibrationform\",\n    action: \"https://script.google.com/macros/s/AKfycbzK161Q-fZCqRZzOtpO03-qJCWhYaBheNtR2Vt7iWd_Xt6R_rg/exec\",\n    method: \"get\",\n    target: \"hidden_iframe\"\n});\nvar fieldset = $(\"<fieldset/>\");\nrulelist = {};\n\nvar tab = $(\"<table/>\", { class: \"calibration\" });\nvar thead = $(\"<thead/>\");\nvar th_row = thead.append($(\"<tr/>\"));\nth_row.append($(\"<th/>\", { class: \"row-question\" }).append(\"Question\"));\nth_row.append($(\"<th/>\", { class: \"row-q10\" }).append(\"10% quantile\"));\nth_row.append($(\"<th/>\", { class: \"row-q90\" }).append(\"90% quantile\"));\nth_row.append($(\"<th/>\", { id: \"Qmsg\" }));\ntab.append(thead);\n\nvar tbody = tab.append($(\"<tbody/>\"));\nP = randperm(calibquestions.length);\nfor (var i1 = 0; i1 < calibquestions.length; ++i1) {\n    var i = P[i1];\n    var trow = $(\"<tr/>\", {\n        class: i1 % 2 == 0 ? \"row0\" : \"row1\",\n        id: \"RowQ\"+i });\n\n    trow.append($(\"<td/>\").append($(\"<label/>\",\n        { class: \"row-question\", for: \"Qlow\"+i, text: calibquestions[i].Q })));\n    trow.append($(\"<td/>\").append($(\"<input/>\",\n        { class: \"row-q10\", type: \"text\", name: \"Qlow\"+i, id: \"Qlow\"+i })));\n    trow.append($(\"<td/>\").append($(\"<input/>\",\n        { class: \"row-q90\", type: \"text\", name: \"Qhigh\"+i, id: \"Qhigh\"+i })));\n    trow.append($(\"<td/>\", { class: \"row-score\", id: \"Qmsg\"+i }));\n\n    tbody.append(trow);\n\n    rulelist[\"Qlow\"+i] = { required: true, number: true, positive: true };\n    rulelist[\"Qhigh\"+i] = { required: true, number: true, positive: true,\n        largerThan: \"#Qlow\"+i };\n}\nfieldset.append(tab);\nfieldset.append($(\"<p/>\", { text: \"Optional comment\" }).append(\n    $(\"<input/>\", { type: \"text\", name: \"Comment\", id: \"Comment\" })));\nfieldset.append($(\"<input/>\",\n    { id: \"submitbutton\", type: \"submit\", value: \"Check answers\" }));\nform.append(fieldset);\n$(\"#calibformdiv\").append(form);\nform.validate({\n    errorPlacement: function(error, element) {\n        //error.appendTo(element.parent().next());\n        error.appendTo(element.parent());\n    },\n    highlight: function(element, errorClass) {\n        $(element).addClass(errorClass).parent().prev().children(\"select\").addClass(errorClass);\n    },\n    rules: rulelist\n});\n\n});\n</script>\n\n<p>Based on my informal testing with a few volunteers, for the above questionaire\nthe following seems like a reasonable subjective scale for the average score:</p>\n<ul>\n<li><span class=\"math\">\\(0\\)</span> to <span class=\"math\">\\(0.1\\)</span>, expert</li>\n<li><span class=\"math\">\\(0.1\\)</span> to <span class=\"math\">\\(0.2\\)</span>, proficient</li>\n<li><span class=\"math\">\\(0.2\\)</span> to <span class=\"math\">\\(0.5\\)</span>, good</li>\n<li><span class=\"math\">\\(0.5\\)</span> to <span class=\"math\">\\(1.0\\)</span>, medium</li>\n<li>above <span class=\"math\">\\(1\\)</span>, fair</li>\n</ul>\n<p>As for calibration, you should ideally have around eight to ten out of the\ntwelve questions showing as green, because the quantile range should have 80\npercent coverage.\n(Most persons who do not work with probability on a regular basis will have a\nlower coverage because of overconfidence.)</p>\n<p><em>Acknowledgements</em>.  I thank <a href=\"http://johnwinn.org/\"><em>John Winn</em></a> for the\noriginal calibration experiment he conducted in 2014 which inspired this\narticle, <a href=\"https://www.stat.washington.edu/tilmann/\"><em>Tilmann Gneiting</em></a> for\ncommenting on the scale-free quantile score, <a href=\"http://files.is.tue.mpg.de/pgehler/\"><em>Peter\nGehler</em></a> for feedback and providing\nfurther questions,\n<a href=\"http://www.ong-home.my/\"><em>Cheng Soon Ong</em></a> for comments that improved clarity\nof the article,\n<a href=\"http://research.microsoft.com/en-us/people/iankash/\"><em>Ian Kash</em></a> for\nexplaining scoring rules, <a href=\"http://cdann.net/\"><em>Christoph Dann</em></a> and <em>Juan Gao</em>\nfor feedback on the questionnaire.</p>\n<h3>Appendix: Propriety of the Scale-free Interval Scoring Rule</h3>\n<p>The following is a proof that the scale-free interval scoring rule is proper.\nWe will use the result from <a href=\"https://www.csss.washington.edu/~raftery/Research/PDF/Gneiting2007jasa.pdf\">(Gneiting and Raftery,\n2007)</a> and show that our scoring rule is a special case.</p>\n<p>First, consider the general form of a scoring rule for an <span class=\"math\">\\(\\alpha\\)</span>-quantile\nfrom <em>Theorem 6</em> in Gneiting and Raftery; for a choice <span class=\"math\">\\(r\\)</span> and realization <span class=\"math\">\\(x\\)</span>\nthis takes the form</p>\n<div class=\"math\">\\begin{equation}\nS(r,x,\\alpha) = \\alpha s(r) + (s(x) - s(r)) \\, 1_{\\{x \\leq r\\}} + h(x).\n\\label{eqn:Squantile}\n\\end{equation}</div>\n<p>Gneiting and Raftery show that for any nondecreasing function <span class=\"math\">\\(s\\)</span> and an\narbitrary function <span class=\"math\">\\(h\\)</span> this yields a proper scoring rule for quantiles.\nInfact, it is known that any proper scoring rule for quantile has to be of the\nform <span class=\"math\">\\((\\ref{eqn:Squantile})\\)</span>, see Theorem 3.3 in <a href=\"http://arxiv.org/abs/0912.0902\">(Gneiting,\n2009)</a>.\nIn the Gneiting and Raftery JASA paper the authors propose the choices\n<span class=\"math\">\\(s(y)=y\\)</span> and <span class=\"math\">\\(h(y)=-\\alpha y\\)</span>.\nBut here, in order to achieve a scale-free rule we propose to use</p>\n<div class=\"math\">$$s(y) = \\log y,\\qquad h(y) = -\\alpha \\log y.$$</div>\n<p>We obtain the specialization of <span class=\"math\">\\((\\ref{eqn:Squantile})\\)</span> as</p>\n<div class=\"math\">\\begin{eqnarray}\nS_{\\textrm{q}}(r,x,\\alpha)\n    &amp; = &amp; \\alpha \\log r + (\\log x - \\log r) \\,1_{\\{x \\leq r\\}} - \\alpha \\log x\\nonumber\\\\\n    &amp; = &amp; \\alpha \\log (r/x) + 1_{\\{x \\leq r\\}} \\, \\log (x/r).\\label{eqn:qscore}\n\\end{eqnarray}</div>\n<p>Because <span class=\"math\">\\(s\\)</span> is a non-decreasing function this is a proper scoring rule for\nquantiles.\nThis quantile loss looks as follows (compare to the check loss figure\nearlier), for different quantiles (<span class=\"math\">\\(x=5\\)</span> is the sample realization, and the\nhorizontal axis denotes our quantile estimate).</p>\n<p><img alt=\"Scale-free quantile loss\" src=\"http://www.nowozin.net/sebastian/blog/images/scoringrules-quantile-rule-scalefree.svg\"></p>\n<p>The expected risk plot has a different shape compared to the check loss that\nwe have seen earlier, but note that the minimizer again corresponds to the\nright quantiles of the <span class=\"math\">\\(N(5,1)\\)</span> belief distribution.</p>\n<p><img alt=\"Integrated risk under the scale-free quantile loss\" src=\"http://www.nowozin.net/sebastian/blog/images/scoringrules-quantile-rule-scalefree-example.svg\"></p>\n<p>By using <em>Corollary 1</em> in (Gneiting and Raftery, 2007) the sum of multiple\nquantile scoring rules remains a proper scoring rule.  To obtain a scoring\nrule for intervals we use the <span class=\"math\">\\(\\alpha\\)</span>-quantile and the <span class=\"math\">\\((1-\\alpha)\\)</span>-quantile\nto obtain (after some rewriting of terms)</p>\n<div class=\"math\">\\begin{eqnarray}\nS_{\\textrm{sf}}(L,U,x,\\alpha)\n    &amp; = &amp; -S_{\\textrm{q}}(L,x,\\alpha) - S_{\\textrm{q}}(U,x,1-\\alpha)\\nonumber\\\\\n    &amp; = &amp; \\alpha \\log(U/L) + 1_{\\{x &lt; L\\}} \\log(L/x) + 1_{\\{x &gt; U\\}} \\log(x/U).\\nonumber\n\\end{eqnarray}</div>\n<script type=\"text/javascript\">if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {\n    var align = \"center\",\n        indent = \"0em\",\n        linebreak = \"false\";\n\n    if (false) {\n        align = (screen.width < 768) ? \"left\" : align;\n        indent = (screen.width < 768) ? \"0em\" : indent;\n        linebreak = (screen.width < 768) ? 'true' : linebreak;\n    }\n\n    var mathjaxscript = document.createElement('script');\n    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';\n    mathjaxscript.type = 'text/javascript';\n    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';\n\n    var configscript = document.createElement('script');\n    configscript.type = 'text/x-mathjax-config';\n    configscript[(window.opera ? \"innerHTML\" : \"text\")] =\n        \"MathJax.Hub.Config({\" +\n        \"    config: ['MMLorHTML.js'],\" +\n        \"    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" +\n        \"    jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" +\n        \"    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" +\n        \"    displayAlign: '\"+ align +\"',\" +\n        \"    displayIndent: '\"+ indent +\"',\" +\n        \"    showMathMenu: true,\" +\n        \"    messageStyle: 'normal',\" +\n        \"    tex2jax: { \" +\n        \"        inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" +\n        \"        displayMath: [ ['$$','$$'] ],\" +\n        \"        processEscapes: true,\" +\n        \"        preview: 'TeX',\" +\n        \"    }, \" +\n        \"    'HTML-CSS': { \" +\n        \"        availableFonts: ['STIX', 'TeX'],\" +\n        \"        preferredFont: 'STIX',\" +\n        \"        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" +\n        \"        linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" +\n        \"    }, \" +\n        \"}); \" +\n        \"if ('default' !== 'default') {\" +\n            \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n            \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n        \"}\";\n\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);\n}\n</script>",
  "category": ""
}