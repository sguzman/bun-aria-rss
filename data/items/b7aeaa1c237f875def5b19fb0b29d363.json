{
  "title": "Why I Avoid Slack",
  "link": "",
  "updated": "2019-02-28T00:00:00+00:00",
  "id": "https://mrocklin.github.io/blog/2019/02/28/slack-github",
  "content": "<p>I avoid interacting on Slack, especially for technical conversations around\nopen source software.  Instead, I encourage colleagues to have technical and\ndesign conversations on GitHub, or some other system that is public, permanent,\nsearchable, and cross-referenceable.  In the spirit of Don’t Repeat Yourself\n(DRY) I’m writing up these thoughts as a blogpost.</p>\n\n<p>Slack is a great tool.  Slack is a great way for colleagues within an\ninstitution or group to communicate real-time with chat, voice, or video.\nSlack is probably the most polished of the enterprise chat tools, and today is\nsomething that probably most companies and collaborations should use.</p>\n\n<p>However internal real-time chat systems are, I think, bad for productivity\ngenerally, especially for public open source software maintenance.  Real-time\nchat systems make everyone feel productive (it’s fun to have a face-paced\ntechnical conversation with colleagues), but do relatively little for long-term\ncommunity consensus building, particularly when the users and developers of a\nproject span a variety of institutions and a long range of time.</p>\n\n<p>Here are some more reasons in-depth why I prefer conversation on GitHub rather\nthan Slack.  I prefer GitHub because I want to …</p>\n\n<ol>\n  <li>\n    <p><strong>Engage collaborators</strong> that aren’t on our Slack</p>\n\n    <ol>\n      <li>\n        <p>External collaborators may have the <em>answers</em> that we need.  Having the\nconversation in a private place means that we can’t ask them for their\nhelp, or, if we do eventually need to ask them for help, we need to\nsummarize the entire conversation that we’ve had privately, which\nwastes time.</p>\n\n        <p>Individual open source maintainers often don’t know the answers that\npeople ask, but they do know how to redirect to someone who does.\nMore often than not, that person is in another institution.  If you ask\nyour question on GitHub this redirection is easy.</p>\n      </li>\n      <li>\n        <p>External collaborators may have <em>questions or context</em> that we need.\nTheir questions and experience can help us create a better product than\nwe’re capable of producing with only our in-house expertise.</p>\n\n        <p>Most important problems are useful across many organizations, while\nsolutions built within one organization are often overly-specific to\nthe needs of that organization.  By getting broader context, OSS has a\nmuch higher likelihood of success.</p>\n      </li>\n      <li>\n        <p>External collaborators are much more likely to <em>buy in</em> to whatever we\ncome up with if they were able to see the reasoning behind it and\nparticipate during that conversation.</p>\n\n        <p><img src=\"https://imgs.xkcd.com/comics/standards.png\" width=\"70%\" /></p>\n\n        <p>If you open the design process to the creators and users of the\nprevious 14 standards, the 15th standard has a much higher probability\nof actually being used.</p>\n      </li>\n    </ol>\n\n    <p>As we adopt community maintained open source software, the team we work\nwith extends beyond our institution, and beyond the people who listen in to\nall of our institution’s Slack conversations.</p>\n  </li>\n  <li>\n    <p><strong>Record the conversation</strong> in case participants change in the future.</p>\n\n    <p>Most development efforts change hands over time.  We may work on this\nproject today, but next month some of us will probably move on to other\nprojects and new people will arrive.  These new developers ask questions\nabout why something was done and there are one of two answers, depending on\nwhether the conversation was on Slack or GitHub:</p>\n\n    <ul>\n      <li>\n        <p><strong>Slack</strong>: We had a conversation about this a while ago and decided\n that it was the right course of action.  Just go with it.</p>\n      </li>\n      <li>\n        <p><strong>GitHub</strong>: Go look at Issue #1234 and you’ll be able to see the\nreasoning why, who had which opinions, and whether or not your concern\nwas raised there.  If your concern wasn’t raised there then we can\neasily pick up that thread of conversation on GitHub a year later\n(this happens all the time in long running OSS projects).</p>\n      </li>\n    </ul>\n\n    <p>Even in the same group we often find that people repeat the same\nconversations.  If there is an obvious place for that conversation, and you\nneed to scroll through previous comments, then it’s far less likely that\npeople will have to repeat themselves.</p>\n  </li>\n  <li>\n    <p><strong>Serve the silent majority</strong> of users who search the web for answers to\ntheir questions or bugs.</p>\n\n    <p>On Slack, maintainers get asked the same questions daily.  We have people\nask for “a few minutes of our time” every few minutes.  We strongly prefer\nto answer questions once in a place where future users can find the answer\nfrom a web search.  This includes people outside the company, but also\npeople within the company.</p>\n\n    <p>Maintainers are much happier devoting a lot of time to craft a high quality\nanswer to questions if those questions and answers can help others in the\nfuture.  I personally spend a lot of time crafting answers on Stack\nOverflow, while I usually ignore questions on chat systems.  Want a good\nanswer?  Pose a <a href=\"https://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\">good\nquestion</a>\nin a public place.</p>\n  </li>\n  <li>\n    <p><strong>Encourage thoughtful discourse</strong>.\nBecause GitHub is a permanent record it forces people to think more before\nthey write.  This is hard on casual conversation, yes, but we’re not here\nfor casual conversation.  Asking people to spend a minute crafting comments\ngenerally results in a conversation that is higher functioning, more\nconcise, and much easier to review later.</p>\n  </li>\n  <li>\n    <p><strong>Cross reference issues</strong>.\nSlack is siloed.  It doesn’t allow people to cross reference people or\nconversations across Slacks.  OSS maintainers get invited to literally\ndozens of Slack organizations.  It is not feasible to manage dozens of\nSlack tabs and different siloed organziations.</p>\n\n    <p>GitHub is public and conversations across different projects can easily\ncross reference each other.  This encourages collaboration between projects\nand avoids wheel-reinvention.</p>\n  </li>\n</ol>\n\n<p>Slack is the easy choice.  It’s so much easier just to open up a one-on-one\nconversation with someone, chat with them for a bit, get your answer, and feel\nlike you’ve had a productive experience.  It feels good, but is rarely the\ncorrect choice long term, especially when you add up how many times that same\nconversation occurs.  Putting in a bit more effort and starting (or\ncontinuing!) a well-posed conversation in a public issue tracker like GitHub is\nlikely better for your project and for your teammates long term.</p>\n\n<p>I still love Slack for inter-personal contact.  It’s great for chatting with\nteammates, checking in to see how people are doing emotionally, or sharing\npictures about our lives.  Professionally I think it’s also a good place for\ninternal teams to do daily check-ins and sometimes to arrange short-term\npriorities.  Slack has many great uses, but I think that in-depth technical\nconversation and long-term planning aren’t among them.</p>"
}