{
  "title": "Wolfram CloudConnector: Excel&#8217;s Data Science Superpower",
  "link": "https://blog.wolfram.com/2022/10/12/wolfram-cloudconnector-excels-data-science-superpower/",
  "comments": "https://blog.wolfram.com/2022/10/12/wolfram-cloudconnector-excels-data-science-superpower/#respond",
  "pubDate": "Wed, 12 Oct 2022 14:37:12 +0000",
  "dc:creator": "Craig Cowley",
  "category": "New Technology, Other Application Areas, Wolfram Cloud",
  "guid": "https://blog.wolfram.com/?p=85924",
  "description": "Love it or hate it, Excel is used the world over for everything from quickly adding a couple of numbers together to accidentally losing tens of thousands of COVID-19 cases in the UK. But if you’ve ever had to use Excel for anything beyond INDEX MATCH (or *shudder* VLOOKUP), you’ve probably found yourself nonstop Googling [&#8230;]",
  "content:encoded": "<p><img class=\"aligncenter box-shadow\" title=\"Wolfram CloudConnector: Excel's Data Science Superpower\" src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cloud-connector-hero.png\" alt=\"Wolfram CloudConnector: Excel's Data Science Superpower\" width=\"620\" height=\"315\" /></p>\n<p>Love it or hate it, Excel is used the world over for everything from quickly adding a couple of numbers together to <a href='https://www.conradwolfram.com/writings/covid19-excel07' target=_blank rel=noopener>accidentally losing tens of thousands of COVID-19 cases in the UK</a>. But if you’ve ever had to use Excel for anything beyond <span style=\"font-weight:Bold\">INDEX MATCH</span> (or *shudder* <span style=\"font-weight:Bold\">VLOOKUP</span>), you’ve probably found yourself nonstop Googling only to find out Excel isn’t really built for what you&#8217;re doing.<span id=\"more-85924\"></span></p>\n<p>But what if you’re ready to go beyond the basics? What if you want to do actual “data science”? Is it time to abandon Excel and get up to your elbows in lists, loops and package managers?</p>\n<p>Not necessarily! In this post, we’ll look at how you can get Excel performing all your data science tasks with just one free add-on for Windows—<a href='https://www.wolfram.com/cloud-connector-for-excel/'>Wolfram CloudConnector for Excel</a>.</p>\n<h2 id=\"what-is-wolfram-cloudconnector-for-excel\">What Is Wolfram CloudConnector for Excel?</h2>\n<p>Wolfram CloudConnector for Excel can transform Excel into a data science powerhouse by injecting <a href='https://www.wolfram.com/language/'>Wolfram Language</a> functions straight into your spreadsheets. It does this by providing a connection between Excel and Wolfram Language, extending the computational power of your spreadsheets.</p>\n<p>With CloudConnector, there’s no end to what you can achieve with your spreadsheets, including executing high-level computations (machine learning, algorithms, …), importing hundreds of data types, analyzing data with natural language (harnessing the power of <a href='https://www.wolframalpha.com/'>Wolfram|Alpha</a>), creating rich visualizations, linking across several areas of research (chemistry, geography, cryptography, …) and much more.</p>\n<h2 id=\"what-can-you-do-with-cloudconnector\">What Can You Do with CloudConnector?</h2>\n<p>Pretty much anything you can think of! Want to use <a href='https://reference.wolfram.com/language/guide/MachineLearning.html'>Wolfram’s machine learning</a> capabilities in your spreadsheet? You can do that with a single formula. Want to create advanced visualizations like geo histograms or contour plots with extensive formatting options? That’s easy too!</p>\n<p>Whether you’re calling a single Wolfram function or want to easily add complex computations to your Excel workbooks, CloudConnector has you covered. But rather than read about it, you can see just how easy it is to <a href='https://www.wolfram.com/broadcast/video.php?c=439&#038;v=2164'>create <span style=\"font-weight:Regular\">geo visualizations</a></span><span style=\"font-weight:Regular\"> </span>that are simply not possible in Excel alone with help of CloudConnector.</p>\n<p>Want to give it a go yourself? Just follow these simple steps to get started. All you need is Excel and a free <a href='https://www.wolfram.com/cloud/'>Wolfram Cloud</a> account!</p>\n<h2 id=\"getting-started-with-cloudconnector\">Getting Started with CloudConnector</h2>\n<h3>Step 1: Installing the Plugin</h3>\n<p>Getting CloudConnector is easy: just download <a href='https://www.wolfram.com/cloud-connector-for-excel/'>the Excel plugin</a>, restart Excel and you’re good to go. To confirm it has worked, you should see a <span style=\"font-weight:Bold\">Wolfram</span> tab in Excel:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img2.png\" alt='Wolfram tab in Excel' title='Wolfram tab in Excel' width='469' height='19' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img2_copy.txt\">\n\t\t\t\t\t<span class='close' id='2_out'>&#10005</span></p>\n<pre class='text' id='2_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<h3>Step 2: Sign In to the Wolfram Cloud from Excel</h3>\n<p>From Excel, navigate to the <span style=\"font-weight:Bold\">Wolfram</span> tab and select the <span style=\"font-weight:Bold\">Signed Out</span> button to bring up the Wolfram Cloud dialog:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img3.png\" alt='Select the Signed Out tab' title='Select the Signed Out tab' width='469' height='439' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img3_copy.txt\">\n\t\t\t\t\t<span class='close' id='3_out'>&#10005</span></p>\n<pre class='text' id='3_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>If you do not have a Wolfram ID, you can obtain one for free by <a href='https://account.wolfram.com/auth/create' target=_blank rel=noopener>creating an account</a>—all you need to do is provide a valid email address.</p>\n<h3>Step 3: Call Your First Function</h3>\n<p>The quickest and easiest way to get started with Wolfram Language in Excel is to call a single expression.</p>\n<p>In the formula bar, use the <span style=\"font-weight:Bold\">Wolfram</span> function in Excel to call the Wolfram Language function <tt><a href='http://reference.wolfram.com/language/ref/RandomInteger.html'>RandomInteger</a></tt>: </p>\n<p><em><span style=\"font-weight:Bold\"> = Wolfram (&#8220;RandomInteger&#8221;, B2, B3)</span></em></p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img4.png\" alt='Call on RandomInteger' title='Call on RandomInteger' width='470' height='509' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img4_copy.txt\">\n\t\t\t\t\t<span class='close' id='4_out'>&#10005</span></p>\n<pre class='text' id='4_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Let’s take a quick look at what’s happening here.</p>\n<p>The first argument in the <span style=\"font-weight:Bold\">Wolfram</span> function is the name of the Wolfram Language function you want to use, in this case <tt>RandomInteger</tt>.</p>\n<p>The following arguments pass parameters to the Wolfram Language function, in this case the contents of cells B2 and B3 (100 and 10, respectively).</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img5.png\" alt='Wolfram documentation for RandomInteger' title='Wolfram documentation for RandomInteger' width='470' height='227' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img5_copy.txt\">\n\t\t\t\t\t<span class='close' id='5_out'>&#10005</span></p>\n<pre class='text' id='5_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>When we press <span style=\"font-weight:Bold\">Enter</span> on the formula, CloudConnector will then create a list of 10 random integers between 0 and 100, each with its own cell.</p>\n<p>That already gives you access to over six thousand functions! You can stop here and just use singular functions while still being able to cover everything from machine learning–based sentiment analysis with the <tt><a href='http://reference.wolfram.com/language/ref/Classify.html'>Classify</a></tt> function to creating charts and graphs not normally available in Excel with functions like <tt><a href='https://reference.wolfram.com/language/ref/GeoHistogram.html'>GeoHistogram</a></tt>.</p>\n<h3>Step 4: Call a Wolfram API</h3>\n<p>Although Wolfram Language has uniquely capable functions and superfunctions that produce powerful outputs by themselves, by combining them, you can create even more impressive, customized workflows. We’ll go over how to make these functions in a future post; for now, we’ll look at calling Wolfram APIs from within Excel.</p>\n<p>For this article, we’ll use a very basic Wolfram API called myAPI, which takes a single parameter (a number) and squares it. Here’s how you use it in Excel.</p>\n<p>First, select the cell where you want the output of the API to appear (in this case, the cell B2):</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img6.png\" alt='Select the cell for your output' title='Select the cell for your output' width='184' height='93' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img6_copy.txt\">\n\t\t\t\t\t<span class='close' id='6_out'>&#10005</span></p>\n<pre class='text' id='6_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Go to the <span style=\"font-weight:Bold\">Wolfram</span> tab and click <span style=\"font-weight:Bold\">Insert API Call</span>:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img7.png\" alt='Click Insert API Call' title='Click Insert API Call' width='470' height='94' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img7_copy.txt\">\n\t\t\t\t\t<span class='close' id='7_out'>&#10005</span></p>\n<pre class='text' id='7_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>This will bring up an <span style=\"font-weight:Bold\">Insert API Call</span> dialog. Fill in the following fields:</p>\n<p><span style=\"font-weight:Bold\">API Name </span>— This is the location and name of the API you would like to connect to. You will be provided this URL when you create a Wolfram API. To use the one in this example, just insert <span style=\"color:#000000\" class=\"codetext\">/events-europe/myAPI</span> in this field.</p>\n<p><span style=\"font-weight:Bold\">Output Location </span>— This field was filled in automatically by Excel; it’s just the full name of the cell chosen earlier (B2).</p>\n<p><span style=\"font-weight:Bold\">Parameters</span> — These are similar to the second and third arguments we used earlier, except you specify them when creating the Wolfram API.</p>\n<p>This API has only one parameter (arg). You can provide a cell reference (in this case B1) or manually type in a value:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img8.png\" alt='Provide a cell reference' title='Provide a cell reference' width='270' height='229' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img8_copy.txt\">\n\t\t\t\t\t<span class='close' id='8_out'>&#10005</span></p>\n<pre class='text' id='8_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Click <span style=\"font-weight:Bold\">Insert</span>, and that’s it! The API will run and you will get a result in the output location. If you used a cell reference in your parameter, the API will rerun every time you change that cell—just like a normal Excel function:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img9.png\" alt='Results in the output location' title='Results in the output location' width='395' height='101' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img9_copy.txt\">\n\t\t\t\t\t<span class='close' id='9_out'>&#10005</span></p>\n<pre class='text' id='9_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ok-but-what-about-the-data-science\">OK, but What about the Data Science?</h2>\n</p>\n<p>So far, we’ve created a random number generator and a number squarer. If that seems like something you could already do in Excel, you would be exactly right—that’s what the <span style=\"font-weight:Bold\">RANDARRAY</span> and <span style=\"font-weight:Bold\">POWER</span> functions are for!</p>\n<p>But does Excel have functions for intelligently interpreting dates, no matter the format? Or for semantic text analysis? Or for time series forecasts with machine learning? </p>\n<p>Well let’s take a look at creating our own Wolfram Language function that can intelligently clean and interpret dates far more powerfully than Excel’s built-in tools.</p>\n<h2 id='apis:-unleash-the-power-of-cloudconnector-for-excel'>APIs: Unleash the Power of CloudConnector for Excel</h2>\n<p>Now, we’re going to start combining functions in the Wolfram Cloud to start building our own APIs and unlock a whole range of capabilities not normally available in Excel.</p>\n<h3 id='getting-started-with-wolfram-cloud-notebooks'>Getting Started with Wolfram Cloud Notebooks</h3>\n<p><a href='https://www.wolfram.com/notebooks/'>Wolfram Notebooks</a> are the ideal environment for exploring ideas and building workflows across any domain—from data science and modeling to research and education—with interactive coding, natural language queries and expansive documentation. If you can write an Excel formula, you’ll be able to get started with notebooks in no time at all!</p>\n<p>The first step to building your own API is to head to <a href='https://wolframcloud.com' target=\"_blank\">www.wolframcloud.com</a>, set up an account (if you haven’t already) and create a new cloud notebook:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img10.png\" alt='Create a new notebook' title='Create a new notebook' width='386' height='282' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img10_copy.txt\">\n\t\t\t\t\t<span class='close' id='10_out'>&#10005</span></p>\n<pre class='text' id='10_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Give your new file a sensible name by clicking the “(unnamed)” text:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img11.png\" alt='Rename the file' title='Rename the file' width='336' height='169' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img11_copy.txt\">\n\t\t\t\t\t<span class='close' id='11_out'>&#10005</span></p>\n<pre class='text' id='11_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>If you try clicking somewhere in the body of the notebook (the large blank area), the first thing you might notice is that your mouse and text cursor are both horizontal. This is because notebooks are made up of rectangular “cells,” and you haven’t yet made a cell in which to type code. You can create a new cell by clicking the “+” (or by typing something):</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img12.png\" alt='Create a new cell' title='Create a new cell' width='166' height='166' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img12_copy.txt\">\n\t\t\t\t\t<span class='close' id='12_out'>&#10005</span></p>\n<pre class='text' id='12_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Now that we’re all set up, we can start building our first API!</p>\n<h2 id='building-our-first-api'>Building Our First API</h2>\n<p>Building and deploying an API in a cloud notebook is as easy as filling in a simple template:</p>\n<table class='InCell'>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img13a.png\" alt='CloudDeploy' title='CloudDeploy' width='254' height='296' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img13a_copy.txt\">\n\t\t\t\t\t<span class='close' id='13_out'>&#10005</span></p>\n<pre class='text' id='13_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Let’s have a look at what’s happening here, from the inside out:</p>\n<li><tt><a href='http://reference.wolfram.com/language/ref/Function.html'>Function</a></tt> — This is where we’ll define what we want our API to do. This can be as simple as a single function or an entire program comprised of multiple functions.</li>\n<li><tt><a href='http://reference.wolfram.com/language/ref/APIFunction.html'>APIFunction</a></tt> — This is where we define the parameters we’ll pass from Excel into the the function we’ve created. </li>\n<li><tt><a href='http://reference.wolfram.com/language/ref/CloudDeploy.html'>CloudDeploy</a></tt> — This is where we define our API’s name. This also puts (or “deploys”) the created function and turns it into an API stored in my cloud files, where it can be called by Excel.</li>\n<p>There are also a couple of extra bits in there that make sure the API we’ve created is accessible by CloudConnector for Excel. Now let’s add in our functions and parameters to create an intelligent date interpreter.</p>\n<h3 id='creating-an-intelligent-date-interpreter'>Creating an Intelligent Date Interpreter</h3>\n<p>If you’ve ever had to Google “Why wont Excel understand my dates?!”, you’re definitely not alone! So, in our first API, we’re going to use Wolfram’s intelligent interpretation functionality to convert whatever type of date we have into a format Excel will immediately understand.</p>\n<p>Creating the interpreter is incredibly easy: all we have to do is call the <tt><a href='http://reference.wolfram.com/language/ref/Interpreter.html'>Interpreter</a></tt> function, tell it to generate a date and give it the text we want it to interpret, like so:</p>\n<table class='InCell'>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img14.png\" alt='Interpreter' title='Interpreter' width='173' height='21' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img14_copy.txt\">\n\t\t\t\t\t<span class='close' id='14_out'>&#10005</span></p>\n<pre class='text' id='14_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>You’ll notice that instead of passing actual text for it to interpret, we instead have <tt>[#date]</tt>, which tells our function that there will be a parameter called <tt>date</tt> that it will get its data from—more information on that in a bit!</p>\n<p>Next, we want to add some code around that to covert it into an Excel date serial number, which just involves some simple arithmetic, then put it into the <tt>Function</tt> part of our API template:</p>\n<table class='InCell'>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img15.png\" alt='Function' title='Function' width='506' height='90' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img15_copy.txt\">\n\t\t\t\t\t<span class='close' id='15_out'>&#10005</span></p>\n<pre class='text' id='15_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Next, we need to define some parameters. We’re going to use just the one parameter <tt>date</tt> that we added to our function earlier. This parameter is of the <tt>\"String\"</tt> type, as it will be passed text from Excel. Since the parameter will refer to a column of data (as opposed to a single cell), we need to indicate by wrapping the <tt>\"String\"</tt> type with <tt><a href='http://reference.wolfram.com/language/ref/RepeatingElement.html'>RepeatingElement</a></tt><tt>[]</tt>. Then we can pass that into our template:</p>\n<table class='InCell'>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img16.png\" alt='APIFunction' title='APIFunction' width='519' height='228' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img16_copy.txt\">\n\t\t\t\t\t<span class='close' id='16_out'>&#10005</span></p>\n<pre class='text' id='16_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Finally, we just need to name our API. In this case, we’ll call it <tt>\"interpretDate\"</tt> and deploy it to the cloud, which is as simple as pressing <span style=\"color:#000000;font-weight:Bold\" class=\"codetext\">Shift</span><span style=\"color:#000000\" class=\"codetext\"> + </span><span style=\"color:#000000;font-weight:Bold\" class=\"codetext\">Enter</span>:</p>\n<table class='InCell'>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img17a.png\" alt='CloudDeploy' title='CloudDeploy' width='338' height='319' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img17a_copy.txt\">\n\t\t\t\t\t<span class='close' id='17_out'>&#10005</span></p>\n<pre class='text' id='17_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>This produces a link to where our API has been stored. We’ll need the latter part of this link that has the account ID and API name, so “/events-europe/interpretData” in this instance, when we call it from Excel. You can find all of your personal APIs <a href='https://www.wolframcloud.com/browse#APIs' target=\"_blank\">here</a>:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img18.png\" alt='CloudDeploy produces a link' title='CloudDeploy produces a link' width='470' height='303' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img18_copy.txt\">\n\t\t\t\t\t<span class='close' id='18_out'>&#10005</span></p>\n<pre class='text' id='18_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img19.png\" alt='Call upon your API from Excel' title='Call upon your API from Excel' width='470' height='133' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img19_copy.txt\">\n\t\t\t\t\t<span class='close' id='19_out'>&#10005</span></p>\n<pre class='text' id='19_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<h3 id='calling-our-api-in-excel'>Calling Our API in Excel</h3>\n<p>We covered how to call a Wolfram API in Excel using CloudConnector’s interface earlier in this post. But if you have CloudConnector installed, you can also call your API directly from Excel’s formula field like so:</p>\n<p><em><span style=\"font-weight:Bold\">=WolframAPI(&#8220;/events-europe/interpretDate&#8221;, Parameter(&#8220;date&#8221;, <cell reference>))</span></em></p>\n<p>Our API then takes the date text in column A and converts it into Excel format in column B:</p>\n<table>\n<tbody>\n<tr>\n<td colspan='1' rowspan='1' class='Input'>\n<div>\n\t\t\t\t\t<img class='' src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img20.png\" alt='API converts data into Excel format' title='API converts data into Excel format' width='470' height='131' />\n\t\t\t\t</div>\n<div class='IFL' data-src=\"https://content.wolfram.com/uploads/sites/39/2022/10/cc101222img20_copy.txt\">\n\t\t\t\t\t<span class='close' id='20_out'>&#10005</span></p>\n<pre class='text' id='20_out_text'></pre>\n</p></div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Now we have a function that can take a date in pretty much any format, including natural language, and reliably convert that into something that Excel can understand and use consistently.</p>\n<h2 id=\"what-else-can-you-do\">What Else Can You Do?</h2>\n<p>Well, that’s limited only by your imagination! But if you’re in need of a little inspiration, you can see a range of examples you never thought you could achieve in Excel by watching this <a href='https://www.bigmarker.com/wolfram-u/cloud-connector-2022?utm_bmcr_source=blog' target=_blank rel=noopener>webinar</a>. </p>\n<div class=\"special-offer blue\" style=\"padding-bottom: 20px\">\n<table>\n<tbody>\n<tr>\n<td width=590px><a href=\"https://www.wolfram.com/cloud-connector-for-excel/resources/\">Explore more resources to transform your Excel into a data science powerhouse!</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sticky-footer\">\n<a href=\"https://content.wolfram.com/uploads/sites/39/2022/10/wolfram-cloudconnector-excels-data-science-superpower1.nb\" data-walid=\"BlogFooterNotebook\"><img class='lazy' data-src=\"https://content.wolfram.com/uploads/sites/39/2019/05/notebook-icon2x.png\" width=\"25\">Engage with the code in this post by downloading the Wolfram&nbsp;Notebook</a><br />\n<button class=\"close\">×</button>\n</div>\n",
  "wfw:commentRss": "https://blog.wolfram.com/2022/10/12/wolfram-cloudconnector-excels-data-science-superpower/feed/",
  "slash:comments": 0
}