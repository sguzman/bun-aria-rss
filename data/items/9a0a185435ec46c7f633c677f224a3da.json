{
  "title": "How Many Cryptic Crossword Grids Are There?",
  "link": "",
  "id": "https://www.georgeho.org/counting-cryptics/",
  "updated": "2021-05-17T00:00:00Z",
  "published": "2021-05-17T00:00:00Z",
  "content": "<p>Counting the number of valid American-style crossword grids is more or less a\nsolved problem. For example, see this <a href=\"https://fivethirtyeight.com/features/how-many-crossword-puzzles-can-you-make/\">FiveThirtyEight\nRiddler</a>\nand <a href=\"https://twitter.com/Log3overLog2/status/1092472516571000839\">Michael Kleber&rsquo;s answer in a Twitter\nthread</a>.</p>\n<p>However, the same doesn&rsquo;t seem to be true for British-style cryptic crosswords.\nHence this blog post!</p>\n<p>Now, <em>counting</em> the number of valid grids is a different task from\n<em>enumerating</em> them, and it&rsquo;s a bad idea to do the former by doing the latter,\nbecause the sheer number of grids can be prohibitively expensive to compute.\nHowever, I&rsquo;m mostly interested in grids smaller than 11×11, and I actually\n<em>wanted</em> to see all possible grids, so I went ahead and did the inadvisable.</p>\n<p>So let&rsquo;s jump right in! If you&rsquo;re just interested in the numbers and a list of\nall valid grids, feel free to scroll to the very end.</p>\n<h2 id=\"what-makes-a-valid-cryptic-grid\">What Makes A Valid Cryptic Grid?</h2>\n<ol>\n<li>The grid must be <strong>rotationally symmetric</strong>.</li>\n<li>The grid length (i.e. the length of one side of the grid) must be an <strong>odd\nnumber</strong>.</li>\n<li>All white squares must be <strong>connected</strong>: that is, there can be only one\ncontiguous island of white squares.</li>\n<li>All words must have <strong>half their letters checked</strong>.\n<ul>\n<li>For words of odd length, there&rsquo;s some ambiguity: depending on who you talk\nto, either &ldquo;half rounded up&rdquo; or &ldquo;half rounded up or down&rdquo; must be checked.</li>\n<li>For the purposes of this blog post, I required &ldquo;half rounded up&rdquo;.</li>\n</ul>\n</li>\n<li>There <strong>cannot be more than two consecutive unchecked squares</strong>.</li>\n<li>Two consecutive unchecked squares <strong>cannot occur at the start or end of a\nword</strong>.\n<ul>\n<li>I haven&rsquo;t found much explicit mention of this rule other than <a href=\"https://www.crosswordunclued.com/2009/09/crossword-grid-checking.html\">this blog\npost</a>\nsaying that it&rsquo;s a &ldquo;house rule&rdquo; at <em>The Times</em> of London, but all cryptics\nI&rsquo;ve seen have hewed to this requirement, so I enforced it.</li>\n</ul>\n</li>\n</ol>\n<p>It&rsquo;s also worth noting that different constructors and publications have\ndifferent &ldquo;house rules&rdquo;. For example:</p>\n<ul>\n<li>Some publications have upper and/or lower limits on the number of clues. For\nexample, <a href=\"https://www.ft.com/crossword\">the <em>Financial Times</em></a> seems to\nalways have exactly 32 clues.</li>\n<li>Some constructors also restrict the size of black islands: for example, there\ncannot be a contiguous black island of more than five squares.</li>\n</ul>\n<p>I didn&rsquo;t enforce these rules, more out of laziness and lack of time than\ntechnical infeasibility.</p>\n<h2 id=\"generating-cryptic-grids\">Generating Cryptic Grids</h2>\n<p>Akshay Ravikumar has an <a href=\"https://akshayr.xyz/blog/articles/counting-crosswords\">excellent blog\npost</a> explaining how he\ngenerated American crosswords, and if you&rsquo;re interested in diving deeper I\nhighly recommend reading his exposition: my algorithm is more or less directly\nlifted from his work, just adapted to cryptic crosswords.</p>\n<p>Here&rsquo;s the final algorithm that I used:</p>\n<ol>\n<li>Precompute all <code>valid_rows</code> and <code>symmetric_rows</code>: for a cryptic, these are\nrows that don&rsquo;t have words below the minimum word length.</li>\n<li>Using <code>valid_rows</code> and <code>symmetric_rows</code>, find all sets of valid middle three\nrows &mdash; for example, for an 11×11 grid, find all possible fifth, sixth and\nseventh rows.\n<ul>\n<li>Note that the middle row must be symmetric, and the two adjacent rows must\nbe mirror images of each other.</li>\n</ul>\n</li>\n<li>From the middle rows outward, build up a grid in a depth-first search.\n<ul>\n<li>Before adding a new row, make sure that it satisfies the checking\nrequirement: that it has the correct number of unchecked squares and has\nat most two consecutive unchecked squares not at the start or end of\nwords.</li>\n<li>There is also a trick we can use to limit the search space: if the\nprevious three rows have a column that is black-white-white, then in the\nsame column, the next row must be white.</li>\n<li>This is best explained pictorially:\n<img src=\"https://www.georgeho.org/assets/images/counting-cryptics-illustration.png\" alt=\"An illustration of the black-black-whitetrick\"></li>\n</ul>\n</li>\n<li>Check that the columns are valid. Specifically:\n<ul>\n<li>Check that the columns are <code>valid_rows</code> (this ensures that there are no\nwords below the minimum word length).</li>\n<li>And also check that the columns don&rsquo;t have two consecutive unchecked\nsquares at the start or end of the word.</li>\n<li>Note that all other requirements (e.g. the number of checked squares) are\nalready taken care up while building up the grid.</li>\n</ul>\n</li>\n<li>Check connectedness of the grid using a <a href=\"https://www.hackerearth.com/practice/algorithms/graphs/depth-first-search/tutorial/\">depth-first\nsearch</a>.</li>\n</ol>\n<p>This algorithm works well and runs reasonably quickly (i.e. in less than a\nminute) for 5×5 and 7×7 grids, but at 9×9 the search time becomes significant\n(around half an hour on a MacBook Pro). Additionally, some valid grids aren&rsquo;t\nvery interesting as &ldquo;real&rdquo; crosswords, such as the one below.</p>\n<center><pre><code>\n⬛⬛⬛⬛⬜⬜⬜\n⬛⬛⬛⬛⬜⬛⬜\n⬛⬛⬛⬛⬜⬛⬜\n⬜⬜⬜⬜⬜⬜⬜\n⬜⬛⬜⬛⬛⬛⬛\n⬜⬛⬜⬛⬛⬛⬛\n⬜⬜⬜⬛⬛⬛⬛\n</code></pre></center>\n<p>It&rsquo;s not very interesting because of the sheer number of black squares (and\ncorrespondingly low number of clues). So to winnow down the grids more, I\nfiltered <code>valid_rows</code> before I start: <code>valid_rows</code> must have a minimum number\nof white squares: 2 squares for 5×5 and 3 squares for 7×7 through 13×13.\nAnecdotally, this reduces the computation time by a factor of three or four. I\ncall the grids produced in this reduced search <em>&ldquo;interesting grids&rdquo;,</em> as\nopposed to <em>&ldquo;valid grids&rdquo;</em>.</p>\n<p>I should note that there are definitely more ways to speed up the search: I\ncould&rsquo;ve parallelize the search (i.e. assign each worker a subset of the valid\nmiddle rows), I could&rsquo;ve written the program in a language faster than Python\n(like Julia), and further algorithmic speedups are possible (e.g. checking\ncolumns after adding each row would prune more grids earlier, instead of\ndeferring the column checks to after the grid is constructed).</p>\n<p>At any rate, I just ran the program on my laptop, and stopped at 9×9 grids.\nResults below!</p>\n<h2 id=\"results\">Results</h2>\n<p>If you&rsquo;ve just scrolled down here, the only thing you need to note is that an\n<em>&ldquo;interesting grid&rdquo;</em> is one in which every row has at least a certain number of\nwhite squares: 2 for 5×5 grids and 3 for 7×7 grids onwards.</p>\n<p>For comparison, I&rsquo;ve added the number of valid American grids, taken from\n<a href=\"https://twitter.com/Log3overLog2/status/1092795679947264000\">Michael Kleber&rsquo;s corrected\nTweet</a>.</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Grid Size</th>\n<th style=\"text-align:right\">Valid Grids</th>\n<th style=\"text-align:right\">Interesting Grids</th>\n<th style=\"text-align:right\">American Grids</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">5×5</td>\n<td style=\"text-align:right\">17</td>\n<td style=\"text-align:right\">9</td>\n<td style=\"text-align:right\">12</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7×7</td>\n<td style=\"text-align:right\">346</td>\n<td style=\"text-align:right\">43</td>\n<td style=\"text-align:right\">312</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9×9</td>\n<td style=\"text-align:right\">9,381</td>\n<td style=\"text-align:right\">334</td>\n<td style=\"text-align:right\">31,187</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11×11</td>\n<td style=\"text-align:right\">N/A</td>\n<td style=\"text-align:right\">N/A</td>\n<td style=\"text-align:right\">17,438,702</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">13×13</td>\n<td style=\"text-align:right\">N/A</td>\n<td style=\"text-align:right\">N/A</td>\n<td style=\"text-align:right\">40,575,832,476</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">15×15</td>\n<td style=\"text-align:right\">N/A</td>\n<td style=\"text-align:right\">N/A</td>\n<td style=\"text-align:right\">404,139,015,237,875</td>\n</tr>\n</tbody>\n</table>\n<p>There are 346 valid 7×7 cryptics &mdash; interestingly, slightly more than the\npleasing 6 × 52 = 312 valid American-style crosswords which inspired <a href=\"https://www.7xwords.com/why.html\">Malaika\nHanda&rsquo;s 7xwords</a>; disappointingly,\nfactorizing into a not-at-all-auspicious 2 × 173.</p>\n<p>For larger grid lengths, there appear to be far fewer valid cryptic grids than\nAmerican grids, probably owing to the more stringent conditions for cryptics.</p>\n<p>It was infeasible for me to run my program for 11×11 grids onwards &mdash; either I\nneed to put a lot more effort in optimizing my program, or (more likely) it&rsquo;s\nsimply computationally intractable to enumerate all possible grids, and we can\nonly count them. If I&rsquo;m inspired to pick up this line of work again, I&rsquo;ll be\nsure to post a part two!</p>\n<p>And finally, the code:</p>\n<ul>\n<li><a href=\"https://github.com/eigenfoo/counting-cryptics\">Source code (Python Jupyter Notebook)</a></li>\n<li>Valid grids\n<ul>\n<li><a href=\"https://raw.githubusercontent.com/eigenfoo/counting-cryptics/main/valid_5x5_grids.txt\">5×5</a></li>\n<li><a href=\"https://raw.githubusercontent.com/eigenfoo/counting-cryptics/main/valid_7x7_grids.txt\">7×7</a></li>\n<li><a href=\"https://raw.githubusercontent.com/eigenfoo/counting-cryptics/main/valid_9x9_grids.txt\">9×9</a></li>\n</ul>\n</li>\n<li>Interesting grids\n<ul>\n<li><a href=\"https://raw.githubusercontent.com/eigenfoo/counting-cryptics/main/interesting_5x5_grids.txt\">5×5</a></li>\n<li><a href=\"https://raw.githubusercontent.com/eigenfoo/counting-cryptics/main/interesting_7x7_grids.txt\">7×7</a></li>\n<li><a href=\"https://raw.githubusercontent.com/eigenfoo/counting-cryptics/main/interesting_9x9_grids.txt\">9×9</a></li>\n</ul>\n</li>\n</ul>"
}