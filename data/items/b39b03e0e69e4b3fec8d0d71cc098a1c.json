{
  "title": "What’s New in DataPipeline 7.0?",
  "link": "https://northconcepts.com/blog/2021/08/19/whats-new-datapipeline-7-0/",
  "comments": "https://northconcepts.com/blog/2021/08/19/whats-new-datapipeline-7-0/#respond",
  "pubDate": "Thu, 19 Aug 2021 12:57:38 +0000",
  "dc:creator": "The DataPipeline Team",
  "category": [
    "Data Pipeline",
    "News"
  ],
  "guid": "https://northconcepts.com/blog/?p=2286",
  "description": "<p> [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://northconcepts.com/blog/2021/08/19/whats-new-datapipeline-7-0/\">What’s New in DataPipeline 7.0?</a> appeared first on <a rel=\"nofollow\" href=\"https://northconcepts.com/blog\">Data Pipeline</a>.</p>\n",
  "content:encoded": "<p><img class=\"alignnone size-full wp-image-2334\" src=\"https://northconcepts.com/blog/wp-content/uploads/2021/08/pexels-neosiam-625219_text_7.0.jpg\" alt=\"pexels-neosiam-625219_text_7.0\" width=\"1280\" height=\"853\" srcset=\"https://northconcepts.com/blog/wp-content/uploads/2021/08/pexels-neosiam-625219_text_7.0.jpg 1280w, https://northconcepts.com/blog/wp-content/uploads/2021/08/pexels-neosiam-625219_text_7.0-300x200.jpg 300w, https://northconcepts.com/blog/wp-content/uploads/2021/08/pexels-neosiam-625219_text_7.0-768x512.jpg 768w, https://northconcepts.com/blog/wp-content/uploads/2021/08/pexels-neosiam-625219_text_7.0-1024x682.jpg 1024w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Welcome to the DataPipeline 7.0 release.  Since our last update, the DataPipeline team has been hard at work adding more declarative components, new integrations, new transformations, and generally making the framework easier to use. Our goal is to make simple use-cases easy and complex ones less difficult to implement.</p>\n<p><span id=\"more-2286\"></span></p>\n<h2>Automatic Data Conversion And Validation</h2>\n<p>With this goal in mind, we&#8217;ve added schema-based data conversions and validation.  The <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/foundations/datamapping/DataMapping.html\">DataMapping</a> and <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/foundations/pipeline/AbstractPipeline.html\">AbstractPipeline</a> classes now have optional <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/foundations/datamapping/DataMapping.html#getSourceEntity--\">sourceEntity</a> and <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/foundations/datamapping/DataMapping.html#getTargetEntity--\">targetEntity</a> properties to validate and convert incoming and outgoing data.  The <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/foundations/schema/EntityDef.html\">EntityDef</a> class can now convert data using one or several <code>mapXXX()</code> methods and validate using the <code>validateXXX()</code> methods.   You can also use EntityDef in a job with the new <a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/foundations/schema/SchemaTransformer.html\">SchemaTransformer</a>.</p>\n<ul>\n<li><a href=\"https://northconcepts.com/docs/foundations/schema\">Schema docs</a></li>\n<li><a href=\"https://northconcepts.com/docs/examples/transform-records-using-schema\">Schema transformer example</a></li>\n<li><a href=\"https://northconcepts.com/docs/examples/tag/schema/\">Schema examples</a></li>\n</ul>\n<h2>Declarative Pipelines</h2>\n<p>This release ensures the components in DataPipeline Foundations can be saved and loaded from JSON and XML. This makes it easier to externalize parts of your app in a database or configuration file &#8212; including your own custom components.</p>\n<ul>\n<li><a href=\"https://github.com/NorthConcepts/DataPipeline-Examples/tree/master/src/main/java/com/northconcepts/datapipeline/foundations/examples/flatfile\">Custom declarative parser</a></li>\n<li><a href=\"https://northconcepts.com/docs/examples/tag/declarative/\">Declarative examples</a></li>\n</ul>\n<h2>Data lineage</h2>\n<p>The new data lineage feature optionally adds metadata to your records and fields indicating where they were loaded from. This can help with audits, data reconciliation, and general troubleshooting.</p>\n<ul>\n<li><a href=\"https://northconcepts.com/docs/data-lineage\">Data lineage docs</a></li>\n<li><a href=\"https://northconcepts.com/docs/examples/tag/data-lineage/\">Data lineage examples</a></li>\n</ul>\n<h2>LocalDateTime, LocalDate, and LocalTime Support</h2>\n<p>In addition to the classic date types (<code>java.util.Date</code>, <code>java.sql.Data</code>, <code>java.sql.Time</code>, and <code>java.sql.Timestamp</code>), DataPipeline now supports <code>LocalDateTime</code>, <code>LocalDate</code>, and <code>LocalTime</code>. These new types are converted behind-the-scenes to and from the classical types. You&#8217;ll find overloaded support in the Field, Record, and transformation classes.</p>\n<ul>\n<li><a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/core/Field.html#getValueAsLocalDateTime--\">Field.getValueAsLocalDateTime() Javadoc</a></li>\n<li><a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/core/Field.html#setValue-java.time.LocalDateTime-\">Field.setValue(java.time.LocalDateTime)</a></li>\n</ul>\n<h2>BigDecimal and BigInteger Field Types</h2>\n<p>Last release we gave BigDecimal and BigInteger their own dedicated field types. This release, we&#8217;ve overloaded methods and constructors throughout DataPipeline and added specific handling to make BigDecimal and BigInteger first class citizens.</p>\n<ul>\n<li><a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/transform/SetField.html#SetField-java.lang.String-java.math.BigDecimal-\">SetField transformer Javadoc</a></li>\n<li><a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/transform/BasicFieldTransformer.html#nullToValue-java.math.BigDecimal-\">BasicFieldTransformer Javadoc</a></li>\n</ul>\n<h2>Expression Language Functions</h2>\n<p>We&#8217;ve improved error messages in the dynamic expression language and added several new functions, including:</p>\n<ul>\n<li>recordContainsValue(), recordContainsNonNullValue(), recordContainsField(), recordContainsNonNullField(), getValue()</li>\n<li>toBoolean(), capitalize(), uncapitalize(), swapCase(), substring(String string, int beginIndex)</li>\n<li>toDate(), toTime(), and toDatetime() now accept Object instead of java.util.Date to convert from more types (LocalDate, LocalDateTime, LocalTime, ZonedDateTime, OffsetDateTime, Instant, and String)</li>\n</ul>\n<ul>\n<li><a href=\"https://northconcepts.com/docs/expression-language/\">Expression language docs</a></li>\n</ul>\n<h2>JsonRecordWriter and XmlRecordWriter</h2>\n<p>The JSON and XML packages now include writers that maintain each record&#8217;s natural structure as if you&#8217;d call toJson() to to Xml() on each one.</p>\n<ul>\n<li><a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/json/JsonRecordWriter.html\">JsonRecordWriter Javadoc</a></li>\n<li><a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/xml/XmlRecordWriter.html\">XmlRecordWriter Javadoc</a></li>\n</ul>\n<h2>Encryption</h2>\n<p>We now have several readers to handle encryption and decryption. We support both symmetric, secret key encryption as well as asymmetric, public-private key encryption. You can encrypt all fields in records or specify the fields to encrypt.</p>\n<ul>\n<li><a href=\"https://github.com/NorthConcepts/DataPipeline-Examples/tree/master/src/main/java/com/northconcepts/datapipeline/examples/security\">Security examples</a></li>\n</ul>\n<h2>Integration Changes</h2>\n<p>DataPipeline adds the following integrations with this release.</p>\n<ul>\n<li><a href=\"https://northconcepts.com/docs/examples/tag/parquet/\">Apache Parquet</a>: ParquetDataReader, ParquetDataWriter</li>\n<li><a href=\"https://northconcepts.com/docs/examples/tag/orc/\">Apache Orc</a>: OrcDataReader, OrcDataWriter</li>\n<li><a href=\"https://northconcepts.com/javadocs/com/northconcepts/datapipeline/jira/package-summary.html\">Jira</a>: JiraEpicReader, JiraIssueReader, JiraProjectReader, JiraSprintReader</li>\n<li><a href=\"https://northconcepts.com/docs/examples/tag/bloomberg/\">Bloomberg</a>: BloombergMessage and BloombergMessageReader</li>\n<li><a href=\"https://northconcepts.com/docs/examples/tag/twitter2/\">Twitter v2</a>: TwitterFilterStreamReader, TwitterFollowerReader, TwitterFollowingReader, TwitterSearchReader, TwitterTimelineMentionsReader, TwitterTimelineTweetsReader</li>\n<li><a href=\"https://northconcepts.com/docs/examples/write-arrays-and-nested-records-to-xml-using-freemarker-templates/\">TemplateWriter now supports nested expressions</a> directly with ability to disable in constructor (to revert to previous behaviour)</li>\n</ul>\n<h2>All Changes</h2>\n<p>This release is one of our biggest yet and has been a long time coming. The above list are just the highlights, you can see the full change log at the link below.</p>\n<p><a href=\"https://northconcepts.com/changelog/\">https://northconcepts.com/changelog/</a></p>\n<h2>Feedback</h2>\n<p>Your feedback is always appreciated and encouraged.  Please <a href=\"mailto:support@northconcepts.com\">email us</a> with your requests, questions and comments.</p>\n<p>Happy coding!</p>\n<p>The post <a rel=\"nofollow\" href=\"https://northconcepts.com/blog/2021/08/19/whats-new-datapipeline-7-0/\">What’s New in DataPipeline 7.0?</a> appeared first on <a rel=\"nofollow\" href=\"https://northconcepts.com/blog\">Data Pipeline</a>.</p>\n",
  "wfw:commentRss": "https://northconcepts.com/blog/2021/08/19/whats-new-datapipeline-7-0/feed/",
  "slash:comments": 0
}