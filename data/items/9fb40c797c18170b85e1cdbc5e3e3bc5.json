{
  "id": "tag:blogger.com,1999:blog-9149402429183581490.post-7371474520122350280",
  "published": "2015-10-01T23:14:00.000-07:00",
  "updated": "2015-10-02T14:18:15.530-07:00",
  "title": "Elo's Rating System as a Forgetful Logistic Model",
  "content": "<a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\" target=\"_blank\">Elo's rating system</a> became famous from its use in chess, but it and variations are now used in <a href=\"http://fivethirtyeight.com/datalab/introducing-nfl-elo-ratings/\" target=\"_blank\">sports like the NFL</a> to <a href=\"http://leagueoflegends.wikia.com/wiki/Elo_rating_system\" target=\"_blank\">eSports like League of Legends</a>. It also was infamously used on various \"Hot or Not\" type websites, as shown in this scene from the movie \"Social Network\":<br /><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https://i.ytimg.com/vi/BzZRr4KV59I/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https://www.youtube.com/embed/BzZRr4KV59I?feature=player_embedded\" width=\"320\"></iframe></div><div><br /></div><div>Of course, there's a mistake in the formula in the movie!</div><div><br /></div><div>What is the Elo rating system? As originally proposed, it presumes that if two players A and B have ratings \\(R_A\\) and \\(R_B\\), then the expected score of player A is \\[\\frac{1}{1+10^{\\frac{R_B-R_A}{400}}}.\\] Furthermore, if A has a current rating of \\(R_A\\) and plays some more games, then the updated rating \\({R_A}'\\) is given by \\({R_A}' = R_A + K(S_A-E_A)\\), where \\(K\\) is an adjustment factor, \\(S_A\\) is the number of points scored by A and \\(E_A\\) was the expected number of points scored by A based on the rating \\(R_A\\).</div><div><br /></div><div>Now, the expected score formula given above has the same form as a <a href=\"https://en.wikipedia.org/wiki/Logistic_regression\" target=\"_blank\">logistic regression model</a>. What's the connection between the two? One answer is that Elo's rating system is a type of&nbsp;<a href=\"https://en.wikipedia.org/wiki/Online_algorithm\" target=\"_blank\">online</a> version of a logistic model. An online algorithm is an algorithm that only sees each piece of data once. As applied to a statistical model, it's a model with parameter estimates that are updated as new data comes in, but not refitting on the entire data set. It can also be considered a&nbsp;<a href=\"https://en.wikipedia.org/wiki/Memorylessness\" target=\"_blank\">memoryless</a> model; it has \"forgotten\" the old data and only knows the current parameter estimates. The appeal of such models is that they're extremely efficient, can operate on enormous data sets and parameter estimates can be updated in real-time.</div><div><br /></div><div>Okay, let's say we have a \"forgetful\" logistic model. Can we derive an updating rule, and does it look like Elo's? I'm going to give one possible derivation under the simplifying assumption that games are won or lost, with no ties.</div><div><br /></div><div>We don't know how many games A and B had previously played, so let's assume they both had previously played \\(n\\) games and have just played \\(m\\) additional games between them, with A scoring \\(S_A\\) points. That means they've both played \\(n+m\\) games, but we're just going to forget this again, so let's adjust everything so that they end up with \\(n\\) games. One way to do this is to <a href=\"https://en.wikipedia.org/wiki/Normalization_(statistics)\" target=\"_blank\">normalize</a> \\(n\\) and \\(m\\) so that they sum to \\(n\\), thus \\(n\\) becomes \\(n\\frac{n}{n+m}\\) and \\(m\\) becomes \\(m\\frac{n}{n+m}\\).</div><div><br /></div><div>We're now assuming they had each played&nbsp;\\(n\\frac{n}{n+m}\\) games in the past, have just played&nbsp;\\(m\\frac{n}{n+m}\\) additional games and A scored \\(S_A \\frac{n}{n+m}\\) points (it has to be adjusted, too!) in those games.</div><div><br /></div><div>Again, we're memoryless, so we don't know how strong the opponents were that each had played in the past, so we're going to assume that they had both played opponents that were as strong as themselves and had won half and lost half of those games. After all, people generally prefer to play competitive games.</div><div><br /></div>Define \\(d\\) by \\({R_A}' = R_A + d\\) and let \\(c = R_A - R_B\\); we also require that \\({R_B}' = R_B - d\\). The <a href=\"https://en.wikipedia.org/wiki/Likelihood_function#Log-likelihood\" target=\"_blank\">log-likelihood</a>&nbsp;\\(L\\) of A having scored&nbsp;\\(S_A \\frac{n}{n+m}\\) points is \\[ \\frac{-2 n^2}{n+m}\\log(1+e^{-d}) -\\frac{n^2}{n+m}d-\\frac{m n}{n+m}\\log(1+e^{-c-2d}) - \\frac{(m-S_A)n(c+2d)}{n+m}.\\] Factoring out the constant term \\(n/(n+m)\\) simplifies this to&nbsp;\\[ L = -2 n\\log(1+e^{-d}) - n d - m \\log(1+e^{-c-2d}) - (m-S_A)(c+2d).\\] Taking the partial derivative of \\(L\\) with respect to \\(d\\) we get<br />\\begin{align}<br />\\frac{\\partial L}{\\partial d} &amp;= 2n \\frac{e^{-d}}{1+e^{-d}} -n + 2m \\frac{e^{-c-2d}}{1+e^{-c-2d}}-2(m-S_A) \\\\<br />&amp;= -n\\frac{1-e^{-d}}{1+e^{-d}} + 2 S_A - 2m\\frac{1}{1+e^{-c-2d}} \\\\<br />&amp;= -n\\tanh(d/2) + 2 S_A - 2m\\frac{1}{1+e^{-c-2d}}.<br />\\end{align} What is \\( m\\frac{1}{1+e^{-c-2d}} \\)? This is actually just \\( {E_A}' \\), the expected score for A when playing B for \\(m\\) games, but assuming the updated ratings for both players. Finally, setting \\(\\frac{\\partial L}{\\partial d} = 0\\), we get \\[ n\\tanh(d/2) = 2(S_A - {E_A}')\\] and hence \\[ \\tanh(d/2) = \\frac{2}{n} (S_A - {E_A}').\\] Assuming \\(n\\) is large relative to \\(S_A - {E_A}'\\), we have \\( \\tanh(d/2) \\approx d/2\\) and \\( {E_A}' \\approx E_A \\). This is Elo's updating rule in the form \\[ d = \\frac{4}{n} (S_A - E_A ).\\] If we rescale with the constant \\( \\sigma \\), the updating rule becomes \\[ d = \\frac{4\\sigma }{n} (S_A - E_A ).\\] We also now see that the adjustment factor \\( K = \\frac{4\\sigma }{n}\\).",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Christopher D. Long",
    "uri": "http://www.blogger.com/profile/13687149457345266350",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": "",
  "thr:total": 2
}