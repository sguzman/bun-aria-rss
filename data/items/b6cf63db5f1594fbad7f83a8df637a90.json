{
  "title": "How to export data-frame from Apache Spark",
  "link": "https://fullstackml.com/how-to-export-data-frame-from-apache-spark-3215274ee9d6?source=rss----46e065078cc1---4",
  "guid": "https://medium.com/p/3215274ee9d6",
  "category": "apache-spark",
  "dc:creator": "Dmitry Petrov",
  "pubDate": "Mon, 21 Dec 2015 17:22:51 GMT",
  "atom:updated": "2017-03-06T05:08:17.219Z",
  "content:encoded": "<p>Apache Spark is a great tool for working with a large amount of data like terabytes and petabytes in a cluster. It’s also very useful in local machine when gigabytes of data do not fit your memory. Normally we use Spark for preparing data and very basic analytic tasks. However, it is not advanced analytical features or even visualization. So, therefore, you have to reduce the amount of data to fit your computer memory capacity. It turns out that Apache Spark still lack the ability to export data in a simple format like CSV.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/400/1*BvVha_IZ8bB43oN3HJ1vgw.png\" /><figcaption>The image was taken from <a href=\"http://exportgenius.blogspot.com/2016/08/india-export-data-customs-trade-data.html\">this web page</a></figcaption></figure><h3>1. spark-csv library</h3><p>I was really surprised when I realized that Spark does not have a CSV exporting features from the box. It turns out that CSV library is an external project. This is must-have library for Spark and I find it funny that this appears to be a marketing plug for Databricks than an Apache Spark project.</p><p>Another surprise is this library does not create one single file. It creates several files based on the data frame partitioning. This means that for one single data-frame it creates several CSV files. I understand that this is good for optimization in a distributed environment but you don’t need this to extract data to R or Python scripts.</p><h3>2. Export from data-frame to CSV</h3><p>Let’s take a closer look to see how this library works and export CSV from data-frame.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/12319a126523b3e49d099d017701f297/href\">https://medium.com/media/12319a126523b3e49d099d017701f297/href</a></iframe><p>You should include this library in your Spark environment. From spark-shell just add — packages parameter:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/ef0322bd5b1794b04ca716063861fcc4/href\">https://medium.com/media/ef0322bd5b1794b04ca716063861fcc4/href</a></iframe><p>This code creates a directory myfile.csv with several CSV files and metadata files. If you need single CSV file, you have to implicitly create one single partition.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/0d0bb87325b2753b2f402d2ad177ccee/href\">https://medium.com/media/0d0bb87325b2753b2f402d2ad177ccee/href</a></iframe><p>We should export data the directory with Parquet data, more CSV to the correct place and remove the directory with all the files. Let’s automate this process:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/35b8ef871aa94cb041732193bdff132f/href\">https://medium.com/media/35b8ef871aa94cb041732193bdff132f/href</a></iframe><h4>Conclusion</h4><p>Apache Spark has many great aspects about it. At this time it cannot be the be-all answer. Usually, you have to pair Spark with your analytical tools like R or Python. However, improvement are constantly being made.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3215274ee9d6\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://fullstackml.com/how-to-export-data-frame-from-apache-spark-3215274ee9d6\">How to export data-frame from Apache Spark</a> was originally published in <a href=\"https://fullstackml.com\">FullStackML</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"
}