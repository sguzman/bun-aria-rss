{
  "title": "How to encode categorical features with scikit-learn (video)",
  "description": "In this 28-minute video, you'll learn how to properly encode your categorical features using scikit-learn's OneHotEncoder, ColumnTransformer, and Pipeline.",
  "link": "https://www.dataschool.io/encoding-categorical-features-in-python/",
  "guid": "5dcaaa91255f57004449e498",
  "category": [
    "Python",
    "tutorial",
    "machine learning"
  ],
  "dc:creator": "Kevin Markham",
  "pubDate": "Tue, 12 Nov 2019 16:07:55 GMT",
  "media:content": "",
  "content:encoded": "<!--kg-card-begin: markdown--><img src=\"https://www.dataschool.io/content/images/2019/11/2019-02-22-sklearn-preprocessing-sm1.jpg\" alt=\"How to encode categorical features with scikit-learn (video)\"><p>In order to include categorical features in your Machine Learning model, you have to encode them numerically using \"dummy\" or \"one-hot\" encoding. <strong>But how do you do this correctly using scikit-learn?</strong></p>\n<p>In this <a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&list=PL5-da3qGB5ICeMbQuqbbCOQWcS6OYBr5A&index=10\">28-minute video</a>, you'll learn:</p>\n<ul>\n<li>How to use <code>OneHotEncoder</code> and <code>ColumnTransformer</code> to <strong>encode your categorical features</strong> and <strong>prepare your feature matrix</strong> in a single step</li>\n<li>How to include this step within a <code>Pipeline</code> so that you can <strong>cross-validate your model and preprocessing steps</strong> simultaneously</li>\n<li><strong>Why you should use scikit-learn</strong> (rather than pandas) for preprocessing your dataset</li>\n</ul>\n<p>If you want to follow along with the code, you can <a href=\"https://github.com/justmarkham/scikit-learn-videos/blob/master/10_categorical_features.ipynb\">download the Jupyter notebook</a> from GitHub.</p>\n<!--\n\n> *\"All of the tricks were **mind blowing**. But the bonus one was out of this world.\"* - Bubai Dutta\n\n-->\n<iframe width=\"853\" height=\"480\" src=\"https://www.youtube.com/embed/irHhDMbw3xo?list=PL5-da3qGB5ICeMbQuqbbCOQWcS6OYBr5A\" frameborder=\"0\" allowfullscreen></iframe>\n<p><strong>Click on a timestamp below</strong> to jump to a particular section:</p>\n<p><a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=0m22s\">0:22</a> Why should you use a <code>Pipeline</code>?<br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=2m30s\">2:30</a> Preview of the lesson<br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=3m35s\">3:35</a> Loading and preparing a dataset<br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=6m11s\">6:11</a> Cross-validating a simple model<br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=10m0s\">10:00</a> Encoding categorical features with <code>OneHotEncoder</code><br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=15m1s\">15:01</a> Selecting columns for preprocessing with <code>ColumnTransformer</code><br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=19m0s\">19:00</a> Creating a two-step <code>Pipeline</code><br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=19m54s\">19:54</a> Cross-validating a <code>Pipeline</code><br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=21m44s\">21:44</a> Making predictions on new data<br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=23m43s\">23:43</a> Recap of the lesson<br>\n<a href=\"https://www.youtube.com/watch?v=irHhDMbw3xo&t=24m50s\">24:50</a> Why should you use scikit-learn (rather than pandas) for preprocessing?</p>\n<h2 id=\"relatedresources\">Related Resources</h2>\n<ul>\n<li>scikit-learn documentation for <a href=\"https://scikit-learn.org/stable/modules/preprocessing.html#preprocessing-categorical-features\">OneHotEncoder</a>, <a href=\"https://scikit-learn.org/stable/modules/compose.html#columntransformer-for-heterogeneous-data\">ColumnTransformer</a>, and <a href=\"https://scikit-learn.org/stable/modules/compose.html#pipeline\">Pipeline</a></li>\n<li>My free course: <a href=\"https://courses.dataschool.io/introduction-to-machine-learning-with-scikit-learn\">Introduction to Machine Learning with scikit-learn</a></li>\n<li>My videos on <a href=\"https://www.youtube.com/watch?v=6dbrR-WymjI&list=PL5-da3qGB5ICeMbQuqbbCOQWcS6OYBr5A&index=7\">cross-validation</a> and <a href=\"https://www.youtube.com/watch?v=Gol_qOgRqfA&list=PL5-da3qGB5ICeMbQuqbbCOQWcS6OYBr5A&index=8\">grid search</a></li>\n<li>My lesson notebook on <a href=\"https://nbviewer.jupyter.org/github/justmarkham/DAT8/blob/master/notebooks/19_advanced_sklearn.ipynb\">StandardScaler</a></li>\n</ul>\n<p><strong>P.S. Want to master Machine Learning in Python?</strong> Enroll in my online course, <a href=\"https://courses.dataschool.io/building-an-effective-machine-learning-workflow-with-scikit-learn\">Building an Effective Machine Learning Workflow with scikit-learn</a>!</p>\n<script async data-uid=\"d6d0f53c0f\" src=\"https://dataschool.ck.page/d6d0f53c0f/index.js\"></script>\n<!--\n<blockquote class=\"twitter-tweet\" data-cards=\"hidden\"><p lang=\"en\" dir=\"ltr\">NEW VIDEO: How do I encode categorical features using scikit-learn? ðŸ“º<br><br>ðŸ‘‰ <a href=\"https://t.co/PUlq5fViaW\">https://t.co/PUlq5fViaW</a>ðŸ‘ˆ<br><br>You'll learn:<br>- How to use OneHotEncoder & ColumnTransformer<br>- How to include this step within a Pipeline<br>- Why *not* to use pandas for dummy encoding<a href=\"https://twitter.com/hashtag/Python?src=hash&ref_src=twsrc%5Etfw\">#Python</a> <a href=\"https://twitter.com/hashtag/MachineLearning?src=hash&ref_src=twsrc%5Etfw\">#MachineLearning</a> <a href=\"https://t.co/JokO0FahQX\">pic.twitter.com/JokO0FahQX</a></p>&mdash; Kevin Markham (@justmarkham) <a href=\"https://twitter.com/justmarkham/status/1194333409071501312?ref_src=twsrc%5Etfw\">November 12, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n--><!--kg-card-end: markdown-->"
}