{
  "id": "tag:blogger.com,1999:blog-8474926331452026626.post-8280632452472362334",
  "published": "2022-10-06T13:05:00.002-07:00",
  "updated": "2022-10-22T19:48:00.054-07:00",
  "category": [
    "",
    "",
    ""
  ],
  "title": "AudioLM: a Language Modeling Approach to Audio Generation",
  "content": "<span class=\"byline-author\">Posted by Zalán Borsos, Research Software Engineer, and Neil Zeghidour, Research Scientist, Google Research</span> <p>Generating realistic audio requires modeling information represented at different scales. For example, just as music builds complex musical phrases from individual notes, speech combines temporally local structures, such as phonemes or syllables, into words and sentences. Creating well-structured and coherent audio sequences at all these scales is a challenge that has been addressed by coupling audio with transcriptions that can guide the generative process, be it <a href=\"https://ai.googleblog.com/2017/12/tacotron-2-generating-human-like-speech.html\">text transcripts for speech synthesis</a> or <a href=\"https://magenta.tensorflow.org/music-transformer\">MIDI representations for piano</a>. However, this approach breaks when trying to model untranscribed aspects of audio, such as speaker characteristics necessary to <a href=\"https://ai.googleblog.com/2019/07/parrotron-new-research-into-improving.html\">help people with speech impairments recover their voice</a>, or stylistic components of a piano performance. </p><a name='more'></a><p>In “<a href=\"https://arxiv.org/abs/2209.03143\">AudioLM: a Language Modeling Approach to Audio Generation</a>”, we propose a new framework for audio generation that learns to generate realistic speech and piano music by listening to audio only. Audio generated by AudioLM demonstrates long-term consistency (e.g., syntax in speech, melody in music) and high fidelity, outperforming previous systems and pushing the frontiers of audio generation with applications in speech synthesis or computer-assisted music. Following our <a href=\"http://ai.google/principles\">AI Principles</a>, we've also developed a model to identify synthetic audio generated by AudioLM. </p><div style=\"line-height:40%;\">    <br></div><h2>From Text to Audio Language Models</h2><p>In recent years, language models trained on very large text corpora have demonstrated their exceptional generative abilities, from <a href=\"https://blog.google/technology/ai/lamda/\">open-ended dialogue</a> to <a href=\"https://ai.googleblog.com/2022/05/24-new-languages-google-translate.html\">machine translation</a> or even <a href=\"https://ai.googleblog.com/2022/04/pathways-language-model-palm-scaling-to.html\">common-sense reasoning</a>. They have further shown their capacity to model other signals than texts, such <a href=\"https://parti.research.google/\">as natural images</a>. The key intuition behind AudioLM is to leverage such advances in language modeling to generate audio without being trained on annotated data.  </p><p>However, some challenges need to be addressed when moving from text language models to audio language models. First, one must cope with the fact that the data rate for audio is significantly higher, thus leading to much longer sequences — while a written sentence can be represented by a few dozen characters, its audio <a href=\"https://en.wikipedia.org/wiki/Waveform\">waveform</a> typically contains hundreds of thousands of values. Second, there is a one-to-many relationship between text and audio. This means that the same sentence can be rendered by different speakers with different speaking styles, emotional content and recording conditions.  </p><p>To overcome both challenges, AudioLM leverages two kinds of audio tokens. First, <em>semantic tokens</em> are extracted from <a href=\"https://arxiv.org/abs/2108.06209\">w2v-BERT</a>, a self-supervised audio model. These tokens capture both local dependencies (e.g., phonetics in speech, local melody in piano music) and global long-term structure (e.g., language syntax and semantic content in speech, harmony and rhythm in piano music), while heavily downsampling the audio signal to allow for modeling long sequences.   </p><p>However, audio reconstructed from these tokens demonstrates poor fidelity. To overcome this limitation, in addition to semantic tokens, we rely on <em>acoustic tokens</em> produced by <a href=\"https://ai.googleblog.com/2021/08/soundstream-end-to-end-neural-audio.html\">a SoundStream neural codec</a>, which capture the details of the audio waveform (such as speaker characteristics or recording conditions) and allow for high-quality synthesis. Training a system to generate both semantic and acoustic tokens leads simultaneously to high audio quality and long-term consistency.  </p><div style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiX0MyO_IXk730mCbbJX7LXxBRIxJk2K41Y4leuEk4WQRjz0kgIp9CGHFwLePaKt3qEcCK8fvhAxjJ7J_sXH05q7xnsMbjZZFDDLPIlVyaKr3yYo77oT2KBqe9gw4MFuUZnUfxFprP67ExPzr2RNxduB0SruUGjJXghihHSoxvMtlG3YNtHHesZOJzY/s960/image2.png\"><img border=\"0\" data-original-height=\"330\" data-original-width=\"960\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiX0MyO_IXk730mCbbJX7LXxBRIxJk2K41Y4leuEk4WQRjz0kgIp9CGHFwLePaKt3qEcCK8fvhAxjJ7J_sXH05q7xnsMbjZZFDDLPIlVyaKr3yYo77oT2KBqe9gw4MFuUZnUfxFprP67ExPzr2RNxduB0SruUGjJXghihHSoxvMtlG3YNtHHesZOJzY/s16000/image2.png\" /></a></div><h2>Training an Audio-Only Language Model</h2><p>AudioLM is a pure audio model that is trained without any text or symbolic representation of music. AudioLM models an audio sequence hierarchically, from semantic tokens up to fine acoustic tokens, by chaining several <a href=\"https://ai.googleblog.com/2017/08/transformer-novel-neural-network.html\">Transformer</a> models, one for each stage. Each stage is trained for the next token prediction based on past tokens, as one would train a text language model. The first stage performs this task on semantic tokens to model the high-level structure of the audio sequence. </p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjyLXFSPJXdgbOkxanFQ4TChCGNF6dRkntaSTtsoFChIR4Tp97RJesNvMhwVlgHLcI7j_D6Vkur2u5GtTVOVrswAsoNK93VtOEU0xBFqgS6SPrnYCl5O8cA_9qNCRADnty2_seXrB5fYsYoLjRyKAFdHlRfwJvHl-iDTW7V07EQJUQeBAen3jfktwLn/s958/image6.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"184\" data-original-width=\"958\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjyLXFSPJXdgbOkxanFQ4TChCGNF6dRkntaSTtsoFChIR4Tp97RJesNvMhwVlgHLcI7j_D6Vkur2u5GtTVOVrswAsoNK93VtOEU0xBFqgS6SPrnYCl5O8cA_9qNCRADnty2_seXrB5fYsYoLjRyKAFdHlRfwJvHl-iDTW7V07EQJUQeBAen3jfktwLn/s16000/image6.png\" /></a></div><p>  In the second stage, we concatenate the entire semantic token sequence, along with the past coarse acoustic tokens, and feed both as conditioning to the coarse acoustic model, which then predicts the future tokens. This step models acoustic properties such as speaker characteristics in speech or timbre in music. </p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiwPPMHQ8s-D3GVIeGIxaRmwVqcb4sh7eZHs7El7gwP7pvoXk3Cv3qSjBhETkMzJzt7_3eBV8t4FkdAExVCVV-i7RrWo2HZJoai3w4Nj1R7mf4tatvPa8jOOO-iqZWmMYyg-o9we-MLi81QgCp4pG5AGDI-ifHgrw1Oc1-6kb2ZMflnEsqjdnonLOuM/s960/image1.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"166\" data-original-width=\"960\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiwPPMHQ8s-D3GVIeGIxaRmwVqcb4sh7eZHs7El7gwP7pvoXk3Cv3qSjBhETkMzJzt7_3eBV8t4FkdAExVCVV-i7RrWo2HZJoai3w4Nj1R7mf4tatvPa8jOOO-iqZWmMYyg-o9we-MLi81QgCp4pG5AGDI-ifHgrw1Oc1-6kb2ZMflnEsqjdnonLOuM/s16000/image1.png\" /></a></div><p>  In the third stage, we process the coarse acoustic tokens with the fine acoustic model, which adds even more detail to the final audio. Finally, we feed acoustic tokens to the SoundStream decoder to reconstruct a waveform. </p><div style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdFRqUq5R0CwA7eaE0qAXStL2AAZw3LNOxus3NYoz_JkbWSXz1ydyb839s0Z5qPk_wTGgAYL4B_XZBQRXaSsYtb9RYZZpf8kB8UjhwbGMZBhqswxse110R2OaVc4szGTvcSqZLm4hSCQ3howGlmEMoJxhvonK3MWkp49RquIhciqCJ349fCv6KxvUl/s960/image4.png\"><img border=\"0\" data-original-height=\"403\" data-original-width=\"960\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdFRqUq5R0CwA7eaE0qAXStL2AAZw3LNOxus3NYoz_JkbWSXz1ydyb839s0Z5qPk_wTGgAYL4B_XZBQRXaSsYtb9RYZZpf8kB8UjhwbGMZBhqswxse110R2OaVc4szGTvcSqZLm4hSCQ3howGlmEMoJxhvonK3MWkp49RquIhciqCJ349fCv6KxvUl/s16000/image4.png\" /></a></div><p>  After training, one can condition AudioLM on a few seconds of audio, which enables it to generate consistent continuation. In order to showcase the general applicability of the AudioLM framework, we consider two tasks from different audio domains:  </p><ul><li><em>Speech continuation</em>, where the model is expected to retain the speaker characteristics, <a href=\"https://en.wikipedia.org/wiki/Prosody_(linguistics)\">prosody</a> and recording conditions of the prompt while producing new content that is syntactically correct and semantically consistent. </li><li><em>Piano continuation</em>, where the model is expected to generate piano music that is coherent with the prompt in terms of melody, harmony and rhythm. </li></ul><p>In the video below, you can listen to examples where the model is asked to continue either speech or music and generate new content that was not seen during training. As you listen, note that everything you hear after the gray vertical line was generated by AudioLM and that the model has never seen any text or musical transcription, but rather just learned from raw audio. We release more samples on <a href=\"https://google-research.github.io/seanet/audiolm/examples/\">this webpage</a>. </p><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/_xkZwJ0H9IU\" width=\"640\" youtube-src-id=\"_xkZwJ0H9IU\"></iframe></div><p>To validate our results, we asked human raters to listen to short audio clips and decide whether it is an original recording of human speech or a synthetic continuation generated by AudioLM. Based on the ratings collected, we observed a 51.2% success rate, which is not statistically significantly different from the 50% success rate achieved when assigning labels at random. This means that speech generated by AudioLM is hard to distinguish from real speech for the average listener. </p><p>Our work on AudioLM is for research purposes and we have no plans to release it more broadly at this time. In alignment with our <a href=\"http://ai.google/principles\">AI Principles</a>, we sought to understand and mitigate the possibility that people could misinterpret the short speech samples synthesized by AudioLM as real speech. For this purpose, we trained a classifier that can detect synthetic speech generated by AudioLM with very high accuracy (98.6%). This shows that despite being (almost) indistinguishable to some listeners, continuations generated by AudioLM are very easy to detect with a simple audio classifier. This is a crucial first step to help protect against the potential misuse of AudioLM, with future efforts potentially exploring technologies such as audio “watermarking”. </p><div style=\"line-height:40%;\">    <br></div><h2>Conclusion</h2><p>We introduce AudioLM, a language modeling approach to audio generation that provides both long-term coherence and high audio quality. Experiments on speech generation show not only that AudioLM can generate syntactically and semantically coherent speech without any text, but also that continuations produced by the model are almost indistinguishable from real speech by humans. Moreover, AudioLM goes well beyond speech and can model arbitrary audio signals such as piano music. This encourages the future extensions to other types of audio (e.g., multilingual speech, polyphonic music, and audio events) as well as integrating AudioLM into an encoder-decoder framework for conditioned tasks such as text-to-speech or speech-to-speech translation. </p><div style=\"line-height:40%;\">    <br></div><h2>Acknowledgments</h2><p><em>The work described here was authored by Zalán Borsos, Raphaël Marinier, Damien Vincent, Eugene Kharitonov, Olivier Pietquin, Matt Sharifi, Olivier Teboul, David Grangier, Marco Tagliasacchi and Neil Zeghidour. We are grateful for all discussions and feedback on this work that we received from our colleagues at Google. </em></p>",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Andrew Helton",
    "uri": "http://www.blogger.com/profile/12510940840342590054",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": "",
  "thr:total": 0
}