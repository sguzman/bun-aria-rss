{
  "title": "e025: Traits Deep Dive, Part III",
  "link": "https://newrustacean.com/show_notes/e025/",
  "description": "<p>Closure traits, `impl trait`, `dyn trait`, and object safety!</p>\n<h2 id=\"show-notes\">Show Notes</h2>\n<p>Sponsored by <a href=\"https://paritytech.io\">Parity Technologies</a>! Parity is hiring Rust developers so if you’re interested, you should check out their <a href=\"https://paritytech.io/jobs/\">job listings</a>!</p>\n<h3 id=\"links\">Links</h3>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1733-trait-alias.md\">RFC #1733: Trait Aliases</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0255-object-safety.md\">RFC #255: Object Safety</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\">Ch. 17 in the Second Edition of <em>The Rust Programming Language</em></a></li>\n<li><a href=\"https://huonw.github.io/blog/2015/05/where-self-meets-sized-revisiting-object-safety/\" title=\"Where Self Meets Sized: Revisiting Object Safety\">Huon Wilson’s post</a></li>\n</ul>\n<h3 id=\"example\">Example</h3>\n<p>You can see all of the pieces of the final example described in the show here (and the module has the required definitions for <code>Point</code>).</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode rust\"><code class=\"sourceCode rust\"><a class=\"sourceLine\" id=\"cb1-1\" data-line-number=\"1\"><span class=\"kw\">let</span> points = <span class=\"pp\">vec!</span><span class=\"op\">[</span></a>\n<a class=\"sourceLine\" id=\"cb1-2\" data-line-number=\"2\">    Point <span class=\"op\">{</span> x: <span class=\"dv\">1.0</span>, y: <span class=\"dv\">2.0</span> <span class=\"op\">}</span>,</a>\n<a class=\"sourceLine\" id=\"cb1-3\" data-line-number=\"3\">    Point <span class=\"op\">{</span> x: <span class=\"dv\">12.0</span>, y: <span class=\"dv\">4.3</span> <span class=\"op\">}</span>,</a>\n<a class=\"sourceLine\" id=\"cb1-4\" data-line-number=\"4\">    Point <span class=\"op\">{</span> x: -<span class=\"dv\">5.4</span>, y: <span class=\"dv\">18.7</span> <span class=\"op\">}</span>,</a>\n<a class=\"sourceLine\" id=\"cb1-5\" data-line-number=\"5\"><span class=\"op\">]</span>;</a>\n<a class=\"sourceLine\" id=\"cb1-6\" data-line-number=\"6\"></a>\n<a class=\"sourceLine\" id=\"cb1-7\" data-line-number=\"7\"><span class=\"kw\">let</span> origin = Point::default();</a>\n<a class=\"sourceLine\" id=\"cb1-8\" data-line-number=\"8\"></a>\n<a class=\"sourceLine\" id=\"cb1-9\" data-line-number=\"9\"><span class=\"co\">// This is the version we start with. It works fine, but it's not elegant.</span></a>\n<a class=\"sourceLine\" id=\"cb1-10\" data-line-number=\"10\"><span class=\"kw\">let</span> distances_inline: <span class=\"dt\">Vec</span><<span class=\"dt\">f32</span>> = points</a>\n<a class=\"sourceLine\" id=\"cb1-11\" data-line-number=\"11\">    .iter()</a>\n<a class=\"sourceLine\" id=\"cb1-12\" data-line-number=\"12\">    .map(|point| <span class=\"op\">{</span></a>\n<a class=\"sourceLine\" id=\"cb1-13\" data-line-number=\"13\">        <span class=\"kw\">let</span> change = point - &origin;</a>\n<a class=\"sourceLine\" id=\"cb1-14\" data-line-number=\"14\">        (change.x.powi(<span class=\"dv\">2</span>) + change.y.powi(<span class=\"dv\">2</span>)).sqrt()</a>\n<a class=\"sourceLine\" id=\"cb1-15\" data-line-number=\"15\">    <span class=\"op\">}</span>)</a>\n<a class=\"sourceLine\" id=\"cb1-16\" data-line-number=\"16\">    .collect();</a>\n<a class=\"sourceLine\" id=\"cb1-17\" data-line-number=\"17\"></a>\n<a class=\"sourceLine\" id=\"cb1-18\" data-line-number=\"18\"><span class=\"co\">// This version is *much* cleaner!</span></a>\n<a class=\"sourceLine\" id=\"cb1-19\" data-line-number=\"19\"><span class=\"kw\">let</span> distances_impl: <span class=\"dt\">Vec</span><<span class=\"dt\">f32</span>> = points.iter().map(distance_from_impl(&origin)).collect();</a></code></pre></div>\n<h2 id=\"sponsors\">Sponsors</h2>\n<ul>\n<li>Aaron Turon</li>\n<li>Alexander Kryvomaz</li>\n<li>Alexander Payne</li>\n<li><a href=\"https://github.com/adeschamps\">Anthony Deschamps</a></li>\n<li>Anthony Scotti</li>\n<li>Antonin Carette</li>\n<li>Aleksey Pirogov</li>\n<li>Andreas Fischer</li>\n<li>Andrew Thompson</li>\n<li>Austin LeSure</li>\n<li><a href=\"https://github.com/behnam\">Behnam Esfahbod</a></li>\n<li>Benjamin Wasty</li>\n<li>Brent Vatne</li>\n<li>Brian Casiello</li>\n<li>Chap Lovejoy</li>\n<li><a href=\"https://charlieegan3.com\">Charlie Egan</a></li>\n<li>Chris Jones</li>\n<li><a href=\"http://red-oxide.org/\">Chris Palmer</a></li>\n<li><a href=\"http://github.com/anxiousmodernman\">Coleman McFarland</a></li>\n<li>Damien Stanton</li>\n<li>Dan Abrams</li>\n<li><a href=\"https://twitter.com/daniel_collin\">Daniel Collin</a></li>\n<li>Daniel Mason</li>\n<li><a href=\"https://6ftdan.com/\">Daniel P. Clark</a></li>\n<li><a href=\"http://GitHub.com/DataRiot\">David W. Allen</a></li>\n<li>David Hewson</li>\n<li>Derek Buckley</li>\n<li><a href=\"https://twitter.com/derekmorr\">Derek Morr</a></li>\n<li>Eugene Bulkin</li>\n<li>[Hans Fjällemark]</li>\n<li><a href=\"https://hsivonen.fi/\">Henri Sivonen</a></li>\n<li><a href=\"https://www.ianmjones.com/\">Ian Jones</a></li>\n<li><a href=\"https://github.com/Limeth\">Jakub “Limeth” Hlusička</a></li>\n<li>James Cooper</li>\n<li>Jerome Froelich</li>\n<li><a href=\"http://www.cindur.com/\">John Rudnick</a></li>\n<li>Jon</li>\n<li>Jonathan Turner</li>\n<li>Joseph Hain</li>\n<li><a href=\"https://de.linkedin.com/in/juppm\">Jupp Müller</a></li>\n<li>Justin Ossevoort</li>\n<li><a href=\"https://github.com/kaedroho/\">Karl Hobley</a></li>\n<li>Keith Gray</li>\n<li>Kilian Rault</li>\n<li>Laurie Hedge</li>\n<li>Luca Schmid</li>\n<li><a href=\"http://luizirber.org/\">Luiz Irber</a></li>\n<li>Mark LeMoine</li>\n<li>Martin Heuschober</li>\n<li>Masashi Fujita</li>\n<li>Matt Rudder</li>\n<li>Matthew Brenner</li>\n<li>Matthias Ruszala</li>\n<li><a href=\"https://twitter.com/maxjacobson\">Max Jacobson</a></li>\n<li><a href=\"https://github.com/messense\">Messense Lv</a></li>\n<li>Micael Bergeron</li>\n<li><a href=\"http://influential.co/\">Nathan Sculli</a></li>\n<li><a href=\"https://github.com/nastevens\">Nick Stevens</a></li>\n<li><a href=\"http://oluseyi.info/\">Oluseyi Sonaiya</a></li>\n<li>Ovidiu Curcan</li>\n<li><a href=\"https://pascalhertleif.de/\">Pascal Hertleif</a></li>\n<li><a href=\"https://twitter.com/patrickod\">Patrick O’Doherty</a></li>\n<li>[Paul Naranja]</li>\n<li>Peter Tillemans</li>\n<li>Ralph Giles (“rillian”)</li>\n<li>Raj Venkalil</li>\n<li><a href=\"http://www.inosion.com\">Ramon Buckland</a></li>\n<li>Randy MacLeod</li>\n<li>Raph Levien</li>\n<li>reddraggone9</li>\n<li><a href=\"https://github.com/zirman\">Robert Chrzanowski</a></li>\n<li><a href=\"http://notryanb.github.io/\">Ryan Blecher</a></li>\n<li>Ryan Osial</li>\n<li><a href=\"https://www.twitter.com/sebasmagri\">Sebastián Ramírez Magrí</a></li>\n<li>Shane Utt</li>\n<li>Simon G.</li>\n<li>Steve Jenson</li>\n<li>Steven Knight</li>\n<li>Steven Murawski</li>\n<li><a href=\"http://stuarth.github.io/\">Stuart Hinson</a></li>\n<li>Tim Brooks</li>\n<li>Tom Prince</li>\n<li>Ty Overby</li>\n<li>Tyler Harper</li>\n<li>Vesa Kaihlavirta</li>\n<li>Victor Kruger</li>\n<li>Will Greenberg</li>\n<li><a href=\"http://willroe.me\">William Roe</a></li>\n<li>Yaacov Finkelman</li>\n<li>Zachary Snyder</li>\n<li>Zaki</li>\n</ul>\n<p>(Thanks to the couple people donating who opted out of the reward tier, as well. You know who you are!)</p>\n<h3 id=\"become-a-sponsor\">Become a sponsor</h3>\n<ul>\n<li><a href=\"https://www.patreon.com/newrustacean\" rel=\"payment\">Patreon</a></li>\n<li><a href=\"https://venmo.com/chriskrycho\">Venmo</a></li>\n<li><a href=\"https://www.dwolla.com/hub/chriskrycho\">Dwolla</a></li>\n<li><a href=\"https://cash.me/$chriskrycho\">Cash.me</a></li>\n<li><a href=\"https://flattr.com/profile/chriskrycho\">Flattr</a></li>\n<li><a href=\"https://paypal.me/chriskrycho\">PayPal.me</a></li>\n</ul>\n<h2 id=\"contact\">Contact</h2>\n<ul>\n<li>New Rustacean:\n<ul>\n<li>Twitter: <a href=\"https://www.twitter.com/newrustacean\">@newrustacean</a></li>\n<li>Email: <a href=\"mailto:hello@newrustacean.com\">hello@newrustacean.com</a></li>\n</ul></li>\n<li>Chris Krycho\n<ul>\n<li>GitHub: <a href=\"https://github.com/chriskrycho\">chriskrycho</a></li>\n<li>Twitter: <a href=\"https://www.twitter.com/chriskrycho\">@chriskrycho</a></li>\n</ul></li>\n</ul>\n",
  "pubDate": "Wed, 04 Jul 2018 19:27:56 -0600",
  "enclosure": "",
  "guid": "7D91156A-9084-4737-A872-E50FCF7ED72A",
  "itunes:subtitle": "Closure traits, `impl trait`, `dyn trait`, and object safety!",
  "itunes:summary": "Closure traits, `impl trait`, `dyn trait`, and object safety!",
  "itunes:duration": "20:36",
  "itunes:episodeType": "full"
}