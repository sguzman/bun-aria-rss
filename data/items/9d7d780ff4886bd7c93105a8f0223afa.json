{
  "title": "Approximate Nearest Neighbours for Recommender Systems",
  "link": "",
  "updated": "2017-10-11T00:00:00-07:00",
  "id": "http://www.benfrederickson.com/approximate-nearest-neighbours-for-recommender-systems/",
  "content": "\n        \n            <img src=\"http://www.benfrederickson.com/images/recommendations-using-approximate-nearest-neighbours/recommendperf.png\" width=\"100%\" style=\"max-width:500px\">\n        \n        <p>One challenge that recommender systems face is in quickly generating a list of the best \nrecommendations to show for the user. These days many libraries can quickly train models\nthat can handle millions of users and millions of items, but the naive\nsolution for evaluating these models involves ranking every single item for every single\nuser which can be extremely expensive.  As an example, my\n<a href=\"https://github.com/benfred/implicit\">implicit</a> recommendation library can train a model on the\n<a href=\"http://www.dtic.upf.edu/~ocelma/MusicRecommendationDataset/lastfm-360K.html\">last.fm dataset</a>\nin 24 seconds on my desktop - but takes over an hour to use that model to generate\nrecommendations for each user.</p>\n\n<p>This post is about evaluating a couple of different approximate nearest neighbours libraries \nto speed up making recommendations made by matrix factorization models. In particular, the libraries I’m looking at are\n<a href=\"https://github.com/spotify/annoy\">Annoy</a>, <a href=\"https://github.com/searchivarius/nmslib\">NMSLib</a>\nand <a href=\"https://github.com/facebookresearch/faiss\">Faiss</a>.</p>\n\n<p>I’ve used Annoy successfully for a couple different projects\nnow in the past - but was recently intrigued when I read that NMSLib <a href=\"https://github.com/erikbern/ann-benchmarks\">can be up to 10x\nfaster</a> when using its <a href=\"https://arxiv.org/abs/1603.09320\">Hierarchical Navigable Small\nWorld Graph</a> (HNSW) index option. \nI also wanted to try out Faiss after reading the <a href=\"https://code.facebook.com/posts/1373769912645926/faiss-a-library-for-efficient-similarity-search/\">blog post</a>\nthat Facebook Research wrote about it - where they claimed that the GPU enabled version of Faiss\nwas the fastest available option.</p>\n\n<p>Both NMSLib and Faiss turn out to be extremely good at this task, and I’ve added <a href=\"https://github.com/benfred/implicit/pull/51\">code to\nimplicit</a> to use these libraries for generating recommendations.</p>\n\n<p class='more'><a href='http://www.benfrederickson.com/approximate-nearest-neighbours-for-recommender-systems/'>Read more ...</a></p>\n     "
}