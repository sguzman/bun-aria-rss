{
  "title": "Nightcore &#8220;Schweine&#8221; video making",
  "link": "https://mathematicaforprediction.wordpress.com/2022/05/09/nightcore-schweine-video-making/",
  "comments": "https://mathematicaforprediction.wordpress.com/2022/05/09/nightcore-schweine-video-making/#respond",
  "dc:creator": "Anton Antonov Antonov",
  "pubDate": "Mon, 09 May 2022 11:58:12 +0000",
  "category": [
    "Image processing",
    "video processing",
    "glukoza",
    "music",
    "nightcore"
  ],
  "guid": "http://mathematicaforprediction.wordpress.com/?p=1244",
  "description": "This post shows how to make Nightcore modifications to a song video. We use Glukoza's song \"Schweine\". The song \"Schweine\" became popular via the radio station Vladivostok FM of the game \"Grand Theft Auto IV\".",
  "content:encoded": "<h2 id=\"introduction\">Introduction</h2>\n<p>This notebook/document shows how to make <a href=\"https://en.wikipedia.org/wiki/Nightcore\">Nightcore</a> modifications to a song video. We use <a href=\"http://www.glukoza.com\">Glukoza’s</a> song “Schweine”. The song “Schweine” became popular via the <a href=\"https://gta.fandom.com/wiki/Radio_Stations_in_GTA_IV#Vladivostok_FM\">radio station Vladivostok FM</a> of the game <a href=\"https://en.wikipedia.org/wiki/Grand_Theft_Auto_IV\">“Grand Theft Auto IV”</a>.</p>\n<p><strong>Remark:</strong> We use Schweine since its licencing allows copies of it to be (publicly) played <a href=\"https://www.youtube.com/watch?v=8UsR9L3KPIU\">via YouTube</a>.</p>\n<p>The Nightcore transformation of the song was fairly straightforward with Mathematica / WL. The video transformation and combination are also fairly straightforward or easy.</p>\n<p><strong>Remark:</strong> Here is the final result uploaded to YouTube (<a href=\"https://www.youtube.com/watch?v=8UsR9L3KPIU\" rel=\"nofollow\">https://www.youtube.com/watch?v=8UsR9L3KPIU</a>):</p>\n<p><a href=\"https://www.youtube.com/watch?v=8UsR9L3KPIU\"><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/0ffx6fronoawk.png\" /></a></p>\n<h2 id=\"get-movies\">Get movies</h2>\n<p>Here is a link to the official video: <a href=\"https://www.youtube.com/watch?v=Ue5ZBe-GzSM\" rel=\"nofollow\">https://www.youtube.com/watch?v=Ue5ZBe-GzSM</a> .</p>\n<p>Here is a link to a version with English subtitles: <a href=\"https://www.youtube.com/watch?v=9Es1nPWzJ-0\" rel=\"nofollow\">https://www.youtube.com/watch?v=9Es1nPWzJ-0</a> .</p>\n<p>Download at least one of the videos. (Use a Firefox or Google Chrome plugin; use <a href=\"https://www.videolan.org/vlc/\">VLC</a>; or utilize the paclet described in the post <a href=\"https://b3m2a1.github.io/playing-with-youtube-from-mathematica.html\">“Playing with YouTube from Mathematica”</a>, [BMI1].)</p>\n<p>Here we import the downloaded video:</p>\n<div id=\"cb1\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb1-1\">vdSubSchweine <span class=\"ex\">=</span> <span class=\"fu\">Import</span><span class=\"op\">[</span><span class=\"st\">\"~/Downloads/Glukoza Nostra - Schweine -subtitled-.mp4\"</span><span class=\"op\">]</span></span></code></pre>\n</div>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/1ow21rc06glgb.png\" alt=\"1ow21rc06glgb\" /></figure>\n<h2 id=\"make-nightcore-audio\">Make Nightcore audio</h2>\n<p>The process for making a song Nightcore is described in Wikipedia, [Wk1]. Basically, we just make the tempo 20-30% faster and raise the pitch with, ≈5.5 semitones.</p>\n<p><strong>Remark:</strong> An alternative of the process shown in this section is to use audio transformation programs like <a href=\"https://www.audacityteam.org\">Audacity</a> and <a href=\"https://apps.apple.com/us/app/amadeus-pro/id438292371?mt=12\">AmadeusPro</a>.</p>\n<p>Here we get the audio from the video:</p>\n<div id=\"cb2\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb2-1\">auSchweine <span class=\"ex\">=</span> Audio<span class=\"op\">[</span>vdSubSchweine<span class=\"op\">]</span></span></code></pre>\n</div>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/1uuz3gsogs93f.png\" alt=\"1uuz3gsogs93f\" /><figcaption aria-hidden=\"true\">1uuz3gsogs93f</figcaption></figure>\n<p>Here we change the tempo to be 20% faster:</p>\n<div id=\"cb3\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb3-1\"><span class=\"fu\">AbsoluteTiming</span><span class=\"op\">[</span></span>\n<span id=\"cb3-2\">  auSchweineFaster <span class=\"ex\">=</span> AudioTimeStretch<span class=\"op\">[</span>auSchweine<span class=\"op\">,</span> <span class=\"dv\">1</span><span class=\"sc\">/</span><span class=\"fl\">1.2</span><span class=\"op\">]</span> </span>\n<span id=\"cb3-3\"> <span class=\"op\">]</span></span></code></pre>\n</div>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/1n7u00nxdhs7q.png\" alt=\"1n7u00nxdhs7q\" /><figcaption aria-hidden=\"true\">1n7u00nxdhs7q</figcaption></figure>\n<p>Here we raise the pitch with <span class=\"math inline\">5.5</span> semitones:</p>\n<div id=\"cb4\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb4-1\"><span class=\"fu\">AbsoluteTiming</span><span class=\"op\">[</span></span>\n<span id=\"cb4-2\">  auSchweineNightcore <span class=\"ex\">=</span> AudioPitchShift<span class=\"op\">[</span>auSchweineFaster<span class=\"op\">,</span> Quantity<span class=\"op\">[</span><span class=\"fl\">5.5</span><span class=\"op\">,</span> <span class=\"st\">\"Semitones\"</span><span class=\"op\">]]</span> </span>\n<span id=\"cb4-3\"> <span class=\"op\">]</span></span></code></pre>\n</div>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/005j44hxpz7h0.png\" alt=\"005j44hxpz7h0\" /><figcaption aria-hidden=\"true\">005j44hxpz7h0</figcaption></figure>\n<h2 id=\"get-lyrics\">Get lyrics</h2>\n<p>Although, we have a video with English subtitles, it would be interesting to experiment with adding subtitles to the video or “discovering” the subtitles in the video frames.</p>\n<p>Instead of just copy-&-pasting the text I took screenshot of lyrics here:<br />\n<a href=\"https://lyrics-on.net/en/1023698-schweine-shvajjne-lyrics.html\" rel=\"nofollow\">https://lyrics-on.net/en/1023698-schweine-shvajjne-lyrics.html</a> .</p>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/0jnweyevtrddx.png\" alt=\"0jnweyevtrddx\" /></figure>\n<p>Here the image above is split into two halves and they displayed in a grid:</p>\n<div id=\"cb5\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb5-1\">imgLyrics1 <span class=\"ex\">=</span> <span class=\"fu\">ImageTake</span><span class=\"op\">[</span>imgLyrics<span class=\"op\">,</span> <span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"op\">{</span><span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"fu\">ImageDimensions</span><span class=\"op\">[</span>imgLyrics<span class=\"op\">][[</span><span class=\"dv\">2</span><span class=\"op\">]]</span><span class=\"sc\">/</span><span class=\"dv\">2</span><span class=\"op\">}]</span>;</span>\n<span id=\"cb5-2\">imgLyrics2 <span class=\"ex\">=</span> <span class=\"fu\">ImageTake</span><span class=\"op\">[</span>imgLyrics<span class=\"op\">,</span> <span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"op\">{</span><span class=\"fu\">ImageDimensions</span><span class=\"op\">[</span>imgLyrics<span class=\"op\">][[</span><span class=\"dv\">2</span><span class=\"op\">]]</span><span class=\"sc\">/</span><span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"sc\">-</span><span class=\"dv\">1</span><span class=\"op\">}]</span>;</span>\n<span id=\"cb5-3\"><span class=\"fu\">GraphicsGrid</span><span class=\"op\">[{{</span>imgLyrics1<span class=\"op\">,</span> imgLyrics2<span class=\"op\">}},</span> <span class=\"fu\">Dividers</span> <span class=\"ot\">-></span> <span class=\"cn\">All</span><span class=\"op\">,</span> <span class=\"fu\">ImageSize</span> <span class=\"ot\">-></span> <span class=\"dv\">700</span><span class=\"op\">]</span></span></code></pre>\n</div>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/0nok801otpf32.png\" alt=\"0nok801otpf32\" /></figure>\n<p>Here we recognize the lyrics within each half:</p>\n<div id=\"cb6\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb6-1\"><span class=\"fu\">Grid</span><span class=\"op\">[{{</span><span class=\"fu\">TextRecognize</span><span class=\"op\">[</span>imgLyrics1<span class=\"op\">,</span> Language <span class=\"ot\">-></span> <span class=\"st\">\"Russian\"</span><span class=\"op\">],</span> <span class=\"fu\">TextRecognize</span><span class=\"op\">[</span>imgLyrics2<span class=\"op\">,</span> Language <span class=\"ot\">-></span> <span class=\"st\">\"English\"</span><span class=\"op\">]}},</span> <span class=\"fu\">Dividers</span> <span class=\"ot\">-></span> <span class=\"cn\">All</span><span class=\"op\">]</span></span></code></pre>\n</div>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/07s8wyhharkul.png\" alt=\"07s8wyhharkul\" /></figure>\n<p><strong>Remark:</strong> Because we found a video with subtitles, we do not use further the extracted lyrics in this notebook.</p>\n<h2 id=\"direct-video-styling\">Direct video styling</h2>\n<p>If we only wanted to change how the video <em>looks</em> we can directly manipulate the video frames with VideoFrameMap, [WRI6] :</p>\n<div id=\"cb7\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb7-1\"><span class=\"fu\">AbsoluteTiming</span><span class=\"op\">[</span></span>\n<span id=\"cb7-2\">  <span class=\"fu\">k</span> <span class=\"ex\">=</span> <span class=\"dv\">0</span>; </span>\n<span id=\"cb7-3\">  vdSchweine4 <span class=\"ex\">=</span> VideoFrameMap<span class=\"op\">[</span><span class=\"fu\">Switch</span><span class=\"op\">[</span><span class=\"fu\">Mod</span><span class=\"op\">[</span><span class=\"fu\">k</span><span class=\"sc\">++</span><span class=\"op\">,</span> <span class=\"dv\">500</span><span class=\"op\">]</span> < <span class=\"dv\">250</span><span class=\"op\">,</span> <span class=\"cn\">True</span><span class=\"op\">,</span> <span class=\"fu\">EdgeDetect</span><span class=\"op\">[</span>#<span class=\"op\">],</span> <span class=\"cn\">False</span><span class=\"op\">,</span> <span class=\"fu\">ImageEffect</span><span class=\"op\">[</span>#<span class=\"op\">,</span> <span class=\"st\">\"EdgeStylization\"</span><span class=\"op\">]]</span> &<span class=\"op\">,</span> vdSubSchweine<span class=\"op\">]</span>; </span>\n<span id=\"cb7-4\"> <span class=\"op\">]</span></span></code></pre>\n</div>\n<div id=\"cb8\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb8-1\">vdSchweine4</span></code></pre>\n</div>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/1x9obucooutc8.png\" alt=\"1x9obucooutc8\" /></figure>\n<p><strong>Remark:</strong> Since we want to make both the audio and video shorter we have to use video frames.</p>\n<h2 id=\"make-nightcore-video\">Make Nightcore video</h2>\n<p>Get the frames of the video:</p>\n<div id=\"cb9\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb9-1\"><span class=\"fu\">AbsoluteTiming</span><span class=\"op\">[</span></span>\n<span id=\"cb9-2\">  lsFrames <span class=\"ex\">=</span> VideoExtractFrames<span class=\"op\">[</span>vdSubSchweine<span class=\"op\">,</span> <span class=\"cn\">All</span><span class=\"op\">]</span>; </span>\n<span id=\"cb9-3\"> <span class=\"op\">]</span></span>\n<span id=\"cb9-4\"></span>\n<span id=\"cb9-5\"><span class=\"co\">(*{11.5501, Null}*)</span></span></code></pre>\n</div>\n<p>Show the number of frames:</p>\n<div id=\"cb10\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb10-1\"><span class=\"fu\">Length</span><span class=\"op\">[</span>lsFrames<span class=\"op\">]</span></span>\n<span id=\"cb10-2\"></span>\n<span id=\"cb10-3\"><span class=\"co\">(*9041*)</span></span></code></pre>\n</div>\n<p>Change all the frames to have the “Sepia” image effect:</p>\n<div id=\"cb11\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb11-1\"><span class=\"fu\">AbsoluteTiming</span><span class=\"op\">[</span></span>\n<span id=\"cb11-2\">  lsFramesSepia <span class=\"ex\">=</span> <span class=\"fu\">ParallelMap</span><span class=\"op\">[</span><span class=\"fu\">ImageEffect</span><span class=\"op\">[</span>#<span class=\"op\">,</span> <span class=\"st\">\"Sepia\"</span><span class=\"op\">]</span> &<span class=\"op\">,</span> lsFrames<span class=\"op\">]</span>; </span>\n<span id=\"cb11-3\"> <span class=\"op\">]</span></span>\n<span id=\"cb11-4\"></span>\n<span id=\"cb11-5\"><span class=\"co\">(*{124.898, Null}*)</span></span></code></pre>\n</div>\n<p>Generate (audio-less) video from the list of frames that have the same length as the generated audio:</p>\n<div id=\"cb12\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb12-1\"><span class=\"fu\">AbsoluteTiming</span><span class=\"op\">[</span></span>\n<span id=\"cb12-2\">  vdSubSchweineNew <span class=\"ex\">=</span> VideoGenerator<span class=\"op\">[</span>lsFramesSepia<span class=\"op\">,</span> Duration<span class=\"op\">[</span>auSchweineNightcore<span class=\"op\">]]</span>; </span>\n<span id=\"cb12-3\"> <span class=\"op\">]</span></span>\n<span id=\"cb12-4\"></span>\n<span id=\"cb12-5\"><span class=\"co\">(*{115.34, Null}*)</span></span></code></pre>\n</div>\n<p>Combine the video and audio (into a new video):</p>\n<div id=\"cb13\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb13-1\"><span class=\"fu\">AbsoluteTiming</span><span class=\"op\">[</span></span>\n<span id=\"cb13-2\">  vdSubSchweineNightcore <span class=\"ex\">=</span> VideoCombine<span class=\"op\">[{</span>vdSubSchweineNew<span class=\"op\">,</span> auSchweineNightcore<span class=\"op\">}]</span>; </span>\n<span id=\"cb13-3\"> <span class=\"op\">]</span></span>\n<span id=\"cb13-4\"></span>\n<span id=\"cb13-5\"><span class=\"co\">(*{0.576532, Null}*)</span></span></code></pre>\n</div>\n<div id=\"cb14\" class=\"sourceCode\">\n<pre class=\"sourceCode mathematica\"><code class=\"sourceCode mathematica\"><span id=\"cb14-1\">vdSubSchweineNightcore</span></code></pre>\n</div>\n<figure><img src=\"https://github.com/antononcube/MathematicaForMusic/raw/master/Documents/Diagrams/Nightcore-Schweine-video-making/0ffx6fronoawk.png\" alt=\"0ffx6fronoawk\" /></figure>\n<p><strong>Remark:</strong> Here we do not export the video, since Mathematica saves it in a “standard” location of the host operating system.</p>\n<h2 id=\"references\">References</h2>\n<p>[BMA1] b3m2ma1, <a href=\"https://community.wolfram.com/groups/-/m/t/1484511\">“Playing with<br />\nYouTube from Mathematica”</a>, (2018), Wolfram Community. (<a href=\"https://b3m2a1.github.io/playing-with-youtube-from-mathematica.html\">GitHub<br />\nlink</a>.)</p>\n<p>[Wk1] Wikipedia entry, <a href=\"https://en.wikipedia.org/wiki/Nightcore\">“Nightcore”</a>.</p>\n<p>[WRI1] Wolfram Research (2010), TextRecognize, Wolfram Language<br />\nfunction, <a href=\"https://reference.wolfram.com/language/ref/TextRecognize.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/TextRecognize.html</a><br />\n(updated 2020).</p>\n<p>[WRI2] Wolfram Research (2016), Audio, Wolfram Language function,<br />\n<a href=\"https://reference.wolfram.com/language/ref/Audio.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/Audio.html</a> (updated<br />\n2020).</p>\n<p>[WRI3] Wolfram Research (2016), AudioTimeStretch, Wolfram Language<br />\nfunction,<br />\n<a href=\"https://reference.wolfram.com/language/ref/AudioTimeStretch.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/AudioTimeStretch.html</a><br />\n(updated 2020).</p>\n<p>[WRI4] Wolfram Research (2016), AudioPitchShift, Wolfram Language<br />\nfunction,<br />\n<a href=\"https://reference.wolfram.com/language/ref/AudioPitchShift.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/AudioPitchShift.html</a> (updated<br />\n2020).</p>\n<p>[WRI5] Wolfram Research (2020), VideoExtractFrames, Wolfram Language<br />\nfunction,<br />\n<a href=\"https://reference.wolfram.com/language/ref/VideoExtractFrames.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/VideoExtractFrames.html</a>.</p>\n<p>[WRI6] Wolfram Research (2020), VideoFrameMap, Wolfram Language<br />\nfunction, <a href=\"https://reference.wolfram.com/language/ref/VideoFrameMap.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/VideoFrameMap.html</a><br />\n(updated 2021).</p>\n<p>[WRI7] Wolfram Research (2008), ImageEffect, Wolfram Language<br />\nfunction, <a href=\"https://reference.wolfram.com/language/ref/ImageEffect.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/ImageEffect.html</a><br />\n(updated 13).</p>\n<p>[WRI8] Wolfram Research (2020), VideoGenerator, Wolfram Language<br />\nfunction, <a href=\"https://reference.wolfram.com/language/ref/VideoGenerator.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/VideoGenerator.html</a><br />\n(updated 2021).</p>\n<p>[WRI9] Wolfram Research (2020), VideoCombine, Wolfram Language<br />\nfunction,<br />\n<a href=\"https://reference.wolfram.com/language/ref/VideoCombine.html\" rel=\"nofollow\">https://reference.wolfram.com/language/ref/VideoCombine.html</a>.</p>\n",
  "wfw:commentRss": "https://mathematicaforprediction.wordpress.com/2022/05/09/nightcore-schweine-video-making/feed/",
  "slash:comments": 0,
  "media:thumbnail": "",
  "media:content": [
    {
      "media:title": "0ffx6fronoawk"
    },
    {
      "media:title": "antononcube"
    },
    "",
    {
      "media:title": "1ow21rc06glgb"
    },
    {
      "media:title": "1uuz3gsogs93f"
    },
    {
      "media:title": "1n7u00nxdhs7q"
    },
    {
      "media:title": "005j44hxpz7h0"
    },
    {
      "media:title": "0jnweyevtrddx"
    },
    {
      "media:title": "0nok801otpf32"
    },
    {
      "media:title": "07s8wyhharkul"
    },
    {
      "media:title": "1x9obucooutc8"
    },
    {
      "media:title": "0ffx6fronoawk"
    }
  ]
}