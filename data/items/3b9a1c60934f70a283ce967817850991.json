{
  "title": "How to Incorporate ML.Net With Algorithmic Trading",
  "link": "https://datascienceplus.com/how-to-incorporate-ml-net-with-algorithmic-trading/",
  "comments": "https://datascienceplus.com/how-to-incorporate-ml-net-with-algorithmic-trading/#respond",
  "dc:creator": "Zadhid Powell",
  "pubDate": "Fri, 18 Mar 2022 00:58:25 +0000",
  "category": [
    "Regression Models",
    "Linear Regression",
    "Logistic Regression",
    "Machine Learning"
  ],
  "guid": "https://datascienceplus.com/?p=32019",
  "description": "<div style=\"border-top: 1px solid; font-size: 14px;text-align: center; border-bottom: 1px solid; padding: 5px 2px;\"><a href=\"https://datascienceplus.com/posting-from-r-markdown-to-datascienceplus/\">Are you interested in guest posting? Publish at DataScience+  via your RStudio editor.</a></div><h2>Category</h2><ul><li><a href=\"https://datascienceplus.com/category/regression-models/\" rel=\"bookmark\" title=\"Permanent Link toRegression Models\">Regression Models</a></li></ul><h2>Tags</h2><ul><li><a href=\"https://datascienceplus.com/tag/linear-regression/\" rel=\"bookmark\" title=\"Permanent Link toLinear Regression\">Linear Regression</a></li><li><a href=\"https://datascienceplus.com/tag/logistic-regression/\" rel=\"bookmark\" title=\"Permanent Link toLogistic Regression\">Logistic Regression</a></li><li><a href=\"https://datascienceplus.com/tag/machine-learning/\" rel=\"bookmark\" title=\"Permanent Link toMachine Learning\">Machine Learning</a></li><li><a href=\"https://datascienceplus.com/tag/python/\" rel=\"bookmark\" title=\"Permanent Link toPython\">Python</a></li></ul>As you search about ML.Net on Google, you&#8217;d find much content about working with that; but almost all do the identical machine learning tasks available on the model builder. So, I thought, why not do something a little more complex using that. In this post, I want to share my primary idea of designing a [&#8230;]<strong><p>Related Post</p></strong><ul><li><a href=\"https://datascienceplus.com/linear-regression-using-python-basics-2/\" rel=\"bookmark\" title=\"Permanent Link toLinear Regression using Python (Basics &#8211; 2)\">Linear Regression using Python (Basics &#8211; 2)</a></li><li><a href=\"https://datascienceplus.com/linear-regression-using-python-basics/\" rel=\"bookmark\" title=\"Permanent Link toLinear Regression using Python (Basics)\">Linear Regression using Python (Basics)</a></li><li><a href=\"https://datascienceplus.com/logistic-regression-in-r-with-healthcare-data-vitamin-d-and-osteoporosis/\" rel=\"bookmark\" title=\"Permanent Link toLogistic Regression in R with Healthcare data: Vitamin D and Osteoporosis\">Logistic Regression in R with Healthcare data: Vitamin D and Osteoporosis</a></li><li><a href=\"https://datascienceplus.com/linear-regression-with-healthcare-data-for-beginners-in-r/\" rel=\"bookmark\" title=\"Permanent Link toLinear Regression with Healthcare Data for Beginners in R\">Linear Regression with Healthcare Data for Beginners in R</a></li><li><a href=\"https://datascienceplus.com/logistic-regression-with-python/\" rel=\"bookmark\" title=\"Permanent Link toLogistic Regression with Python\">Logistic Regression with Python</a></li></ul>",
  "content:encoded": "<div style=\"border-top: 1px solid; font-size: 14px;text-align: center; border-bottom: 1px solid; padding: 5px 2px;\"><a href=\"https://datascienceplus.com/posting-from-r-markdown-to-datascienceplus/\">Are you interested in guest posting? Publish at DataScience+  via your RStudio editor.</a></div><h2>Category</h2><ul><li><a href=\"https://datascienceplus.com/category/regression-models/\" rel=\"bookmark\" title=\"Permanent Link toRegression Models\">Regression Models</a></li></ul><h2>Tags</h2><ul><li><a href=\"https://datascienceplus.com/tag/linear-regression/\" rel=\"bookmark\" title=\"Permanent Link toLinear Regression\">Linear Regression</a></li><li><a href=\"https://datascienceplus.com/tag/logistic-regression/\" rel=\"bookmark\" title=\"Permanent Link toLogistic Regression\">Logistic Regression</a></li><li><a href=\"https://datascienceplus.com/tag/machine-learning/\" rel=\"bookmark\" title=\"Permanent Link toMachine Learning\">Machine Learning</a></li><li><a href=\"https://datascienceplus.com/tag/python/\" rel=\"bookmark\" title=\"Permanent Link toPython\">Python</a></li></ul><p>As you search about ML.Net on Google, you&#8217;d find much content about working with that; but almost all do the identical machine learning tasks available on the model builder. So, I thought, why not do something a little more complex using that.</p>\n<p>In this post, I want to share my primary idea of designing a simple trading strategy using the model builder tool. I&#8217;ve spent time establishing a basic logic that works. Note that this context&#8217;s priority is to walk through MS machine learning with algorithmic trading; it&#8217;s not essential whether the following strategy is profitable. (If there were an accurate and profitable algorithmic trading strategy, it wouldn&#8217;t be available for free!)</p>\n<p>You’ll get an inspiring prospect, I hope. Please Keep exploring with me.</p>\n<h2>What You’ll Read:</h2>\n<p>Why do I think this project is worth considering?</p>\n<p>A step-by-step roadmap to get the ball rolling:<br />\nStep 1: Choose a programming language.<br />\nStep 2: Determine what field/financial market your bot will work upon.<br />\nStep 3: Select a server.<br />\nStep 4: Determine your trading strategy.<br />\nStep 5: Deploy your strategy to your program.<br />\nBacktest your strategy</p>\n<h2>Why Do I Think Incorporating ML.Net With Algorithmic Trading Is Worth Considering?</h2>\n<p>Machine learning is one of those areas of programming which is very capable of invitations and creativity. But, are you limited to any particular language like Python or R to develop either AI or ML projects? Who says that?</p>\n<p>Nowadays, many developers have started learning to program with C#. But, if you’re one of them, you’d probably have heard that C# is not the best choice to start programming or it’s just useful for windows applications which is a wrong belief.<br />\nSo why did I choose machine learning, and why a trader bot project? I have two main reasons for that:</p>\n<p>1. Trading is an everyday activity in almost everyone’s life; everyone buys and sells stuff. The difference is just about that stuff, and someone trades stocks, someone else buys and sells cars, or anything else. I understand that coding an advanced trader bot requires the knowledge of technical analysis and other related skills, but at this stage, I’m talking about trading. </p>\n<p>Trading is something understandable for almost every single person. So I don’t want the primary bot to be too complicated; it is supposed to buy low-priced assets and sell them at their highest prices. Just that simple!</p>\n<p>2. As you create a bot, it’s crucial to teach that trading bot how to do functions. I want to utilize ML.Net at this level. I will not use any strange machine learning tasks but show that even with such a level of simplicity, it’s possible to do something more beneficial than just predicting NY taxi fares! </p>\n<p>Besides, that’s a project having a huge potential for development and adding new features which challenge your creativity.</p>\n<p>There is a step-by-step guide on how to solve the puzzle in the following parts.</p>\n<h2>Step 1: Choose a Programming Language</h2>\n<p>Although this step seems routine or even a little paradoxical in this particular article, it’s important enough to get mentioned. It’s up to you what programming language works for you more comfortably. When it comes to machine learning and AI, almost everyone believes that Python is the best choice. </p>\n<p>But as ML.Net Has been designed for .NETdevelopers and supports C# and F#, I’ve written my code snippets in C#. However, you can incorporate ML.Net functions in Python via <a href=\"https://docs.microsoft.com/en-us/nimbusml/overview\" rel=\"noopener\" target=\"_blank\">NimbusML</a>.</p>\n<h2>Step 2: Determine What Field/Financial Market Your Bot Will Work Upon</h2>\n<p>This part is often skipped in many robot building tutorials out there, while it’s as crucial as required programming knowledge! You have to decide what asset you’re going to trade. (For example, stocks, currencies, and cryptos).</p>\n<p>If you’d ask my opinion, I highly recommend fiat currencies, as they follow logical trends and are easier to predict their behavior. Such an approach will decrease your risks due to fewer fluctuations in comparison with other types of assets.<br />\nLet’s try to establish a strategy based on the EUR/USD chart, later in this article.</p>\n<h2>Step 3: Select a Server</h2>\n<p>You require a reliable server to call and send your desired exchange/broker API requests.<br />\nOf course, in the stage of building your robot, you can utilize your computer as a server (or use a free host). But in the main stage of the robot&#8217;s operation, which has to be on a 24 hours basis, your local server will no longer be a suitable choice. Therefore, I have two recommendations for you:<br />\n1. Utilize Raspberry Pi as a server.<br />\n2. Use cloud hosting.</p>\n<p>Executing a bot via Raspberry Pi seems to be an exceptional idea. Try it if you&#8217;re interested. Although, most people use cloud hosting services like <a href=\"https://azure.microsoft.com/en-gb/\" rel=\"noopener\" target=\"_blank\">Azure</a> and <a href=\"https://aws.amazon.com/?aws-products-analytics.sort-by=item.additionalFields.productNameLowercase&aws-products-analytics.sort-order=asc&aws-products-business-apps.sort-by=item.additionalFields.productNameLowercase&aws-products-business-apps.sort-order=asc&aws-products-containers.sort-by=item.additionalFields.productNameLowercase&aws-products-containers.sort-order=asc&aws-products-compute.sort-by=item.additionalFields.productNameLowercase&aws-products-compute.sort-order=asc&aws-products-databases.sort-by=item.additionalFields.productNameLowercase&aws-products-databases.sort-order=asc&aws-products-fe-mobile.sort-by=item.additionalFields.productNameLowercase&aws-products-fe-mobile.sort-order=asc&aws-products-game-tech.sort-by=item.additionalFields.productNameLowercase&aws-products-game-tech.sort-order=asc&aws-products-iot.sort-by=item.additionalFields.productNameLowercase&aws-products-iot.sort-order=asc&aws-products-ml.sort-by=item.additionalFields.productNameLowercase&aws-products-ml.sort-order=asc&aws-products-mgmt-govern.sort-by=item.additionalFields.productNameLowercase&aws-products-mgmt-govern.sort-order=asc&aws-products-migration.sort-by=item.additionalFields.productNameLowercase&aws-products-migration.sort-order=asc&aws-products-network.sort-by=item.additionalFields.productNameLowercase&aws-products-network.sort-order=asc&aws-products-security.sort-by=item.additionalFields.productNameLowercase&aws-products-security.sort-order=asc&aws-products-storage.sort-by=item.additionalFields.productNameLowercase&aws-products-storage.sort-order=asc\" rel=\"noopener\" target=\"_blank\">AWS</a>. You can also use <a href=\"https://www.mql5.com/en/vps\" rel=\"noopener\" target=\"_blank\">MetaTrader 5 VPS</a>. It&#8217;s an efficient distributed computing service that I&#8217;ve been using for a few similar projects.</p>\n<h2>Step 4: Determine Your Trading Strategy.</h2>\n<p>In the beginning, let&#8217;s try to establish a simple strategy that works. Here, I chose regression analysis. It&#8217;s pretty simple; pick the asset chart data and draw a trend line over a particular period. At this stage, the model builder tool comes into the game and helps you create a trend line (the same regression line) with high accuracy. Of course, you&#8217;re presumably familiar with linear regression.</p>\n<p><a href=\"https://datascienceplus.com/wp-content/uploads/2022/03/linear-regression-graph.png\"><img src=\"https://datascienceplus.com/wp-content/uploads/2022/03/linear-regression-graph-490x275.png\" alt=\"Linear Regression Graph\" width=\"490\" height=\"275\" class=\"aligncenter size-large wp-image-32037\" srcset=\"https://datascienceplus.com/wp-content/uploads/2022/03/linear-regression-graph-490x275.png 490w, https://datascienceplus.com/wp-content/uploads/2022/03/linear-regression-graph-1024x576.png 1024w, https://datascienceplus.com/wp-content/uploads/2022/03/linear-regression-graph-768x432.png 768w, https://datascienceplus.com/wp-content/uploads/2022/03/linear-regression-graph.png 1400w\" sizes=\"(max-width: 490px) 100vw, 490px\" /></a></p>\n<p>A linear regression graph is something like this sample schema. (Sorry, I’m not very good at painting.) Though the prices have many fluctuations, the total trend usually matches a trend line like this drawn one. Our strategy is based on this point. Our bot will place buy/sell orders at points where the price would deviate significantly from the regression line. How could the bot understand when it’s time to place orders?</p>\n<p>My idea is to get real-time market prices via the exchange or broker’s API and then compare it with the regression predictor model’s output. Plus, it’s a good idea to utilize the RSI indicator to confirm our trading signals.</p>\n<h2>Step 5: Deploy Your Strategy to Your Program</h2>\n<p>As I’m not looking forward to rebuilding the wheel, I don’t define any class or method for my bot from scratch. I suggest you utilize trading software DLL libraries instead. Likewise, several solutions are available, and each one has its benefits. The one choice that I prefer to use is <a href=\"https://www.metatrader5.com/en\" rel=\"noopener\" target=\"_blank\">MetaTrader 5</a>, as it supports object-oriented programming. Before getting into the code sample, let’s get back to the model builder and class library for trading functions.</p>\n<p>Create a .Net Core console app. Click right on your project’s solution, manage NuGet packages, and install these two packages: Microsoft.ML and MQL4CSharp. Let’s start with the relatively simple task, creating a regression model utilizing past price data of EUR/USD. You can use some known online data sources like <a href=\"https://www.kaggle.com/datasets\" rel=\"noopener\" target=\"_blank\">Kaggle Datasets</a>, but I operate differently to get the historical market data. If you like to learn about that, <a href=\"https://strategyquant.com/doc/quantdatamanager/how-to-export-data-from-metatrader-5/\" rel=\"noopener\" target=\"_blank\">click here</a>.</p>\n<p>Working with ML.Net Model Builder is like a piece of cake, meanwhile explained entirely on <a href=\"https://docs.microsoft.com/en-us/dotnet/machine-learning/automate-training-with-model-builder?&WT.mc_id=Educationalmlnet-c9-niner#consume\" rel=\"noopener\" target=\"_blank\">Microsoft docs</a>. It autogenerates a pipeline based on the model inputs to predict the next price. I set the date and time as the features (model’s inputs) and the close (or lastest) price on the corresponding date as the label (model’s output). Then, in advance data options, change the other columns’ purposes to ignore.</p>\n<p><a href=\"https://datascienceplus.com/wp-content/uploads/2022/03/image1.jpg\"><img src=\"https://datascienceplus.com/wp-content/uploads/2022/03/image1-490x378.jpg\" alt=\"Sample Model Config 1\" width=\"490\" height=\"378\" class=\"aligncenter size-large wp-image-32045\" srcset=\"https://datascienceplus.com/wp-content/uploads/2022/03/image1-490x378.jpg 490w, https://datascienceplus.com/wp-content/uploads/2022/03/image1-768x593.jpg 768w, https://datascienceplus.com/wp-content/uploads/2022/03/image1.jpg 825w\" sizes=\"(max-width: 490px) 100vw, 490px\" /></a></p>\n<p><a href=\"https://datascienceplus.com/wp-content/uploads/2022/03/Sample-Model-Config-2.jpg\"><img src=\"https://datascienceplus.com/wp-content/uploads/2022/03/Sample-Model-Config-2-490x390.jpg\" alt=\"Sample Model Config 2\" width=\"490\" height=\"390\" class=\"aligncenter size-large wp-image-32046\" srcset=\"https://datascienceplus.com/wp-content/uploads/2022/03/Sample-Model-Config-2-490x390.jpg 490w, https://datascienceplus.com/wp-content/uploads/2022/03/Sample-Model-Config-2-768x611.jpg 768w, https://datascienceplus.com/wp-content/uploads/2022/03/Sample-Model-Config-2.jpg 822w\" sizes=\"(max-width: 490px) 100vw, 490px\" /></a></p>\n<p>Now, let’s see what kind of use the <code>MQL4CSharpclass</code> library provides for your project. It contains all MQL5 language (MetaTrader 5 specific language, similar to C++) functions converted to C#. I selected a few methods from the DLL class library for this test project. Ready to get into the code template?</p>\n<p>First, add a new class to the project and inherit that from the <code>MQLBase class</code>. Then in the <code>OnTick()</code> method’s block, load and execute the model.</p>\n<pre>\npublic override void OnTick()\n {\n //Load and use the model to make predictions.\n     var sampleData = new BOtModel.ModelInput()\n    {\n       Col0 = @\"\" ,\n       Col1 = @\"\" ,\n    };\n     var result = BOtModel.Predict(sampleData);\n }\n\n</pre>\n<p><b>Now execute the bot’s logic like this: </b></p>\n<pre>\npublic override void OnTick()\n {\n   var sampleData = new BOtModel.ModelInput()\n {\n    Col0 = @\"\" ,\n    Col1 = @\"\" ,\n  };\n    var result = BOtModel.Predict(sampleData);\n }\n            \n//Define these two variables based on your customized parameters. \n\ndouble rsi = iRSI(string symbol, int timeframe, int period, int applied_price, int shift);\ndouble closeprice = iClose(string symbol, int timeframe, int shift);\n       \n//Define conditional statements to place buy/sell orders. \n     if (rsi > 80 && Convert.ToDouble(result) < closeprice)\n  {\n\n//Sell order\nOrderSend(string symbol, int cmd, double volume, double price, int slippage, \ndouble stoploss, double takeprofit, string comment, int magic, DateTime expiration, MQL4CSharp.Base.Enums.COLOR arrow color);\n   }\n      else if (rsi  closeprice)\n   {\n\n//Buy order\nOrderSend(string symbol, int cmd, double volume, double price, int slippage, \ndouble stoploss, double takeprofit,string comment, int magic, DateTime expiration, MQL4CSharp.Base.Enums.COLOR arrow color);\n   }\n  }\n\n</pre>\n<p>The required parameters for the methods are explained briefly at the following links:<br />\n1. <a href=\"https://www.mql5.com/en/docs/indicators/irsi\" rel=\"noopener\" target=\"_blank\">iRsi()</a><br />\n2. <a href=\"https://www.mql5.com/en/docs/series/iclose\" rel=\"noopener\" target=\"_blank\">iClose()</a><br />\n3. <a href=\"https://www.mql5.com/en/docs/trading/ordersend\" rel=\"noopener\" target=\"_blank\">OrderSend()</a></p>\n<p>If you are not familiar with financial markets, you might ask what the RSI indicator is? Thoroughly, it’s a technical indicator that allows you to know whether an asset is overbought or oversold so that you can realize when the price is intended to pull back or rise.</p>\n<p>It&#8217;s is one of the most crucial actions after creating your Trading Robot. Accessing the historical data is, as I mentioned in the past paragraphs. I do not intend to delve into this matter in this post, and I will thoroughly explain backtesting in one of my future articles. </p>\n<p>Meanwhile, there is something that I prefer to mention here. When getting backtests, it&#8217;s essential to make accurate calculations that require spending a lot of time and energy manually. </p>\n<p>The algorithmic trading platforms can facilitate your efforts at this level as well. One of my favorite services related to this issue is the <a href=\"https://cloud.mql5.com/en\" rel=\"noopener\" target=\"_blank\">MQL5 Cloud Network</a>, which lets you utilize too many local PC CPUs power available on the network to enhance your calculations either speed or accuracy.</p>\n<h2>Summary</h2>\n<p>So far now, I have created a regression model based on the EUR/USD past prices data and then coded the bot’s functionality logic consuming that model. Nevertheless, some points can still be added, like connection to the data banks, saving the robot’s trade functions records, designing a user-friendly dashboard, and more.</p>\n<p>In my future posts, I’ll expand this content and explain further details on developing and adding complementary features to the bot.</p>\n<p>Thanks for reading this article, and I hope it was helpful for you.</p>\n<strong><p>Related Post</p></strong><ul><li><a href=\"https://datascienceplus.com/linear-regression-using-python-basics-2/\" rel=\"bookmark\" title=\"Permanent Link toLinear Regression using Python (Basics &#8211; 2)\">Linear Regression using Python (Basics &#8211; 2)</a></li><li><a href=\"https://datascienceplus.com/linear-regression-using-python-basics/\" rel=\"bookmark\" title=\"Permanent Link toLinear Regression using Python (Basics)\">Linear Regression using Python (Basics)</a></li><li><a href=\"https://datascienceplus.com/logistic-regression-in-r-with-healthcare-data-vitamin-d-and-osteoporosis/\" rel=\"bookmark\" title=\"Permanent Link toLogistic Regression in R with Healthcare data: Vitamin D and Osteoporosis\">Logistic Regression in R with Healthcare data: Vitamin D and Osteoporosis</a></li><li><a href=\"https://datascienceplus.com/linear-regression-with-healthcare-data-for-beginners-in-r/\" rel=\"bookmark\" title=\"Permanent Link toLinear Regression with Healthcare Data for Beginners in R\">Linear Regression with Healthcare Data for Beginners in R</a></li><li><a href=\"https://datascienceplus.com/logistic-regression-with-python/\" rel=\"bookmark\" title=\"Permanent Link toLogistic Regression with Python\">Logistic Regression with Python</a></li></ul>",
  "wfw:commentRss": "https://datascienceplus.com/how-to-incorporate-ml-net-with-algorithmic-trading/feed/",
  "slash:comments": 0
}