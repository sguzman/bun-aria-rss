{
  "id": "yt:video:25G6qXpXwHw",
  "yt:videoId": "25G6qXpXwHw",
  "yt:channelId": "UC5miyvhPsWWyfTulnJ43koQ",
  "title": "WDW Red Coins 0xA Fastest Strat",
  "link": "",
  "author": {
    "name": "UncommentatedPannen",
    "uri": "https://www.youtube.com/channel/UC5miyvhPsWWyfTulnJ43koQ"
  },
  "published": "2022-07-23T21:26:54+00:00",
  "updated": "2022-07-24T12:30:58+00:00",
  "media:group": {
    "media:title": "WDW Red Coins 0xA Fastest Strat",
    "media:content": "",
    "media:thumbnail": "",
    "media:description": "I collect the star Go to Town for Red Coins in 0 A presses using the new fastest strat. Thanks to Iwer Sonsch (https://www.youtube.com/channel/UCnJKlalNQWIco1DS0Uw_XXw) for his suggestions that made this possible. This is TAS.\n\nThe original 0xA strat for this star took 14 hours (https://youtu.be/cdM-h1Ge9xk). Later, we realized we could collect this star using the overflow water level (https://youtu.be/-KLYv86Ntl4), which would take 2 hours (https://youtu.be/zjdkGWJcDVw). Even later, Iwer helped reduce it to 14 minutes (https://youtu.be/QHqgy6EwBCA) by (1) figuring out how to achieve 12+ swimming speed, (2) figuring out how to collect the red coin in the alcove without having to destroy the box, and (3) figuring out that we can use a skeeter to get onto the grey building from the top of the wall. But now, we've reached this star's final form - collecting it in less than 5 minutes! This is possible due to 2 new strats. Firstly, Iwer figured out that by placing a skeeter on top of the brown building, we can use it to collect the red coin, which saves a trip to the town. Secondly, Iwer suggested that conserving more speed after throwing the box clone would be super helpful for reducing the total time. Thus, I looked into it and managed to conserve 16 speed, which is maintained for the rest of the swimming. This not only saves another trip to the town, but made all the swimming faster overall.\n\nConserving 16 speed after throwing the box clone was no simple feat. To fully understand this, let's lay out some groundwork. Mario can swim using just the B button, but this is pretty slow, as it only has 7 speed. However, it has an interesting property in that it can maintain up to 16 speed if you *already have* that much speed. Chuckya throwing Mario when Mario is in the water gives us 40 speed, and so we can conserve 16 of it when B swimming. But then we need to throw a box clone, which involves grabbing chuckya, oscillating between the two sides of the loading zone to clone the box, and then throwing the box clone. If we delay the throw, our speed will decrease towards 0 at 2 per frame, but this gives us extra frames to work with during the oscillation. To put it another way, if we throw the clone on the first possible frame, then we maintain all 16 speed. If we delay it by 1 frame, then our speed will fall to 14. So we can delay the throw by up to 7 frames, meaning our final speed will be 2. Note that we can't delay it any further or we'd end up with 0 speed, and then we couldn't move forwards to oscillate anymore. So if we wanted to maintain all 16 speed, we'd only have 17 frames to work with during the oscillation. If we allow our speed to fall to 2, then we get access to 7 additional frames, meaning we have 24 frames to work with during the oscillation.\n\nPreviously, I had used all 24 frames during the oscillation, because that's all that my brute forcer had found. But because I wanted to reduce this star's time as much as possible, I searched for a way to do the oscillation in only 17 frames, which would allow us to conserve all 16 speed for the rest of the swimming. To do this, I reworked my brute forcer. Previously, my brute forcer tested randomly generated oscillation sequences, i.e. sequences of how long to spend on each side of the loading zone and how many bubbles would spawn on each side. So to be more thorough, I changed it to test ALL possible oscillation sequences. This was made easier because there are less possibilities for 17 frames than for 24 frames. Unfortunately, my brute forcer didn't find any solutions. Thus, I then considered unloading certain objects in the level, which would change the object slots, potentially allowing for a solution to be found. I picked 20 potential things in the level we could unload easily (e.g. skeeters, secrets, boxes, blue coins), and then retested my brute forcer for each combination of these. However, this would have been way too many possibilities to test, so I optimized it by capping the number of things to unload at 5. This resulted in several solutions being found, and so then I picked the one that was the fastest. Specifically, this was unloading the blue coins and the skeeter near them, which you can see me do in the video. And after finding that solution, performing it in practice was relatively simple.\n\nThe other new strat was manipulating the second skeeter onto the brown building. This wasn't too hard, given that we can move skeeters away from their home by deactivating them during a lunge. For viewer convenience, I show auxiliary screens during the skeeter manipulation. To clarify the items on the map:\n- the cyan and red circles are the activation radii of the skeeters\n- the yellow circles are the areas where the skeeters are considered close to their homes (when inside, they go a random direction, but when outside, they only go towards their home)\n- the blue arrows are the skeeters' target angles\n- the yellow arrows are the skeeters' facing angles",
    "media:community": {
      "media:starRating": "",
      "media:statistics": ""
    }
  }
}