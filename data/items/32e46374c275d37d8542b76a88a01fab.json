{
  "id": "tag:blogger.com,1999:blog-8474926331452026626.post-368748851875317388",
  "published": "2022-09-09T12:25:00.001-07:00",
  "updated": "2022-10-21T06:31:23.519-07:00",
  "category": [
    "",
    ""
  ],
  "title": "Learning to Walk in the Wild from Terrain Semantics",
  "content": "<span class=\"byline-author\">Posted by Yuxiang Yang, Student Researcher, Robotics at Google</span> <p>An important promise for quadrupedal robots is their potential to operate in complex outdoor environments that are difficult or inaccessible for humans. Whether it’s to find natural resources deep in the mountains, or to search for life signals in heavily-damaged earthquake sites, a robust and versatile quadrupedal robot could be very helpful. To achieve that, a robot needs to perceive the environment, understand its locomotion challenges, and adapt its locomotion skill accordingly. While recent <a href=\"https://proceedings.mlr.press/v164/yu22a.html\">advances</a> in perceptive locomotion have greatly enhanced the capability of quadrupedal robots, most works focus on indoor or urban environments, thus they cannot effectively handle the complexity of off-road terrains. In these environments, the robot needs to understand not only the terrain <em>shape</em> (e.g., slope angle, smoothness), but also its <em>contact properties</em> (e.g., friction, restitution, deformability), which are important for a robot to decide its locomotion skills. As existing perceptive locomotion systems mostly focus on the use of depth cameras or <a href=\"https://en.wikipedia.org/wiki/Lidar\">LiDARs</a>, it can be difficult for these systems to estimate such terrain properties accurately. </p><a name='more'></a><p>In “<a href=\"https://arxiv.org/abs/2206.13631\">Learning Semantics-Aware Locomotion Skills from Human Demonstrations</a>”, we design a hierarchical learning framework to improve a robot’s ability to traverse complex, off-road environments. Unlike previous approaches that focus on environment <em>geometry</em>, such as terrain shape and obstacle locations, we focus on environment <em>semantics</em>, such as terrain type (grass, mud, etc.) and contact properties, which provide a complementary set of information useful for off-road environments. As the robot walks, the framework decides the locomotion skill, including the <em>speed</em> and <em>gait</em> (i.e., shape and timing of the legs’ movement) of the robot based on the perceived semantics, which allows the robot to walk robustly on a variety of off-road terrains, including rocks, pebbles, deep grass, mud, and more. </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijyXAvjHybEWgkqkqJwshfCIH9RN_62HOw2dlALF4_qmjbk5PqRxxtaKG52O2rKM_V2gwZzhSLh4N3w_B7OT8yity2QOlZYDnh8OUymoXka6WiBfRxVPy7ov4CMk9I7GFez3IssfQWePcBWlI4Iu_VTe6DKFDwt1Pl91mw72H29Ydfr2of7Ve8TcRyxw/s600/image1.gif\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"338\" data-original-width=\"600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijyXAvjHybEWgkqkqJwshfCIH9RN_62HOw2dlALF4_qmjbk5PqRxxtaKG52O2rKM_V2gwZzhSLh4N3w_B7OT8yity2QOlZYDnh8OUymoXka6WiBfRxVPy7ov4CMk9I7GFez3IssfQWePcBWlI4Iu_VTe6DKFDwt1Pl91mw72H29Ydfr2of7Ve8TcRyxw/s16000/image1.gif\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Our framework selects skills (gait and speed) of the robot from the camera RGB image. We first compute the speed from terrain semantics, and then select a gait based on the speed.</td></tr></tbody></table>   <p><b>Overview</b><br />The hierarchical framework consists of a high-level <em>skill policy</em> and a low level <em>motor controller</em>. The <em>skill policy </em>selects a locomotion skill based on camera images, and the <em>motor controller</em> converts the selected skill into motor commands. The high-level <em>skill policy </em>is further decomposed into a learned <em>speed policy </em>and a heuristic-based <em>gait selector</em>. To decide a skill, the <em>speed policy</em> first computes the desired forward speed, based on the semantic information from the onboard <a href=\"https://en.wikipedia.org/wiki/RGB_color_model\">RGB</a> camera. For energy efficiency and robustness, quadrupedal robots usually <a href=\"https://arxiv.org/pdf/2104.04644.pdf\">select a different gait for each speed</a>, so we designed the gait selector to compute a desired gait based on the forward speed. Lastly, a low-level convex <a href=\"https://en.wikipedia.org/wiki/Model_predictive_control\">model-predictive controller</a> (MPC) converts the desired locomotion skill into motor <a href=\"https://en.wikipedia.org/wiki/Torque\">torque</a> commands, and executes them on the real hardware. We train the speed policy directly in the real world using <a href=\"https://arxiv.org/pdf/1811.06711.pdf\">imitation learning</a> because it requires fewer training data compared to standard <a href=\"https://en.wikipedia.org/wiki/Q-learning\">reinforcement learning</a> algorithms. </p>    <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhqVdIFdPFrpMF3uHieeK0--h99M_9XFAqe_oWCiMXjr_FL_h90IdU0Pcl-amBI6aOVCesOE3YlWBb3MBF_ZQyTaAxlwqN5dRcFHmwuhdsyCIvGw5lkeg_68n99uhfq-88sS8n_ZfoYF6zpMSjCnLP-0gvikXfMW9ySI1bW0QuRspPs3J24dTGYBGEt8g/s1600/image2.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"905\" data-original-width=\"1600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhqVdIFdPFrpMF3uHieeK0--h99M_9XFAqe_oWCiMXjr_FL_h90IdU0Pcl-amBI6aOVCesOE3YlWBb3MBF_ZQyTaAxlwqN5dRcFHmwuhdsyCIvGw5lkeg_68n99uhfq-88sS8n_ZfoYF6zpMSjCnLP-0gvikXfMW9ySI1bW0QuRspPs3J24dTGYBGEt8g/s16000/image2.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">The framework consists of a high-level skill policy and a low-level motor controller.</td></tr></tbody></table>   <p><b>Learning Speed Command from Human Demonstrations</b><br />As the central component in our pipeline, the <em>speed policy</em> outputs the desired forward speed of the robot based on the RGB image from the onboard camera. Although many robot learning tasks can leverage <a href=\"https://ai.googleblog.com/2021/07/speeding-up-reinforcement-learning-with.html\">simulation</a> as a source of lower-cost data collection, we train the speed policy in the real world because accurate simulation of complex and diverse off-road environments is not yet available. As policy learning in the real world is <a href=\"https://arxiv.org/abs/2002.08550\">time-consuming</a> and <a href=\"https://ai.googleblog.com/2022/05/learning-locomotion-skills-safely-in.html\">potentially unsafe</a>, we make two key design choices to improve the data efficiency and safety of our system. </p><p>The first is learning from human demonstrations. Standard reinforcement learning algorithms typically learn by <em>exploration</em>, where the agent attempts different actions in an environment and builds preferences based on the rewards received. However, such explorations can be potentially unsafe, especially in off-road environments, since any robot failures can damage both the robot hardware and the surrounding environment. To ensure safety, we train the speed policy using imitation learning from human demonstrations. We first ask a human operator to teleoperate the robot on a variety of off-road terrains, where the operator controls the speed and heading of the robot using a remote joystick. Next, we collect the training data by storing (<span style=\"font-family: Courier New\">image, forward_speed</span>) pairs. We then train the speed policy using standard supervised learning to predict the human operator’s speed command. As it turns out, the human demonstration is both safe and high-quality, and allows the robot to learn a proper speed choice for different terrains. </p><p>The second key design choice is the training method. Deep neural networks, especially those involving high-dimensional visual inputs, typically require lots of data to train. To reduce the amount of real-world training data required, we first pre-train a <a href=\"https://ai.googleblog.com/2018/03/semantic-image-segmentation-with.html\">semantic segmentation</a> model on <a href=\"http://rugd.vision/\">RUGD</a> (an off-road driving dataset where the images look similar to those captured by the robot’s onboard camera), where the model predicts the semantic class (grass, mud, etc.) for every pixel in the camera image. We then extract a <em>semantic embedding</em> from the model’s intermediate layers and use that as the feature for on-robot training. With the pre-trained semantic embedding, we can train the speed policy effectively using less than 30 minutes of real-world data, which greatly reduces the amount of effort required. </p>    <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhZ0-v9xmVu_brD7wsuyA3uhPyXKRihExXM0KPK2WIrlfqcRr4ImZ1cWKfjeSvcBNfSDDuKYvZOWIc1IMJFGJrdplaxOkCeHM8POTM2a63-Nal2xNo57wGoZzDfYI2fdhQu_n4WdV2mfCTHdeHgY9yqyyXKvxhmo65eLsu8sH020TR9_e3ZYljMSLBRPQ/s1600/image5.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"638\" data-original-width=\"1600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhZ0-v9xmVu_brD7wsuyA3uhPyXKRihExXM0KPK2WIrlfqcRr4ImZ1cWKfjeSvcBNfSDDuKYvZOWIc1IMJFGJrdplaxOkCeHM8POTM2a63-Nal2xNo57wGoZzDfYI2fdhQu_n4WdV2mfCTHdeHgY9yqyyXKvxhmo65eLsu8sH020TR9_e3ZYljMSLBRPQ/s16000/image5.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">We pre-train a semantic segmentation model and extract a semantic embedding to be fine-tuned on robot data.</td></tr></tbody></table>   <p><b>Gait Selection and Motor Control</b><br />The next component in the pipeline, the <em>gait selector</em>, computes the appropriate gait based on the speed command from the <em>speed policy</em>. The <a href=\"https://en.wikipedia.org/wiki/Horse_gait\">gait</a> of a robot, including its stepping frequency, swing height, and base height, can greatly affect the robot’s ability to traverse different terrains. </p><p><a href=\"https://www.nature.com/articles/292239a0\">Scientific studies</a> have shown that animals switch between different gaits at different speeds, and this result is further <a href=\"https://arxiv.org/pdf/2104.04644.pdf\">validated in quadrupedal robots</a>, so we designed the gait selector to compute a robust gait for each speed. Compared to using a fixed gait across all speeds, we find that the gait selector further enhances the robot’s navigation performance on off-road terrains (more details in the paper). </p><p>The last component of the pipeline is a <em>motor controller</em>, which converts the speed and gait commands into motor torques. Similar to <a href=\"https://dspace.mit.edu/bitstream/handle/1721.1/138000/convex_mpc_2fix.pdf?sequence=2&amp;isAllowed=y\">previous work</a>, we use separate control strategies for swing and stance legs. By separating the task of skill learning and motor control, the skill policy only needs to output the desired speed, and does not need to learn low-level locomotion controls, which greatly simplifies the learning process. </p><p><b>Experiment Results</b><br />We implemented our framework on an <a href=\"https://m.unitree.com/products/a1\">A1 quadrupedal robot</a> and tested it on an outdoor trail with multiple terrain types, including grass, gravel, and asphalt, which pose varying degrees of difficulty for the robot. For example, while the robot needs to walk slowly with high foot swings in deep grass to prevent its foot from getting stuck, on asphalt it can walk much faster with lower foot swings for better energy efficiency. Our framework captures such differences and selects an appropriate skill for each terrain type: slow speed (0.5m/s) on deep grass, medium speed (1m/s) on gravel, and high speed (1.4m/s) on asphalt. It completes the 460m-long trail in 9.6 minutes with an average speed of 0.8m/s (i.e., that’s 1.8 miles or 2.9 kilometers per hour). In contrast, non-adaptive policies either cannot complete the trail safely or walk significantly slower (0.5m/s), illustrating the importance of adapting locomotion skills based on the perceived environments. </p>  <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhzh6bSiilppYYmpPGC9P1nxhC8DSHfJIXJTvf2gF8Z17A3Lj-ecDVlCBpn3a4SCSVaIPK5Nt2uNE9HKmflPy5f6A0w87ARrrTXhUor7-MMv_1n9WBWtwft9DuUlYyQ_LnN2zxPh9omG_UKoI37BWsYKVHCKLVMUMJ_Fi3nTwZnVo6xx1wyY2X6ryqTPA/s1600/image4.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"731\" data-original-width=\"1600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhzh6bSiilppYYmpPGC9P1nxhC8DSHfJIXJTvf2gF8Z17A3Lj-ecDVlCBpn3a4SCSVaIPK5Nt2uNE9HKmflPy5f6A0w87ARrrTXhUor7-MMv_1n9WBWtwft9DuUlYyQ_LnN2zxPh9omG_UKoI37BWsYKVHCKLVMUMJ_Fi3nTwZnVo6xx1wyY2X6ryqTPA/s16000/image4.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">The framework selects different speeds based on conditions of the trail.</td></tr></tbody></table> <p>To test generalizability, we also deployed the robot to a number of trails that are not seen during training. The robot traverses through all of them without failure, and adjusts its locomotion skills based on terrain semantics. In general, the skill policy selects a faster skill on rigid and flat terrains and a slower speed on deformable or uneven terrain. At the time of writing, the robot has traversed over 6km of outdoor trails without failure. </p>  <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgte0hfMF3KCP7hKWEdTKEzyQfqslS4Mw4QqAy0Betl4kd_cH3LSlX9zvZ8Zz6vVYMk1Y_2Nz4LzbD_ht7CgpJQ1u--lSOgEI04KM09htPxZYc3GoKqV60ZpXz2GvtDQq_tlOppz9yMXN3CJM97mL_AjagdSjuATJHGjldm-Zm5sKlcSLx7SYjKAhc24A/s1600/image1.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"394\" data-original-width=\"1600\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgte0hfMF3KCP7hKWEdTKEzyQfqslS4Mw4QqAy0Betl4kd_cH3LSlX9zvZ8Zz6vVYMk1Y_2Nz4LzbD_ht7CgpJQ1u--lSOgEI04KM09htPxZYc3GoKqV60ZpXz2GvtDQq_tlOppz9yMXN3CJM97mL_AjagdSjuATJHGjldm-Zm5sKlcSLx7SYjKAhc24A/s16000/image1.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\"></td></tr></tbody></table>  <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEikB_yft_Q0_WX9NTnQEuIJY2_ws-hVYiN6aRx_O2PN0zUpwSH8f_mbA_8hLLOi5dNrnfTjIhavVFa924b0Sczof99A0n9FvI175R7LfzEEzSwb9JxYlqH3ZtbVCuywteDAB6S8IL_NMz3S-6-HUUUgwZHZgydUx9D-cuBiQS2u68X6BUIIwrKGrT2CFw/s1972/image13.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"402\" data-original-width=\"1972\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEikB_yft_Q0_WX9NTnQEuIJY2_ws-hVYiN6aRx_O2PN0zUpwSH8f_mbA_8hLLOi5dNrnfTjIhavVFa924b0Sczof99A0n9FvI175R7LfzEEzSwb9JxYlqH3ZtbVCuywteDAB6S8IL_NMz3S-6-HUUUgwZHZgydUx9D-cuBiQS2u68X6BUIIwrKGrT2CFw/s16000/image13.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">With the framework, the robot walks safely on a variety of outdoor terrains not seen during training.</td></tr></tbody></table>  <p><b>Conclusion</b><br />In this work, we present a hierarchical framework to learn semantic-aware locomotion skills for off-road locomotion. Using less than 30 minutes of human demonstration data, the framework learns to adjust the speed and gait of the robot based on the perceived semantics of the environment. The robot can walk safely and efficiently on a wide variety of off-road terrains. One limitation of our framework is that it only adjusts locomotion skills for standard walking and does not support more agile behaviors such as jumping, which can be essential for traversing more difficult terrains with gaps or hurdles. Another limitation is that our framework currently requires manual steering commands to follow a desired path and reach the goal. In future work, we plan to look into a deeper integration of high-level skill policy with the low-level controller for more agile behaviors, and incorporate navigation and path planning into the framework so that the robot can operate fully autonomously in challenging off-road environments. </p><p><b>Acknowledgements</b><br /><em>We would like to thank our paper co-authors: Xiangyun Meng, Wenhao Yu, Tingnan Zhang, Jie Tan, </em>and<em> Byron Boots. We would also like to thank the team members of Robotics at Google for discussions and feedback.</em></p>",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Google AI",
    "uri": "http://www.blogger.com/profile/12098626514775266161",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": "",
  "thr:total": 0
}