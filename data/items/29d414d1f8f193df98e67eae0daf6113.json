{
  "title": "Pycon 2014: A Preview",
  "link": "",
  "updated": "2013-12-16T19:51:00-05:00",
  "id": "http://beckerfuffle.com/blog/2013/12/16/pycon-2014-a-preview",
  "content": "<p><a href=\"https://us.pycon.org/2014/schedule/talks/list/\"><img src=\"https://us.pycon.org/2014/site_media/static/img/pycon2014-logo.png\" title=\"Pycon 2014 Logo\" alt=\"Pycon 2014 Logo\" /></a></p>\n\n<p>After <a href=\"https://github.com/mdbecker/pydata_2013\">my successful talks</a> at <a href=\"http://pydata.org/bos2013\">PyData Boston in July</a>, I decided to submit one of my talks to Pycon. I&rsquo;m happy to say <a href=\"https://us.pycon.org/2014/schedule/presentation/224/\">my talk was accepted</a>! This will be my first Pycon and I&rsquo;m really excited! Montréal is an amazing city with some awesome cuisine (Un poutine végétarien s&#8217;il vous plaît) and the best micro-brew pubs I&rsquo;ve ever been to (sorry Philly)! Besides the awesome location, I&rsquo;m really psyched about some of the talks this year! Here&rsquo;s some of my favorites.</p>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/198/\">Discovering Python</a> <em>(David Beazley)</em></h2>\n\n<p>Looking for an entertaining way to learn about various built-in python libraries? Look no further! Imagine if you had access to python, but couldn&rsquo;t install any 3rd party modules! Maybe this is you? If so, then you won&rsquo;t want to miss this talk!</p>\n\n<blockquote><p>So, what happens when you lock a Python programmer in a secret vault containing 1.5 TBytes of C++ source code and no internet connection? Find out as I describe how I used Python as a secret weapon of &ldquo;discovery&rdquo; in an epic legal battle.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/163/\">Enough Machine Learning to Make Hacker News Readable Again</a> <em>(Ned Jackson Lovely)</em></h2>\n\n<p>Machine Learning talk, `nuff said!</p>\n\n<blockquote><p>It&rsquo;s inevitable that online communities will change, and that we&rsquo;ll remember the community with a fondness that likely doesn&rsquo;t accurately reflect the former reality. We&rsquo;ll explore how we can take a set of articles from an online community and winnow out the stuff we feel is unworthy. We&rsquo;ll explore some of the machine learning tools that are just a &ldquo;pip install&rdquo; away, such as scikit-learn and nltk.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/148/\">Diving into Open Data with IPython Notebook & Pandas</a> <em>(Julia Evans)</em></h2>\n\n<p>I&rsquo;m glad to see a Pandas talk at PyCon, even if it&rsquo;s not being given by Wes Mckinney ;-).</p>\n\n<blockquote><p>I&rsquo;ll walk you through Python&rsquo;s best tools for getting a grip on data: IPython Notebook and pandas. I&rsquo;ll show you how to read in data, clean it up, graph it, and draw some conclusions, using some open data about the number of cyclists on Montréal&rsquo;s bike paths as an example.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/144/\">The Sorry State of SSL</a> <em>(Hynek Schlawack)</em></h2>\n\n<p>These days it&rsquo;s important not just  to use encryption, but to also configure it properly. Having spent many hours reading about cyphers and theoretical attacks in the past, this looks like it should be a good talk even for coders who know something about security.</p>\n\n<blockquote><p>Those web pages with shiny lock icons boasting that your data is safe because of “256 bit encryption”? They are lying. In times of mass surveillance and commercialized Internet crime you should know why that’s the case. This talk will give you an overview that will help you to assess your personal security more realistically and to make your applications as secure as possible against all odds.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/152/\">Ansible - Python-Powered Radically Simple IT Automation</a> <em>(Michael DeHaan)</em></h2>\n\n<p>Having experienced both puppet and chef I&rsquo;m looking forward to learning more about this python alternative.</p>\n\n<blockquote><p>Learn about Ansible &ndash; a radically simple way to deploy applications, configure operating systems, and orchestrate IT operations including zero downtime rolling updates. Let&rsquo;s bring about SkyNet faster.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/221/\">Modern Web Services, Lessons Learned and Why REST is not the Best</a> <em>(Armin Ronacher)</em></h2>\n\n<p>Talk about writing APIs from the creator of Flask? Yes please!</p>\n\n<blockquote><p>A few years of experiences writing RESTful APIs, especially my experiences working for Fireteam&rsquo;s online services. What worked, what did not work so well and about how to avoid making mistakes with REST.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/183/\">Games for Science: Creating interactive psychology experiments in Python with Panda3D</a> <em>(Jessica Hamrick)</em></h2>\n\n<p>Applying games to science?! How can you lose?</p>\n\n<blockquote><p>Have you ever wanted to play video games while also contributing to science? In psychology experiments developed by myself and Peter Battaglia, participants are immersed in an interactive 3D world which is experimentally well-controlled, yet also extremely fun. This talk will explain how we created these &ldquo;game-like&rdquo; experiments in Python using the Panda3D video game engine.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/173/\">Cache me if you can: memcached, caching patterns and best practices</a> <em>(Guillaume Ardaud)</em></h2>\n\n<p>Caching is an important tool for any developers toolkit. When to use memcache vs. a SQL database? This talk should help answer this question and more!</p>\n\n<blockquote><p>Memcached is a popular, blazing fast in-RAM key/object store mainly used in web applications (although it can be used in virtually any software). You will walk out of this talk with a solid understanding of memcached and what it does under the hood, and become familiar with several patterns and best practices for making the most of it in your own Python applications.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/141/\">Postgres Performance for Humans</a> <em>(Craig Kerstiens)</em></h2>\n\n<p>Probably the most important tool in a developers toolkit is the database. Knowing how to manage your databases is an important skill (often learned when something starts to go wrong).</p>\n\n<blockquote><p>To many developers the database is a black box. You expect to be able to put data into your database, have it to stay there, and get it out when you query it&hellip; hopefully in a performant manner. When its not performant enough the two options are usually add some indexes or throw some hardware at it. We&rsquo;ll walk through a bit of a clearer guide of how you can understand and manage DB performance.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/150/\">Getting Started Testing</a> <em>(Ned Batchelder)</em></h2>\n\n<p>This talk looks like the end-all and be-all of Python testing talks. You&rsquo;ll learn pretty much everything there is to know about testing Python code.</p>\n\n<blockquote><p>If you&rsquo;ve never written tests before, you probably know you <em>should</em>, but view the whole process as a bureaucratic paperwork nightmare to check off on your ready-to-ship checklist. This is the wrong way to approach testing. Tests are a solution to a problem that is important to you: does my code work? I&rsquo;ll show how Python tests are written, and why.</p></blockquote>\n\n<h2><a href=\"https://us.pycon.org/2014/schedule/presentation/223/\">Technical on-boarding, training, and mentoring</a> <em>(Kate Heddleston)</em></h2>\n\n<p>After onboarding a few new devs myself, I know that I could use some guidance in this area. This talk looks like it should have some great take-aways.</p>\n\n<blockquote><p>This is a talk about how to make junior and new engineers into independent and productive members of your engineering team faster and cheaper. We will focus on python specific resources and libraries that will help you create a simple but effective on boarding program, and talk about case studies of companies that have had success using these techniques.</p></blockquote>\n"
}