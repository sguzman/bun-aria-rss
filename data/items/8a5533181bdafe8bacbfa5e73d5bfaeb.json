{
  "title": "The speed of traffic",
  "link": "",
  "published": "2019-06-14T09:21:00-07:00",
  "updated": "2019-06-14T09:21:00-07:00",
  "author": {
    "name": "Jonathan Landy"
  },
  "id": "tag:efavdb.com,2019-06-14:/the-speed-of-traffic",
  "summary": "<p>We use a simple argument to estimate the speed of traffic on a highway as a function of the density of cars. The idea is to simply calculate the maximum speed that traffic could go without supporting a growing traffic&nbsp;jam.</p>\n<h3>Jam dissipation&nbsp;argument</h3>\n<p>To estimate the speed of traffic …</p>",
  "content": "<p>We use a simple argument to estimate the speed of traffic on a highway as a function of the density of cars. The idea is to simply calculate the maximum speed that traffic could go without supporting a growing traffic&nbsp;jam.</p>\n<h3>Jam dissipation&nbsp;argument</h3>\n<p>To estimate the speed of traffic as a function of density, we&#8217;ll calculate an upper bound and argue that actual traffic speeds must be described by an equation similar to that obtained. To derive our upper bound, we&#8217;ll consider what happens when a small traffic jam forms. If the speed of cars is such that the rate of exit from the jam is larger than the rate at which new cars enter the jam, then the jam will dissipate. On the other hand, if this doesn&#8217;t hold, the jam will grow, causing the speed to drop until a speed is obtained that allows the jam to dissipate. This sets the bound. Although we consider a jam to make the argument simple, what we really have in mind is any other sort of modest slow-down that may&nbsp;occur.</p>\n<p>To begin, we introduce some definitions. (1) Let <span class=\"math\">\\(\\lambda\\)</span> be the density of cars in units of <span class=\"math\">\\([cars / mile]\\)</span>. (2) Next we consider the rate of exit from a jam: Note that when traffic is stopped, a car cannot move until the car in front of it does. Because a human is driving the car, there is a slight delay between the time that one car moves and the car behind it moves. Let <span class=\"math\">\\(T\\)</span> be this delay time in <span class=\"math\">\\([hours]\\)</span>. (3) Let <span class=\"math\">\\(v\\)</span> be the speed of traffic outside the jam in units of <span class=\"math\">\\([miles / hour]\\)</span>.</p>\n<p>With the above definitions, we now consider the rate at which cars exit a jam. This is the number of cars that can exit the jam per hour, which is simply<br>\n</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{1} \\label{1}  \nr_{out} = \\frac{1}{T}.  \n\\end{eqnarray}</div>\n<p><br>\nNext, the rate at which cars enter the jam is given by<br>\n</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{2} \\label{2}  \nr_{in} = \\lambda v.  \n\\end{eqnarray}</div>\n<p><br>\nRequiring that <span class=\"math\">\\(r_{out} &gt; r_{in}\\)</span> we get<br>\n</p>\n<div class=\"math\">\\begin{eqnarray} \\label{3} \\tag{3}  \nv &lt; \\frac{1}{\\lambda T}.  \n\\end{eqnarray}</div>\n<p><br>\nThis is our bound and estimate for the speed of traffic. We note that this form for <span class=\"math\">\\(v\\)</span> follows from dimensional analysis, so the actual rate of traffic must have the same algebraic form as our upper bound (\\ref{3}) &#8212; it can differ by a constant factor in front, but should have the same <span class=\"math\">\\(\\lambda\\)</span> and <span class=\"math\">\\(T\\)</span>&nbsp;dependence.</p>\n<h3>Plugging in&nbsp;numbers</h3>\n<p>I estimate <span class=\"math\">\\(T\\)</span>, the delay time between car movements to be about one second, which in hours is<br>\n</p>\n<div class=\"math\">\\begin{eqnarray} \\tag{4} \\label{4}  \nT \\approx 0.00028\\ [hour].  \n\\end{eqnarray}</div>\n<p><br>\nNext for <span class=\"math\">\\(\\lambda\\)</span>, note that a typical car is about 10 feet long and a mile is around 5000 feet, so the maximum for <span class=\"math\">\\(\\lambda\\)</span> is around <span class=\"math\">\\( \\lambda \\lesssim 500 [cars / mile]\\)</span>. Consider a case where there is a car every 10 car lengths or so. In this case, the density will go down from the maximum by a factor of 10, or<br>\n</p>\n<div class=\"math\">\\begin{eqnarray}\\tag{5} \\label{5}  \n\\lambda \\approx 50 \\ [cars / mile].  \n\\end{eqnarray}</div>\n<p><br>\nPlugging (\\ref{4}) and (\\ref{5}) into (\\ref{3}), we obtain<br>\n</p>\n<div class=\"math\">\\begin{eqnarray}  \\tag{6}\nv \\lesssim \\frac{1}{0.00028 * 50} \\approx 70\\ [mile / hour],  \n\\end{eqnarray}</div>\n<p><br>\nquite close to our typical highway traffic speeds (and speed&nbsp;limits).</p>\n<h3>Final&nbsp;comments</h3>\n<p>The above bound clearly depends on what values you plug in &#8212; I picked numbers that seemed reasonable, but admit I adjusted them a bit till I got the final number I wanted for <span class=\"math\">\\(v\\)</span>. Anecdotally, I&#8217;ve found the result to work well at other densities: For example, when traffic is slow on the highway near my house, if I see that there is a car every 5 car lengths, the speed tends to be about <span class=\"math\">\\(30 [miles / hour]\\)</span> &#8212; so scaling rule seems to work. The last thing I should note is that wikipedia has an article outlining some of the extensive research literature that&#8217;s been done on traffic flows &#8212; you can see that <a href=\"https://en.wikipedia.org/wiki/Traffic_flow\">here</a>.</p>\n<script type=\"text/javascript\">if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {\n    var align = \"center\",\n        indent = \"0em\",\n        linebreak = \"false\";\n\n    if (false) {\n        align = (screen.width < 768) ? \"left\" : align;\n        indent = (screen.width < 768) ? \"0em\" : indent;\n        linebreak = (screen.width < 768) ? 'true' : linebreak;\n    }\n\n    var mathjaxscript = document.createElement('script');\n    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';\n    mathjaxscript.type = 'text/javascript';\n    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';\n\n    var configscript = document.createElement('script');\n    configscript.type = 'text/x-mathjax-config';\n    configscript[(window.opera ? \"innerHTML\" : \"text\")] =\n        \"MathJax.Hub.Config({\" +\n        \"    config: ['MMLorHTML.js'],\" +\n        \"    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } },\" +\n        \"    jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" +\n        \"    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" +\n        \"    displayAlign: '\"+ align +\"',\" +\n        \"    displayIndent: '\"+ indent +\"',\" +\n        \"    showMathMenu: true,\" +\n        \"    messageStyle: 'normal',\" +\n        \"    tex2jax: { \" +\n        \"        inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" +\n        \"        displayMath: [ ['$$','$$'] ],\" +\n        \"        processEscapes: true,\" +\n        \"        preview: 'TeX',\" +\n        \"    }, \" +\n        \"    'HTML-CSS': { \" +\n        \"        availableFonts: ['STIX', 'TeX'],\" +\n        \"        preferredFont: 'STIX',\" +\n        \"        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} },\" +\n        \"        linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" +\n        \"    }, \" +\n        \"}); \" +\n        \"if ('default' !== 'default') {\" +\n            \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n            \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" +\n                \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" +\n                \"VARIANT['normal'].fonts.unshift('MathJax_default');\" +\n                \"VARIANT['bold'].fonts.unshift('MathJax_default-bold');\" +\n                \"VARIANT['italic'].fonts.unshift('MathJax_default-italic');\" +\n                \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');\" +\n            \"});\" +\n        \"}\";\n\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);\n    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);\n}\n</script>",
  "category": [
    "",
    "",
    ""
  ]
}