{
  "title": "Active Learning: An Introduction",
  "description": "<p>What is active learning? How can it help you to speed up your model development? In this blog post, we will see what Active Learning is, how it can help you and how you can implement Active Learning in pseudo code. But first things first, what is Active Learning?</p><h2 id=\"what-is-active-learning\">What</h2>",
  "link": "https://www.data-blogger.com/active-learning-an-introduction/",
  "guid": "6232454e08327d0001167afd",
  "category": [
    "Data Annotation",
    "Research"
  ],
  "dc:creator": "Kevin Jacobs",
  "pubDate": "Wed, 16 Mar 2022 20:42:11 GMT",
  "media:content": "",
  "content:encoded": "<img src=\"https://images.unsplash.com/photo-1546776310-eef45dd6d63c?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDJ8fHJvYm90fGVufDB8fHx8MTY0NzQ2MTcxOA&ixlib=rb-1.2.1&q=80&w=2000\" alt=\"Active Learning: An Introduction\"><p>What is active learning? How can it help you to speed up your model development? In this blog post, we will see what Active Learning is, how it can help you and how you can implement Active Learning in pseudo code. But first things first, what is Active Learning?</p><h2 id=\"what-is-active-learning\">What Is Active Learning?</h2><p>Active Learning is a method in which data is annotated in s smart way. With data annotation, you would normally get to see a randomly selected item which you need to label. This however can lead to a lot of repetition of similar items which you have to label. This is a waste of time. A better way would be to use Active Learning. For Active Learning, a batch of random items is selected first. Then, a lightweight classifier is used for evaluating the previously annotated data. If this would be the first round, then the classifier is not trained at all. This classifier will assign probabilities to each of its predictions. Then, the items at which the classifier is not sure are selected to be annotated first.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://www.data-blogger.com/content/images/2022/03/image-1.png\" class=\"kg-image\" alt=\"Active Learning: An Introduction\" loading=\"lazy\" width=\"1218\" height=\"558\" srcset=\"https://www.data-blogger.com/content/images/size/w600/2022/03/image-1.png 600w, https://www.data-blogger.com/content/images/size/w1000/2022/03/image-1.png 1000w, https://www.data-blogger.com/content/images/2022/03/image-1.png 1218w\" sizes=\"(min-width: 720px) 720px\"><figcaption>The annotation process using Active Learning.</figcaption></figure><h2 id=\"why-active-learning\">Why Active Learning?</h2><p>So, why would you do this? Research has shown that it is beneficial to use Active Learning as it speeds up the annotation process. Besides that, you will also not waste time on annotating near duplicate items. Potential pitfalls are that the lightweight classifier is too different from the model you will use in production. If this is the case, then active learning might find the weak spots of the lightweight classifier which might differ from the weak spots of the model used in production. Another issue is that it might introduce a bias into your dataset based on the bias of the lightweight classifier. In the following plot you can see the effect of Active Learning versus Random Sampling:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://lh6.googleusercontent.com/HmzohfGBV5Kz9xto3UTULfHe1JDfdROTzTBHCQ7R2jpcAWZOuWxA1e18FhvGwL99TCoc5-co2Em846G32Z0jz-SpW8kIN9HJhYXy_qydsA3yxdwZYx8g34JOOTOib9Ym0yghzt2f3Axs\" class=\"kg-image\" alt=\"Active Learning: An Introduction\" loading=\"lazy\"><figcaption>The effect of Active Learning versus Random Sampling.</figcaption></figure><h2 id=\"active-learning-implementation\">Active Learning Implementation</h2><p>In this section, we will see how Active Learning can be implemented in practice. In this example, we will take a look at pseudo code. For simplicity, we will examine a simple spam classification task in which a message is either classified as <code>spam</code> or <code>no_spam</code>.</p><p>First, define two files for each of the classes: <code>spam.txt</code> and <code>no_spam.txt</code>. Each file should consist of lines where each line in <code>spam.txt</code> is a spammy message and each line in <code>no_spam.txt</code> contains a message which is not spam. Furthermore, create an additional file <code>dataset.txt</code> which contains unlabeled items in each line. In the beginning, only <code>dataset.txt</code> needs to contain data. The other files can be empty.</p><p>Now we can implement Active Learning. First, load the data of <code>dataset.txt</code>. Then, build a classifier of your choice. For example, a TF-IDF + Logistic Regression classifier. Train this classifier on a balanced selection of <code>spam.txt</code> and <code>no_spam.txt</code>. Then, predict scores for all items found in <code>dataset.txt</code> and select the item with the score the closest to 0.5. You can take for example the items with the smallest squared distance to 0.5. Then, put this item in either <code>spam.txt</code> or <code>no_spam.txt</code> and repeat the process. After you have obtained a satisfying score, you can stop.</p><h2 id=\"conclusion\">Conclusion</h2><p>Active Learning is a powerful method for labeling new items and outperforms Random Sampling. Some effort might be required for setting up Active Learning, but it will pay-off, even after a few iterations. In this blog post, pseudo code is given for the implementation of Active Learning in practice. If you have any questions, feel free to ask them via Twitter.</p>"
}