{
  "id": "tag:blogger.com,1999:blog-8474926331452026626.post-2426489791409654175",
  "published": "2022-09-16T13:35:00.001-07:00",
  "updated": "2022-10-21T06:31:20.348-07:00",
  "category": [
    "",
    "",
    ""
  ],
  "title": "Robust Online Allocation with Dual Mirror Descent",
  "content": "<span class=\"byline-author\">Posted by Santiago Balseiro, Staff Research Scientist, Google Research, and Associate Professor at Columbia University, and Vahab Mirrokni, Distinguished Scientist, Google Research</span> <p>The emergence of digital technologies has transformed decision making across commercial sectors such as airlines, online retailing, and internet advertising. Today, real-time decisions need to be repeatedly made in highly uncertain and rapidly changing environments. Moreover, organizations usually have limited resources, which need to be efficiently allocated across decisions. Such problems are referred to as <em>online allocation problems with resource constraints</em>, and applications abound. Some examples include: </p><a name='more'></a><ul> <li><b>Bidding with Budget Constraints: </b>Advertisers increasingly purchase ad slots using auction-based marketplaces such as search engines and ad exchanges. A typical advertiser can participate in a large number of auctions in a given month. Because the supply in these marketplaces is uncertain, advertisers set budgets to control their total spend. Therefore, advertisers need to determine how to optimally place bids while limiting total spend and maximizing conversions.  </li><li><b>Dynamic Ad Allocation: </b>Publishers can monetize their websites by signing deals with advertisers guaranteeing a number of impressions or by auctioning off slots in the open market. To make this choice, publishers need to trade off, in real-time, the short-term revenue from selling slots in the open market and the long-term benefits of delivering good quality spots to reservation ads.  </li><li><b>Airline Revenue Management:</b> Planes have a limited number of seats that need to be filled up as much as possible before a flight’s departure. But demand for flights changes over time and airlines would like to sell airline tickets to the customers who are willing to pay the most. Thus, airlines have increasingly adopted sophisticated automated systems to manage the pricing and availability of airline tickets.   </li><li><b>Personalized Retailing with Limited Inventories:</b> Online retailers can use real-time data to personalize their offerings to customers who visit their store. Because product inventory is limited and cannot be easily replenished, retailers need to dynamically decide which products to offer and at what price to maximize their revenue while satisfying their inventory constraints. </li></ul><p>The common feature of these problems is the presence of resource constraints (budgets, contractual obligations, seats, or inventory, respectively in the examples above) and the need to make dynamic decisions in environments <a href=\"https://en.wikipedia.org/wiki/Knightian_uncertainty\">with uncertainty</a>. Resource constraints are challenging because they link decisions across time — e.g., in the bidding problem, bidding too high early can leave advertisers with no budget, and thus missed opportunities later. Conversely, bidding too conservatively can result in a low number of conversions or clicks. </p>  <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjeCOTNurjAHYOaGD6AgsHuh7Q2HDcJMVY7TkzCCZ1zebUJbkWDEG1glO-4C5UAxS3B_QvOBcaHgjY74DCu9Gt7woFDMLhi0oYChKj9bntmdyI9lDAl_HlBYG5n8wm1IjTrgUc9f3iAD_CEiYP9ezYFacEf8dXQlEiR5VxqxDu1ySlnH3BpL-dDD9dmVg/s1273/image10.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"664\" data-original-width=\"1273\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjeCOTNurjAHYOaGD6AgsHuh7Q2HDcJMVY7TkzCCZ1zebUJbkWDEG1glO-4C5UAxS3B_QvOBcaHgjY74DCu9Gt7woFDMLhi0oYChKj9bntmdyI9lDAl_HlBYG5n8wm1IjTrgUc9f3iAD_CEiYP9ezYFacEf8dXQlEiR5VxqxDu1ySlnH3BpL-dDD9dmVg/s16000/image10.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Two central resource allocation problems faced by advertisers and publishers in internet advertising markets.</td></tr></tbody></table>         <p>In this post, we discuss state-of-the-art algorithms that can help maximize goals in dynamic, resource-constrained environments. In particular, we have recently developed a new class of algorithms for online allocation problems, called <em>dual mirror descent</em>, that are simple, robust, and flexible. Our papers have appeared in <a href=\"https://arxiv.org/abs/2011.10124\">Operations Research</a>, <a href=\"https://proceedings.mlr.press/v119/balseiro20a.html\">ICML’20</a>, and <a href=\"https://proceedings.mlr.press/v139/balseiro21a.html\">ICML’21</a>, and we have <a href=\"https://arxiv.org/abs/2202.06152\">ongoing work</a> to continue progress in this space. Compared to existing approaches, dual mirror descent is faster as it does not require solving auxiliary optimization problems, is more flexible because it can handle many applications across different sectors with minimal modifications, and is more robust as it enjoys remarkable performance under different environments. </p><p><b>Online Allocation Problems</b><br />In an online allocation problem, a decision maker has a limited amount of total resources (<span style=\"font-family: Times New Roman;\"><em>B</em></span>) and receives a certain number of requests over time (<span style=\"font-family: Times New Roman;\"><em>T</em></span>). At any point in time (<span style=\"font-family: Times New Roman;\"><em>t</em></span>), the decision maker receives a reward function (<span style=\"font-family: Times New Roman;\"><em>f<sub>t</sub></em></span>)  and resource consumption function (<span style=\"font-family: Times New Roman;\"><em>b<sub>t</sub></em></span>), and takes an action (<span style=\"font-family: Times New Roman;\"><em>x<sub>t</sub></em></span>). The reward and resource consumption functions change over time and the objective is to maximize the total reward within the resource constraints. If all the requests were <em>known in advance</em>, then an <em>optimal</em> allocation could be obtained by solving an <em>offline</em> optimization problem for how to maximize the reward function over time within the resource constraints<sup id=\"fnref1\"><a href=\"#fn1\" rel=\"footnote\"><span style=\"font-size: x-small;\">1</span></a></sup>.</p><p>The optimal <em>offline</em> allocation cannot be implemented in practice because it requires knowing future requests. However, this is still useful for framing the goal of <em>online</em> allocation problems: to design an algorithm whose performance is as close to optimal as possible <em>without</em> knowing future requests. </p><p><b>Achieving the Best of Many Worlds with Dual Mirror Descent</b><br />A simple, yet powerful idea to handle resource constraints is introducing “prices” for the resources, which enables accounting for the <a href=\"https://en.wikipedia.org/wiki/Opportunity_cost\">opportunity cost</a> of consuming resources when making decisions. For example, selling a seat on a plane today means it can’t be sold tomorrow. These prices are useful as an internal accounting system of the algorithm. They serve the purpose of coordinating decisions at different moments in time and allow decomposing<a href=\"https://en.wikipedia.org/wiki/Lagrangian_relaxation\"> a complex problem</a> with resource constraints into simpler subproblems: one per time period with no resource constraints. For example, in a bidding problem, the prices capture an advertiser’s opportunity cost of consuming one unit of budget and allow the advertiser to handle each auction as an independent bidding problem. </p><p>This reframes the online allocation problem as a problem of pricing resources to enable optimal decision making. The key innovation of our algorithm is using machine learning to predict optimal prices in an online fashion: we choose prices dynamically using <em><a href=\"https://en.wikipedia.org/wiki/Mirror_descent\">mirror descent</a></em>, a popular optimization algorithm for training machine learning predictive models. Because prices for resources are referred to as \"<a href=\"https://en.wikipedia.org/wiki/Duality_(optimization)\">dual variables</a>\" in the field of optimization, we call the resulting algorithm <a href=\"https://arxiv.org/abs/2011.10124\">dual mirror descent</a>.   </p><p>The algorithm works sequentially by assuming uniform resource consumption over time is optimal and updating the dual variables after each action. It starts at a moment in time (<span style=\"font-family: Times New Roman;\"><em>t</em></span>) by taking an action (<span style=\"font-family: Times New Roman;\"><em>x<sub>t</sub></em></span>) that maximizes the reward minus the opportunity cost of consuming resources (shown in the top gray box below). The action (e.g., how much to bid or which ad to show) is implemented if there are enough resources available. Then, the algorithm computes the error in the resource consumption (<span style=\"font-family: Times New Roman;\"><em>g<sub>t</sub></em></span>), which is the difference between uniform consumption over time and the actual resource consumption (below in the third gray box). A new dual variable for the next time period is computed using mirror descent based on the error, which then informs the next action. Mirror descent seeks to make the error as close as possible to zero, improving the accuracy of its estimate of the dual variable, so that resources are consumed uniformly over time. While the assumption of uniform resource consumption may be surprising, it helps avoid missing good opportunities and often aligns with commercial goals so is effective. Mirror descent also allows a variety of update rules; more details are in the paper. </p>    <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFxmJQO-O-g_9ueC0lFFhTzjHEfy_tj68ams9V4INm_8bQrRSvzKOyKtVcE33LbvVwS4TEy0u_h3AoXGTh4k7_u6KXf-Z6gLJYSDw-FZQdfbzBnrSP9OIK4klcN3e9EA7jYoFW0Jrv3YhOXn7MyxldWm2KVu34E4pVqy4ci3fdKn1dm8UpYYfdwFEsfg/s1273/image20.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"1139\" data-original-width=\"1273\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFxmJQO-O-g_9ueC0lFFhTzjHEfy_tj68ams9V4INm_8bQrRSvzKOyKtVcE33LbvVwS4TEy0u_h3AoXGTh4k7_u6KXf-Z6gLJYSDw-FZQdfbzBnrSP9OIK4klcN3e9EA7jYoFW0Jrv3YhOXn7MyxldWm2KVu34E4pVqy4ci3fdKn1dm8UpYYfdwFEsfg/s16000/image20.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">An overview of the dual mirror descent algorithm.</td></tr></tbody></table>         <p>By design, dual mirror descent has a self-correcting feature that prevents depleting resources too early or waiting too long to consume resources and missing good opportunities. When a request consumes more or less resources than the target, the corresponding dual variable is increased or decreased. When resources are then priced higher or lower, future actions are chosen to consume resources more conservatively or aggressively.  </p><p>This algorithm is easy to implement, fast, and enjoys remarkable performance under different environments. These are some salient features of our algorithm: </p><ul> <li>Existing methods require periodically <a href=\"https://pubsonline.informs.org/doi/abs/10.1287/opre.2014.1289\">solving large auxiliary optimization problems</a> using past data. In contrast, this algorithm does not need to solve any auxiliary optimization problem and has a very simple rule to update the dual variables, which, in many cases, can be run in <a href=\"https://en.wikipedia.org/wiki/Time_complexity\">linear time complexity</a>. Thus, it is appealing for many real-time applications that require fast decisions.  </li><li>There are minimal requirements on the structure of the problem. Such flexibility allows dual mirror descent to handle many applications across different sectors with minimal modifications. Moreover, our algorithms are flexible since they accommodate different objectives, constraints, or regularizers. By <a href=\"https://proceedings.mlr.press/v139/balseiro21a.html\">incorporating regularizers</a>, decision makers can include important objectives beyond economic efficiency, such as fairness.  </li><li>Existing algorithms for online allocation problems are tailored for either adversarial or stochastic input data. Algorithms for <a href=\"https://ieeexplore.ieee.org/document/1530720\">adversarial inputs</a> are robust as they make almost no assumptions on the structure of the data but, in turn, obtain performance guarantees that are too pessimistic in practice. On the other hand, algorithms for <a href=\"https://dl.acm.org/doi/abs/10.1145/1566374.1566384\">stochastic inputs</a> enjoy better performance guarantees by exploiting statistical patterns in the data but can perform poorly when the model is <a href=\"https://en.wikipedia.org/wiki/Statistical_model_specification\">misspecified</a>. Dual mirror descent, however, attains performance close to optimal in both stochastic and adversarial input models while being oblivious to the structure of the input model. Compared to existing work on simultaneous approximation algorithms, our method <a href=\"https://epubs.siam.org/doi/10.1137/1.9781611973099.134\">is more general</a>, applies to a wide range of problems, and requires <a href=\"https://dl.acm.org/doi/10.1145/2764468.2764536\">no forecasts</a>.  Below is a comparison of our algorithm to other state-of-the-art methods. Results are based on synthetic data for an <a href=\"https://pubsonline.informs.org/doi/abs/10.1287/mnsc.2014.2017\">ad allocation problem</a>.</li></ul>      <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhFbs6yYYocSijnXw-NrM1isG8h-PxhAyS7o8L_vJY3gG43YDoldz2Q6nvNkd4h0EuOku9t17V4nVUm-HKI7eRyAfaciWzMhzBFcdrsauJRQcDb2pf3cwE7AAcVQuY0QDjgwSR5lqmXGob5OpssT1d4VZ89s5va8p2SarAYcJtDrm8SlQ9jRg0QYqEqRQ/s1200/image12.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"742\" data-original-width=\"1200\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhFbs6yYYocSijnXw-NrM1isG8h-PxhAyS7o8L_vJY3gG43YDoldz2Q6nvNkd4h0EuOku9t17V4nVUm-HKI7eRyAfaciWzMhzBFcdrsauJRQcDb2pf3cwE7AAcVQuY0QDjgwSR5lqmXGob5OpssT1d4VZ89s5va8p2SarAYcJtDrm8SlQ9jRg0QYqEqRQ/s16000/image12.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\">Performance of dual mirror descent, <a href=\"https://dl.acm.org/doi/10.1145/1566374.1566384\">a training based method,</a> and <a href=\"https://ieeexplore.ieee.org/document/1530720\">an adversarial method</a> relative to the optimal offline solution. Lower values indicate performance closer to the optimal offline allocation. Results are generated using synthetic experiments based on <a href=\"https://pubsonline.informs.org/doi/10.1287/mnsc.2014.2017\">public data</a> for an ad allocation problem.</td></tr></tbody></table>  <p><b>Conclusion</b><br />In this post we introduced dual mirror descent, an algorithm for online allocation problems that is simple, robust, and flexible. It is particularly notable that after a long line of work in online allocation algorithms, dual mirror descent provides a way to analyze a wider range of algorithms with superior robustness priorities compared to previous techniques.  Dual mirror descent has a wide range of applications across several commercial sectors and has been used over time at Google to help advertisers capture more value through better algorithmic decision making. We are also exploring <a href=\"https://arxiv.org/abs/2202.06152\">further work</a> related to mirror descent and its connections to <a href=\"https://en.wikipedia.org/wiki/PID_controller\">PI controllers</a>. </p><p><b>Acknowledgements</b><br /><em>We would like to thank our co-authors Haihao Lu and Balu Sivan, and Kshipra Bhawalkar for their exceptional support and contributions. We would also like to thank our collaborators in the ad quality team and market algorithm research.</em></p>    <!--Footnotes--><hr width=\"80%\" /><p><span class=\"Apple-style-span\" style=\"font-size: x-small;\"><sup><a name=\"fn1\"><b>1</b></a></sup>Formalized in the equation below:&nbsp;<a href=\"#fnref1\" rev=\"footnote\"><sup>↩</sup></a></span> <table align=\"left\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjwlilkKvmPKrZhHmes0ianEnwF-jUTHBRB25lPXRbZLR0VWTEPVPmgfY416f64hox-v0aAHrsPl5HAGcA0CbkIZprG-NHCWTFErz6YwGI54WEZO7Af523tm32J0fIp_N3t9UzMziOIDPaEtyrsFrHtfnYrYUo2dJjOh23RkdypGfK9Ax49SCBgWg238Q/s2220/Screen%20Shot%202022-09-16%20at%201.02.10%20PM.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"349\" data-original-width=\"2220\" height=\"50\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjwlilkKvmPKrZhHmes0ianEnwF-jUTHBRB25lPXRbZLR0VWTEPVPmgfY416f64hox-v0aAHrsPl5HAGcA0CbkIZprG-NHCWTFErz6YwGI54WEZO7Af523tm32J0fIp_N3t9UzMziOIDPaEtyrsFrHtfnYrYUo2dJjOh23RkdypGfK9Ax49SCBgWg238Q/w320-h50/Screen%20Shot%202022-09-16%20at%201.02.10%20PM.png\" width=\"320\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\"></td></tr></tbody></table>",
  "link": [
    "",
    "",
    "",
    "",
    ""
  ],
  "author": {
    "name": "Google AI",
    "uri": "http://www.blogger.com/profile/12098626514775266161",
    "email": "noreply@blogger.com",
    "gd:image": ""
  },
  "media:thumbnail": "",
  "thr:total": 0
}