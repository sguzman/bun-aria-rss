{
  "title": "How Much Memory Does A Data Scientist Need?",
  "link": "https://fullstackml.com/how-much-memory-does-a-data-scientist-need-245a5e06d26d?source=rss----46e065078cc1---4",
  "guid": "https://medium.com/p/245a5e06d26d",
  "category": [
    "data-science",
    "in-memory",
    "analytics",
    "dataset",
    "infrastructure"
  ],
  "dc:creator": "Dmitry Petrov",
  "pubDate": "Mon, 07 Dec 2015 01:30:41 GMT",
  "atom:updated": "2017-03-06T05:27:05.053Z",
  "content:encoded": "<p>Recently, I discovered an interesting blog post <a href=\"http://www.kdnuggets.com/2015/11/big-ram-big-data-size-datasets.html\">Big RAM is eating big data — Size of datasets used for analytics</a> from Szilard Pafka. He says that “<strong>Big RAM is eating big data”</strong>. This phrase means that <strong>the growth of the memory size is much faster than the growth of the data sets</strong> that typical data scientist process. So, data scientist do not need as much data as the industry offers to them. Would you agree?</p><p>I do not agree. <strong>This result does not match my intuition. During my research I found an infrastructure bias in the data from this blogpost.</strong> I’ll show that the growth of the datasets is approximately the same as the memory growth in Amazon AWS rented machines and the Apple MacBook Pro laptops during the last 10 years.</p><h3>1. The blog post results</h3><p>According to “Big RAM is eating big data” blog post, the amount of memory in the Amazon AWS machines grow faster (50% per year) than the median datasets (20% per year) that people use for analytics. This result is based on KDNuggets survey about data sizes: <a href=\"http://www.kdnuggets.com/2015/08/largest-dataset-analyzed-more-gigabytes-petabytes.html\">Poll Results: Where is Big Data? For most, Largest Dataset Analyzed is in laptop-size GB range</a>. You might find the most recent survey dataset <a href=\"https://github.com/szilard/dataset-sizes-kdnuggets/blob/master/data/dataset-sizes.csv\">here in Github</a>.</p><p>Let’s take a look at the data and results more closely. The cumulative distribution of dataset sizes for a few select years is below:</p><figure><img alt=\"memory-size\" src=\"https://cdn-images-1.medium.com/max/542/0*crhDh6FytdbOLlnU.jpeg\" /></figure><p>I did not find a code from the post. So, I reproduced this research in R.</p><p>Below is my R code to create this graph from the dataset file.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/81db936158075f1eb3efc02d217fd99c/href\">https://medium.com/media/81db936158075f1eb3efc02d217fd99c/href</a></iframe><p>He mentioned that cumulative distribution function looks like linear in the 0.1-0.9 range (10 megabytes to 10 petabytes). By fitting the linear model for this range you might calculate the difference between these years.</p><p>My R code:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/33b4b0934f0419b786937a659dc3ce23/href\">https://medium.com/media/33b4b0934f0419b786937a659dc3ce23/href</a></iframe><p>From the model summary you might find the coefficient corresponding to the year variable which is equal to 0.08821 from my code (0.075 from the blogpost). This coefficient corresponds to log10(sizeGB). After the conversion from log10(GB) back to GB we will get 10^0.088 = 1.22 <strong>which give us 22%, or roughly 20%, growth in datasets.</strong></p><p>This 20% growth is what he compares to the AWS maximum memory instance size for the same year ranges:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/1c459b1a0e70d9d91a9aebe2d5090b12/href\">https://medium.com/media/1c459b1a0e70d9d91a9aebe2d5090b12/href</a></iframe><p>A change from 15GB in 2007 to 244GB in 2014 give us approximately<strong> 50% AWS memory growth</strong> which is much higher than the datasets growth and shows that data scientists do not need as much memory according to the blog post.</p><h3>2. An intuition about memory size</h3><p>So, we got the same result as in the blog post. However, I can’t say that I agree with this study result. <strong>My intuition tells me that more memory gives me more luxury in data processing and analytics</strong>. The ability to work with a large amount of data could simplify the analytics process. Due to the memory constraints, I feel this squeeze constantly.</p><p>Another aspect of the memory issue is the data preparation step. Today you need two set of skills — preparing “big data” (usually in-disk processing using Unix grep, awk, Python, Apache Spark in standalone mode etc..) and in-memory analytics (R, Python scipy). These two things are very different. Good data scientists will have both skills. However, if you have a large amount of memory you don’t need the first skill because you can prepare data in R or Python directly. This is especially important for text analytics where the amount of input data is huge by default. So, data processing becomes simplified with the large amount of memory in your machine.</p><p>I can’t imagine saying “Okay, I don’t need any more memory and more CPU cores”. Additianally, I can add “…and please stop parallelizing my nice sequential code!”.</p><h3>3. AWS memory growth</h3><p>It looks like the maximum amount of memory in a rented AWS instance is not the best proxy for estimating the amount of memory that data scientists use. There are three reasons for that:</p><ul><li>High performance computing (HPC) machines are a relatively new products which have been introduced in around 2010 and <strong>AWS HPC product creates a strong bias in the analytics memory v.s. the AWS memory correlation.</strong> The research jumps from regular machines in 2006 to 2010 to HPC ones from 2010 to 2015. Thereby, giving us an improvement in 50%. However, in my humble opinion, I believe that the improvement is less (perhaps closer to 20% as in the median data size).</li><li>The price of AWS HPC machines is much higher than many companies can afford ($2-$3K/month). A couple of months of using this kind of machine is more expensive than a brand new shiny MacBook Pro with 16Gb of RAM memory and 1Tb SSD disk.</li><li>It is not easy and efficient to use remote AWS machines. Not a big deal. However, I believe that many sata scientists would prefer to use their local machines, especially Apple fans :).</li></ul><p>In my mind, <strong>HPC machines create a bias in this research</strong> and we should estimate memory usage only by regular AWS machines not including HPC and memory optimized machines. Here is the AWS history for regular machines:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/86bcc892032f4dc6d2ede6aaed46a0b0/href\">https://medium.com/media/86bcc892032f4dc6d2ede6aaed46a0b0/href</a></iframe><p>From this table I’d exclude 2006 and m1.small because it was a limited beta and obviously m1.small is the m1.xlarge machine “sliced” by 8 parts. The blogger did the same - he started from 2007.</p><p>Side note: As luck would have it, my AWS experience started in that same 2007 year. For 2007, it was an amazing experience to rent a machine in one minute as apposite to days or even weeks in hosting companies previously. During this time frame, my experience was mostly in working with regular AWS machines. HPC machines were specialized and overpriced for my purposes.</p><p>So, let’s start the AWS regular machine history from 2007 with m1.xlarge then <strong>the AWS memory growth would be 35% annually</strong> during these years: 15GB*1.35^8year ~ 160GB.</p><p>Based on this result, it is closer to the growth of the datasets. As you can see the difference is 20% vs. 35%. Consequently, this cannot be agreed as strong evidence for the unimportance of RAM memory.</p><p>Let’s have more fun…</p><h3>4. Apple MacBook Pro memory growth</h3><p>I think that many people analyse data in their local machines and laptops. I think that most people are not ready to switch from their shiny laptops with a cozy local environment to a remote AWS machine for analytics. At least it is not easy for me and I’ll find a way to process a relatively large amount of data in my laptop (I suppose that a cluster is not needed).</p><p>Let’s try to use Apple MacBook Pro as a proxy for estimating memory growth. In the table (<a href=\"https://en.wikipedia.org/wiki/MacBook_Pro\">data is based on wikipedia</a>) below is the MacBook Pro memory history:</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/a66971a4c1cedbbeb6a4d86abd05e554/href\">https://medium.com/media/a66971a4c1cedbbeb6a4d86abd05e554/href</a></iframe><p><strong>Surprisingly, this MacBook Pro data gives us the same result as the AWS regular machine results - 35% growth</strong>: 1GB*1.36^9 ~ 16GB. It appears as if we removed (or at least dramatically reduced) the infrastructure bias.</p><h3>Conclusion</h3><p>This blog post shows that <strong>maximum memory in MacBook Pro laptops and regular AWS machines are unbiased proxies for estimating the amount of memory people and data scientists use</strong>.</p><p>Memory is huge. It gives us the ability to analyze data more efficiently. We are limited only by the growth of analytical methods and memory size. Given the opportunity, we can consume all the \"affordable\" memory and then some as data scientists are memory hogs, in my humble opinion (and biased as well :) ).</p><p>An update: Szilard Pafka pointed me to his code in <a href=\"https://github.com/szilard/dataset-sizes-kdnuggets\">his Github</a>.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=245a5e06d26d\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://fullstackml.com/how-much-memory-does-a-data-scientist-need-245a5e06d26d\">How Much Memory Does A Data Scientist Need?</a> was originally published in <a href=\"https://fullstackml.com\">FullStackML</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"
}