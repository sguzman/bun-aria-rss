{
  "title": "Dask Development Log",
  "link": "",
  "updated": "2017-01-18T00:00:00+00:00",
  "id": "https://mrocklin.github.io/blog/work/2017/01/18/dask-dev-5",
  "content": "<p><em>This work is supported by <a href=\"http://continuum.io\">Continuum Analytics</a>\nthe <a href=\"http://www.darpa.mil/program/XDATA\">XDATA Program</a>\nand the Data Driven Discovery Initiative from the <a href=\"https://www.moore.org/\">Moore\nFoundation</a></em></p>\n\n<p>To increase transparency I’m blogging weekly about the work done on Dask and\nrelated projects during the previous week.  This log covers work done between\n2017-01-01 and 2016-01-17.  Nothing here is ready for production.  This\nblogpost is written in haste, so refined polish should not be expected.</p>\n\n<p>Themes of the last couple of weeks:</p>\n\n<ol>\n  <li>Stability enhancements for the distributed scheduler and micro-release</li>\n  <li>NASA Grant writing</li>\n  <li>Dask-EC2 script</li>\n  <li>Dataframe categorical flexibility (work in progress)</li>\n  <li>Communication refactor (work in progress)</li>\n</ol>\n\n<h3 id=\"stability-enhancements-and-micro-release\">Stability enhancements and micro-release</h3>\n\n<p>We’ve released dask.distributed version 1.15.1, which includes important\nbugfixes after the recent 1.15.0 release.  There were a number of small issues\nthat coordinated to remove tasks erroneously.  This was generally OK\nbecause the Dask scheduler was able to heal the missing pieces (using the\nsame machinery that makes Dask resilience) and so we didn’t notice the flaw\nuntil the system was deployed in some of the more serious Dask deployments in\nthe wild.\nPR <a href=\"https://github.com/dask/distributed/pull/804\">dask/distributed #804</a>\ncontains a full writeup in case anyone is interested.  The writeup ends with\nthe following line:</p>\n\n<p><em>This was a nice exercise in how coupling mostly-working components can easily\nyield a faulty system.</em></p>\n\n<p>This also adds other fixes, like a compatibility issue with the new Bokeh\n0.12.4 release and others.</p>\n\n<h3 id=\"nasa-grant-writing\">NASA Grant Writing</h3>\n\n<p>I’ve been writing a proposal to NASA to help fund distributed Dask+XArray work\nfor atmospheric and oceanographic science at the 100TB scale.  Many thanks to\nour scientific collaborators who are offering support here.</p>\n\n<h3 id=\"dask-ec2-startup\">Dask-EC2 startup</h3>\n\n<p>The <a href=\"https://github.com/dask/dask-ec2\">Dask-EC2 project</a> deploys Anaconda, a\nDask cluster, and Jupyter notebooks on Amazon’s Elastic Compute Cloud (EC2)\nwith a small command line interface:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip install dask-ec2 --upgrade\ndask-ec2 up --keyname KEYNAME \\\n            --keypair /path/to/ssh-key \\\n            --type m4.2xlarge\n            --count 8\n</code></pre></div></div>\n\n<p>This project can be either <em>very useful</em> for people just getting started\nand for Dask developers when we run benchmarks, or it can be <em>horribly broken</em>\nif AWS or Dask interfaces change and we don’t keep this project maintained.\nThanks to a great effort from <a href=\"http://github.com/quasiben/\">Ben Zaitlen</a>\n`dask-ec2 is again in the <em>very useful</em> state, where I’m hoping it will stay\nfor some time.</p>\n\n<p>If you’ve always wanted to try Dask on a real cluster and if you already have\nAWS credentials then this is probably the easiest way.</p>\n\n<p>This already seems to be paying dividends.  There have been a few unrelated\npull requests from new developers this week.</p>\n\n<h3 id=\"dataframe-categorical-flexibility\">Dataframe Categorical Flexibility</h3>\n\n<p>Categoricals can <a href=\"http://matthewrocklin.com/blog/work/2015/06/18/Categoricals\">significantly improve\nperformance</a> on\ntext-based data.  Currently Dask’s dataframes support categoricals, but they\nexpect to know all of the categories up-front.  This is easy if this set is\nsmall, like the <code class=\"language-plaintext highlighter-rouge\">[\"Healthy\", \"Sick\"]</code> categories that might arise in medical\nresearch, but requires a full dataset read if the categories are not known\nahead of time, like the names of all of the patients.</p>\n\n<p><a href=\"http://jcrist.github.io/\">Jim Crist</a> is changing this so that Dask can\noperates on categorical columns with unknown categories at <a href=\"https://github.com/dask/dask/pull/1877\">dask/dask\n#1877</a>.  The constituent pandas\ndataframes all have possibly different categories that are merged as necessary.\nThis distinction may seem small, but it limits performance in a surprising\nnumber of real-world use cases.</p>\n\n<h3 id=\"communication-refactor\">Communication Refactor</h3>\n\n<p>Since the recent worker refactor and optimizations it has become clear that\ninter-worker communication has become a dominant bottleneck in some intensive\napplications.  <a href=\"http://github.com/pitrou\">Antoine Pitrou</a> is currently\n<a href=\"https://github.com/dask/distributed/pull/810\">refactoring Dask’s network communication layer</a>,\nmaking room for more communication options in the future.  This is an ambitious\nproject.  I for one am very happy to have someone like Antoine looking into\nthis.</p>"
}