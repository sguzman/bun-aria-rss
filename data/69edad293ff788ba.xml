<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns:yt="http://www.youtube.com/xml/schemas/2015" xmlns:media="http://search.yahoo.com/mrss/" xmlns="http://www.w3.org/2005/Atom">
 <link rel="self" href="http://www.youtube.com/feeds/videos.xml?channel_id=UCRfR7ivZHwXIC8kdydo5jdQ"/>
 <id>yt:channel:UCRfR7ivZHwXIC8kdydo5jdQ</id>
 <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
 <title>Jacob Neumann</title>
 <link rel="alternate" href="https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ"/>
 <author>
  <name>Jacob Neumann</name>
  <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
 </author>
 <published>2021-02-19T16:29:44+00:00</published>
 <entry>
  <id>yt:video:njL-M6r4t-Y</id>
  <yt:videoId>njL-M6r4t-Y</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Logic &amp; Lambdas: Context Extension [Intro to HoTT, No. 4, Part 1]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=njL-M6r4t-Y"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-11-02T00:07:19+00:00</published>
  <updated>2022-11-02T16:10:07+00:00</updated>
  <media:group>
   <media:title>Logic &amp; Lambdas: Context Extension [Intro to HoTT, No. 4, Part 1]</media:title>
   <media:content url="https://www.youtube.com/v/njL-M6r4t-Y?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i3.ytimg.com/vi/njL-M6r4t-Y/hqdefault.jpg" width="480" height="360"/>
   <media:description>In this video, we discuss the deductive rules governing arrow types: the application rule, the lambda abstraction rule, and the beta &amp; eta rules. 

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- Appeared in this video: https://github.com/jacobneu/HoTT-agda/blob/main/01-simpleTT.agda and https://github.com/jacobneu/HoTT-agda/blob/main/sandbox-04.agda
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda
- More up-to-date HoTT formalization in Agda: https://github.com/UniMath/agda-unimath

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory

Image/audio credits:
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)
- https://en.wikipedia.org/wiki/St_Pancras_railway_station#/media/File:St_Pancras_Railway_Station_2012-06-23.jpg
- https://en.wikipedia.org/wiki/Theophrastus#/media/File:Teofrasto_Orto_botanico_detail.jpg
- Undercover Vampire Policeman by Chris Zabriskie is licensed under a Creative Commons Attribution 4.0 license. https://creativecommons.org/licenses/by/4.0/
Source: http://chriszabriskie.com/uvp/
Artist: http://chriszabriskie.com/

Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="16" average="5.00" min="1" max="5"/>
    <media:statistics views="138"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:iaMIT5lL1nc</id>
  <yt:videoId>iaMIT5lL1nc</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Logic &amp; Lambdas: Constructive Modus Ponens [Intro to HoTT, No. 4, Part 0]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=iaMIT5lL1nc"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-10-12T12:48:08+00:00</published>
  <updated>2022-10-14T05:42:15+00:00</updated>
  <media:group>
   <media:title>Logic &amp; Lambdas: Constructive Modus Ponens [Intro to HoTT, No. 4, Part 0]</media:title>
   <media:content url="https://www.youtube.com/v/iaMIT5lL1nc?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i2.ytimg.com/vi/iaMIT5lL1nc/hqdefault.jpg" width="480" height="360"/>
   <media:description>In this video, we incorporate into type theory a central feature of logic: implications. Along the way, we encounter the work of the ancient Greek philosopher Theophrastus, the modern work of Brouwer, Heyting, and Kolmogorov, and end up doing computer programming. Quite a journey!

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- Appeared in this video: https://github.com/jacobneu/HoTT-agda/blob/main/01-simpleTT.agda and https://github.com/jacobneu/HoTT-agda/blob/main/sandbox-04.agda
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda
- More up-to-date HoTT formalization in Agda: https://github.com/UniMath/agda-unimath

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory

Image/audio credits:
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)
- https://en.wikipedia.org/wiki/St_Pancras_railway_station#/media/File:St_Pancras_Railway_Station_2012-06-23.jpg
- https://en.wikipedia.org/wiki/St_Pancras_railway_station#/media/File:St_Pancras_international_entrance.jpg
- https://en.wikipedia.org/wiki/Louvre_Pyramid#/media/File:Louvre_Palace.jpg
- https://en.wikipedia.org/wiki/Reichstag_dome#/media/File:Germany,_Berlin_-_Reichstag_-_panoramio.jpg


Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="35" average="5.00" min="1" max="5"/>
    <media:statistics views="265"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:2d6Ag7uPnlI</id>
  <yt:videoId>2d6Ag7uPnlI</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Booleans in HoTT: Putting Bool to Use [Intro to HoTT, No. 3, Part 1]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=2d6Ag7uPnlI"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-06-30T15:36:59+00:00</published>
  <updated>2022-10-05T09:35:20+00:00</updated>
  <media:group>
   <media:title>Booleans in HoTT: Putting Bool to Use [Intro to HoTT, No. 3, Part 1]</media:title>
   <media:content url="https://www.youtube.com/v/2d6Ag7uPnlI?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i3.ytimg.com/vi/2d6Ag7uPnlI/hqdefault.jpg" width="480" height="360"/>
   <media:description>Boolean logic is an important part of computer science, both at the hardware level and the software level. Can we do boolean logic in HoTT? Of course we can! In this video, I give our first example of the iteration and computation rules for a type, which are how we use types. With booleans, this corresponds to gate-like constructs called multiplexers and to the ubiquitous 'if-then-else' construction of programming languages.

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- Appeared in this video: https://github.com/jacobneu/HoTT-agda/blob/main/01-simpleTT.agda and https://github.com/jacobneu/HoTT-agda/blob/main/sandbox-03.agda
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda
- More up-to-date HoTT formalization in Agda: https://github.com/UniMath/agda-unimath

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory


Image/audio credits:
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)



Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="26" average="5.00" min="1" max="5"/>
    <media:statistics views="401"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:QWgjTdyGh2M</id>
  <yt:videoId>QWgjTdyGh2M</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Booleans in HoTT: Boolean Combinators [Intro to HoTT, No. 3, Part 0]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=QWgjTdyGh2M"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-06-20T21:23:22+00:00</published>
  <updated>2022-08-22T05:46:38+00:00</updated>
  <media:group>
   <media:title>Booleans in HoTT: Boolean Combinators [Intro to HoTT, No. 3, Part 0]</media:title>
   <media:content url="https://www.youtube.com/v/QWgjTdyGh2M?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i2.ytimg.com/vi/QWgjTdyGh2M/hqdefault.jpg" width="480" height="360"/>
   <media:description>Boolean logic is an important part of computer science, both at the hardware level and the software level. Can we do boolean logic in HoTT? Of course we can! This video shows how to recreate the logic of boolean circuits and logic gates, both in informal HoTT and in our Agda formalization of HoTT.

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- Appeared in this video: https://github.com/jacobneu/HoTT-agda/blob/main/01-simpleTT.agda
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda
- More up-to-date HoTT formalization in Agda: https://github.com/UniMath/agda-unimath

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory


Image/audio credits:
- https://commons.wikimedia.org/wiki/File:ClaudeShannon_MFO3807.jpg (CC-BY-SA 2.0 - De)
- https://www.cs.virginia.edu/~evans/greatworks/shannon38.pdf 
- https://commons.wikimedia.org/wiki/File:Panel_Office_Typical_OGT-colourbalance-2.jpg
- https://commons.wikimedia.org/wiki/File:PCB_Spectrum.jpg (CC-BY-SA 3.0)
- https://commons.wikimedia.org/wiki/File:George_Boole_color.jpg
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)



Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="36" average="5.00" min="1" max="5"/>
    <media:statistics views="482"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:K_GevRRFTNU</id>
  <yt:videoId>K_GevRRFTNU</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Formalities &amp; Informalities: Not-So-Casual Friday [Intro to HoTT, No. 2, Part 3]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=K_GevRRFTNU"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-06-09T19:19:36+00:00</published>
  <updated>2022-06-20T21:26:57+00:00</updated>
  <media:group>
   <media:title>Formalities &amp; Informalities: Not-So-Casual Friday [Intro to HoTT, No. 2, Part 3]</media:title>
   <media:content url="https://www.youtube.com/v/K_GevRRFTNU?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i4.ytimg.com/vi/K_GevRRFTNU/hqdefault.jpg" width="480" height="360"/>
   <media:description>Part 3 of Formalities &amp; Informalities (Parts 0, 1, 2: https://youtu.be/-QKLxN1_nvk https://youtu.be/J-v7m_tdTfE https://youtu.be/97twa7KgQ6k), answering the question:  how do we do Homotopy Type Theory? In this video, I bring together everything covered in Parts 0, 1, and 2 with an example: the days of the week!

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- Appeared in this video: https://github.com/jacobneu/HoTT-agda/blob/main/example-daysOfWeek.agda
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda
- More up-to-date HoTT formalization in Agda: https://github.com/UniMath/agda-unimath

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory


Image/audio credits:
- https://commons.wikimedia.org/wiki/File:090-ghost.svg
- https://en.wikipedia.org/wiki/Claude_Shannon#/media/File:ClaudeShannon_MFO3807.jpg
- https://en.wikipedia.org/wiki/Boolean_circuit#/media/File:Three_input_Boolean_circuit.jpg
- https://commons.wikimedia.org/wiki/File:Full-adder.svg
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)
- &quot;Brandenburg Concerto No4-1 BWV1049 - Classical Whimsical&quot; (JS Bach) by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)



Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="28" average="5.00" min="1" max="5"/>
    <media:statistics views="409"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:97twa7KgQ6k</id>
  <yt:videoId>97twa7KgQ6k</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Formalities &amp; Informalities: Judgmental Equality [Intro to HoTT, No. 2, Part 2]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=97twa7KgQ6k"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-05-26T23:15:51+00:00</published>
  <updated>2022-06-21T21:15:33+00:00</updated>
  <media:group>
   <media:title>Formalities &amp; Informalities: Judgmental Equality [Intro to HoTT, No. 2, Part 2]</media:title>
   <media:content url="https://www.youtube.com/v/97twa7KgQ6k?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i2.ytimg.com/vi/97twa7KgQ6k/hqdefault.jpg" width="480" height="360"/>
   <media:description>Part 2 of Formalities &amp; Informalities (Parts 0 and 1: https://youtu.be/-QKLxN1_nvk https://youtu.be/J-v7m_tdTfE), answering the question:  how do we do Homotopy Type Theory? An essential piece of HoTT is judgmental equality, which is how we state that two things are &quot;equal by definition&quot;. In this video, I explain (what I consider to be) the most helpful intuition for judgmental equality: computational confluence. Two terms (or types) in HoTT are judgmentally equal if they can be computed to the same thing. This turns out to be a fruitful way to think of judgmental equality, particularly because computer formalization is important to us. Later on, we'll improve upon judgmental equality to get another notion of equality, propositional equality, which is the central object of study in homotopy type theory.

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- Appeared in this video: https://github.com/jacobneu/HoTT-agda/blob/main/sandbox-02.agda
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda
- More up-to-date HoTT formalization in Agda: https://github.com/UniMath/agda-unimath

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory


Image/audio credits:
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)



Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="33" average="5.00" min="1" max="5"/>
    <media:statistics views="472"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:J-v7m_tdTfE</id>
  <yt:videoId>J-v7m_tdTfE</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Formalities &amp; Informalities: Declare-It-Yourself [Intro to HoTT, No. 2, Part 1]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=J-v7m_tdTfE"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-05-20T17:03:24+00:00</published>
  <updated>2022-09-08T03:21:50+00:00</updated>
  <media:group>
   <media:title>Formalities &amp; Informalities: Declare-It-Yourself [Intro to HoTT, No. 2, Part 1]</media:title>
   <media:content url="https://www.youtube.com/v/J-v7m_tdTfE?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i3.ytimg.com/vi/J-v7m_tdTfE/hqdefault.jpg" width="480" height="360"/>
   <media:description>How do we do Homotopy Type Theory? In this video, I cover some of the fundamentals of working in Agda (the computer formalization system we'll be using in these videos) and the basic concepts of HoTT as a formal language: judgments, inference rules, formation and introduction.  

Formalization links:
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory

Further reading:
- Natural deduction: https://iep.utm.edu/natural-deduction/
- Lecture about the linguistic origins of the term &quot;judgment&quot; in logic: https://www.youtube.com/watch?v=FGUzgcLXNuk


Image/audio credits:
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)



Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="44" average="5.00" min="1" max="5"/>
    <media:statistics views="607"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:-QKLxN1_nvk</id>
  <yt:videoId>-QKLxN1_nvk</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Formalities &amp; Informalities: HoTT Workflows [Intro to HoTT, No. 2, Part 0]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=-QKLxN1_nvk"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-05-20T15:02:01+00:00</published>
  <updated>2022-06-20T21:27:54+00:00</updated>
  <media:group>
   <media:title>Formalities &amp; Informalities: HoTT Workflows [Intro to HoTT, No. 2, Part 0]</media:title>
   <media:content url="https://www.youtube.com/v/-QKLxN1_nvk?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i2.ytimg.com/vi/-QKLxN1_nvk/hqdefault.jpg" width="480" height="360"/>
   <media:description>How do we do Homotopy Type Theory? This is another question with three answers: homotopy type theorists will &quot;dress&quot; their work in three different styles -- informal reasoning, computer formalization, and as inference rules in a deductive system. In these videos, I describe these three styles of HoTT and how a successful homotopy type theorist navigates between them.

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory


Image/audio credits:
- &quot;Wholesome&quot; and &quot;Drone in D&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)
- https://commons.wikimedia.org/wiki/File:AngelinaJolieBradPittAAFeb09.jpg



Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="42" average="5.00" min="1" max="5"/>
    <media:statistics views="627"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:2zcEP2Ny63s</id>
  <yt:videoId>2zcEP2Ny63s</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Three for One: Logic Interpretation [Intro to HoTT, No. 1, Part 3]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=2zcEP2Ny63s"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-04-30T20:47:19+00:00</published>
  <updated>2022-06-20T21:29:17+00:00</updated>
  <media:group>
   <media:title>Three for One: Logic Interpretation [Intro to HoTT, No. 1, Part 3]</media:title>
   <media:content url="https://www.youtube.com/v/2zcEP2Ny63s?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i3.ytimg.com/vi/2zcEP2Ny63s/hqdefault.jpg" width="480" height="360"/>
   <media:description>What does homotopy type theory mean? This video presents our third answer: HoTT is a logical calculus for constructively proving statements (especially mathematical claims).  This is by way of the famed &quot;Curry-Howard Correspondence&quot;, which connects type theory with constructive logic. Along the way, we encounter important notions like proof relevance, unique existence, and (un)inhabitedness. We also go through our first example in Agda, and meet one of the main characters of homotopy type theory: refl. 

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory

Further reading:
- https://www.britannica.com/science/P-versus-NP-problem
- https://en.wikipedia.org/wiki/History_of_logic
- https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence


Image/audio credits:
- &quot;Wholesome&quot; and &quot;Drone in D&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)
- Pacific Ocean map from https://commons.wikimedia.org/wiki/File:World_centred_on_the_Pacific_Ocean_locator_map.svg, CC-BY-4.0

Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="67" average="5.00" min="1" max="5"/>
    <media:statistics views="731"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:XUYPU9LjGKM</id>
  <yt:videoId>XUYPU9LjGKM</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Three for One: Homotopy Interpretation [Intro to HoTT, No. 1, Part 2]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=XUYPU9LjGKM"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-04-25T10:45:01+00:00</published>
  <updated>2022-06-20T21:29:39+00:00</updated>
  <media:group>
   <media:title>Three for One: Homotopy Interpretation [Intro to HoTT, No. 1, Part 2]</media:title>
   <media:content url="https://www.youtube.com/v/XUYPU9LjGKM?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i1.ytimg.com/vi/XUYPU9LjGKM/hqdefault.jpg" width="480" height="360"/>
   <media:description>What does homotopy type theory mean? This video presents the next answer: HoTT is a language for describing spaces. Under this interpretation, the unit type 1 represents the space consisting of just a single point. This video informally introduces the idea of &quot;contractibility&quot;, which we'll rigorously define later and use extensively throughout HoTT.

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory

Further info:
- Numberphile has several excellent videos on Klein Bottles, e.g. youtube.com/watch?v=AAsICMPwGPY
- SEP article on Set Theory: https://plato.stanford.edu/entries/set-theory/


Image/audio credits:
- &quot;Wholesome&quot; and &quot;Drone in D&quot; by Kevin MacLeod (incompetech.com); CC BY 4.0 (https://creativecommons.org/licenses/by/4.0/)
- Page from Euclid’s Elements. From https://commons.wikimedia.org/wiki/File:Euclid%27s_Elements,_1482.jpg, CC-BY-SA 4.0
- Quote from https://plato.stanford.edu/entries/set-theory/
- Klein bottle. From https://commons.wikimedia.org/wiki/File:Klein_bottle.svg, CC-BY-SA 3.0

Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="61" average="5.00" min="1" max="5"/>
    <media:statistics views="730"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:VnO2-ynvDsw</id>
  <yt:videoId>VnO2-ynvDsw</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Three for One: Programming Interpretation [Intro to HoTT, No. 1, Part 1]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=VnO2-ynvDsw"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-04-06T19:47:58+00:00</published>
  <updated>2022-06-20T21:30:01+00:00</updated>
  <media:group>
   <media:title>Three for One: Programming Interpretation [Intro to HoTT, No. 1, Part 1]</media:title>
   <media:content url="https://www.youtube.com/v/VnO2-ynvDsw?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i3.ytimg.com/vi/VnO2-ynvDsw/hqdefault.jpg" width="480" height="360"/>
   <media:description>What does homotopy type theory mean? This video presents the first answer: HoTT is a typed programming language. Under this interpretation, the unit type 1 is the type of zero-tuples, a standard feature in many typed programming languages.

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory

Image/audio credits:
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 3.0 (https://creativecommons.org/licenses/by/3.0/)

Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="48" average="5.00" min="1" max="5"/>
    <media:statistics views="738"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:Fn12iWcJDwE</id>
  <yt:videoId>Fn12iWcJDwE</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Three for One: Intro [Intro to HoTT, No. 1, Part 0]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=Fn12iWcJDwE"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-04-04T21:21:31+00:00</published>
  <updated>2022-07-23T12:16:28+00:00</updated>
  <media:group>
   <media:title>Three for One: Intro [Intro to HoTT, No. 1, Part 0]</media:title>
   <media:content url="https://www.youtube.com/v/Fn12iWcJDwE?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i3.ytimg.com/vi/Fn12iWcJDwE/hqdefault.jpg" width="480" height="360"/>
   <media:description>What does homotopy type theory mean? This is a question which has three distinct answers, connecting the language of HoTT to the rich worlds of functional programming, homotopy theory, and constructive logic.
This is the intro segment of &quot;video No. 1&quot; of this series, soon to be followed by three parts, describing each of the interpretations of HoTT (and the unit type, 1).

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory

Further reading:
- Blog by Bob Harper about computational trinitarianism: https://existentialtype.wordpress.com/2011/03/27/the-holy-trinity/
- nLab page: https://ncatlab.org/nlab/show/computational+trilogy#:~:text=The%20central%20dogma%20of%20computational,of%20computation%20in%20our%20lives.

Image/audio credits:
- &quot;Wholesome&quot; by Kevin MacLeod (incompetech.com); CC BY 3.0 (https://creativecommons.org/licenses/by/3.0/)
- Steam diagram: From Wikimedia Commons (https://commons.wikimedia.org/wiki/File:Feedwater-heating.png); CC BY-SA 2.5 (https://creativecommons.org/licenses/by-sa/2.5/)
- Homotopy Theory image: From Wikimedia Commons (https://commons.wikimedia.org/wiki/File:CrossCapSlicedOpen.PNG); CC BY-SA 3.0 (https://creativecommons.org/licenses/by-sa/3.0/)

Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy!</media:description>
   <media:community>
    <media:starRating count="55" average="5.00" min="1" max="5"/>
    <media:statistics views="777"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:Pu16iodESTU</id>
  <yt:videoId>Pu16iodESTU</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>Was soll HoTT?  [Intro to HoTT, No. 0]</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=Pu16iodESTU"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2022-03-05T12:21:34+00:00</published>
  <updated>2022-06-20T21:30:58+00:00</updated>
  <media:group>
   <media:title>Was soll HoTT?  [Intro to HoTT, No. 0]</media:title>
   <media:content url="https://www.youtube.com/v/Pu16iodESTU?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i1.ytimg.com/vi/Pu16iodESTU/hqdefault.jpg" width="480" height="360"/>
   <media:description>What is homotopy type theory good for? In this video, I discuss the ideas of type-checking and formalized mathematics, and begin to describe how HoTT promises a new future for mathematics. 

This the the first (or, rather, zeroth) video in a planned video series covering the basics of homotopy type theory. This is a reboot of the video series I started last year (https://youtube.com/playlist?list=PL245PKGUDdcN_MQ9LwnotqTHq2d_hpalJ) -- I got too busy last year with teaching and starting my PhD. Thanks to everyone who left kind comments on those videos, and encouraged me to make videos again!

Pardon my butchering of the German language.

Video site for the series: https://intro-hott.video
Youtube: https://www.youtube.com/playlist?list=PL245PKGUDdcN9-El9D7DRefwX4c9feiYq
Instagram: @Intro_HoTT
Twitter: @Intro_HoTT

Formalization links:
- The formalization I'm developing for this video series: https://github.com/jacobneu/HoTT-agda
- The formalization it's based on (by Egbert Rijke, for his upcoming textbook): https://github.com/HoTT-Intro/Agda

HoTT textbooks:
- The HoTT Book (2013) -- the original statement of HoTT: https://homotopytypetheory.org/book/
- Introduction to Homotopy Type Theory, by Egbert Rijke (to be released): https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory

Some relevant resources:
- Article about Mochizuki's purported proof of the ABC conjecture: https://www.quantamagazine.org/titans-of-mathematics-clash-over-epic-proof-of-abc-conjecture-20180920/
- Lean theorem prover: https://leanprover.github.io/
- Good post describing more about different kinds of typing: https://thecodeboss.dev/2015/11/programming-concepts-static-vs-dynamic-type-checking/. When I speak of &quot;typed programming languages&quot;, I actually mean strong, statically-typed programming languages. Python isn't truly untyped -- it actually has a type system -- but not a strong, static one like I describe here.
- Resources page for Egbert Rijke's Introduction to Homotopy Type Theory textbook: https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory
- Gauss kindergarten formula: https://nrich.maths.org/2478

Homotopy type theory (HoTT) is a new branch of type theory and a new foundation for mathematics. It serves as a common language for reasoning about computation (functional programming), about mathematical structure (synthetic homotopy theory and higher category theory), and about constructive logic. This Introduction to Homotopy Type Theory video lecture series is intended to explain what HoTT is, show how to work in HoTT (including how formalization in Agda works), and give intuition for why HoTT is the way it is. I don’t assume any particular background familiarity, but the more you know about mathematics, computer science, and logic, the more you’ll be able to get out of these videos. Enjoy! 

00:00 - 01:49: Intro
01:49 - 03:00: Welcome
03:00 - 05:51: A problem with proof-reading
05:51 - 16:35: The art of typechecking
16:35 - 25:27: Remaking math in type theory's image</media:description>
   <media:community>
    <media:starRating count="108" average="5.00" min="1" max="5"/>
    <media:statistics views="1629"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:BlmGMRi8k-c</id>
  <yt:videoId>BlmGMRi8k-c</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>[Categories] Theory of the Category of Sets: Sets and Functions</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=BlmGMRi8k-c"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2021-04-03T21:57:37+00:00</published>
  <updated>2022-06-27T19:08:46+00:00</updated>
  <media:group>
   <media:title>[Categories] Theory of the Category of Sets: Sets and Functions</media:title>
   <media:content url="https://www.youtube.com/v/BlmGMRi8k-c?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i3.ytimg.com/vi/BlmGMRi8k-c/hqdefault.jpg" width="480" height="360"/>
   <media:description>Video 0 of a lecture on the Theory of the Category of Sets, part of a planned series of videos introducing basic category theory. Reviews the basic terminology and notation of sets and functions, and provides some background of the relationship between set theory and category theory.

Other resources:
- Wikipedia article on elements (a screenshot from this page briefly appears in the video): https://en.wikipedia.org/wiki/Element_(mathematics)
- SEP article on set theory: https://plato.stanford.edu/entries/set-theory/
- SEP article on category theory: https://plato.stanford.edu/entries/category-theory/
- Proof wiki page on set extensionality: https://proofwiki.org/wiki/Axiom:Axiom_of_Extension
- Wikipedia article on the Lambda Calculus (where we get the lambda notation from): https://en.wikipedia.org/wiki/Lambda_calculus</media:description>
   <media:community>
    <media:starRating count="55" average="5.00" min="1" max="5"/>
    <media:statistics views="952"/>
   </media:community>
  </media:group>
 </entry>
 <entry>
  <id>yt:video:9cR2Day-4Bk</id>
  <yt:videoId>9cR2Day-4Bk</yt:videoId>
  <yt:channelId>UCRfR7ivZHwXIC8kdydo5jdQ</yt:channelId>
  <title>[Intro to HoTT - OLD] Martin-Löf Type Theory: Judgments, Contexts, and Types</title>
  <link rel="alternate" href="https://www.youtube.com/watch?v=9cR2Day-4Bk"/>
  <author>
   <name>Jacob Neumann</name>
   <uri>https://www.youtube.com/channel/UCRfR7ivZHwXIC8kdydo5jdQ</uri>
  </author>
  <published>2021-03-27T02:44:26+00:00</published>
  <updated>2022-07-22T11:24:32+00:00</updated>
  <media:group>
   <media:title>[Intro to HoTT - OLD] Martin-Löf Type Theory: Judgments, Contexts, and Types</media:title>
   <media:content url="https://www.youtube.com/v/9cR2Day-4Bk?version=3" type="application/x-shockwave-flash" width="640" height="390"/>
   <media:thumbnail url="https://i2.ytimg.com/vi/9cR2Day-4Bk/hqdefault.jpg" width="480" height="360"/>
   <media:description>Video 1 of the Martin-Löf Type Theory lecture, part of the Introduction to Homotopy Type Theory video lecture series. Covers the key mechanisms of formal MLTT: judgments, contexts, inference rules, and how to introduce new types.

This lecture series roughly follows Egbert Rijke's forthcoming textbook, Introduction to Homotopy Type Theory, which is expected to be released in 2021 by Cambridge University Press. More information can be found here: https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory.

Some relevant resources:
- Paragraph about judgments in the nLab: https://ncatlab.org/nlab/show/judgment#in_type_theory
- Article I wrote (which others have improved/maintained) describing the bool type in Standard ML: https://smlhelp.github.io/book/types/bool.html
- SEP article on Theophrastus, the inventor(?) of modus ponens: https://plato.stanford.edu/entries/theophrastus/
- Wikipedia article on product spaces in classical topology: https://en.wikipedia.org/wiki/Product_topology
- Some lecture slides I made about the simply-typed lambda calculus and cartesian closed categories (compare the definition of the STLC in Section 1 with how we're defining MLTT here): https://jacobneu.github.io/teaching/CategoryTheory/lambdaCalculus.pdf</media:description>
   <media:community>
    <media:starRating count="125" average="5.00" min="1" max="5"/>
    <media:statistics views="2074"/>
   </media:community>
  </media:group>
 </entry>
</feed>
